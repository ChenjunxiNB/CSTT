[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: D:/python_code/video_tool/result/CS50x 2023 - Lecture 7 - SQL.mp4
Video File: D:/python_code/video_tool/result/CS50x 2023 - Lecture 7 - SQL.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 3693
Active Line: 3700
Video Position: 200744

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,11,1
Style: 英文,Arial,29,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.33333,1.33333,2,11,11,11,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,45,1
Style: 中文大字幕,Arial,38,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,11,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:01:12.03,0:01:17.21,英文,,0,0,0,,All right, this is CS50, and this is already week seven.
Dialogue: 0,0:01:12.03,0:01:17.21,中文,,0,0,0,,好了，欢迎回到 cs50，这已经是第七周了。
Dialogue: 0,0:01:17.21,0:01:25.71,英文,,0,0,0,,And this is the week where we'll continue where we left off with Python, introducing you to a bit more syntax and capabilities of the language so you can solve interesting problems.
Dialogue: 0,0:01:17.21,0:01:25.71,中文,,0,0,0,,本周我们将继续上周 Python 的内容，向大家介绍更多语法和语言功能，以便解决更有趣的问题。
Dialogue: 0,0:01:25.71,0:01:29.24,英文,,0,0,0,,But a lot of those problems increasingly are now going to involve data in some form.
Dialogue: 0,0:01:25.71,0:01:29.24,中文,,0,0,0,,但其中很多问题现在越来越多地涉及到某种形式的数据。
Dialogue: 0,0:01:29.24,0:01:40.58,英文,,0,0,0,,After all, if you think of most any website or mobile app or, A process nowadays that involves solving problems, it almost always involves some amount of data, and often data at scale, lots and lots of data.
Dialogue: 0,0:01:29.24,0:01:40.58,中文,,0,0,0,,毕竟，现在大多数网站、移动应用，或者说解决问题的过程，几乎都涉及到一定量的数据，而且通常是海量数据。
Dialogue: 0,0:01:40.58,0:01:47.82,英文,,0,0,0,,And so what we're going to see first today is that, yes, you can use Python to solve all the problems past that we've seen, and also some data-specific ones.
Dialogue: 0,0:01:40.58,0:01:47.82,中文,,0,0,0,,我们今天首先要看到的是，可以用 Python 解决我们过去见过所有问题，以及一些特定于数据的问题。
Dialogue: 0,0:01:47.82,0:01:50.40,英文,,0,0,0,,But sometimes it's just going to be annoying. It's going to be a little painful.
Dialogue: 0,0:01:47.82,0:01:50.40,中文,,0,0,0,,但有时候，这会很烦人，会有点痛苦。
Dialogue: 0,0:01:50.40,0:01:53.94,英文,,0,0,0,,It's just going to be more work than you might like to just get to some answer.
Dialogue: 0,0:01:50.40,0:01:53.94,中文,,0,0,0,,为了得到答案，你可能需要做比预期更多的工作。
Dialogue: 0,0:01:53.94,0:01:59.37,英文,,0,0,0,,And so today, we'll, too, introduce you to a new language called SQL, Structured Query Language.
Dialogue: 0,0:01:53.94,0:01:59.37,中文,,0,0,0,,所以今天，我们还会介绍一种叫做 SQL 的新语言，即结构化查询语言。
Dialogue: 0,0:01:59.37,0:02:05.23,英文,,0,0,0,,And this is a language that, Rest assured, it's actually much smaller, relatively speaking, than C and Python.
Dialogue: 0,0:01:59.37,0:02:05.23,中文,,0,0,0,,请放心，与 C 和 Python 相比，这种语言实际上要小得多。
Dialogue: 0,0:02:05.23,0:02:07.77,英文,,0,0,0,,It sort of does less, but it does it really well.
Dialogue: 0,0:02:05.23,0:02:07.77,中文,,0,0,0,,它的功能相对较少，但它做得很好。
Dialogue: 0,0:02:07.77,0:02:13.98,英文,,0,0,0,,And it's a language for querying databases, storing data in it, updating it, inserting it, deleting it, and so much more.
Dialogue: 0,0:02:07.77,0:02:13.98,中文,,0,0,0,,它是一种用于查询数据库、存储数据、更新数据、插入数据、删除数据等等的语言。
Dialogue: 0,0:02:13.98,0:02:20.82,英文,,0,0,0,,And it's the kind of technology that's used nowadays in, indeed, web apps and mobile apps, data science, analytics, and so much more.
Dialogue: 0,0:02:13.98,0:02:20.82,中文,,0,0,0,,现在，这种技术被广泛应用于网络应用、移动应用、数据科学、分析等等领域。
Dialogue: 0,0:02:20.82,0:02:23.74,英文,,0,0,0,,It's really good at storing lots and lots of data.
Dialogue: 0,0:02:20.82,0:02:23.74,中文,,0,0,0,,它非常擅长存储大量数据。
Dialogue: 0,0:02:23.74,0:02:25.47,英文,,0,0,0,,Now, this is yet another language.
Dialogue: 0,0:02:23.74,0:02:25.47,中文,,0,0,0,,现在，这又是一种新的语言。
Dialogue: 0,0:02:25.47,0:02:35.75,英文,,0,0,0,,And believe it or not, next week we'll introduce you to three more languages, HTML and CSS, which are not technically programming languages. They're all about aesthetics and markup of information.
Dialogue: 0,0:02:25.47,0:02:35.75,中文,,0,0,0,,不管你信不信，下周我们会向你介绍另外三种语言：HTML、CSS 和 JavaScript。\NHTML 和 CSS 从技术上讲并不是编程语言，它们都是关于信息的美学和标记的。
Dialogue: 0,0:02:35.75,0:02:38.79,英文,,0,0,0,,But also JavaScript, which is, in fact, a programming language.
Dialogue: 0,0:02:35.75,0:02:38.79,中文,,0,0,0,,而 JavaScript，实际上是一种编程语言。
Dialogue: 0,0:02:38.79,0:02:43.99,英文,,0,0,0,,But the goals here in CS50. really are going to be to empower you to program more generally.
Dialogue: 0,0:02:38.79,0:02:43.99,中文,,0,0,0,,但 cs50 的目标是让你更有能力进行编程。
Dialogue: 0,0:02:43.99,0:02:50.42,英文,,0,0,0,,And indeed, when you're out there in the real world some years from now, invariably, there's going to be some new other popular language out there.
Dialogue: 0,0:02:43.99,0:02:50.42,中文,,0,0,0,,事实上，当你几年后进入现实世界时，总会有一些新的流行语言出现。
Dialogue: 0,0:02:50.42,0:03:00.40,英文,,0,0,0,,And hopefully, in this week and next week and beyond, among the goals is not just to teach you these languages specifically, but again, how to teach yourself the future languages that we've not even heard about just yet.
Dialogue: 0,0:02:50.42,0:03:00.40,中文,,0,0,0,,本周、下周以及之后的课程目标，不仅仅是教你这些特定的语言，而是要教会你如何自学那些我们甚至还没听说过的未来语言。
Dialogue: 0,0:03:00.40,0:03:04.20,英文,,0,0,0,,So with that said, let's begin with a survey of sorts.
Dialogue: 0,0:03:00.40,0:03:04.20,中文,,0,0,0,,那么，话不多说，让我们从一个调查开始。
Dialogue: 0,0:03:04.20,0:03:16.60,英文,,0,0,0,,If you go to this URL on your phone or laptop, CS50.ly slash favorites, a very simple Google form awaits you that's just going to ask you a couple of multiple choice questions.
Dialogue: 0,0:03:04.20,0:03:16.60,中文,,0,0,0,,如果你在手机或电脑上访问这个网址，cs50.ly 斜杠 favorites，会看到一个非常简单的 Google 表单，只需要你回答几个多项选择题。
Dialogue: 0,0:03:16.60,0:03:21.81,英文,,0,0,0,,So go to CS50.ly slash favorites.
Dialogue: 0,0:03:16.60,0:03:21.81,中文,,0,0,0,,访问 cs50.ly 斜杠 favorites。
Dialogue: 0,0:03:21.81,0:03:32.31,英文,,0,0,0,,And that should lead you to a Google form that looks a little something like this, asking you first, as of now in week seven, what is your favorite language among those options here?
Dialogue: 0,0:03:21.81,0:03:32.31,中文,,0,0,0,,这会引导你进入一个 Google 表单，看起来像这样，第一个问题是，截至到第七周，在这些选项中，你最喜欢的语言是什么？
Dialogue: 0,0:03:32.31,0:03:34.21,英文,,0,0,0,,And then further down, one more question.
Dialogue: 0,0:03:32.31,0:03:34.21,中文,,0,0,0,,再往下，还有一个问题。
Dialogue: 0,0:03:34.21,0:03:36.65,英文,,0,0,0,,If you think back on problem sets.
Dialogue: 0,0:03:34.21,0:03:36.65,中文,,0,0,0,,回想一下习题集。
Dialogue: 0,0:03:36.65,0:03:45.35,英文,,0,0,0,,0 through 6, what was, if any, your favorite problem set problem, be it in Scratch or C or Python?
Dialogue: 0,0:03:36.65,0:03:45.35,中文,,0,0,0,,从 0 到 6，无论是 Scratch、C 还是 Python，你最喜欢的习题集题目是什么？
Dialogue: 0,0:03:45.35,0:03:49.08,英文,,0,0,0,,So answer those two questions.
Dialogue: 0,0:03:45.35,0:03:49.08,中文,,0,0,0,,回答这两个问题。
Dialogue: 0,0:03:49.08,0:03:58.18,英文,,0,0,0,,And in a moment, I'll flip over to my screen here, where you'll see, and anyone who's used Google Forms knows, the spreadsheet that's collecting now this data.
Dialogue: 0,0:03:49.08,0:03:58.18,中文,,0,0,0,,稍后，我会切换到我的屏幕，在那里你会看到，任何使用过 Google 表单的人都知道，这个电子表格正在收集数据。
Dialogue: 0,0:03:58.18,0:04:01.18,英文,,0,0,0,,Microsoft Office 365 can do the same if you use one of those forms.
Dialogue: 0,0:03:58.18,0:04:01.18,中文,,0,0,0,,如果你使用 Microsoft Office 365，它也可以做到这一点。
Dialogue: 0,0:04:01.18,0:04:06.80,英文,,0,0,0,,And what you see here now is a spreadsheet in Google Sheets enumerating all of the audience's questions.
Dialogue: 0,0:04:01.18,0:04:06.80,中文,,0,0,0,,你现在看到的是 Google 表格中的一个电子表格，列出了所有观众的答案。
Dialogue: 0,0:04:06.80,0:04:13.23,英文,,0,0,0,,Language is in column B. Problem is in column C. And each row represents one student who has responded.
Dialogue: 0,0:04:06.80,0:04:13.23,中文,,0,0,0,,语言在 B 列。问题在 C 列。每一行代表一个回答问题的学生。
Dialogue: 0,0:04:13.23,0:04:19.05,英文,,0,0,0,,A few of you were super eager for class today at 8.33 AM Eastern time, 10.32, 11.10.
Dialogue: 0,0:04:13.23,0:04:19.05,中文,,0,0,0,,你们中的一些人在美国东部时间早上 8:33、10:32、11:10 就迫不及待地想上课了。
Dialogue: 0,0:04:19.05,0:04:21.82,英文,,0,0,0,,OK, so now we're getting into the actual class time here.
Dialogue: 0,0:04:19.05,0:04:21.82,中文,,0,0,0,,现在我们进入今天的课程。
Dialogue: 0,0:04:21.82,0:04:27.28,英文,,0,0,0,,And if I scroll down, we'll probably see a few dozen, couple hundred answers by now.
Dialogue: 0,0:04:21.82,0:04:27.28,中文,,0,0,0,,如果我向下滚动，我们可能会看到几十个，几百个答案。
Dialogue: 0,0:04:27.28,0:04:29.32,英文,,0,0,0,,And yeah, so we're getting a whole lot of answers here.
Dialogue: 0,0:04:27.28,0:04:29.32,中文,,0,0,0,,我们收到了很多答案。
Dialogue: 0,0:04:29.32,0:04:30.84,英文,,0,0,0,,And I'm seeing some patterns emerge.
Dialogue: 0,0:04:29.32,0:04:30.84,中文,,0,0,0,,我看到了一些模式正在出现。
Dialogue: 0,0:04:30.84,0:04:34.20,英文,,0,0,0,,But it's not necessarily obvious to the human eyes what those patterns are.
Dialogue: 0,0:04:30.84,0:04:34.20,中文,,0,0,0,,但肉眼不一定能看出这些模式是什么。
Dialogue: 0,0:04:34.20,0:04:36.38,英文,,0,0,0,,Now, of course, you can use Google Spreadsheets.
Dialogue: 0,0:04:34.20,0:04:36.38,中文,,0,0,0,,当然，你可以使用 Google 表格。
Dialogue: 0,0:04:36.38,0:04:37.98,英文,,0,0,0,,You can highlight the data.
Dialogue: 0,0:04:36.38,0:04:37.98,中文,,0,0,0,,你可以高亮数据。
Dialogue: 0,0:04:37.98,0:04:40.43,英文,,0,0,0,,And you can create charts magically out of it.
Dialogue: 0,0:04:37.98,0:04:40.43,中文,,0,0,0,,你可以神奇地用它创建图表。
Dialogue: 0,0:04:40.43,0:04:42.55,英文,,0,0,0,,But you can only do what Google lets you do with the data.
Dialogue: 0,0:04:40.43,0:04:42.55,中文,,0,0,0,,但你只能使用 Google 允许你使用的数据。
Dialogue: 0,0:04:42.55,0:04:45.47,英文,,0,0,0,,And same thing for Microsoft Excel or Apple Numbers.
Dialogue: 0,0:04:42.55,0:04:45.47,中文,,0,0,0,,Microsoft Excel 或 Apple Numbers 也是如此。
Dialogue: 0,0:04:45.47,0:04:48.35,英文,,0,0,0,,But wouldn't it be nice to just be able to manipulate the raw data,
Dialogue: 0,0:04:45.47,0:04:48.35,中文,,0,0,0,,但如果能够直接操作原始数据，那不是很棒吗？
Dialogue: 0,0:04:48.35,0:04:51.71,英文,,0,0,0,,Relatively simple, though, it is to just answer questions about the data.
Dialogue: 0,0:04:48.35,0:04:51.71,中文,,0,0,0,,虽然只回答关于数据的问题相对简单，
Dialogue: 0,0:04:51.71,0:04:53.53,英文,,0,0,0,,Maybe long-term, create your own charts.
Dialogue: 0,0:04:51.71,0:04:53.53,中文,,0,0,0,,也许长期来看，可以创建自己的图表。
Dialogue: 0,0:04:53.53,0:04:59.29,英文,,0,0,0,,Customize it just the way you want, rather than beholden to software that's off the shelf like this.
Dialogue: 0,0:04:53.53,0:04:59.29,中文,,0,0,0,,按照你想要的方式自定义它，而不是依赖于现成的软件。
Dialogue: 0,0:04:59.29,0:05:02.11,英文,,0,0,0,,Well, how could we go about doing this?
Dialogue: 0,0:04:59.29,0:05:02.11,中文,,0,0,0,,那么，我们该如何做呢？
Dialogue: 0,0:05:02.11,0:05:08.67,英文,,0,0,0,,Well, let me propose that we treat this data set now as what we're going to call For now, a flat file database.
Dialogue: 0,0:05:02.11,0:05:08.67,中文,,0,0,0,,让我提议，我们将这个数据集看作我们现在要称之为平面文件数据库的东西。
Dialogue: 0,0:05:08.67,0:05:15.20,英文,,0,0,0,,We'll see today that there's fancier databases, but the simplest database in the world is really just like a .csv file.
Dialogue: 0,0:05:08.67,0:05:15.20,中文,,0,0,0,,今天我们会看到更高级的数据库，但世界上最简单的数据库实际上就像一个 .csv 文件。
Dialogue: 0,0:05:15.20,0:05:23.76,英文,,0,0,0,,And we saw that a couple of weeks ago in C. We wrote a bit of C code that used fprintf to write data to a file using commas as the separator.
Dialogue: 0,0:05:15.20,0:05:23.76,中文,,0,0,0,,我们在几周前的 C 语言课程中见过。我们写了一些 C 代码，使用 fprintf 将数据写入文件，并使用逗号作为分隔符。
Dialogue: 0,0:05:23.76,0:05:33.55,英文,,0,0,0,,We didn't really do much more with CSVs at the time, though, because it's really annoying, painful, time-consuming, not fun to use C. For something like that, because of malloc and memory and all that stuff.
Dialogue: 0,0:05:23.76,0:05:33.55,中文,,0,0,0,,不过，当时我们并没有对 CSV 做更多处理，因为使用 C 语言处理它真的\N很烦人、痛苦、耗时，而且一点也不好玩。因为 malloc、内存和所有这些东西。
Dialogue: 0,0:05:33.55,0:05:35.35,英文,,0,0,0,,But with Python, it's going to be much easier.
Dialogue: 0,0:05:33.55,0:05:35.35,中文,,0,0,0,,但是使用 Python，这将变得容易得多。
Dialogue: 0,0:05:35.35,0:05:48.13,英文,,0,0,0,,And so any time you have access to some data set where you can just download it to your own Mac or PC or your cloud environment, it's sort of a candidate for now writing code to do something with the data. Maybe analyze it right away.
Dialogue: 0,0:05:35.35,0:05:48.13,中文,,0,0,0,,任何时候，只要你能访问一些数据集，你可以把它下载到\N你自己的 Mac 或 PC 或你的云环境中，它就可以成为编写代码来处理数据的候选对象。也许可以直接分析它。
Dialogue: 0,0:05:48.13,0:05:55.01,英文,,0,0,0,,If it's been human-imported manually, maybe you have to clean it up by doing a lot of find and replace, but not with your keyboard, but rather with code.
Dialogue: 0,0:05:48.13,0:05:55.01,中文,,0,0,0,,如果它是人工手动导入的，你可能需要通过大量的查找和替换来清理它，但不是用键盘，而是用代码。
Dialogue: 0,0:05:55.01,0:05:56.21,英文,,0,0,0,,And so let me go ahead and do this.
Dialogue: 0,0:05:55.01,0:05:56.21,中文,,0,0,0,,让我来做这件事。
Dialogue: 0,0:05:56.21,0:06:02.06,英文,,0,0,0,,Let me go back to my Google Sheet here that has all of the data that's come in now.
Dialogue: 0,0:05:56.21,0:06:02.06,中文,,0,0,0,,让我回到我的 Google Sheet，它包含了现在输入的所有数据。
Dialogue: 0,0:06:02.06,0:06:08.80,英文,,0,0,0,,And let me go ahead and download this via the File menu here.
Dialogue: 0,0:06:02.06,0:06:08.80,中文,,0,0,0,,让我通过这里的“文件”菜单下载它。
Dialogue: 0,0:06:08.80,0:06:12.21,英文,,0,0,0,,And let's see, download, and you can see a whole bunch of options.
Dialogue: 0,0:06:08.80,0:06:12.21,中文,,0,0,0,,让我们看看，下载，你可以看到一大堆选项。
Dialogue: 0,0:06:12.21,0:06:17.89,英文,,0,0,0,,Most formats might be familiar, but today we'll focus just on this one, comma, separated values, or CSV.
Dialogue: 0,0:06:12.21,0:06:17.89,中文,,0,0,0,,大多数格式你可能都很熟悉，但今天我们将只关注这一个，逗号分隔值，或 CSV。
Dialogue: 0,0:06:17.89,0:06:21.13,英文,,0,0,0,,That's going to go ahead and download it on my Mac here into my own Downloads folder.
Dialogue: 0,0:06:17.89,0:06:21.13,中文,,0,0,0,,这将在我的 Mac 上下载到我的“下载”文件夹中。
Dialogue: 0,0:06:21.13,0:06:22.69,英文,,0,0,0,,And now I'm going to go ahead and do this.
Dialogue: 0,0:06:21.13,0:06:22.69,中文,,0,0,0,,现在我要继续演示。
Dialogue: 0,0:06:22.69,0:06:25.60,英文,,0,0,0,,Let me go ahead and pull up VS Code in the cloud here.
Dialogue: 0,0:06:22.69,0:06:25.60,中文,,0,0,0,,让我继续，在云端打开 VS Code。
Dialogue: 0,0:06:25.60,0:06:27.92,英文,,0,0,0,,And if you've never done this before, there's a couple of ways to do it.
Dialogue: 0,0:06:25.60,0:06:27.92,中文,,0,0,0,,如果你以前从未这样做过，有几种方法可以做到。
Dialogue: 0,0:06:27.92,0:06:33.10,英文,,0,0,0,,But the simplest way to upload a file to your code space, so to speak, is just to sort of drag and drop.
Dialogue: 0,0:06:27.92,0:06:33.10,中文,,0,0,0,,但最简单的上传文件到代码空间的方法，可以说是直接拖放。
Dialogue: 0,0:06:33.10,0:06:36.16,英文,,0,0,0,,That's going to magically upload it to the server there.
Dialogue: 0,0:06:33.10,0:06:36.16,中文,,0,0,0,,它会神奇地把它上传到服务器上。
Dialogue: 0,0:06:36.16,0:06:44.05,英文,,0,0,0,,And we'll see that, one, it has a very long file name, which I'm actually going to clean this up because that's going to be very tedious to type in my code.
Dialogue: 0,0:06:36.16,0:06:44.05,中文,,0,0,0,,我们会看到，第一，它有一个很长的文件名，我实际上要清理一下，因为在我的代码中输入它太乏味了。
Dialogue: 0,0:06:44.05,0:06:48.43,英文,,0,0,0,,So I could either right-click, of course, up here. But I'm going to use my Linux command.
Dialogue: 0,0:06:44.05,0:06:48.43,中文,,0,0,0,,当然，我可以在上面点击右键。但我打算使用我的 Linux 命令。
Dialogue: 0,0:06:48.43,0:06:52.27,英文,,0,0,0,,So let's move this file called CS50 2022 something or other.
Dialogue: 0,0:06:48.43,0:06:52.27,中文,,0,0,0,,我们来移动这个名为 cs50 2022 之类的文件。
Dialogue: 0,0:06:52.27,0:06:54.75,英文,,0,0,0,,And let's just name it more simply favorites.csv.
Dialogue: 0,0:06:52.27,0:06:54.75,中文,,0,0,0,,把它改名为更简单的 favorites.csv。
Dialogue: 0,0:06:54.75,0:06:58.61,英文,,0,0,0,,So all lowercase, no spaces, sort of good basics.
Dialogue: 0,0:06:54.75,0:06:58.61,中文,,0,0,0,,全部小写，没有空格，算是比较好的基础知识。
Dialogue: 0,0:06:58.61,0:07:02.98,英文,,0,0,0,,And let me go ahead now and open up this file with code favorites.csv.
Dialogue: 0,0:06:58.61,0:07:02.98,中文,,0,0,0,,现在，让我们继续使用 `code favorites.csv` 打开这个文件。
Dialogue: 0,0:07:02.98,0:07:04.76,英文,,0,0,0,,I'll close my file explorer.
Dialogue: 0,0:07:02.98,0:07:04.76,中文,,0,0,0,,我将关闭我的文件资源管理器。
Dialogue: 0,0:07:04.76,0:07:09.92,英文,,0,0,0,,And we'll see exactly the same data as before, but not quite as pretty as Google Sheets makes it be.
Dialogue: 0,0:07:04.76,0:07:09.92,中文,,0,0,0,,我们将看到与之前完全相同的数据，但不像 Google Sheets 那样美观。
Dialogue: 0,0:07:09.92,0:07:18.74,英文,,0,0,0,,Rather, we see here that I still have three columns, timestamp, language, problem, and then all of the values down below, including the timestamps and the answers therefore.
Dialogue: 0,0:07:09.92,0:07:18.74,中文,,0,0,0,,相反，我们在这里看到，我仍然有三列，Timestamp、language、problem，然后是下面所有的值，包括时间戳和答案。
Dialogue: 0,0:07:18.74,0:07:20.34,英文,,0,0,0,,It doesn't have proper columns.
Dialogue: 0,0:07:18.74,0:07:20.34,中文,,0,0,0,,它没有正确的列。
Dialogue: 0,0:07:20.34,0:07:22.36,英文,,0,0,0,,It just has commas separating them.
Dialogue: 0,0:07:20.34,0:07:22.36,中文,,0,0,0,,它只是用逗号分隔它们。
Dialogue: 0,0:07:22.36,0:07:30.25,英文,,0,0,0,,Now, we could very easily write Python code just like we wrote C code to manipulate files like this, either to write or read.
Dialogue: 0,0:07:22.36,0:07:30.25,中文,,0,0,0,,现在，我们可以很容易地编写 Python 代码，就像我们编写 C 代码一样，来操作这样的文件，无论是写入还是读取。
Dialogue: 0,0:07:30.25,0:07:34.65,英文,,0,0,0,,But instead, let's do something that's a little more pleasant, which is indeed in the form of Python.
Dialogue: 0,0:07:30.25,0:07:34.65,中文,,0,0,0,,但相反，让我们做一些更令人愉快的事情，那就是以 Python 的形式。
Dialogue: 0,0:07:34.65,0:07:38.39,英文,,0,0,0,,So Python actually comes with native support for CSVs.
Dialogue: 0,0:07:34.65,0:07:38.39,中文,,0,0,0,,所以 Python 实际上本身就支持 CSV。
Dialogue: 0,0:07:38.39,0:07:45.27,英文,,0,0,0,,It has, indeed, a package called CSV that just lets you read and write and do a whole bunch of useful stuff when it comes to CSV files.
Dialogue: 0,0:07:38.39,0:07:45.27,中文,,0,0,0,,它确实有一个叫做 CSV 的包，它可以让你读取、写入和做一大堆有用的事情，当涉及到 CSV 文件时。
Dialogue: 0,0:07:45.27,0:07:47.09,英文,,0,0,0,,So let's go ahead and do something with this file.
Dialogue: 0,0:07:45.27,0:07:47.09,中文,,0,0,0,,我们来操作一下这个文件。
Dialogue: 0,0:07:47.09,0:07:49.37,英文,,0,0,0,,Let me go back here to VS Code.
Dialogue: 0,0:07:47.09,0:07:49.37,中文,,0,0,0,,回到 VS Code。
Dialogue: 0,0:07:49.37,0:07:51.85,英文,,0,0,0,,I'm going to close favorites.csv for now.
Dialogue: 0,0:07:49.37,0:07:51.85,中文,,0,0,0,,我先关闭 favorites.csv。
Dialogue: 0,0:07:51.85,0:07:58.77,英文,,0,0,0,,But just remember in your mind that timestamp was the first column, language was the second column, and problem was the third.
Dialogue: 0,0:07:51.85,0:07:58.77,中文,,0,0,0,,记住时间戳是第一列，语言是第二列，问题是第三列。
Dialogue: 0,0:07:58.77,0:08:01.80,英文,,0,0,0,,And notice, because we're using commas, they don't, again, line up perfectly.
Dialogue: 0,0:07:58.77,0:08:01.80,中文,,0,0,0,,注意，因为我们使用逗号，所以它们没有对齐。
Dialogue: 0,0:08:01.80,0:08:02.68,英文,,0,0,0,,But that's not a problem.
Dialogue: 0,0:08:01.80,0:08:02.68,中文,,0,0,0,,但这不成问题。
Dialogue: 0,0:08:02.68,0:08:05.40,英文,,0,0,0,,There are two commas in every line, presumably.
Dialogue: 0,0:08:02.68,0:08:05.40,中文,,0,0,0,,大概每行有两个逗号。
Dialogue: 0,0:08:05.40,0:08:12.34,英文,,0,0,0,,And I'm going to go ahead and now create a file called, how about, favorites.py so that I can start writing some code to manipulate this data.
Dialogue: 0,0:08:05.40,0:08:12.34,中文,,0,0,0,,我现在创建一个名为 favorites.py 的文件，这样我就可以开始编写一些代码来操作这些数据。
Dialogue: 0,0:08:12.34,0:08:22.90,英文,,0,0,0,,And let's do something simple. Let's just write a simple program in Python that opens this file, reads it, and prints something out just as a safety check that I know what I'm doing, even though it's not going to be useful.
Dialogue: 0,0:08:12.34,0:08:22.90,中文,,0,0,0,,让我们做一些简单的事情。用 Python 写一个简单的程序，\N打开这个文件，读取它，然后打印一些内容，作为安全检查，我知道我在做什么，即使它没什么用。
Dialogue: 0,0:08:22.90,0:08:26.93,英文,,0,0,0,,So in Python, if you want CSV support, you import CSV.
Dialogue: 0,0:08:22.90,0:08:26.93,中文,,0,0,0,,在 Python 中，如果需要 CSV 支持，就导入 CSV。
Dialogue: 0,0:08:26.93,0:08:30.51,英文,,0,0,0,,And that gives you access to all the magical capabilities thereof.
Dialogue: 0,0:08:26.93,0:08:30.51,中文,,0,0,0,,这让你可以使用它的所有神奇功能。
Dialogue: 0,0:08:30.51,0:08:39.19,英文,,0,0,0,,Let me now go ahead and use this technique to open a file in Python, which is similar in C. But with Python, we're going to do this, the keyword with.
Dialogue: 0,0:08:30.51,0:08:39.19,中文,,0,0,0,,现在我用这种技术在 Python 中打开一个文件，这与 C 语言类似。但在 Python 中，我们要用 with 关键字。
Dialogue: 0,0:08:39.19,0:08:44.02,英文,,0,0,0,,I'm going to open a file called favorites.csv, which was the shorter name I gave it.
Dialogue: 0,0:08:39.19,0:08:44.02,中文,,0,0,0,,我要打开一个名为 favorites.csv 的文件，这是我给它的较短名称。
Dialogue: 0,0:08:44.02,0:08:51.76,英文,,0,0,0,,This is optional, but just for explicitness, I'm going to open it in read mode explicitly, just like fopen took a second argument as well.
Dialogue: 0,0:08:44.02,0:08:51.76,中文,,0,0,0,,这是可选的，但为了明确起见，我将明确地以读取模式打开它，就像 fopen 也接受第二个参数一样。
Dialogue: 0,0:08:51.76,0:08:56.47,英文,,0,0,0,,And I'm going to name this file, once opened, quite simply file, though I could call it anything I want.
Dialogue: 0,0:08:51.76,0:08:56.47,中文,,0,0,0,,我将把这个打开的文件简单地命名为 file，尽管我可以随意命名。
Dialogue: 0,0:08:56.47,0:08:59.09,英文,,0,0,0,,And now it's just an open file.
Dialogue: 0,0:08:56.47,0:08:59.09,中文,,0,0,0,,现在它只是一个打开的文件。
Dialogue: 0,0:08:59.09,0:09:01.89,英文,,0,0,0,,So far as Python knows at this moment, it's just text.
Dialogue: 0,0:08:59.09,0:09:01.89,中文,,0,0,0,,就 Python 目前所知，它只是文本。
Dialogue: 0,0:09:01.89,0:09:04.39,英文,,0,0,0,,Or better yet, it's just zeros and ones.
Dialogue: 0,0:09:01.89,0:09:04.39,中文,,0,0,0,,或者更确切地说，它只是 0 和 1。
Dialogue: 0,0:09:04.39,0:09:12.48,英文,,0,0,0,,If you want this Python package called CSV to actually do something useful with it, you have to load this file now into the library.
Dialogue: 0,0:09:04.39,0:09:12.48,中文,,0,0,0,,如果你想让这个名为 CSV 的 Python 包真正地处理它，你必须现在就把这个文件加载到库中。
Dialogue: 0,0:09:12.48,0:09:19.57,英文,,0,0,0,,And the simplest way to do this is to give myself a variable called reader, because I want to read this file, though this, too, I could call anything else.
Dialogue: 0,0:09:12.48,0:09:19.57,中文,,0,0,0,,最简单的方法是给自己一个名为 reader 的变量，因为我想读取这个文件，尽管我也可以把它叫做别的。
Dialogue: 0,0:09:19.57,0:09:24.89,英文,,0,0,0,,I'm going to then set that equal to the return value of a function called csv.reader.
Dialogue: 0,0:09:19.57,0:09:24.89,中文,,0,0,0,,我会将其设置为调用 csv.reader 函数的返回值。
Dialogue: 0,0:09:24.89,0:09:28.35,英文,,0,0,0,,And I pass to that, per the documentation, the open file.
Dialogue: 0,0:09:24.89,0:09:28.35,中文,,0,0,0,,根据文档，我将打开的文件传递给它。
Dialogue: 0,0:09:28.35,0:09:29.81,英文,,0,0,0,,So step one, I open the file.
Dialogue: 0,0:09:28.35,0:09:29.81,中文,,0,0,0,,第一步，打开文件。
Dialogue: 0,0:09:29.81,0:09:32.18,英文,,0,0,0,,And this just gives me access to the bytes therein.
Dialogue: 0,0:09:29.81,0:09:32.18,中文,,0,0,0,,这让我可以访问其中的字节。
Dialogue: 0,0:09:32.18,0:09:43.84,英文,,0,0,0,,Step two now, with csv.reader tells the Python package called csv to do something useful with it and start analyzing the commas and allow me to parse it further.
Dialogue: 0,0:09:32.18,0:09:43.84,中文,,0,0,0,,第二步，使用 csv.reader 告诉名为 csv 的 Python 包对其执行一些有用的操作，开始分析逗号，并允许我进一步解析它。
Dialogue: 0,0:09:43.84,0:09:45.20,英文,,0,0,0,,So let's go ahead and do this.
Dialogue: 0,0:09:43.84,0:09:45.20,中文,,0,0,0,,我们继续吧。
Dialogue: 0,0:09:45.20,0:09:49.71,英文,,0,0,0,,Let me go ahead now and, within this loop, Let's say this.
Dialogue: 0,0:09:45.20,0:09:49.71,中文,,0,0,0,,现在，让我在这个循环中，比如说这样。
Dialogue: 0,0:09:49.71,0:09:52.61,英文,,0,0,0,,Sorry, within this open file, let's do this.
Dialogue: 0,0:09:49.71,0:09:52.61,中文,,0,0,0,,抱歉，在这个打开的文件中，让我们这样做。
Dialogue: 0,0:09:52.61,0:10:05.12,英文,,0,0,0,,For every row, if you will, or line in the file, a.k.a. reader, let's go ahead and print out just how about row bracket 1.
Dialogue: 0,0:09:52.61,0:10:05.12,中文,,0,0,0,,对于文件（也就是 reader）中的每一行，我们打印出 row[1]。
Dialogue: 0,0:10:05.12,0:10:20.81,英文,,0,0,0,,Now, what's going on here? Well, it turns out if you read the documentation for the CSV reader function, what it hands you back is essentially this special object, so to speak, that allows you to treat it as though it's just a really big list of lines from the file, a.k.a. reader.
Dialogue: 0,0:10:05.12,0:10:20.81,中文,,0,0,0,,这里发生了什么？ 好吧，事实证明，如果你阅读了 CSV reader 函数的文档，\N它返回给你的是一个特殊的对象，它允许你把它当作一个包含文件所有行的超大列表，也就是 reader。
Dialogue: 0,0:10:20.81,0:10:28.24,英文,,0,0,0,,So by saying for row in reader, this is a way more succinct way of saying, give me the first line in the file.
Dialogue: 0,0:10:20.81,0:10:28.24,中文,,0,0,0,,"for row in reader" 是一种更简洁的说法，意思是给我文件中的第一行。
Dialogue: 0,0:10:28.24,0:10:37.43,英文,,0,0,0,,Plus plus, give me the second line in the file, plus plus, and so forth, that we would have done much more mechanically in C. This is just much more Pythonic and English-friendly, if you will.
Dialogue: 0,0:10:28.24,0:10:37.43,中文,,0,0,0,,给我文件中的第二行，以此类推，这在 C 语言中需要更机械地完成。而这更 Pythonic，也更易于理解。
Dialogue: 0,0:10:37.43,0:10:43.11,英文,,0,0,0,,So in every iteration of this loop, row is going to contain all of the data from the current row.
Dialogue: 0,0:10:37.43,0:10:43.11,中文,,0,0,0,,所以在这个循环的每次迭代中，row 将包含当前行的所有数据。
Dialogue: 0,0:10:43.11,0:10:51.74,英文,,0,0,0,,But better yet, what the reader function does for me is it hands me each row, not just as a big string or str of text in Python.
Dialogue: 0,0:10:43.11,0:10:51.74,中文,,0,0,0,,但更好的是，reader 函数为我做的是，它将每一行传递给我，而不仅仅是一个大的字符串或 Python 中的 str 文本。
Dialogue: 0,0:10:51.74,0:10:56.72,英文,,0,0,0,,It gives me what, apparently, based on the syntax on line 6?
Dialogue: 0,0:10:51.74,0:10:56.72,中文,,0,0,0,,根据第 6 行的语法，它给了我什么？
Dialogue: 0,0:10:56.72,0:10:57.54,英文,,0,0,0,,Any instinct?
Dialogue: 0,0:10:56.72,0:10:57.54,中文,,0,0,0,,有什么想法吗？
Dialogue: 0,0:10:57.54,0:11:00.37,英文,,0,0,0,,Yeah. It's giving me back, indeed, a list.
Dialogue: 0,0:10:57.54,0:11:00.37,中文,,0,0,0,,是的，它确实返回了一个列表。
Dialogue: 0,0:11:00.37,0:11:04.25,英文,,0,0,0,,And I presume the visual clue for you was the fact that we're using square brackets here.
Dialogue: 0,0:11:00.37,0:11:04.25,中文,,0,0,0,,我猜想，你们的视觉线索是我们在这里使用了方括号。
Dialogue: 0,0:11:04.25,0:11:10.11,英文,,0,0,0,,And indeed, row bracket 1 is going to be not the first, but the second element in that list.
Dialogue: 0,0:11:04.25,0:11:10.11,中文,,0,0,0,,事实上，row[1] 不是第一个，而是列表中的第二个元素。
Dialogue: 0,0:11:10.11,0:11:11.47,英文,,0,0,0,,And so just take a guess.
Dialogue: 0,0:11:10.11,0:11:11.47,中文,,0,0,0,,猜猜看。
Dialogue: 0,0:11:11.47,0:11:14.37,英文,,0,0,0,,When I run this code in a moment, what's going to get printed?
Dialogue: 0,0:11:11.47,0:11:14.37,中文,,0,0,0,,当我运行这段代码的时候，会打印出什么？
Dialogue: 0,0:11:14.37,0:11:19.63,英文,,0,0,0,,The time stamp, the language, or the problem?
Dialogue: 0,0:11:14.37,0:11:19.63,中文,,0,0,0,,时间戳、语言还是问题？
Dialogue: 0,0:11:19.63,0:11:22.58,英文,,0,0,0,,The?
Dialogue: 0,0:11:19.63,0:11:22.58,中文,,0,0,0,,是？
Dialogue: 0,0:11:22.58,0:11:28.01,英文,,0,0,0,,The language, because it's the second column that is in the file delimited by those commas.
Dialogue: 0,0:11:22.58,0:11:28.01,中文,,0,0,0,,语言，因为它是文件中由逗号分隔的第二列。
Dialogue: 0,0:11:28.01,0:11:29.07,英文,,0,0,0,,So let me go ahead and do this.
Dialogue: 0,0:11:28.01,0:11:29.07,中文,,0,0,0,,我来运行一下。
Dialogue: 0,0:11:29.07,0:11:30.73,英文,,0,0,0,,Let me clear my terminal down here.
Dialogue: 0,0:11:29.07,0:11:30.73,中文,,0,0,0,,我先清空终端。
Dialogue: 0,0:11:30.73,0:11:33.79,英文,,0,0,0,,Let me run Python of favorites.py and Enter.
Dialogue: 0,0:11:30.73,0:11:33.79,中文,,0,0,0,,运行 python favorites.py 并回车。
Dialogue: 0,0:11:33.79,0:11:34.69,英文,,0,0,0,,And there's everything.
Dialogue: 0,0:11:33.79,0:11:34.69,中文,,0,0,0,,所有内容都在这儿了。
Dialogue: 0,0:11:34.69,0:11:36.97,英文,,0,0,0,,It was super fast, but there's a really long list here.
Dialogue: 0,0:11:34.69,0:11:36.97,中文,,0,0,0,,速度非常快，但列表真的很长。
Dialogue: 0,0:11:36.97,0:11:43.04,英文,,0,0,0,,And in fact, if I increase the size of my terminal and start scrolling up, you'll just see all of the raw data.
Dialogue: 0,0:11:36.97,0:11:43.04,中文,,0,0,0,,如果我增加终端的大小并向上滚动，就能看到所有原始数据。
Dialogue: 0,0:11:43.04,0:11:44.58,英文,,0,0,0,,Now, this isn't that useful yet.
Dialogue: 0,0:11:43.04,0:11:44.58,中文,,0,0,0,,目前这还没有太大用处。
Dialogue: 0,0:11:44.58,0:11:49.46,英文,,0,0,0,,I could have just glanced at the CSV. But clearly now, I have the ability to open the file,
Dialogue: 0,0:11:44.58,0:11:49.46,中文,,0,0,0,,我原本可以直接查看 CSV 文件。但显然，我现在可以打开文件，
Dialogue: 0,0:11:49.46,0:11:56.59,英文,,0,0,0,,parse it, so to speak, that is, break it up into its constituent parts, and do something with specific parts therein.
Dialogue: 0,0:11:49.46,0:11:56.59,中文,,0,0,0,,解析它，也就是说，把它分解成各个组成部分，并对其中的特定部分进行操作。
Dialogue: 0,0:11:56.59,0:12:02.45,英文,,0,0,0,,All right, so if I want to do this a little more pleasantly, though, let me at least make this semantically a little cleaner.
Dialogue: 0,0:11:56.59,0:12:02.45,中文,,0,0,0,,如果想让代码更清晰易懂，我可以至少在语义上做一些改进。
Dialogue: 0,0:12:02.45,0:12:05.55,英文,,0,0,0,,And you know what? Just for clarity, let me just give myself a variable.
Dialogue: 0,0:12:02.45,0:12:05.55,中文,,0,0,0,,为了更清楚，我可以使用一个变量。
Dialogue: 0,0:12:05.55,0:12:16.54,英文,,0,0,0,,It's not strictly necessary, but. I know that this is the favorite, for instance, language. So let's just call it favorite, set it equal to row, bracket 1.
Dialogue: 0,0:12:05.55,0:12:16.54,中文,,0,0,0,,这不是严格必要的，但我知道这是最喜欢的语言。所以把它命名为 favorite，并将其设置为 row[1]。
Dialogue: 0,0:12:16.54,0:12:22.75,英文,,0,0,0,,And now just to be more explicit in my code, even though, again, we don't need the variable, per se, this code is, of course, going to do the same thing.
Dialogue: 0,0:12:16.54,0:12:22.75,中文,,0,0,0,,现在，为了使代码更清晰，即使我们不需要变量本身，这段代码的功能也完全相同。
Dialogue: 0,0:12:22.75,0:12:25.13,英文,,0,0,0,,It's just using an additional variable called favorite.
Dialogue: 0,0:12:22.75,0:12:25.13,中文,,0,0,0,,它只是多使用了一个名为 favorite 的变量。
Dialogue: 0,0:12:25.13,0:12:26.65,英文,,0,0,0,,If I go down here.
Dialogue: 0,0:12:25.13,0:12:26.65,中文,,0,0,0,,我向下滚动。
Dialogue: 0,0:12:26.65,0:12:30.33,英文,,0,0,0,,Scroll up, run the program again, I get back the exact same data.
Dialogue: 0,0:12:26.65,0:12:30.33,中文,,0,0,0,,向上滚动，再次运行程序，我得到了完全相同的数据。
Dialogue: 0,0:12:30.33,0:12:43.64,英文,,0,0,0,,But this is a stepping stone to something that's even more powerful about Python support for CSV files is that you don't have to just treat the return value as a list with 0 and 1 and 2.
Dialogue: 0,0:12:30.33,0:12:43.64,中文,,0,0,0,,但这只是 Python 支持 CSV 文件的更强大功能的一个垫脚石。你不必仅仅将返回值视为包含 0、1 和 2 的列表。
Dialogue: 0,0:12:43.64,0:12:55.68,英文,,0,0,0,,So just thinking intuitively here, why is this maybe not the best design to hand you, the programmer, back the data in a list that's numerically indexed with 0, 1, 2?
Dialogue: 0,0:12:43.64,0:12:55.68,中文,,0,0,0,,凭直觉想想，为什么这不是将数据以 0、1、2 为索引的列表形式返回给程序员的最佳设计？
Dialogue: 0,0:12:55.68,0:12:59.82,英文,,0,0,0,,It clearly works, but critique this.
Dialogue: 0,0:12:55.68,0:12:59.82,中文,,0,0,0,,它显然有效，但请评价一下。
Dialogue: 0,0:12:59.82,0:13:00.90,英文,,0,0,0,,What could go wrong?
Dialogue: 0,0:12:59.82,0:13:00.90,中文,,0,0,0,,可能会出什么问题？
Dialogue: 0,0:13:00.90,0:13:02.74,英文,,0,0,0,,What's a little poorly designed?
Dialogue: 0,0:13:00.90,0:13:02.74,中文,,0,0,0,,有什么设计不好的地方吗？
Dialogue: 0,0:13:02.74,0:13:06.68,英文,,0,0,0,,Yeah?
Dialogue: 0,0:13:02.74,0:13:06.68,中文,,0,0,0,,嗯？
Dialogue: 0,0:13:06.68,0:13:11.28,英文,,0,0,0,,Yeah.
Dialogue: 0,0:13:06.68,0:13:11.28,中文,,0,0,0,,嗯。
Dialogue: 0,0:13:11.28,0:13:12.54,英文,,0,0,0,,Exactly.
Dialogue: 0,0:13:11.28,0:13:12.54,中文,,0,0,0,,没错。
Dialogue: 0,0:13:12.54,0:13:15.00,英文,,0,0,0,,Yeah, so it's up to you to repeat.
Dialogue: 0,0:13:12.54,0:13:15.00,中文,,0,0,0,,是的，所以这取决于你是否要重复。
Dialogue: 0,0:13:15.00,0:13:18.38,英文,,0,0,0,,It's up to you to remember what column the data is actually in.
Dialogue: 0,0:13:15.00,0:13:18.38,中文,,0,0,0,,你必须记住数据实际在哪一列。
Dialogue: 0,0:13:18.38,0:13:27.11,英文,,0,0,0,,And God forbid you're collaborating with someone else on the spreadsheet, if you've used Google Spreadsheets, you can move columns around, maybe just because you want to visually reorganize things.
Dialogue: 0,0:13:18.38,0:13:27.11,中文,,0,0,0,,而且，如果你和别人在同一个电子表格上协作，比如你使用的是 Google Spreadsheets，你可以移动列，也许只是为了在视觉上重新组织内容。
Dialogue: 0,0:13:27.11,0:13:31.73,英文,,0,0,0,,And if you do this, and then someone else downloads that same data, all of their code is going to break.
Dialogue: 0,0:13:27.11,0:13:31.73,中文,,0,0,0,,如果你这样做，然后其他人下载了相同的数据，他们所有的代码都会崩溃。
Dialogue: 0,0:13:31.73,0:13:33.35,英文,,0,0,0,,So that's just really bad design.
Dialogue: 0,0:13:31.73,0:13:33.35,中文,,0,0,0,,所以这真的是个糟糕的设计。
Dialogue: 0,0:13:33.35,0:13:38.59,英文,,0,0,0,,It's fragile, just because you're sort of on the honor system that one means the data that you want.
Dialogue: 0,0:13:33.35,0:13:38.59,中文,,0,0,0,,这很脆弱，因为你只是想当然地认为 “1” 就代表你想要的数据。
Dialogue: 0,0:13:38.59,0:13:41.29,英文,,0,0,0,,So wouldn't it be nice if we could be a little more explicit?
Dialogue: 0,0:13:38.59,0:13:41.29,中文,,0,0,0,,那么，如果我们可以更明确一点，会不会更好呢？
Dialogue: 0,0:13:41.29,0:13:47.15,英文,,0,0,0,,Well, recall that the very first line in this file is actually this.
Dialogue: 0,0:13:41.29,0:13:47.15,中文,,0,0,0,,回想一下，这个文件的第一行实际上是这样的。
Dialogue: 0,0:13:47.15,0:13:50.75,英文,,0,0,0,,And I paused the output this time so that we can see more optionally.
Dialogue: 0,0:13:47.15,0:13:50.75,中文,,0,0,0,,这次我暂停了输出，以便我们可以看到更多可选的内容。
Dialogue: 0,0:13:50.75,0:13:52.89,英文,,0,0,0,,I just reran favorites.py.
Dialogue: 0,0:13:50.75,0:13:52.89,中文,,0,0,0,,我刚刚重新运行了 favorites.py。
Dialogue: 0,0:13:52.89,0:13:55.10,英文,,0,0,0,,And notice, one of these things is not like the other.
Dialogue: 0,0:13:52.89,0:13:55.10,中文,,0,0,0,,注意，其中一个与其他的不一样。
Dialogue: 0,0:13:55.10,0:13:59.22,英文,,0,0,0,,Every output was either Scratch or C or Python, except for this first one.
Dialogue: 0,0:13:55.10,0:13:59.22,中文,,0,0,0,,每个输出要么是 Scratch，要么是 C，要么是 Python，除了第一个。
Dialogue: 0,0:13:59.22,0:14:03.74,英文,,0,0,0,,Why am I seeing the word language here?
Dialogue: 0,0:13:59.22,0:14:03.74,中文,,0,0,0,,为什么我会在这里看到“language”？
Dialogue: 0,0:14:03.74,0:14:05.92,英文,,0,0,0,,Where did language come from?
Dialogue: 0,0:14:03.74,0:14:05.92,中文,,0,0,0,,“language”是从哪里来的？
Dialogue: 0,0:14:05.92,0:14:08.28,英文,,0,0,0,,You didn't have the ability to manual input.
Dialogue: 0,0:14:05.92,0:14:08.28,中文,,0,0,0,,你没有手动输入的能力。
Dialogue: 0,0:14:08.28,0:14:11.95,英文,,0,0,0,,No? Where did it come from?
Dialogue: 0,0:14:08.28,0:14:11.95,中文,,0,0,0,,没有吗？它是从哪里来的？
Dialogue: 0,0:14:11.95,0:14:20.50,英文,,0,0,0,,Yeah, the header, the very first row in the file, which by human convention generally just defines what the columns represent so that there's some human useful information there.
Dialogue: 0,0:14:11.95,0:14:20.50,中文,,0,0,0,,是的，是标题，文件的第一行，按照人类的惯例，它通常定义了列所代表的内容，以便提供一些对人类有用的信息。
Dialogue: 0,0:14:20.50,0:14:25.71,英文,,0,0,0,,Now, that's not really intended to be part of my output at the moment. So there is a way to skip this.
Dialogue: 0,0:14:20.50,0:14:25.71,中文,,0,0,0,,现在，这并不是我目前想要输出的内容。所以有一种方法可以跳过它。
Dialogue: 0,0:14:25.71,0:14:29.29,英文,,0,0,0,,If you want to skip the first row, you can actually do something like this.
Dialogue: 0,0:14:25.71,0:14:29.29,中文,,0,0,0,,如果你想跳过第一行，你可以这样做。
Dialogue: 0,0:14:29.29,0:14:30.65,英文,,0,0,0,,You can say next row.
Dialogue: 0,0:14:29.29,0:14:30.65,中文,,0,0,0,,你可以用`next row`。
Dialogue: 0,0:14:30.65,0:14:35.74,英文,,0,0,0,,And that will just ignore that row so that I'm starting really with every row thereafter.
Dialogue: 0,0:14:30.65,0:14:35.74,中文,,0,0,0,,这将忽略该行，以便我从之后的每一行开始。
Dialogue: 0,0:14:35.74,0:14:38.14,英文,,0,0,0,,There's a better way to handle this than that.
Dialogue: 0,0:14:35.74,0:14:38.14,中文,,0,0,0,,有一种比这更好的处理方法。
Dialogue: 0,0:14:38.14,0:14:39.84,英文,,0,0,0,,That will get rid of the row in the output.
Dialogue: 0,0:14:38.14,0:14:39.84,中文,,0,0,0,,这将删除输出中的该行。
Dialogue: 0,0:14:39.84,0:14:45.34,英文,,0,0,0,,But let me go ahead and use a different feature of the CSV package that's just going to make this a little cleaner altogether.
Dialogue: 0,0:14:39.84,0:14:45.34,中文,,0,0,0,,但是让我继续使用 CSV 包的另一个功能，它会使这一切变得更简洁。
Dialogue: 0,0:14:45.34,0:14:47.14,英文,,0,0,0,,So let me clear my terminal window here.
Dialogue: 0,0:14:45.34,0:14:47.14,中文,,0,0,0,,让我先清除终端窗口。
Dialogue: 0,0:14:47.14,0:14:50.00,英文,,0,0,0,,Let me undo this next thing that I just added.
Dialogue: 0,0:14:47.14,0:14:50.00,中文,,0,0,0,,让我撤销我刚刚添加的`next`。
Dialogue: 0,0:14:50.00,0:15:02.20,英文,,0,0,0,,And instead of using a reader, let me go ahead and use a dictionary reader, abbreviated dictreader, that's going to now return me The equivalent of all of the rows, one at a time.
Dialogue: 0,0:14:50.00,0:15:02.20,中文,,0,0,0,,不使用`reader`，让我们使用`dictionary reader`，缩写为`dictreader`，它现在将返回给我所有行的等价物，一次一行。
Dialogue: 0,0:15:02.20,0:15:04.79,英文,,0,0,0,,So I can still call it reader, just as before.
Dialogue: 0,0:15:02.20,0:15:04.79,中文,,0,0,0,,我仍然可以像以前一样称它为`reader`。
Dialogue: 0,0:15:04.79,0:15:13.11,英文,,0,0,0,,But as the name implies, what this reader is going to return is not a list after list after list, but a dictionary, a dictionary, a dictionary.
Dialogue: 0,0:15:04.79,0:15:13.11,中文,,0,0,0,,但顾名思义，这个`reader`返回的不是一个又一个列表，而是一个字典，一个字典，又一个字典。
Dialogue: 0,0:15:13.11,0:15:16.37,英文,,0,0,0,,And remember, a dictionary is just a collection of key value pairs.
Dialogue: 0,0:15:13.11,0:15:16.37,中文,,0,0,0,,记住，字典只是一组键值对。
Dialogue: 0,0:15:16.37,0:15:17.63,英文,,0,0,0,,So what does that mean?
Dialogue: 0,0:15:16.37,0:15:17.63,中文,,0,0,0,,那是什么意思呢？
Dialogue: 0,0:15:17.63,0:15:18.35,英文,,0,0,0,,What are the keys?
Dialogue: 0,0:15:17.63,0:15:18.35,中文,,0,0,0,,键是什么？
Dialogue: 0,0:15:18.35,0:15:19.51,英文,,0,0,0,,What are the values?
Dialogue: 0,0:15:18.35,0:15:19.51,中文,,0,0,0,,它们的值是多少？
Dialogue: 0,0:15:19.51,0:15:23.42,英文,,0,0,0,,Well, now that I'm using a dictionary reader, I can actually do this.
Dialogue: 0,0:15:19.51,0:15:23.42,中文,,0,0,0,,现在我使用字典读取器，我就可以做到这一点了。
Dialogue: 0,0:15:23.42,0:15:30.66,英文,,0,0,0,,Instead of on the honor system remembering that I want column 1, I can treat row now, not as a list, but as a dictionary.
Dialogue: 0,0:15:23.42,0:15:30.66,中文,,0,0,0,,不用再依靠记忆我想访问第 1 列，我可以将每一行视为一个字典，而不是列表。
Dialogue: 0,0:15:30.66,0:15:34.40,英文,,0,0,0,,And that means I can go in here and say, quote unquote, language.
Dialogue: 0,0:15:30.66,0:15:34.40,中文,,0,0,0,,这意味着我可以在代码中使用 "language" 作为键。
Dialogue: 0,0:15:34.40,0:15:44.99,英文,,0,0,0,,And we saw that back in week 6. Python allows you to index into dictionaries using square bracket notation in strings, or strs on the inside, just like lists allow for numbers.
Dialogue: 0,0:15:34.40,0:15:44.99,中文,,0,0,0,,我们在第 6 周看到了这一点。Python 允许你使用方括号和字符串（或内部的 strs）对字典进行索引，就像列表允许使用数字一样。
Dialogue: 0,0:15:44.99,0:15:48.19,英文,,0,0,0,,But this now, I think, is going to be a little more robust.
Dialogue: 0,0:15:44.99,0:15:48.19,中文,,0,0,0,,但我认为现在这样会更稳健一些。
Dialogue: 0,0:15:48.19,0:15:53.01,英文,,0,0,0,,If I run this again, python of favorites.py, All of that worked out fine.
Dialogue: 0,0:15:48.19,0:15:53.01,中文,,0,0,0,,如果我再次运行它，`python of favorites.py`，一切正常。
Dialogue: 0,0:15:53.01,0:15:56.77,英文,,0,0,0,,And let me pause the output, too, by using this program called more.
Dialogue: 0,0:15:53.01,0:15:56.77,中文,,0,0,0,,让我用 `more` 这个程序暂停一下输出。
Dialogue: 0,0:15:56.77,0:15:58.69,英文,,0,0,0,,Now I don't even see the header.
Dialogue: 0,0:15:56.77,0:15:58.69,中文,,0,0,0,,现在我连标题都看不到了。
Dialogue: 0,0:15:58.69,0:16:09.02,英文,,0,0,0,,So now whoever works it with Python wrote the code for this package to just analyze that first line of code, use the header, as you just called it, as the keys.
Dialogue: 0,0:15:58.69,0:16:09.02,中文,,0,0,0,,所以现在任何用 Python 编写代码的人都写了这个包的代码，它会分析第一行代码，使用你刚才说的标题作为键。
Dialogue: 0,0:16:09.02,0:16:13.36,英文,,0,0,0,,And then every time you iterate through this loop, it updates the values, the values, the values.
Dialogue: 0,0:16:09.02,0:16:13.36,中文,,0,0,0,,然后每次迭代循环时，它都会更新值，值，值。
Dialogue: 0,0:16:13.36,0:16:16.06,英文,,0,0,0,,But the keys stay the same.
Dialogue: 0,0:16:13.36,0:16:16.06,中文,,0,0,0,,但键保持不变。
Dialogue: 0,0:16:16.06,0:16:20.45,英文,,0,0,0,,Any questions, then, on this technique?
Dialogue: 0,0:16:16.06,0:16:20.45,中文,,0,0,0,,那么，对这种技术有什么问题吗？
Dialogue: 0,0:16:20.45,0:16:23.27,英文,,0,0,0,,Spicy to say, this would be painful in C. Yes?
Dialogue: 0,0:16:20.45,0:16:23.27,中文,,0,0,0,,坦率地说，这在 C 语言中会很痛苦。对吧？
Dialogue: 0,0:16:33.74,0:16:40.14,英文,,0,0,0,,Exactly, so the keys are always going to be quote, unquote, timestamp, language, and problem.
Dialogue: 0,0:16:33.74,0:16:40.14,中文,,0,0,0,,没错，所以键永远是 "Timestamp"、"language" 和 "problem"。
Dialogue: 0,0:16:40.14,0:16:47.43,英文,,0,0,0,,But on each iteration of this loop here, the row is going to contain a different row of values, different row of values, different row of values.
Dialogue: 0,0:16:40.14,0:16:47.43,中文,,0,0,0,,但在每次循环迭代中，`row` 将包含不同的值行，不同的值行，不同的值行。
Dialogue: 0,0:16:47.43,0:16:54.36,英文,,0,0,0,,So you're going to get back one dictionary for every student who submitted the Google form, if you will, while iterating through it there.
Dialogue: 0,0:16:47.43,0:16:54.36,中文,,0,0,0,,如果你愿意的话，在迭代过程中，你将为每个提交 Google 表单的学生获得一个字典。
Dialogue: 0,0:16:54.36,0:17:01.46,英文,,0,0,0,,All right, so once we have this ability here, why don't we go ahead and transition to,
Dialogue: 0,0:16:54.36,0:17:01.46,中文,,0,0,0,,好了，既然我们有了这种能力，我们不妨继续往下讲，
Dialogue: 0,0:17:01.46,0:17:08.54,英文,,0,0,0,,How about not just using that dictionary reader, which makes the code a little more robust, because now if you move the columns around, no big deal.
Dialogue: 0,0:17:01.46,0:17:08.54,中文,,0,0,0,,不只是使用字典读取器，这使得代码更加健壮，因为即使你移动了列，也没关系。
Dialogue: 0,0:17:08.54,0:17:11.26,英文,,0,0,0,,It doesn't matter if the numeric indices change.
Dialogue: 0,0:17:08.54,0:17:11.26,中文,,0,0,0,,数字索引是否改变并不重要。
Dialogue: 0,0:17:11.26,0:17:13.78,英文,,0,0,0,,You can still use those keywords instead.
Dialogue: 0,0:17:11.26,0:17:13.78,中文,,0,0,0,,你仍然可以使用这些关键字。
Dialogue: 0,0:17:13.78,0:17:15.42,英文,,0,0,0,,But let's actually analyze the data now.
Dialogue: 0,0:17:13.78,0:17:15.42,中文,,0,0,0,,但现在让我们来分析一下数据。
Dialogue: 0,0:17:15.42,0:17:18.66,英文,,0,0,0,,I'm just spitting it out, which is not solving any problems for anyone.
Dialogue: 0,0:17:15.42,0:17:18.66,中文,,0,0,0,,我只是把它打印出来，这对任何人来说都没有解决任何问题。
Dialogue: 0,0:17:18.66,0:17:25.99,英文,,0,0,0,,So let's go ahead and count the popularity of Scratch, C, and Python and see what everyone's been thinking here.
Dialogue: 0,0:17:18.66,0:17:25.99,中文,,0,0,0,,所以让我们继续，统计一下 Scratch、C 和 Python 的流行程度，看看大家是怎么想的。
Dialogue: 0,0:17:25.99,0:17:27.45,英文,,0,0,0,,All right, so how might I do this?
Dialogue: 0,0:17:25.99,0:17:27.45,中文,,0,0,0,,那我要怎么做呢？
Dialogue: 0,0:17:27.45,0:17:30.05,英文,,0,0,0,,Well, let me go ahead and do this up here.
Dialogue: 0,0:17:27.45,0:17:30.05,中文,,0,0,0,,让我先在这里做一下。
Dialogue: 0,0:17:30.05,0:17:33.89,英文,,0,0,0,,Before I start iterating, let me give myself, let's say, three variables.
Dialogue: 0,0:17:30.05,0:17:33.89,中文,,0,0,0,,在我开始迭代之前，让我先给自己三个变量。
Dialogue: 0,0:17:33.89,0:17:40.49,英文,,0,0,0,,And to keep things simple, I'll say one variable called scratch, set it equal to 0 for 0 students so far.
Dialogue: 0,0:17:33.89,0:17:40.49,中文,,0,0,0,,为了简单起见，我声明一个名为 scratch 的变量，并将其设置为 0，表示目前有 0 个学生选择。
Dialogue: 0,0:17:40.49,0:17:42.09,英文,,0,0,0,,C is going to equal 0.
Dialogue: 0,0:17:40.49,0:17:42.09,中文,,0,0,0,,C 将等于 0。
Dialogue: 0,0:17:42.09,0:17:44.25,英文,,0,0,0,,And Python is going to equal 0.
Dialogue: 0,0:17:42.09,0:17:44.25,中文,,0,0,0,,Python 也将等于 0。
Dialogue: 0,0:17:44.25,0:17:49.33,英文,,0,0,0,,There's a slightly prettier way of doing this, just because this is like three lines of code to do something very simple.
Dialogue: 0,0:17:44.25,0:17:49.33,中文,,0,0,0,,有一种稍微漂亮一点的方法，因为这就像三行代码就能完成一件非常简单的事情。
Dialogue: 0,0:17:49.33,0:17:51.46,英文,,0,0,0,,You could alternatively, in C,
Dialogue: 0,0:17:49.33,0:17:51.46,中文,,0,0,0,,你也可以在 C 语言中，
Dialogue: 0,0:17:51.46,0:17:58.76,英文,,0,0,0,,Python, but not C, do Scratch, C, Python equals 0, 0.
Dialogue: 0,0:17:51.46,0:17:58.76,中文,,0,0,0,,Python，但不是 C，可以这样做：Scratch, C, Python 等于 0, 0, 0。
Dialogue: 0,0:17:58.76,0:18:02.31,英文,,0,0,0,,So kind of slightly more elegant, just to fit it all into one line.
Dialogue: 0,0:17:58.76,0:18:02.31,中文,,0,0,0,,这样稍微优雅一些，只需将其全部放入一行。
Dialogue: 0,0:18:02.31,0:18:04.23,英文,,0,0,0,,But now let's just do something more interesting.
Dialogue: 0,0:18:02.31,0:18:04.23,中文,,0,0,0,,但现在让我们来做一些更有趣的事情。
Dialogue: 0,0:18:04.23,0:18:08.49,英文,,0,0,0,,On line 7, I'm still going to figure out what the current favorite language is.
Dialogue: 0,0:18:04.23,0:18:08.49,中文,,0,0,0,,在第 7 行，我仍然要找出当前最喜欢的语言是什么。
Dialogue: 0,0:18:08.49,0:18:11.85,英文,,0,0,0,,And now I'm just going to do some Conditional checks.
Dialogue: 0,0:18:08.49,0:18:11.85,中文,,0,0,0,,现在我要做一些条件检查。
Dialogue: 0,0:18:11.85,0:18:20.10,英文,,0,0,0,,How about if that favorite equals equals, quote unquote, scratch? Let's go ahead and increment scratch by 1.
Dialogue: 0,0:18:11.85,0:18:20.10,中文,,0,0,0,,如果 favorite == "scratch" 怎么办？让我们把 scratch 加 1。
Dialogue: 0,0:18:20.10,0:18:23.64,英文,,0,0,0,,We can't do plus plus in Python, but we can do plus equals 1.
Dialogue: 0,0:18:20.10,0:18:23.64,中文,,0,0,0,,我们不能在 Python 中使用 ++，但我们可以使用 += 1。
Dialogue: 0,0:18:23.64,0:18:30.83,英文,,0,0,0,,How about elif favorite equals equals c? Then let's do c plus equals 1.
Dialogue: 0,0:18:23.64,0:18:30.83,中文,,0,0,0,,如果 favorite == c 怎么办？然后我们对 c += 1。
Dialogue: 0,0:18:30.83,0:18:33.75,英文,,0,0,0,,We could do else. This is actually a good design question.
Dialogue: 0,0:18:30.83,0:18:33.75,中文,,0,0,0,,我们可以用 else，这其实是个设计问题。
Dialogue: 0,0:18:33.75,0:18:34.89,英文,,0,0,0,,Should I do else?
Dialogue: 0,0:18:33.75,0:18:34.89,中文,,0,0,0,,应该用 else 吗？
Dialogue: 0,0:18:34.89,0:18:37.09,英文,,0,0,0,,Should I do elif?
Dialogue: 0,0:18:34.89,0:18:37.09,中文,,0,0,0,,应该用 elif 吗？
Dialogue: 0,0:18:37.09,0:18:39.40,英文,,0,0,0,,Any instincts here?
Dialogue: 0,0:18:37.09,0:18:39.40,中文,,0,0,0,,大家有什么想法？
Dialogue: 0,0:18:39.40,0:18:40.56,英文,,0,0,0,,Yeah.
Dialogue: 0,0:18:39.40,0:18:40.56,中文,,0,0,0,,有。
Dialogue: 0,0:18:46.85,0:18:48.03,英文,,0,0,0,,Yeah, really good instincts.
Dialogue: 0,0:18:46.85,0:18:48.03,中文,,0,0,0,,想法很好。
Dialogue: 0,0:18:48.03,0:19:00.22,英文,,0,0,0,,Just in case someone goes and adds another language to the form next week, because we're obviously going to introduce another language today, you don't want your code to now artificially inflate the scores for Python just because you're conflating multiple languages together.
Dialogue: 0,0:18:48.03,0:19:00.22,中文,,0,0,0,,万一有人下周给表单添加了另一种语言，因为我们今天显然要介绍另一种语言，\N你肯定不希望你的代码人为地提高 Python 的分数，仅仅因为你把多种语言混为一谈。
Dialogue: 0,0:19:00.22,0:19:05.23,英文,,0,0,0,,So the more defensive, sort of better way to write this code, I agree, would be LIF.
Dialogue: 0,0:19:00.22,0:19:05.23,中文,,0,0,0,,所以更保险、更好的写法是用 elif，我同意。
Dialogue: 0,0:19:05.23,0:19:10.87,英文,,0,0,0,,Favorite equals equals Python, then let's go ahead and increment Python plus equals 1.
Dialogue: 0,0:19:05.23,0:19:10.87,中文,,0,0,0,,如果 favorite == Python，那就执行 Python += 1。
Dialogue: 0,0:19:10.87,0:19:14.15,英文,,0,0,0,,And if there's a new language next week, we're obviously going to have to update the code.
Dialogue: 0,0:19:10.87,0:19:14.15,中文,,0,0,0,,如果下周出现一种新语言，我们显然必须更新代码。
Dialogue: 0,0:19:14.15,0:19:15.59,英文,,0,0,0,,But at least we're not miscounting.
Dialogue: 0,0:19:14.15,0:19:15.59,中文,,0,0,0,,但至少我们没有算错。
Dialogue: 0,0:19:15.59,0:19:16.99,英文,,0,0,0,,We're just missing the new language.
Dialogue: 0,0:19:15.59,0:19:16.99,中文,,0,0,0,,我们只是错过了新的语言。
Dialogue: 0,0:19:16.99,0:19:19.17,英文,,0,0,0,,So I think that's slightly more robust.
Dialogue: 0,0:19:16.99,0:19:19.17,中文,,0,0,0,,所以我认为这稍微稳妥一些。
Dialogue: 0,0:19:19.17,0:19:31.55,英文,,0,0,0,,All right, now at the very bottom of this program and outside of the loop, when I'm all done counting, let me go ahead and print out, using some f strings, how about the total number of people whose favorite is Scratch.
Dialogue: 0,0:19:19.17,0:19:31.55,中文,,0,0,0,,好了，现在在这个程序的最底部，循环之外，当我完成计数后，让我们使用 f 字符串打印出喜欢 Scratch 的总人数。
Dialogue: 0,0:19:31.55,0:19:34.97,英文,,0,0,0,,So this is just week six F-string syntax.
Dialogue: 0,0:19:31.55,0:19:34.97,中文,,0,0,0,,这只是第六周讲的 f 字符串语法。
Dialogue: 0,0:19:34.97,0:19:45.07,英文,,0,0,0,,Let me go ahead and print out another F-string for C. And I'm, of course, putting the variables in curly braces, all lowercase, but the English words I'm doing capitalization for.
Dialogue: 0,0:19:34.97,0:19:45.07,中文,,0,0,0,,让我继续打印出另一个 C 语言的 f 字符串。当然，我把变量放在花括号里，全部小写，但英语单词我用了大写。
Dialogue: 0,0:19:45.07,0:19:51.18,英文,,0,0,0,,Let's do a final one with F, Python, colon, and then in curly braces, Python, close quote.
Dialogue: 0,0:19:45.07,0:19:51.18,中文,,0,0,0,,最后是 Python，冒号，然后在花括号里，Python，引号结束。
Dialogue: 0,0:19:51.18,0:19:52.12,英文,,0,0,0,,And I think I'm done.
Dialogue: 0,0:19:51.18,0:19:52.12,中文,,0,0,0,,我想我完成了。
Dialogue: 0,0:19:52.12,0:19:53.86,英文,,0,0,0,,So let me just hide my terminal for a second.
Dialogue: 0,0:19:52.12,0:19:53.86,中文,,0,0,0,,我先把终端隐藏一下。
Dialogue: 0,0:19:53.86,0:19:55.48,英文,,0,0,0,,Here's the total program.
Dialogue: 0,0:19:53.86,0:19:55.48,中文,,0,0,0,,这就是完整的程序。
Dialogue: 0,0:19:55.48,0:19:56.90,英文,,0,0,0,,Same stuff as before.
Dialogue: 0,0:19:55.48,0:19:56.90,中文,,0,0,0,,和之前一样。
Dialogue: 0,0:19:56.90,0:19:59.10,英文,,0,0,0,,Open favorites.csv.
Dialogue: 0,0:19:56.90,0:19:59.10,中文,,0,0,0,,打开 favorites.csv。
Dialogue: 0,0:19:59.10,0:20:02.98,英文,,0,0,0,,Open it further with the dictionary reader to do that processing for us.
Dialogue: 0,0:19:59.10,0:20:02.98,中文,,0,0,0,,用字典读取器打开它，帮我们完成处理。
Dialogue: 0,0:20:02.98,0:20:06.48,英文,,0,0,0,,Initialize three variables to 0 just so we have something to count with.
Dialogue: 0,0:20:02.98,0:20:06.48,中文,,0,0,0,,初始化三个变量为 0，这样我们就有东西可以计数了。
Dialogue: 0,0:20:06.48,0:20:09.28,英文,,0,0,0,,And then iterate over the file row by row.
Dialogue: 0,0:20:06.48,0:20:09.28,中文,,0,0,0,,然后逐行遍历文件。
Dialogue: 0,0:20:09.28,0:20:14.54,英文,,0,0,0,,And this is just some sort of week 1 style conditional logic, albeit in Python, counting things.
Dialogue: 0,0:20:09.28,0:20:14.54,中文,,0,0,0,,这只是一些类似第 1 周风格的条件逻辑，尽管是用 Python 写的，用于计数。
Dialogue: 0,0:20:14.54,0:20:17.07,英文,,0,0,0,,All right, so how can we now execute this?
Dialogue: 0,0:20:14.54,0:20:17.07,中文,,0,0,0,,好了，现在我们如何执行这个程序？
Dialogue: 0,0:20:17.07,0:20:20.93,英文,,0,0,0,,Let me go back to my terminal, Python of favorites.py.
Dialogue: 0,0:20:17.07,0:20:20.93,中文,,0,0,0,,让我回到终端，输入 python favorites.py。
Dialogue: 0,0:20:20.93,0:20:22.30,英文,,0,0,0,,And here we go.
Dialogue: 0,0:20:20.93,0:20:22.30,中文,,0,0,0,,好了。
Dialogue: 0,0:20:22.30,0:20:30.27,英文,,0,0,0,,As of today, everyone who's reporting in live via the Google Form, their favorite languages are?
Dialogue: 0,0:20:22.30,0:20:30.27,中文,,0,0,0,,截至今天，所有通过 Google 表单实时汇报的人，他们最喜欢的语言是？
Dialogue: 0,0:20:30.27,0:20:31.35,英文,,0,0,0,,Interesting.
Dialogue: 0,0:20:30.27,0:20:31.35,中文,,0,0,0,,有意思。
Dialogue: 0,0:20:31.35,0:20:34.68,英文,,0,0,0,,That's pretty interesting, too, after just one week of Python, no less.
Dialogue: 0,0:20:31.35,0:20:34.68,中文,,0,0,0,,这也很有意思，仅仅学习了一周的 Python 之后。
Dialogue: 0,0:20:34.68,0:20:38.14,英文,,0,0,0,,But Scratch is a healthy contender there, a lot of C. So a pretty good mix here.
Dialogue: 0,0:20:34.68,0:20:38.14,中文,,0,0,0,,Scratch 也是一个强有力的竞争者，还有很多 C 语言。所以这里有一个很好的组合。
Dialogue: 0,0:20:38.14,0:20:43.17,英文,,0,0,0,,So is this going to be the best way to write this program long term?
Dialogue: 0,0:20:38.14,0:20:43.17,中文,,0,0,0,,那么，从长远来看，这会是编写这个程序的最佳方式吗？
Dialogue: 0,0:20:43.17,0:20:48.41,英文,,0,0,0,,Well, as you noted, if there's a new language next week, this week, we're going to have to constantly update this.
Dialogue: 0,0:20:43.17,0:20:48.41,中文,,0,0,0,,正如你注意到的，如果下周，也就是这周，有一种新的语言出现，我们就得不断地更新这个程序。
Dialogue: 0,0:20:48.41,0:20:51.43,英文,,0,0,0,,Here's where you should let your mind wander to the future.
Dialogue: 0,0:20:48.41,0:20:51.43,中文,,0,0,0,,在这里，你应该让你的思维发散到未来。
Dialogue: 0,0:20:51.43,0:20:59.16,英文,,0,0,0,,Like, if we have a fourth language, fifth language, sixth, seventh, eighth, which aspect here might kind of have some code smell to it?
Dialogue: 0,0:20:51.43,0:20:59.16,中文,,0,0,0,,比如，如果我们有第四种语言、第五种语言、第六种、第七种、第八种，那么这里的哪个方面可能会有代码异味？
Dialogue: 0,0:20:59.16,0:21:04.46,英文,,0,0,0,,Like, this probably isn't the best design to set us up for the future.
Dialogue: 0,0:20:59.16,0:21:04.46,中文,,0,0,0,,比如，这可能不是为未来做好准备的最佳设计。
Dialogue: 0,0:21:04.46,0:21:07.47,英文,,0,0,0,,What might be better than this?
Dialogue: 0,0:21:04.46,0:21:07.47,中文,,0,0,0,,还有什么比这更好的方法吗？
Dialogue: 0,0:21:07.47,0:21:10.04,英文,,0,0,0,,Yeah.
Dialogue: 0,0:21:07.47,0:21:10.04,中文,,0,0,0,,是的。
Dialogue: 0,0:21:10.04,0:21:12.23,英文,,0,0,0,,Yeah, we have to keep adding a language to line 5.
Dialogue: 0,0:21:10.04,0:21:12.23,中文,,0,0,0,,我们需要不断在第 5 行添加语言。
Dialogue: 0,0:21:12.23,0:21:16.69,英文,,0,0,0,,And OK, not a big deal. We could add, like, SQL today and maybe JavaScript next week.
Dialogue: 0,0:21:12.23,0:21:16.69,中文,,0,0,0,,这没什么大不了的，我们可以今天添加 SQL，下周添加 JavaScript。
Dialogue: 0,0:21:16.69,0:21:25.63,英文,,0,0,0,,But, you know, any time a line of code, a line of logic is just going to kind of grow out of control, and we've had this chat a couple of times with different syntax, there's probably a better way than that.
Dialogue: 0,0:21:16.69,0:21:25.63,中文,,0,0,0,,但是，任何时候，如果一行代码或逻辑变得越来越难以控制，就像我们之前几次讨论不同语法时那样，那么很可能存在更好的方法。
Dialogue: 0,0:21:25.63,0:21:30.66,英文,,0,0,0,,So let's do that. Instead of using these individual variables, we could maybe use a list.
Dialogue: 0,0:21:25.63,0:21:30.66,中文,,0,0,0,,让我们来试试吧。与其使用这些单独的变量，不如使用列表。
Dialogue: 0,0:21:30.66,0:21:35.56,英文,,0,0,0,,But a list would be a little confusing because, like, what does bracket 0 mean?
Dialogue: 0,0:21:30.66,0:21:35.56,中文,,0,0,0,,但列表可能会让人困惑，比如，方括号 0 代表什么？
Dialogue: 0,0:21:35.56,0:21:37.12,英文,,0,0,0,,What is bracket 1, bracket 2?
Dialogue: 0,0:21:35.56,0:21:37.12,中文,,0,0,0,,方括号 1、方括号 2 又代表什么呢？
Dialogue: 0,0:21:37.12,0:21:38.62,英文,,0,0,0,,But a dictionary, recall.
Dialogue: 0,0:21:37.12,0:21:38.62,中文,,0,0,0,,回想一下字典。
Dialogue: 0,0:21:38.62,0:21:44.72,英文,,0,0,0,,is like this Swiss army knife of data structures whereby you can associate anything with anything else, keys with values.
Dialogue: 0,0:21:38.62,0:21:44.72,中文,,0,0,0,,它就像数据结构中的瑞士军刀，可以将任何东西与其他东西关联起来，比如键和值。
Dialogue: 0,0:21:44.72,0:21:58.43,英文,,0,0,0,,So I dare say a cleaner way to solve this problem that sets us up for less work or confusion later would be to create a new variable called counts, if that's what we're doing, counting things up, and just set it equal to an empty dictionary.
Dialogue: 0,0:21:44.72,0:21:58.43,中文,,0,0,0,,所以我敢说，一个更简洁的解决方法是创建一个名为 counts 的新变量（如果我们要做的是统计数量），\N并将其设置为一个空字典，这样可以减少我们以后的工作量，也更清晰。
Dialogue: 0,0:21:58.43,0:22:02.49,英文,,0,0,0,,And you can literally say dict with the open parenthesis, close parenthesis, and nothing.
Dialogue: 0,0:21:58.43,0:22:02.49,中文,,0,0,0,,你可以直接写 dict，然后用一对圆括号括起来，里面什么也不放。
Dialogue: 0,0:22:02.49,0:22:06.99,英文,,0,0,0,,Or the more Pythonic, just use open and close curly braces with nothing inside.
Dialogue: 0,0:22:02.49,0:22:06.99,中文,,0,0,0,,或者更 Pythonic 的写法是，只用一对花括号括起来，里面什么也不放。
Dialogue: 0,0:22:06.99,0:22:11.53,英文,,0,0,0,,That gives me an empty dictionary, just like square brackets gives me a list.
Dialogue: 0,0:22:06.99,0:22:11.53,中文,,0,0,0,,这将创建一个空字典，就像方括号创建一个空列表一样。
Dialogue: 0,0:22:11.53,0:22:14.13,英文,,0,0,0,,Now, my logic down here has to change a little bit.
Dialogue: 0,0:22:11.53,0:22:14.13,中文,,0,0,0,,现在，我需要稍微修改一下下面的逻辑。
Dialogue: 0,0:22:14.13,0:22:19.07,英文,,0,0,0,,But what's nice is I don't need one conditional for every language.
Dialogue: 0,0:22:14.13,0:22:19.07,中文,,0,0,0,,比较好的一点是，我不需要为每种语言都写一个条件语句。
Dialogue: 0,0:22:19.07,0:22:24.76,英文,,0,0,0,,Because again, if we have a fourth, a fifth, a sixth, that chunk of code is also going to grow a bit out of control, too.
Dialogue: 0,0:22:19.07,0:22:24.76,中文,,0,0,0,,因为，如果我们有第四种、第五种、第六种语言，那块代码也会变得越来越难以控制。
Dialogue: 0,0:22:24.76,0:22:26.66,英文,,0,0,0,,So I can get rid of this here.
Dialogue: 0,0:22:24.76,0:22:26.66,中文,,0,0,0,,所以我可以把这部分删除。
Dialogue: 0,0:22:26.66,0:22:29.20,英文,,0,0,0,,And what I think I'm going to do is say this.
Dialogue: 0,0:22:26.66,0:22:29.20,中文,,0,0,0,,我认为可以这样做。
Dialogue: 0,0:22:29.20,0:22:38.49,英文,,0,0,0,,Whatever the current favorite is from the current row in the file, why don't we go into our counts variable at that key?
Dialogue: 0,0:22:29.20,0:22:38.49,中文,,0,0,0,,无论文件当前行中的 current favorite 是什么，我们都可以在 counts 变量中访问对应的键。
Dialogue: 0,0:22:38.49,0:22:41.67,英文,,0,0,0,,And again, favorite is a variable. It's not quote unquote favorite.
Dialogue: 0,0:22:38.49,0:22:41.67,中文,,0,0,0,,同样，favorite 是一个变量，而不是字符串 "favorite"。
Dialogue: 0,0:22:41.67,0:22:44.75,英文,,0,0,0,,It's going to be Scratch or C or Python.
Dialogue: 0,0:22:41.67,0:22:44.75,中文,,0,0,0,,它可能是 Scratch、C 或 Python。
Dialogue: 0,0:22:44.75,0:22:51.84,英文,,0,0,0,,And then why don't we go ahead and just increment whatever the value of that count is at that key?
Dialogue: 0,0:22:44.75,0:22:51.84,中文,,0,0,0,,我们为什么不直接把那个键对应的值加 1 呢？
Dialogue: 0,0:22:51.84,0:22:53.50,英文,,0,0,0,,Now, this is technically buggy.
Dialogue: 0,0:22:51.84,0:22:53.50,中文,,0,0,0,,从技术上讲，这有 bug。
Dialogue: 0,0:22:53.50,0:22:54.52,英文,,0,0,0,,We're really close.
Dialogue: 0,0:22:53.50,0:22:54.52,中文,,0,0,0,,我们很接近了。
Dialogue: 0,0:22:54.52,0:22:57.24,英文,,0,0,0,,But there is a bug.
Dialogue: 0,0:22:54.52,0:22:57.24,中文,,0,0,0,,但是有一个 bug。
Dialogue: 0,0:22:57.24,0:23:00.32,英文,,0,0,0,,Does anyone want to conjecture what the bug is?
Dialogue: 0,0:22:57.24,0:23:00.32,中文,,0,0,0,,有人想猜猜 bug 是什么吗？
Dialogue: 0,0:23:00.32,0:23:08.53,英文,,0,0,0,,Yeah.
Dialogue: 0,0:23:00.32,0:23:08.53,中文,,0,0,0,,有。
Dialogue: 0,0:23:08.53,0:23:11.65,英文,,0,0,0,,A good question. That answers my question nonetheless.
Dialogue: 0,0:23:08.53,0:23:11.65,中文,,0,0,0,,问得好，这回答了我的问题。
Dialogue: 0,0:23:11.65,0:23:12.75,英文,,0,0,0,,So no.
Dialogue: 0,0:23:11.65,0:23:12.75,中文,,0,0,0,,不是。
Dialogue: 0,0:23:12.75,0:23:14.29,英文,,0,0,0,,The magic you describe will not happen.
Dialogue: 0,0:23:12.75,0:23:14.29,中文,,0,0,0,,你描述的魔法不会发生。
Dialogue: 0,0:23:14.29,0:23:24.07,英文,,0,0,0,,And to repeat the hypothesis, will this automatically create a key for every language that we try plugging into those square brackets?
Dialogue: 0,0:23:14.29,0:23:24.07,中文,,0,0,0,,重复一下假设，这会自动为我们尝试放入方括号中的每种语言创建一个键吗？
Dialogue: 0,0:23:24.07,0:23:25.29,英文,,0,0,0,,Short answer, no.
Dialogue: 0,0:23:24.07,0:23:25.29,中文,,0,0,0,,简短的回答，不会。
Dialogue: 0,0:23:25.29,0:23:40.25,英文,,0,0,0,,Odds are this is going to create a key error, one of those traceback error messages that you've probably seen by now, either in class or in problem sets, whereby if Scratch hasn't appeared in the dictionary before, or C, or Python, then the dictionary has no clue what you're talking about.
Dialogue: 0,0:23:25.29,0:23:40.25,中文,,0,0,0,,很有可能这会创建一个键错误，一种你可能在课堂上或习题集中看到过的回溯错误信息，\N如果 Scratch、C 或 Python 之前没有出现在字典中，那么字典就不知道你在说什么。
Dialogue: 0,0:23:40.25,0:23:45.91,英文,,0,0,0,,So I think we actually still need some conditional logic, but not that's going to grow longer and longer with each language.
Dialogue: 0,0:23:40.25,0:23:45.91,中文,,0,0,0,,所以我认为我们仍然需要一些条件逻辑，但不会随着每种语言的增加而越来越长。
Dialogue: 0,0:23:45.91,0:23:48.05,英文,,0,0,0,,What I think we probably want to do is this.
Dialogue: 0,0:23:45.91,0:23:48.05,中文,,0,0,0,,我认为我们可能想做的是这个。
Dialogue: 0,0:23:48.05,0:24:02.29,英文,,0,0,0,,If the current favorite is in the counts dictionary, and this is the Pythonic way of just saying, is this key in this dictionary, then go ahead and safely do counts favorite plus equals 1.
Dialogue: 0,0:23:48.05,0:24:02.29,中文,,0,0,0,,如果当前最喜欢的语言在 `counts` 字典中，这是 Python 中判断键是否在字典中的方式，那么就安全地执行 `counts[favorite] += 1`。
Dialogue: 0,0:24:02.29,0:24:05.25,英文,,0,0,0,,Else, to your conjecture now, else what do I want to do?
Dialogue: 0,0:24:02.29,0:24:05.25,中文,,0,0,0,,否则，根据你的猜想，我想做什么？
Dialogue: 0,0:24:05.25,0:24:09.52,英文,,0,0,0,,Counts favorite equals 1.
Dialogue: 0,0:24:05.25,0:24:09.52,中文,,0,0,0,,`counts[favorite] = 1`。
Dialogue: 0,0:24:09.52,0:24:10.36,英文,,0,0,0,,Yeah, 1.
Dialogue: 0,0:24:09.52,0:24:10.36,中文,,0,0,0,,对，等于 1。
Dialogue: 0,0:24:10.36,0:24:16.76,英文,,0,0,0,,So initialize a brand new key to a brand new value of 1, because I'm obviously just seeing this language.
Dialogue: 0,0:24:10.36,0:24:16.76,中文,,0,0,0,,所以要将一个全新的键初始化为 1，因为我显然是第一次看到这种语言。
Dialogue: 0,0:24:16.76,0:24:19.27,英文,,0,0,0,,Otherwise, increment again and again.
Dialogue: 0,0:24:16.76,0:24:19.27,中文,,0,0,0,,否则，就一次又一次地增加。
Dialogue: 0,0:24:19.27,0:24:22.53,英文,,0,0,0,,And now down here, I just need to tweak my syntax a little bit.
Dialogue: 0,0:24:19.27,0:24:22.53,中文,,0,0,0,,现在，我只需要稍微调整一下语法。
Dialogue: 0,0:24:22.53,0:24:26.51,英文,,0,0,0,,I don't need to print out all of these things one at a time manually.
Dialogue: 0,0:24:22.53,0:24:26.51,中文,,0,0,0,,我不需要手动地一次打印出所有这些内容。
Dialogue: 0,0:24:26.51,0:24:30.54,英文,,0,0,0,,I can actually get away, I think, with another loop at the very bottom here.
Dialogue: 0,0:24:26.51,0:24:30.54,中文,,0,0,0,,实际上，我想我可以在最下面再加一个循环来解决这个问题。
Dialogue: 0,0:24:30.54,0:24:31.54,英文,,0,0,0,,So how about I do this?
Dialogue: 0,0:24:30.54,0:24:31.54,中文,,0,0,0,,那么我这样做怎么样？
Dialogue: 0,0:24:31.54,0:24:32.64,英文,,0,0,0,,For each.
Dialogue: 0,0:24:31.54,0:24:32.64,中文,,0,0,0,,对于每一个。
Dialogue: 0,0:24:32.64,0:24:34.36,英文,,0,0,0,,Favorite in those counts.
Dialogue: 0,0:24:32.64,0:24:34.36,中文,,0,0,0,,在这些计数中的最喜欢的。
Dialogue: 0,0:24:34.36,0:24:39.53,英文,,0,0,0,,And this is, again, the Pythonic way to iterate over all of the keys in a dictionary.
Dialogue: 0,0:24:34.36,0:24:39.53,中文,,0,0,0,,同样，这是遍历字典中所有键的 Python 风格的方式。
Dialogue: 0,0:24:39.53,0:24:52.18,英文,,0,0,0,,Go ahead and print out, using an f string, whatever the current favorite is, Scratch or C or Python, and then a colon, and then Figure out what its count is.
Dialogue: 0,0:24:39.53,0:24:52.18,中文,,0,0,0,,继续并使用 f 字符串打印出当前最喜欢的语言是什么，Scratch、C 还是 Python，然后是一个冒号，然后找出它的计数是多少。
Dialogue: 0,0:24:52.18,0:24:58.83,英文,,0,0,0,,And you can do that by going into the counts dictionary, looking at the favorite key, and get back its value.
Dialogue: 0,0:24:52.18,0:24:58.83,中文,,0,0,0,,你可以通过进入 counts 字典，查看 favorite 键，并获取它的值来做到这一点。
Dialogue: 0,0:24:58.83,0:25:00.19,英文,,0,0,0,,So I close my curly braces.
Dialogue: 0,0:24:58.83,0:25:00.19,中文,,0,0,0,,所以我关闭了花括号。
Dialogue: 0,0:25:00.19,0:25:01.07,英文,,0,0,0,,I close my quotes.
Dialogue: 0,0:25:00.19,0:25:01.07,中文,,0,0,0,,我关闭了引号。
Dialogue: 0,0:25:01.07,0:25:04.69,英文,,0,0,0,,And even though this looks ugly at the moment, now this is much more dynamic.
Dialogue: 0,0:25:01.07,0:25:04.69,中文,,0,0,0,,即使现在看起来很丑陋，但这更加动态。
Dialogue: 0,0:25:04.69,0:25:10.78,英文,,0,0,0,,Because if we go and add SQL to the CSV file tomorrow, or we add JavaScript next week, This will just work.
Dialogue: 0,0:25:04.69,0:25:10.78,中文,,0,0,0,,因为如果我们明天去 CSV 文件中添加 SQL，或者下周添加 JavaScript，这将可以正常工作。
Dialogue: 0,0:25:10.78,0:25:12.78,英文,,0,0,0,,It will keep working now automatically.
Dialogue: 0,0:25:10.78,0:25:12.78,中文,,0,0,0,,它现在将自动持续工作。
Dialogue: 0,0:25:12.78,0:25:15.43,英文,,0,0,0,,All I change is the Google form, not my actual code.
Dialogue: 0,0:25:12.78,0:25:15.43,中文,,0,0,0,,我只需要更改 Google 表单，而不需要更改实际代码。
Dialogue: 0,0:25:15.43,0:25:17.69,英文,,0,0,0,,All right, let's try python of favorites.py.
Dialogue: 0,0:25:15.43,0:25:17.69,中文,,0,0,0,,让我们试试 python of favorites.py。
Dialogue: 0,0:25:17.69,0:25:19.27,英文,,0,0,0,,Cross my fingers, as always.
Dialogue: 0,0:25:17.69,0:25:19.27,中文,,0,0,0,,像往常一样，祈祷吧。
Dialogue: 0,0:25:19.27,0:25:23.18,英文,,0,0,0,,And there now is the data as of now.
Dialogue: 0,0:25:19.27,0:25:23.18,中文,,0,0,0,,现在显示的是截至目前的数据。
Dialogue: 0,0:25:23.18,0:25:25.30,英文,,0,0,0,,Questions on this code here?
Dialogue: 0,0:25:23.18,0:25:25.30,中文,,0,0,0,,关于这段代码的问题？
Dialogue: 0,0:25:25.30,0:25:28.72,英文,,0,0,0,,Yeah.
Dialogue: 0,0:25:25.30,0:25:28.72,中文,,0,0,0,,是的。
Dialogue: 0,0:25:28.72,0:25:33.20,英文,,0,0,0,,Really good question. What if you wanted to print it in a particular order?
Dialogue: 0,0:25:28.72,0:25:33.20,中文,,0,0,0,,问得好，如果想按特定顺序打印怎么办？
Dialogue: 0,0:25:33.20,0:25:35.38,英文,,0,0,0,,Well, I could give you a couple of solutions.
Dialogue: 0,0:25:33.20,0:25:35.38,中文,,0,0,0,,我可以给你几个解决方案。
Dialogue: 0,0:25:35.38,0:25:40.76,英文,,0,0,0,,Like, if you want to print it out in, it's already coincidentally in alphabetical order.
Dialogue: 0,0:25:35.38,0:25:40.76,中文,,0,0,0,,比如，你想把它打印出来，它已经碰巧按字母顺序排列了。
Dialogue: 0,0:25:40.76,0:25:45.07,英文,,0,0,0,,So you got that for free, although that's just by chance here. But there is a way to do this.
Dialogue: 0,0:25:40.76,0:25:45.07,中文,,0,0,0,,所以你免费得到了这个，虽然这只是巧合，但确实有办法做到这一点。
Dialogue: 0,0:25:45.07,0:25:51.46,英文,,0,0,0,,And let me propose that we go down here to my loop, and I explicitly use a function you might not have seen in Python yet,
Dialogue: 0,0:25:45.07,0:25:51.46,中文,,0,0,0,,我建议我们往下看我的循环，我明确地使用了一个你可能在 Python 中还没见过的函数，
Dialogue: 0,0:25:51.46,0:25:58.46,英文,,0,0,0,,but it's literally called sorted, which is going to take either a list, or in this case, a dictionary, and by default, sort it by key alphabetically.
Dialogue: 0,0:25:51.46,0:25:58.46,中文,,0,0,0,,但它实际上叫做 sorted，它接受一个列表，或者在这种情况下，一个字典，默认情况下，按键的字母顺序排序。
Dialogue: 0,0:25:58.46,0:26:03.56,英文,,0,0,0,,Now, if my intuition's correct, this is not going to change the output because it's already alphabetical.
Dialogue: 0,0:25:58.46,0:26:03.56,中文,,0,0,0,,现在，如果我的直觉正确的话，这不会改变输出，因为它已经是按字母顺序排列的了。
Dialogue: 0,0:26:03.56,0:26:10.04,英文,,0,0,0,,But if you read the documentation for the sorted function, it takes, Multiple parameters, potentially, some of which are named parameters.
Dialogue: 0,0:26:03.56,0:26:10.04,中文,,0,0,0,,但是，如果你阅读 sorted 函数的文档，它接受多个参数，其中一些是命名参数。
Dialogue: 0,0:26:10.04,0:26:11.92,英文,,0,0,0,,And so you can actually do this.
Dialogue: 0,0:26:10.04,0:26:11.92,中文,,0,0,0,,所以你实际上可以这样做。
Dialogue: 0,0:26:11.92,0:26:19.59,英文,,0,0,0,,If you want to sort the counts, but you want to reverse the order for whatever reason here so that it's reverse alphabetical order, now let me go ahead and rerun this.
Dialogue: 0,0:26:11.92,0:26:19.59,中文,,0,0,0,,如果你想对计数进行排序，但是你想反转顺序，不管出于什么原因，让它按字母顺序反转，现在让我继续重新运行它。
Dialogue: 0,0:26:19.59,0:26:21.61,英文,,0,0,0,,And I'll keep the previous output on the screen.
Dialogue: 0,0:26:19.59,0:26:21.61,中文,,0,0,0,,我会把之前的输出保留在屏幕上。
Dialogue: 0,0:26:21.61,0:26:22.39,英文,,0,0,0,,Enter.
Dialogue: 0,0:26:21.61,0:26:22.39,中文,,0,0,0,,回车。
Dialogue: 0,0:26:22.39,0:26:27.09,英文,,0,0,0,,And now it's backwards alphabetically, if you will.
Dialogue: 0,0:26:22.39,0:26:27.09,中文,,0,0,0,,现在它是按字母顺序倒序排列的。
Dialogue: 0,0:26:27.09,0:26:31.86,英文,,0,0,0,,Other questions on this here?
Dialogue: 0,0:26:27.09,0:26:31.86,中文,,0,0,0,,关于这个还有其他问题吗？
Dialogue: 0,0:26:31.86,0:26:33.16,英文,,0,0,0,,No?
Dialogue: 0,0:26:31.86,0:26:33.16,中文,,0,0,0,,没有？
Dialogue: 0,0:26:33.16,0:26:39.82,英文,,0,0,0,,How about then we transition to sorting by value?
Dialogue: 0,0:26:33.16,0:26:39.82,中文,,0,0,0,,那么我们来过渡到按值排序怎么样？
Dialogue: 0,0:26:39.82,0:26:44.74,英文,,0,0,0,,And this is going to escalate a little quickly, briefly, but then we'll tone it down again.
Dialogue: 0,0:26:39.82,0:26:44.74,中文,,0,0,0,,这会很快升级，但之后我们会再把它调低。
Dialogue: 0,0:26:44.74,0:26:47.74,英文,,0,0,0,,Notice that right now, this is indeed sorting by key.
Dialogue: 0,0:26:44.74,0:26:47.74,中文,,0,0,0,,注意，现在，这确实是按键排序的。
Dialogue: 0,0:26:47.74,0:26:57.46,英文,,0,0,0,,What if, especially if I have lots of data, it'd be nice to make a top 10 list, or in this case, a top 3 list, and actually see in order of the counts, the values,
Dialogue: 0,0:26:47.74,0:26:57.46,中文,,0,0,0,,如果，特别是当我有大量数据时，如果能做一个前 10 名的列表，\N或者在这种情况下，做一个前 3 名的列表，并且实际上按照计数的顺序，也就是值的顺序，
Dialogue: 0,0:26:57.46,0:26:58.78,英文,,0,0,0,,What these popular ones are.
Dialogue: 0,0:26:57.46,0:26:58.78,中文,,0,0,0,,看看哪些是热门的，那就太好了。
Dialogue: 0,0:26:58.78,0:27:00.62,英文,,0,0,0,,So it's not C, Python, Scratch.
Dialogue: 0,0:26:58.78,0:27:00.62,中文,,0,0,0,,所以它不是 C、Python、Scratch。
Dialogue: 0,0:27:00.62,0:27:06.72,英文,,0,0,0,,It should ideally be Python, then C, then Scratch because of the values and the magnitude thereof.
Dialogue: 0,0:27:00.62,0:27:06.72,中文,,0,0,0,,理想情况下，应该是 Python、C，然后是 Scratch，因为它们的数值和数量级。
Dialogue: 0,0:27:06.72,0:27:07.98,英文,,0,0,0,,So how can I do this?
Dialogue: 0,0:27:06.72,0:27:07.98,中文,,0,0,0,,那该怎么做呢？
Dialogue: 0,0:27:07.98,0:27:18.31,英文,,0,0,0,,Well, it turns out there's another key, another parameter that you can pass to the sorted function that is typically implemented as a function itself.
Dialogue: 0,0:27:07.98,0:27:18.31,中文,,0,0,0,,事实证明，你可以向 sorted 函数传递另一个键，另一个参数，它通常本身也是一个函数。
Dialogue: 0,0:27:18.31,0:27:19.41,英文,,0,0,0,,And so I'm going to go ahead and do this.
Dialogue: 0,0:27:18.31,0:27:19.41,中文,,0,0,0,,我打算继续这样做。
Dialogue: 0,0:27:19.41,0:27:24.41,英文,,0,0,0,,I'm going to temporarily define a function called getValue just to make my life easier.
Dialogue: 0,0:27:19.41,0:27:24.41,中文,,0,0,0,,我将暂时定义一个名为 getValue 的函数，只是为了方便。
Dialogue: 0,0:27:24.41,0:27:29.59,英文,,0,0,0,,And this getValue function is going to take, I'll say, a language parameter.
Dialogue: 0,0:27:24.41,0:27:29.59,中文,,0,0,0,,这个 getValue 函数将接受一个语言参数。
Dialogue: 0,0:27:29.59,0:27:35.39,英文,,0,0,0,,And then all I'm going to do is return whatever the count is of that language.
Dialogue: 0,0:27:29.59,0:27:35.39,中文,,0,0,0,,然后我要做的就是返回该语言的计数。
Dialogue: 0,0:27:35.39,0:27:41.31,英文,,0,0,0,,So out of context, this is just a super simple function that you hand in a language like Scratch or C or Python.
Dialogue: 0,0:27:35.39,0:27:41.31,中文,,0,0,0,,因此，脱离上下文，这只是一个超级简单的函数，你传入一种语言，比如 Scratch 或 C 或 Python。
Dialogue: 0,0:27:41.31,0:27:46.62,英文,,0,0,0,,It's just going to tell you what the count is thereof in that dictionary called counts.
Dialogue: 0,0:27:41.31,0:27:46.62,中文,,0,0,0,,它只会告诉你该语言在 counts 字典中的计数是多少。
Dialogue: 0,0:27:46.62,0:27:54.54,英文,,0,0,0,,But what I can do now down here in my newly introduced call to sorted is I can tell it what to use as its key.
Dialogue: 0,0:27:46.62,0:27:54.54,中文,,0,0,0,,但是现在我可以在新引入的 sorted 调用中做的是，我可以告诉它使用什么作为键。
Dialogue: 0,0:27:54.54,0:28:01.24,英文,,0,0,0,,Instead of using literally the key, Scratch, C, Python, I can override that behavior and say, you know what?
Dialogue: 0,0:27:54.54,0:28:01.24,中文,,0,0,0,,我不用 Scratch、C、Python 这些字面上的键，我可以覆盖该行为并说，你知道吗？
Dialogue: 0,0:28:01.24,0:28:08.03,英文,,0,0,0,,To figure out what to sort by, go ahead and call this function called getValue.
Dialogue: 0,0:28:01.24,0:28:08.03,中文,,0,0,0,,要确定排序依据，请调用这个名为 getValue 的函数。
Dialogue: 0,0:28:08.03,0:28:14.61,英文,,0,0,0,,Notice that I have not put parentheses after getValue because I don't want to call getValue right then and there.
Dialogue: 0,0:28:08.03,0:28:14.61,中文,,0,0,0,,注意，我没有在 getValue 后面加上括号，因为我不想现在就调用 getValue。
Dialogue: 0,0:28:14.61,0:28:30.46,英文,,0,0,0,,I want to pass the getValue function as itself in argument to the sorted function so that the sorted function, written years ago by the people at Python, can call my version of getValue again and again and again when they try to sort this actual data.
Dialogue: 0,0:28:14.61,0:28:30.46,中文,,0,0,0,,我想将 getValue 函数本身作为参数传递给 sorted 函数，\N以便 Python 的开发者们在多年前编写的 sorted 函数可以在尝试对这些实际数据进行排序时一次又一次地调用我的 getValue 版本。
Dialogue: 0,0:28:30.46,0:28:36.34,英文,,0,0,0,,So now if I add that and I leave reverse equals true, let's see what happens.
Dialogue: 0,0:28:30.46,0:28:36.34,中文,,0,0,0,,所以现在，如果我添加它并保留 `reverse` 等于 `true`，让我们看看会发生什么。
Dialogue: 0,0:28:36.34,0:28:38.95,英文,,0,0,0,,Python of favorites.py, Enter.
Dialogue: 0,0:28:36.34,0:28:38.95,中文,,0,0,0,,`python favorites.py`，回车。
Dialogue: 0,0:28:38.95,0:28:42.45,英文,,0,0,0,,And now I get my top 10, or in this case, top three list.
Dialogue: 0,0:28:38.95,0:28:42.45,中文,,0,0,0,,现在我得到了我的前 10 名，或者在这个例子中，是前 3 名的列表。
Dialogue: 0,0:28:42.45,0:28:51.09,英文,,0,0,0,,And if I had more sophisticated data with more columns all together that I actually care about, I could even sort this more powerfully as well.
Dialogue: 0,0:28:42.45,0:28:51.09,中文,,0,0,0,,如果我有更复杂的数据，包含更多我真正关心的列，我甚至可以更强大地排序。
Dialogue: 0,0:28:51.09,0:28:53.15,英文,,0,0,0,,But let me clean this up a little bit just so you've seen it.
Dialogue: 0,0:28:51.09,0:28:53.15,中文,,0,0,0,,但是让我稍微清理一下，让你看一下。
Dialogue: 0,0:28:53.15,0:28:58.97,英文,,0,0,0,,Even though we won't use these that often in CS50, until the end of the class will they come up again.
Dialogue: 0,0:28:53.15,0:28:58.97,中文,,0,0,0,,即使我们在 cs50 中不经常使用它们，直到课程结束它们才会再次出现。
Dialogue: 0,0:28:58.97,0:29:06.78,英文,,0,0,0,,Technically, this isn't necessarily the best design to spend all this time implementing a function and then only use it in one place.
Dialogue: 0,0:28:58.97,0:29:06.78,中文,,0,0,0,,从技术上讲，花所有时间实现一个函数，然后只在一个地方使用它，这不一定是最好的设计。
Dialogue: 0,0:29:06.78,0:29:12.00,英文,,0,0,0,,In general, we've argued that you don't necessarily need a variable if you're only going to use it in one place.
Dialogue: 0,0:29:06.78,0:29:12.00,中文,,0,0,0,,总的来说，我们已经说过，如果只在一个地方使用变量，则不一定需要变量。
Dialogue: 0,0:29:12.00,0:29:14.45,英文,,0,0,0,,You don't really need a function if you're only going to use it in one place.
Dialogue: 0,0:29:12.00,0:29:14.45,中文,,0,0,0,,如果只在一个地方使用函数，则实际上并不需要函数。
Dialogue: 0,0:29:14.45,0:29:17.25,英文,,0,0,0,,And here, we kind of have a good candidate for that.
Dialogue: 0,0:29:14.45,0:29:17.25,中文,,0,0,0,,在这里，我们找到了一个很好的候选者。
Dialogue: 0,0:29:17.25,0:29:30.04,英文,,0,0,0,,And so it turns out in Python, if you don't want to bother creating a function just to use it once, you can create what's called an anonymous function. a.k.a. a lambda function, like the lambda symbol, if familiar.
Dialogue: 0,0:29:17.25,0:29:30.04,中文,,0,0,0,,事实证明，在 Python 中，如果你不想为了使用一次函数而创建它，\N你可以创建一个叫做匿名函数的东西，也就是 lambda 函数，就像 lambda 符号一样，你可能很熟悉。
Dialogue: 0,0:29:30.04,0:29:33.56,英文,,0,0,0,,And a lambda function, the syntax is a little strange looking.
Dialogue: 0,0:29:30.04,0:29:33.56,中文,,0,0,0,,lambda 函数的语法看起来有点奇怪。
Dialogue: 0,0:29:33.56,0:29:36.22,英文,,0,0,0,,But you say this. You literally say lambda.
Dialogue: 0,0:29:33.56,0:29:36.22,中文,,0,0,0,,但你要这样写。 你要写 lambda。
Dialogue: 0,0:29:36.22,0:29:44.55,英文,,0,0,0,,You literally then say the name of the argument that you want this anonymous function with no name to take. Then you have a colon.
Dialogue: 0,0:29:36.22,0:29:44.55,中文,,0,0,0,,你要写下你想让这个没有名字的匿名函数接受的参数的名字。 然后是一个冒号。
Dialogue: 0,0:29:44.55,0:29:49.83,英文,,0,0,0,,And then, quite simply, you write what you want the return value of this function to be.
Dialogue: 0,0:29:44.55,0:29:49.83,中文,,0,0,0,,非常简单，你写下你想要这个函数的返回值是什么。
Dialogue: 0,0:29:49.83,0:29:51.87,英文,,0,0,0,,You don't even say return literally.
Dialogue: 0,0:29:49.83,0:29:51.87,中文,,0,0,0,,你甚至不需要写 return。
Dialogue: 0,0:29:51.87,0:30:00.74,英文,,0,0,0,,These lambda functions are meant to be used super tersely so that you can, in one line, express something like this.
Dialogue: 0,0:29:51.87,0:30:00.74,中文,,0,0,0,,这些 lambda 函数的目的是超级简洁地使用，这样你就可以用一行代码来表达这样的东西。
Dialogue: 0,0:30:00.74,0:30:03.62,英文,,0,0,0,,And I admit, this looks more cryptic, I think, than the previous version.
Dialogue: 0,0:30:00.74,0:30:03.62,中文,,0,0,0,,我承认，这看起来比之前的版本更神秘。
Dialogue: 0,0:30:03.62,0:30:12.62,英文,,0,0,0,,But as you get more comfortable with Python or other languages that support this feature, it allows you to not bother with lines of code like that and just tighten up your code a little bit.
Dialogue: 0,0:30:03.62,0:30:12.62,中文,,0,0,0,,但是，当你对 Python 或其他支持此功能的语言越来越熟悉时，它可以让你不必再为这样的代码行而烦恼，只需稍微简化一下代码即可。
Dialogue: 0,0:30:12.62,0:30:19.26,英文,,0,0,0,,So this line here, lambda, language, colon, counts language, is the one-line version of this.
Dialogue: 0,0:30:12.62,0:30:19.26,中文,,0,0,0,,所以这一行，lambda，language，冒号，counts language，是这一行的单行版本。
Dialogue: 0,0:30:19.26,0:30:21.29,英文,,0,0,0,,And you don't even need to bother picking a name for it.
Dialogue: 0,0:30:19.26,0:30:21.29,中文,,0,0,0,,你甚至不需要费心为它起名字。
Dialogue: 0,0:30:21.29,0:30:26.46,英文,,0,0,0,,Lambda tells Python, I didn't waste any time thinking of a name for this function.
Dialogue: 0,0:30:21.29,0:30:26.46,中文,,0,0,0,,Lambda 告诉 Python，我没有浪费时间给这个函数起名字。
Dialogue: 0,0:30:26.46,0:30:35.30,英文,,0,0,0,,So questions, then, on this technique of using Python to analyze data like this.
Dialogue: 0,0:30:26.46,0:30:35.30,中文,,0,0,0,,那么，关于使用 Python 分析此类数据的技术，有什么问题吗？
Dialogue: 0,0:30:35.30,0:30:37.74,英文,,0,0,0,,Any questions?
Dialogue: 0,0:30:35.30,0:30:37.74,中文,,0,0,0,,有什么问题吗？
Dialogue: 0,0:30:37.74,0:30:39.96,英文,,0,0,0,,We're almost done with Python.
Dialogue: 0,0:30:37.74,0:30:39.96,中文,,0,0,0,,我们的 Python 部分快结束了。
Dialogue: 0,0:30:39.96,0:30:42.64,英文,,0,0,0,,Questions?
Dialogue: 0,0:30:39.96,0:30:42.64,中文,,0,0,0,,有什么问题吗？
Dialogue: 0,0:30:42.64,0:30:50.81,英文,,0,0,0,,OK, so why don't we make things a little more interesting, because we had a much juicier data set with the problems that we've assigned over the past several weeks.
Dialogue: 0,0:30:42.64,0:30:50.81,中文,,0,0,0,,我们可以让事情更有趣一点，因为过去几周我们布置的习题中有一个更丰富的数据集。
Dialogue: 0,0:30:50.81,0:30:57.19,英文,,0,0,0,,Why don't we go ahead and quite simply, you know, I think we wrote pretty darn good code here.
Dialogue: 0,0:30:50.81,0:30:57.19,中文,,0,0,0,,我们可以继续，我认为我们在这里写了非常棒的代码。
Dialogue: 0,0:30:57.19,0:31:05.86,英文,,0,0,0,,So I think we can pretty much just change a bit of it to say, let's see, if I don't want language, I want problem.
Dialogue: 0,0:30:57.19,0:31:05.86,中文,,0,0,0,,所以我们可以稍微修改一下代码，看看，如果我不想按语言排序，而是想按习题排序。
Dialogue: 0,0:31:05.86,0:31:09.64,英文,,0,0,0,,And if I want to sort by not language, but problem,
Dialogue: 0,0:31:05.86,0:31:09.64,中文,,0,0,0,,如果我想按习题排序，而不是语言，
Dialogue: 0,0:31:09.64,0:31:10.56,英文,,0,0,0,,I think that's it.
Dialogue: 0,0:31:09.64,0:31:10.56,中文,,0,0,0,,我想就是这样。
Dialogue: 0,0:31:10.56,0:31:25.59,英文,,0,0,0,,I think if I didn't overlook something here, just by changing what column I'm reading the data from, and then just to be consistent, renaming my variables, just so I know what I'm looking at, what will this program now do after those minor changes?
Dialogue: 0,0:31:10.56,0:31:25.59,中文,,0,0,0,,我想如果我没有忽略什么，只需改变我读取数据的列，然后为了保持一致，\N重命名我的变量，这样我就知道我在看什么，在这些微小的改动之后，这个程序现在会做什么？
Dialogue: 0,0:31:25.59,0:31:29.94,英文,,0,0,0,,What will I see when I run this?
Dialogue: 0,0:31:25.59,0:31:29.94,中文,,0,0,0,,当我运行它时会看到什么？
Dialogue: 0,0:31:29.94,0:31:34.96,英文,,0,0,0,,What would be the first thing I see when I run this?
Dialogue: 0,0:31:29.94,0:31:34.96,中文,,0,0,0,,当我运行它时，第一眼会看到什么？
Dialogue: 0,0:31:34.96,0:31:36.02,英文,,0,0,0,,Tough crowd today.
Dialogue: 0,0:31:34.96,0:31:36.02,中文,,0,0,0,,今天大家都很沉默。
Dialogue: 0,0:31:36.02,0:31:44.23,英文,,0,0,0,,Yes? Yeah, the top problem, so the most popular problem, which I'm a little worried it might be Hello or just Scratch.
Dialogue: 0,0:31:36.02,0:31:44.23,中文,,0,0,0,,有人想回答吗？ 是的，最受欢迎的习题，我有点担心它可能是 Hello 或者 Scratch。
Dialogue: 0,0:31:44.23,0:31:47.73,英文,,0,0,0,,But let's go ahead and see. So let me go ahead and open my terminal window.
Dialogue: 0,0:31:44.23,0:31:47.73,中文,,0,0,0,,但让我们继续看看。让我打开我的终端窗口。
Dialogue: 0,0:31:47.73,0:31:50.83,英文,,0,0,0,,I'll even maximize my terminal window so we can see a lot.
Dialogue: 0,0:31:47.73,0:31:50.83,中文,,0,0,0,,我甚至会最大化我的终端窗口，这样我们就能看到更多内容。
Dialogue: 0,0:31:50.83,0:31:54.43,英文,,0,0,0,,Let me go ahead and run Python of favorites.py.
Dialogue: 0,0:31:50.83,0:31:54.43,中文,,0,0,0,,让我运行 python favorites.py。
Dialogue: 0,0:31:54.43,0:31:58.30,英文,,0,0,0,,I'm going to go ahead now and cross my fingers that I didn't mess up and hit Enter.
Dialogue: 0,0:31:54.43,0:31:58.30,中文,,0,0,0,,我要祈祷我没有搞砸，然后按下回车键。
Dialogue: 0,0:31:58.30,0:32:00.68,英文,,0,0,0,,OK, great, we peaked early.
Dialogue: 0,0:31:58.30,0:32:00.68,中文,,0,0,0,,太棒了，我们一开始就达到了顶峰。
Dialogue: 0,0:32:00.68,0:32:06.40,英文,,0,0,0,,So Scratch was the most popular program, according to the data, at the time I downloaded it.
Dialogue: 0,0:32:00.68,0:32:06.40,中文,,0,0,0,,根据数据，在我下载的时候，Scratch 是最受欢迎的程序。
Dialogue: 0,0:32:06.40,0:32:08.70,英文,,0,0,0,,I'm sure other votes have come in since.
Dialogue: 0,0:32:06.40,0:32:08.70,中文,,0,0,0,,我相信从那以后又收到了其他的投票。
Dialogue: 0,0:32:08.70,0:32:13.08,英文,,0,0,0,,Filter, in week four, was tied then with Tiedemann as well.
Dialogue: 0,0:32:08.70,0:32:13.08,中文,,0,0,0,,第四周的 Filter 当时与 Tiedemann 并列。
Dialogue: 0,0:32:13.08,0:32:16.41,英文,,0,0,0,,Mario is a close third there, and so forth.
Dialogue: 0,0:32:13.08,0:32:16.41,中文,,0,0,0,,Mario 紧随其后，排在第三位，以此类推。
Dialogue: 0,0:32:16.41,0:32:21.85,英文,,0,0,0,,So this is helpful for us on staff that's not so much love down here at the bottom of the list.
Dialogue: 0,0:32:16.41,0:32:21.85,中文,,0,0,0,,这对我们这些工作人员来说很有帮助，因为在列表的底部并没有那么多人喜欢。
Dialogue: 0,0:32:21.85,0:32:29.34,英文,,0,0,0,,It was a bunch of code to write, but now that we've written it in this very versatile, dynamic way, it's pretty good for just crunching data and doing some analytics.
Dialogue: 0,0:32:21.85,0:32:29.34,中文,,0,0,0,,虽然写了很多代码，但现在我们用这种非常通用、动态的方式编写了代码，它非常适合处理数据和进行一些分析。
Dialogue: 0,0:32:29.34,0:32:33.48,英文,,0,0,0,,But it's still a decent number of lines to have had to write manually.
Dialogue: 0,0:32:29.34,0:32:33.48,中文,,0,0,0,,但手动编写这么多行代码仍然很多。
Dialogue: 0,0:32:33.48,0:32:48.83,英文,,0,0,0,,And this is where sometimes it isn't necessarily the right tool for the job, but rather the job that But rather, a candidate for using some other language altogether, especially when it's not just a one-time program that you run and you want to see the answer.
Dialogue: 0,0:32:33.48,0:32:48.83,中文,,0,0,0,,在某些情况下，这并不一定是完成这项工作的合适工具，而是完成这项工作的一个候选者，\N而是使用其他语言的候选者，尤其当它不是一个你运行一次并希望看到答案的一次性程序时。
Dialogue: 0,0:32:48.83,0:32:58.80,英文,,0,0,0,,What if you want to take input from the user and answer questions dynamically, like a mobile app would, like a website would, like Microsoft Excel, or Apple Numbers, or Google Sheets would for you?
Dialogue: 0,0:32:48.83,0:32:58.80,中文,,0,0,0,,如果你想接受用户的输入并动态回答问题，就像移动应用程序、网站、Microsoft Excel、Apple Numbers 或 Google Sheets 一样，该怎么办？
Dialogue: 0,0:32:58.80,0:33:04.95,英文,,0,0,0,,Well, let's make one final change for now to this version of the program and actually take in some user input.
Dialogue: 0,0:32:58.80,0:33:04.95,中文,,0,0,0,,好吧，让我们对这个版本的程序进行最后一个更改，并实际接收一些用户输入。
Dialogue: 0,0:33:04.95,0:33:10.03,英文,,0,0,0,,So besides just loading all of the data into memory, let's go ahead and,
Dialogue: 0,0:33:04.95,0:33:10.03,中文,,0,0,0,,除了将所有数据加载到内存中之外，让我们继续，
Dialogue: 0,0:33:10.03,0:33:16.62,英文,,0,0,0,,down below here, not just print out the top 10 list, if you will, but prompt the user for their favorite.
Dialogue: 0,0:33:10.03,0:33:16.62,中文,,0,0,0,,在下面这里，不只是打印出前 10 名的列表，而是提示用户输入他们的最爱。
Dialogue: 0,0:33:16.62,0:33:21.12,英文,,0,0,0,,So I'm going to use Python's input function, and I'm just going to prompt them with favorite, quote unquote.
Dialogue: 0,0:33:16.62,0:33:21.12,中文,,0,0,0,,所以我要使用 Python 的 input 函数，我将用引号中的 favorite 来提示他们。
Dialogue: 0,0:33:21.12,0:33:27.86,英文,,0,0,0,,Like, tell me what your favorite problem, or what problem, rather, you are interested in.
Dialogue: 0,0:33:21.12,0:33:27.86,中文,,0,0,0,,比如，告诉我你最喜欢什么问题，或者你对什么问题感兴趣。
Dialogue: 0,0:33:27.86,0:33:39.87,英文,,0,0,0,,And now let me go ahead and say, if that favorite is in the counts variable, so you didn't type in something random that we didn't actually assign as a problem, then let me go ahead
Dialogue: 0,0:33:27.86,0:33:39.87,中文,,0,0,0,,现在让我继续说，如果该 favorite 在 counts 变量中，那么你没有输入一些我们实际上没有指定为问题的随机内容，
Dialogue: 0,0:33:39.87,0:33:50.87,英文,,0,0,0,,and print with a format string whatever that favorite is of yours and show you the actual popularity thereof by indexing into counts using that favorite as the key.
Dialogue: 0,0:33:39.87,0:33:50.87,中文,,0,0,0,,那么让我继续使用格式字符串打印出你喜欢的任何内容，并通过使用该 favorite 作为键索引到 counts 来向你显示其实际受欢迎程度。
Dialogue: 0,0:33:50.87,0:33:55.19,英文,,0,0,0,,And printing this. So now it's a dynamic program. It doesn't dump all of the data and all of the summations.
Dialogue: 0,0:33:50.87,0:33:55.19,中文,,0,0,0,,并打印出来。所以现在它是一个动态程序。它不会转储所有数据和所有汇总结果。
Dialogue: 0,0:33:55.19,0:33:59.09,英文,,0,0,0,,Rather, it's going to allow me to see what my choice of favorite is.
Dialogue: 0,0:33:55.19,0:33:59.09,中文,,0,0,0,,相反，它将允许我查看我选择的最爱是什么。
Dialogue: 0,0:33:59.09,0:34:03.85,英文,,0,0,0,,And I'm going to go ahead and say, let's see, I'm a fan of Mario here.
Dialogue: 0,0:33:59.09,0:34:03.85,中文,,0,0,0,,我要说，让我看看，我是马里奥的粉丝。
Dialogue: 0,0:34:03.85,0:34:05.18,英文,,0,0,0,,So Enter.
Dialogue: 0,0:34:03.85,0:34:05.18,中文,,0,0,0,,输入。
Dialogue: 0,0:34:05.18,0:34:09.02,英文,,0,0,0,,And indeed, we see the same value we saw a moment ago, but just for Mario.
Dialogue: 0,0:34:05.18,0:34:09.02,中文,,0,0,0,,事实上，我们看到了和刚才一样的值，但只是针对马里奥。
Dialogue: 0,0:34:09.02,0:34:11.90,英文,,0,0,0,,But the point now is that, one, all of this is possible.
Dialogue: 0,0:34:09.02,0:34:11.90,中文,,0,0,0,,但现在的重点是，第一，所有这些都是可能的。
Dialogue: 0,0:34:11.90,0:34:17.28,英文,,0,0,0,,Two, it's way easier and more pleasant than this would have been in C. This is still only 15 lines of code.
Dialogue: 0,0:34:11.90,0:34:17.28,中文,,0,0,0,,第二，这比在 C 语言中更容易、更令人愉快。这仍然只有 15 行代码。
Dialogue: 0,0:34:17.28,0:34:19.38,英文,,0,0,0,,And in C, again, there's the memory management.
Dialogue: 0,0:34:17.28,0:34:19.38,中文,,0,0,0,,在 C 语言中，同样存在内存管理的问题。
Dialogue: 0,0:34:19.38,0:34:21.74,英文,,0,0,0,,There's the iterating over the strings, trying to find the commas.
Dialogue: 0,0:34:19.38,0:34:21.74,中文,,0,0,0,,还要遍历字符串，尝试找到逗号。
Dialogue: 0,0:34:21.74,0:34:30.13,英文,,0,0,0,,There's just a lot more work. But honestly, even when you just want to answer a question like this in Excel, in Apple Numbers, Google Sheets, generally you can just highlight things.
Dialogue: 0,0:34:21.74,0:34:30.13,中文,,0,0,0,,还有很多工作要做。但老实说，即使你想在 Excel、Apple Numbers、Google Sheets 中回答这样的问题，通常你只需突出显示即可。
Dialogue: 0,0:34:30.13,0:34:35.90,英文,,0,0,0,,You can click a button, and boom, you get your answer for summation, or max, or min, or any of those sort of basics.
Dialogue: 0,0:34:30.13,0:34:35.90,中文,,0,0,0,,你可以点击一个按钮，就能得到求和、最大值、最小值或任何这类基本运算的结果。
Dialogue: 0,0:34:35.90,0:34:43.01,英文,,0,0,0,,Wouldn't it be nice if we weren't taking a step backwards as programmers and being sort of more powerful, and yet we now have to do more of the work?
Dialogue: 0,0:34:35.90,0:34:43.01,中文,,0,0,0,,但如果我们作为程序员，非但没有变得更强大，反而要自己做更多的事情，那岂不是一种倒退？
Dialogue: 0,0:34:43.01,0:34:48.27,英文,,0,0,0,,So maybe sometimes Python's not, or any language is not, the best tool for the job.
Dialogue: 0,0:34:43.01,0:34:48.27,中文,,0,0,0,,也许有时候 Python，或者任何语言，都不是完成这项工作的最佳工具。
Dialogue: 0,0:34:48.27,0:35:00.57,英文,,0,0,0,,And that's going to now allow us to introduce, more generally, something called a relational database, graduating from mere flat file databases, like text files or binary files in which all of your data is stored, to something more proper.
Dialogue: 0,0:34:48.27,0:35:00.57,中文,,0,0,0,,这将让我们更全面地介绍一种叫做关系数据库的东西，从简单的平面文件数据库（比如存储所有数据的文本文件或二进制文件）升级到更完善的东西。
Dialogue: 0,0:35:00.57,0:35:01.69,英文,,0,0,0,,But first, questions.
Dialogue: 0,0:35:00.57,0:35:01.69,中文,,0,0,0,,不过，首先是提问时间。
Dialogue: 0,0:35:13.60,0:35:17.58,英文,,0,0,0,,Really good question. To reiterate, is this case sensitive?
Dialogue: 0,0:35:13.60,0:35:17.58,中文,,0,0,0,,问得好。 重复一下，这个区分大小写吗？
Dialogue: 0,0:35:17.58,0:35:23.44,英文,,0,0,0,,So if I were to type in Mario in all lowercase and hit Enter, I actually get no such response.
Dialogue: 0,0:35:17.58,0:35:23.44,中文,,0,0,0,,如果我输入全部小写的 Mario 并按下回车键，实际上我得到了“没有找到”的回复。
Dialogue: 0,0:35:23.44,0:35:30.99,英文,,0,0,0,,Now, that might be acceptable, because the problem technically, what is a capital M, but that's a little ridiculous to be that pedantic about the input.
Dialogue: 0,0:35:23.44,0:35:30.99,中文,,0,0,0,,这可能是可以接受的，因为从技术上讲，问题在于大写的 M，但这有点太教条了。
Dialogue: 0,0:35:30.99,0:35:34.43,英文,,0,0,0,,So how could we solve this?
Dialogue: 0,0:35:30.99,0:35:34.43,中文,,0,0,0,,那么我们如何解决这个问题呢？
Dialogue: 0,0:35:34.43,0:35:36.97,英文,,0,0,0,,Any tips for how we can make this a little more robust?
Dialogue: 0,0:35:34.43,0:35:36.97,中文,,0,0,0,,有什么建议可以让它更健壮一些吗？
Dialogue: 0,0:35:36.97,0:35:46.26,英文,,0,0,0,,Yeah. AUDIENCE 2 I think there is something that you could do to make, say,
Dialogue: 0,0:35:36.97,0:35:46.26,中文,,0,0,0,,有。
Dialogue: 0,0:35:46.26,0:35:49.63,英文,,0,0,0,,OK, yeah.
Dialogue: 0,0:35:46.26,0:35:49.63,中文,,0,0,0,,是的。
Dialogue: 0,0:35:49.63,0:35:58.52,英文,,0,0,0,,Yeah, so we could use a few different functions, one of which is called title, which will change it to title case, where it capitalizes, like in most English sentences, the first letter of that sentence.
Dialogue: 0,0:35:49.63,0:35:58.52,中文,,0,0,0,,我们可以使用几个不同的函数，其中一个叫做 title，它会将其改为标题大小写，就像在大多数英文句子中那样，将句子的首字母大写。
Dialogue: 0,0:35:58.52,0:36:02.14,英文,,0,0,0,,We could use capitalize. We could use upper. We could use lower.
Dialogue: 0,0:35:58.52,0:36:02.14,中文,,0,0,0,,我们可以使用 capitalize。 我们可以使用 upper。 我们可以使用 lower。
Dialogue: 0,0:36:02.14,0:36:14.15,英文,,0,0,0,,But indeed, we could just decide how we want to standardize the capitalization, either uppercase, lowercase, or some combination thereof, and just make sure that you change the counts themselves, make sure that you do the same to favorite.
Dialogue: 0,0:36:02.14,0:36:14.15,中文,,0,0,0,,但实际上，我们可以决定如何标准化大小写，无论是大写、小写，\N还是它们的某种组合，只要确保更改了统计数据本身，并确保对收藏夹也进行了相同的操作。
Dialogue: 0,0:36:14.15,0:36:23.42,英文,,0,0,0,,And make sure that maybe you keep a backup of the data if you want to show the original version that came from the CSV without presuming to just capitalize everything for the user.
Dialogue: 0,0:36:14.15,0:36:23.42,中文,,0,0,0,,并且，如果你想在不假设为用户将所有内容都大写的情况下显示 CSV 文件中的原始版本，请确保保留数据的备份。
Dialogue: 0,0:36:23.42,0:36:25.30,英文,,0,0,0,,But indeed, that would be the most common scenario.
Dialogue: 0,0:36:23.42,0:36:25.30,中文,,0,0,0,,但这确实是，最常见的情况。
Dialogue: 0,0:36:25.30,0:36:28.70,英文,,0,0,0,,You just make things case insensitive when doing those matches.
Dialogue: 0,0:36:25.30,0:36:28.70,中文,,0,0,0,,在进行匹配时，只需将内容设置为不区分大小写。
Dialogue: 0,0:36:28.70,0:36:37.00,英文,,0,0,0,,Other questions now on Python before we leave it behind for the coming week?
Dialogue: 0,0:36:28.70,0:36:37.00,中文,,0,0,0,,在我们下周暂时告别 Python 之前，还有其他问题吗？
Dialogue: 0,0:36:37.00,0:36:39.88,英文,,0,0,0,,All right, well, then let's introduce these relational databases.
Dialogue: 0,0:36:37.00,0:36:39.88,中文,,0,0,0,,那么让我们来介绍一下关系数据库。
Dialogue: 0,0:36:39.88,0:36:45.66,英文,,0,0,0,,So relational database is a super popular way of storing lots of data.
Dialogue: 0,0:36:39.88,0:36:45.66,中文,,0,0,0,,关系型数据库是一种非常流行的大规模数据存储方式。
Dialogue: 0,0:36:45.66,0:36:52.55,英文,,0,0,0,,This is what the Twitters of the world, the Googles of the world, the metas of the world use to store some of their data at scale.
Dialogue: 0,0:36:45.66,0:36:52.55,中文,,0,0,0,,Twitter、Google、Meta 等公司都在使用这种方式来存储他们的一些数据。
Dialogue: 0,0:36:52.55,0:36:57.67,英文,,0,0,0,,There are alternatives to relational databases. Indeed, today we'll talk about a language called SQL.
Dialogue: 0,0:36:52.55,0:36:57.67,中文,,0,0,0,,除了关系型数据库，还有一些替代方案。今天我们将讨论一种叫做 SQL 的语言。
Dialogue: 0,0:36:57.67,0:37:02.23,英文,,0,0,0,,There's also a movement, if you will, or an alternative generally called NoSQL, which is just the opposite.
Dialogue: 0,0:36:57.67,0:37:02.23,中文,,0,0,0,,还有一种趋势，或者说一种替代方案，通常被称为 NoSQL，它正好相反。
Dialogue: 0,0:37:02.23,0:37:06.07,英文,,0,0,0,,You don't use SQL. There are things called object-oriented databases and the like.
Dialogue: 0,0:37:02.23,0:37:06.07,中文,,0,0,0,,NoSQL 不使用 SQL。还有一些叫做面向对象数据库之类的东西。
Dialogue: 0,0:37:06.07,0:37:21.46,英文,,0,0,0,,But if you've ever heard of MySQL, or PostgreSQL, or Microsoft SQL Server, or Oracle, or MariaDB, or a bunch of other products, both free and commercial, this is what they're talking about, databases that are designed to store lots of data.
Dialogue: 0,0:37:06.07,0:37:21.46,中文,,0,0,0,,但如果你听说过 MySQL、PostgreSQL、Microsoft SQL Server、Oracle、MariaDB，\N或者其他一些免费或商业产品，它们指的就是关系型数据库，它们被设计用来存储大量数据。
Dialogue: 0,0:37:21.46,0:37:30.03,英文,,0,0,0,,And what's nice about relational databases is that they're really similar to the spreadsheets with which you were presumably familiar long before today's class.
Dialogue: 0,0:37:21.46,0:37:30.03,中文,,0,0,0,,关系型数据库的优点在于，它们与你可能在今天课程之前就已经熟悉的电子表格非常相似。
Dialogue: 0,0:37:30.03,0:37:35.59,英文,,0,0,0,,So a relational database is going to store, as you'll see, All of the data in rows and columns.
Dialogue: 0,0:37:30.03,0:37:35.59,中文,,0,0,0,,你会发现，关系型数据库将所有数据存储在行和列中。
Dialogue: 0,0:37:35.59,0:37:37.83,英文,,0,0,0,,Now, the terminology will thereafter be a little different.
Dialogue: 0,0:37:35.59,0:37:37.83,中文,,0,0,0,,不过，之后的术语会略有不同。
Dialogue: 0,0:37:37.83,0:37:40.60,英文,,0,0,0,,Instead of having sheets, you're going to have tables.
Dialogue: 0,0:37:37.83,0:37:40.60,中文,,0,0,0,,你将使用“表”而不是“工作表”。
Dialogue: 0,0:37:40.60,0:37:43.24,英文,,0,0,0,,But those tables are still going to have rows and columns.
Dialogue: 0,0:37:40.60,0:37:43.24,中文,,0,0,0,,但这些表仍然会有行和列。
Dialogue: 0,0:37:43.24,0:37:53.07,英文,,0,0,0,,And you're going to have even more control over the performance of your data when you start to access it using this Structured Query Language, or SQL.
Dialogue: 0,0:37:43.24,0:37:53.07,中文,,0,0,0,,当你开始使用结构化查询语言 (SQL) 访问数据时，你将对数据的性能有更多控制。
Dialogue: 0,0:37:53.07,0:37:56.45,英文,,0,0,0,,This is a language you can use for web apps, mobile apps.
Dialogue: 0,0:37:53.07,0:37:56.45,中文,,0,0,0,,这种语言可以用于 Web 应用和移动应用。
Dialogue: 0,0:37:56.45,0:38:01.97,英文,,0,0,0,,A lot of analysts would sit down at their Mac or PC and actually ask questions of data to get back the answer.
Dialogue: 0,0:37:56.45,0:38:01.97,中文,,0,0,0,,许多分析师会坐在他们的 Mac 或 PC 前，实际查询数据以获得答案。
Dialogue: 0,0:38:01.97,0:38:07.66,英文,,0,0,0,,And wonderfully, even though there will be some new syntax today, SQL really just does four basic things.
Dialogue: 0,0:38:01.97,0:38:07.66,中文,,0,0,0,,令人惊叹的是，尽管今天会有一些新的语法，但 SQL 实际上只做四件基本的事情。
Dialogue: 0,0:38:07.66,0:38:10.18,英文,,0,0,0,,CRUD is the sort of crude acronym here.
Dialogue: 0,0:38:07.66,0:38:10.18,中文,,0,0,0,,CRUD 是一个比较粗糙的首字母缩写词。
Dialogue: 0,0:38:10.18,0:38:20.40,英文,,0,0,0,,CRUD is a way of remembering that a relational database supports ultimately creating data, reading data, Updating data and deleting data.
Dialogue: 0,0:38:10.18,0:38:20.40,中文,,0,0,0,,CRUD 是一种记忆方式，它表示关系型数据库最终支持创建数据、读取数据、更新数据和删除数据。
Dialogue: 0,0:38:20.40,0:38:31.05,英文,,0,0,0,,So even if you're feeling like, wow, this is a lot of new syntax, which it isn't relative to our past languages, the only things you're doing, really, are creating data, reading data, updating, and deleting the same.
Dialogue: 0,0:38:20.40,0:38:31.05,中文,,0,0,0,,即使你觉得有很多新语法，但相对于我们过去的语言来说，它并没有那么复杂，你真正做的事情只是创建数据、读取数据、更新数据和删除数据。
Dialogue: 0,0:38:31.05,0:38:41.17,英文,,0,0,0,,Now, a little confusingly, in SQL, the corresponding functions or commands that exist that map to CRUD are actually this.
Dialogue: 0,0:38:31.05,0:38:41.17,中文,,0,0,0,,现在有点令人困惑的是，在 SQL 中，与 CRUD 对应的函数或命令实际上是这样的。
Dialogue: 0,0:38:41.17,0:38:44.41,英文,,0,0,0,,So it's still create, but there's another one called insert.
Dialogue: 0,0:38:41.17,0:38:44.41,中文,,0,0,0,,仍然是创建，但还有另一个叫做插入。
Dialogue: 0,0:38:44.41,0:38:52.22,英文,,0,0,0,,It's not read, which is more of the computer scientist way of saying it, but select, which is a little more explicit, like select data you care about.
Dialogue: 0,0:38:44.41,0:38:52.22,中文,,0,0,0,,它不是 read，read 更多是计算机科学家的说法，而是 SELECT，这样更明确一些，比如选择你关心的数据。
Dialogue: 0,0:38:52.22,0:38:53.34,英文,,0,0,0,,Update is still update.
Dialogue: 0,0:38:52.22,0:38:53.34,中文,,0,0,0,,Update 仍然是 UPDATE。
Dialogue: 0,0:38:53.34,0:38:54.30,英文,,0,0,0,,Delete is still delete.
Dialogue: 0,0:38:53.34,0:38:54.30,中文,,0,0,0,,Delete 仍然是 DELETE。
Dialogue: 0,0:38:54.30,0:39:00.11,英文,,0,0,0,,But there's another command called drop, which lets you drop, that is, delete entire tables as well.
Dialogue: 0,0:38:54.30,0:39:00.11,中文,,0,0,0,,但还有另一个命令叫做 drop，它可以删除，也就是删除整个表。
Dialogue: 0,0:39:00.11,0:39:05.50,英文,,0,0,0,,So you can create tables using syntax that's generally going to look like this.
Dialogue: 0,0:39:00.11,0:39:05.50,中文,,0,0,0,,所以你可以使用通常是这样的语法来创建表。
Dialogue: 0,0:39:05.50,0:39:07.00,英文,,0,0,0,,You'll say Create Table.
Dialogue: 0,0:39:05.50,0:39:07.00,中文,,0,0,0,,你会写 Create Table。
Dialogue: 0,0:39:07.00,0:39:10.94,英文,,0,0,0,,You'll give the name of the table, which you can call most anything you want.
Dialogue: 0,0:39:07.00,0:39:10.94,中文,,0,0,0,,你会给表命名，你可以用任何你想要的名称。
Dialogue: 0,0:39:10.94,0:39:14.40,英文,,0,0,0,,But generally, all lowercase, no spaces is best.
Dialogue: 0,0:39:10.94,0:39:14.40,中文,,0,0,0,,但通常，全小写，没有空格是最好的。
Dialogue: 0,0:39:14.40,0:39:20.68,英文,,0,0,0,,Then in parentheses, you can specify a comma-separated list of the columns that you might want in this table.
Dialogue: 0,0:39:14.40,0:39:20.68,中文,,0,0,0,,然后在括号里，你可以指定一个逗号分隔的列表，列出你想要在这个表中的列。
Dialogue: 0,0:39:20.68,0:39:30.46,英文,,0,0,0,,So this is the Code equivalent in the SQL language of manually opening Google Sheets, or Excel, or Numbers, and clicking in the top left cell, and typing timestamp.
Dialogue: 0,0:39:20.68,0:39:30.46,中文,,0,0,0,,所以这相当于在 SQL 语言中，手动打开 Google Sheets、Excel 或 Numbers，点击左上角的单元格，输入 Timestamp。
Dialogue: 0,0:39:30.46,0:39:32.33,英文,,0,0,0,,And then in the next, typing language.
Dialogue: 0,0:39:30.46,0:39:32.33,中文,,0,0,0,,然后在下一个单元格输入 language。
Dialogue: 0,0:39:32.33,0:39:34.17,英文,,0,0,0,,And then in the third, typing problem.
Dialogue: 0,0:39:32.33,0:39:34.17,中文,,0,0,0,,再在第三个单元格输入 problem。
Dialogue: 0,0:39:34.17,0:39:39.93,英文,,0,0,0,,This is the way to define what your headers are, if you will, in a spreadsheet, but now it's called a table.
Dialogue: 0,0:39:34.17,0:39:39.93,中文,,0,0,0,,这就像在电子表格中定义表头，但现在它被称为表。
Dialogue: 0,0:39:39.93,0:39:42.07,英文,,0,0,0,,Now, we won't use this command manually first.
Dialogue: 0,0:39:39.93,0:39:42.07,中文,,0,0,0,,现在，我们不会先手动使用这个命令。
Dialogue: 0,0:39:42.07,0:39:44.09,英文,,0,0,0,,Let's do something a little simpler.
Dialogue: 0,0:39:42.07,0:39:44.09,中文,,0,0,0,,我们先做一些简单的事情。
Dialogue: 0,0:39:44.09,0:39:47.57,英文,,0,0,0,,We're going to start off by just importing this data ourselves.
Dialogue: 0,0:39:44.09,0:39:47.57,中文,,0,0,0,,我们将从导入这些数据开始。
Dialogue: 0,0:39:47.57,0:39:49.27,英文,,0,0,0,,And I'm going to go ahead and do this.
Dialogue: 0,0:39:47.57,0:39:49.27,中文,,0,0,0,,我将继续这样做。
Dialogue: 0,0:39:49.27,0:39:51.32,英文,,0,0,0,,Let me go back to VS Code here.
Dialogue: 0,0:39:49.27,0:39:51.32,中文,,0,0,0,,让我回到 VS Code。
Dialogue: 0,0:39:51.32,0:39:57.34,英文,,0,0,0,,I'm going to leave behind favorites.py for now, because now we're going to transition to this other language called SQL.
Dialogue: 0,0:39:51.32,0:39:57.34,中文,,0,0,0,,我将暂时把 favorites.py 放在一边，因为现在我们将过渡到另一种叫做 SQL 的语言。
Dialogue: 0,0:39:57.34,0:40:02.71,英文,,0,0,0,,And to do this, I am going to create a new database file.
Dialogue: 0,0:39:57.34,0:40:02.71,中文,,0,0,0,,为此，我将创建一个新的数据库文件。
Dialogue: 0,0:40:02.71,0:40:06.97,英文,,0,0,0,,And I'm going to do so using a command called sqlite3.
Dialogue: 0,0:40:02.71,0:40:06.97,中文,,0,0,0,,我会使用一个叫 sqlite3 的命令来实现它。
Dialogue: 0,0:40:06.97,0:40:08.93,英文,,0,0,0,,Which is just the third version thereof.
Dialogue: 0,0:40:06.97,0:40:08.93,中文,,0,0,0,,它只是 sqlite 的第三个版本。
Dialogue: 0,0:40:08.93,0:40:12.54,英文,,0,0,0,,And I'm going to give the database a name of favorites.db.
Dialogue: 0,0:40:08.93,0:40:12.54,中文,,0,0,0,,我将给这个数据库起名为 favorites.db。
Dialogue: 0,0:40:12.54,0:40:15.00,英文,,0,0,0,,There's different conventions, but this is one of the most common.
Dialogue: 0,0:40:12.54,0:40:15.00,中文,,0,0,0,,有很多不同的命名约定，但这是最常见的一种。
Dialogue: 0,0:40:15.00,0:40:23.23,英文,,0,0,0,,When I hit Enter, this is going to create for me a new empty database, just like opening an untitled spreadsheet in Excel, Google Sheets, or Apple Numbers.
Dialogue: 0,0:40:15.00,0:40:23.23,中文,,0,0,0,,当我按下回车键，它会为我创建一个新的空数据库，就像在 Excel、Google Sheets 或 Apple Numbers 中打开一个未命名的电子表格一样。
Dialogue: 0,0:40:23.23,0:40:25.71,英文,,0,0,0,,I'm being prompted, do I want to create favorites.db?
Dialogue: 0,0:40:23.23,0:40:25.71,中文,,0,0,0,,它会提示我，是否要创建 favorites.db？
Dialogue: 0,0:40:25.71,0:40:26.93,英文,,0,0,0,,I'll hit Y for yes.
Dialogue: 0,0:40:25.71,0:40:26.93,中文,,0,0,0,,我会输入 Y 表示是。
Dialogue: 0,0:40:26.93,0:40:28.77,英文,,0,0,0,,OK, we're up and running.
Dialogue: 0,0:40:26.93,0:40:28.77,中文,,0,0,0,,好了，我们现在可以开始了。
Dialogue: 0,0:40:28.77,0:40:30.61,英文,,0,0,0,,Now, you're going to notice a different prompt.
Dialogue: 0,0:40:28.77,0:40:30.61,中文,,0,0,0,,现在，你会注意到一个不同的提示符。
Dialogue: 0,0:40:30.61,0:40:34.47,英文,,0,0,0,,I'm not in my Linux prompt, per se, which is always the dollar sign.
Dialogue: 0,0:40:30.61,0:40:34.47,中文,,0,0,0,,我不是在我的 Linux 命令提示符下，它通常是一个美元符号。
Dialogue: 0,0:40:34.47,0:40:37.09,英文,,0,0,0,,I'm now inside of the program called SQLite.
Dialogue: 0,0:40:34.47,0:40:37.09,中文,,0,0,0,,我现在在一个叫做 sqlite 的程序里面。
Dialogue: 0,0:40:37.09,0:40:43.18,英文,,0,0,0,,And we're going to use SQLite, SQLite 3, as just an interactive way, for now, of playing with SQL code.
Dialogue: 0,0:40:37.09,0:40:43.18,中文,,0,0,0,,我们将使用 sqlite，sqlite 3，作为一种交互式的方式来操作 SQL 代码。
Dialogue: 0,0:40:43.18,0:40:53.16,英文,,0,0,0,,At the end of today, we'll show you how you can use SQL In Python code, so that you still write Python code to do whatever you want, but you can talk to databases using Python.
Dialogue: 0,0:40:43.18,0:40:53.16,中文,,0,0,0,,在今天结束的时候，我们会向你展示如何在 Python 代码中使用 SQL，\N这样你仍然可以用 Python 代码来做任何你想做的事情，但你可以使用 Python 来与数据库进行交互。
Dialogue: 0,0:40:53.16,0:40:55.73,英文,,0,0,0,,And this is exactly how web apps, mobile apps work.
Dialogue: 0,0:40:53.16,0:40:55.73,中文,,0,0,0,,这正是网络应用和移动应用的工作方式。
Dialogue: 0,0:40:55.73,0:41:04.57,英文,,0,0,0,,For instance, on iOS, on an iPhone, an iPad, or the like, if you want to store data, it's very often stored in a SQL database, as we're about to do.
Dialogue: 0,0:40:55.73,0:41:04.57,中文,,0,0,0,,例如，在 iOS 上，在 iPhone、iPad 或类似设备上，如果你想存储数据，通常会将数据存储在一个 SQL 数据库中，就像我们即将做的那样。
Dialogue: 0,0:41:04.57,0:41:07.46,英文,,0,0,0,,But you might use a language called Swift or Objective-C.
Dialogue: 0,0:41:04.57,0:41:07.46,中文,,0,0,0,,但你可能会使用一种叫做 Swift 或 Objective-C 的语言。
Dialogue: 0,0:41:07.46,0:41:12.70,英文,,0,0,0,,And the same exists in the world of Android using Java, Or Kotlin or something else to query the database.
Dialogue: 0,0:41:07.46,0:41:12.70,中文,,0,0,0,,在 Android 世界中也存在同样的情况，使用 Java， 或者 Kotlin 或者其他语言来查询数据库。
Dialogue: 0,0:41:12.70,0:41:15.34,英文,,0,0,0,,So we're going to see SQL in isolation for now.
Dialogue: 0,0:41:12.70,0:41:15.34,中文,,0,0,0,,所以我们现在将单独来看 SQL。
Dialogue: 0,0:41:15.34,0:41:20.02,英文,,0,0,0,,Like, an analyst might just use it at their Mac or PC. But we're going to tie it together by day's end.
Dialogue: 0,0:41:15.34,0:41:20.02,中文,,0,0,0,,就像分析师可能只在他们的 Mac 或 PC 上使用它一样，但我们会在今天结束的时候把它和其他内容联系起来。
Dialogue: 0,0:41:20.02,0:41:28.26,英文,,0,0,0,,So at this terminal, SQLite, let me go ahead and execute this command first.
Dialogue: 0,0:41:20.02,0:41:28.26,中文,,0,0,0,,在这个终端里，sqlite，先执行这条命令。
Dialogue: 0,0:41:28.26,0:41:32.32,英文,,0,0,0,,I'm going to first put SQLite into CSV mode, because I'm going to cut some corners initially.
Dialogue: 0,0:41:28.26,0:41:32.32,中文,,0,0,0,,先要把 sqlite 设置成 CSV 模式，因为一开始要抄个近道。
Dialogue: 0,0:41:32.32,0:41:37.48,英文,,0,0,0,,And I'm just going to automatically import all of the data that was submitted via that Google form.
Dialogue: 0,0:41:32.32,0:41:37.48,中文,,0,0,0,,直接把通过 Google 表单提交的所有数据自动导入。
Dialogue: 0,0:41:37.48,0:41:41.57,英文,,0,0,0,,which I exported as a CSV and uploaded to my code space.
Dialogue: 0,0:41:37.48,0:41:41.57,中文,,0,0,0,,我把它导出为 CSV 文件并上传到了代码空间。
Dialogue: 0,0:41:41.57,0:41:49.81,英文,,0,0,0,,And I'm just going to automatically say, turn this CSV file into a SQL database for me, just so I don't have to figure out what those create table commands are.
Dialogue: 0,0:41:41.57,0:41:49.81,中文,,0,0,0,,然后直接让它帮我把这个 CSV 文件转换成 SQL 数据库，这样就不用去琢磨那些创建表的命令了。
Dialogue: 0,0:41:49.81,0:41:57.94,英文,,0,0,0,,So to do this, I'm going to say mode CSV so that SQLite knows that this is the command, knows that this is a CSV file.
Dialogue: 0,0:41:49.81,0:41:57.94,中文,,0,0,0,,要做到这一点，输入 `mode CSV`，这样 sqlite 就知道这是一个 CSV 文件。
Dialogue: 0,0:41:57.94,0:42:01.66,英文,,0,0,0,,It's literally dot mode, so the dot comes before the keyword there.
Dialogue: 0,0:41:57.94,0:42:01.66,中文,,0,0,0,,就是 `dot mode`，点号在关键字前面。
Dialogue: 0,0:42:01.66,0:42:04.57,英文,,0,0,0,,And now I'm going to say dot import.
Dialogue: 0,0:42:01.66,0:42:04.57,中文,,0,0,0,,现在输入 `.import`。
Dialogue: 0,0:42:04.57,0:42:08.25,英文,,0,0,0,,And then the name of the file I want to import, which is favorites.csv.
Dialogue: 0,0:42:04.57,0:42:08.25,中文,,0,0,0,,然后是要导入的文件名 `favorites.csv`。
Dialogue: 0,0:42:08.25,0:42:12.89,英文,,0,0,0,,And now the name of the table that I want to create with that data.
Dialogue: 0,0:42:08.25,0:42:12.89,中文,,0,0,0,,接下来是用这些数据创建的表的名称。
Dialogue: 0,0:42:12.89,0:42:15.01,英文,,0,0,0,,And just for consistency, I'm going to call it favorites.
Dialogue: 0,0:42:12.89,0:42:15.01,中文,,0,0,0,,为了保持一致性，把它叫做 `favorites`。
Dialogue: 0,0:42:15.01,0:42:18.71,英文,,0,0,0,,I could change these things to be anything I want, but I'm going to do that.
Dialogue: 0,0:42:15.01,0:42:18.71,中文,,0,0,0,,这些东西可以随便改，不过就用这个吧。
Dialogue: 0,0:42:18.71,0:42:20.87,英文,,0,0,0,,And voila, nothing seems to have happened.
Dialogue: 0,0:42:18.71,0:42:20.87,中文,,0,0,0,,瞧，好像什么都没发生。
Dialogue: 0,0:42:20.87,0:42:25.57,英文,,0,0,0,,But just like in C and in Python and Linux, when nothing seems to happen, that's usually a good thing.
Dialogue: 0,0:42:20.87,0:42:25.57,中文,,0,0,0,,不过就像在 C、Python 和 Linux 中一样，当什么都没有发生的时候，通常是件好事。
Dialogue: 0,0:42:25.57,0:42:27.75,英文,,0,0,0,,It means I didn't mess up.
Dialogue: 0,0:42:25.57,0:42:27.75,中文,,0,0,0,,这意味着我没有搞砸。
Dialogue: 0,0:42:27.75,0:42:31.32,英文,,0,0,0,,So if I want to see what just happened, there's this other command.
Dialogue: 0,0:42:27.75,0:42:31.32,中文,,0,0,0,,如果想看看发生了什么，还有另一个命令。
Dialogue: 0,0:42:31.32,0:42:37.76,英文,,0,0,0,,And these commands that start with dots, these are SQLite-specific, which is indeed a lightweight version of SQL.
Dialogue: 0,0:42:31.32,0:42:37.76,中文,,0,0,0,,这些以点号开头的命令是 sqlite 特有的，它确实是 SQL 的轻量级版本。
Dialogue: 0,0:42:37.76,0:42:39.07,英文,,0,0,0,,They're not SQL per se.
Dialogue: 0,0:42:37.76,0:42:39.07,中文,,0,0,0,,它们本身不是 SQL。
Dialogue: 0,0:42:39.07,0:42:43.05,英文,,0,0,0,,So if you're using Oracle or something else like that, you're not going to use these exact commands.
Dialogue: 0,0:42:39.07,0:42:43.05,中文,,0,0,0,,所以如果使用的是 Oracle 或其他类似的东西，就不会用到这些命令。
Dialogue: 0,0:42:43.05,0:42:45.37,英文,,0,0,0,,You'll see the ones we use in just a moment.
Dialogue: 0,0:42:43.05,0:42:45.37,中文,,0,0,0,,稍后会看到我们会用到的命令。
Dialogue: 0,0:42:45.37,0:42:51.16,英文,,0,0,0,,And here's the first. When I type .schema, the schema of a database is the design of the database.
Dialogue: 0,0:42:45.37,0:42:51.16,中文,,0,0,0,,第一个是： 当我输入 .schema 时，数据库的 schema 就是数据库的设计。
Dialogue: 0,0:42:51.16,0:42:53.94,英文,,0,0,0,,What are the tables? What are the columns? And all of that.
Dialogue: 0,0:42:51.16,0:42:53.94,中文,,0,0,0,,有哪些表？有哪些列？所有这些信息。
Dialogue: 0,0:42:53.94,0:43:03.87,英文,,0,0,0,,So when I type .schema, this actually, in this case, shows me the create table command that was automatically run for me by just doing this import line.
Dialogue: 0,0:42:53.94,0:43:03.87,中文,,0,0,0,,当我输入 .schema 时，它实际上会显示出创建表的命令，这个命令是通过执行导入语句自动运行的。
Dialogue: 0,0:43:03.87,0:43:09.60,英文,,0,0,0,,Once I get more comfortable with SQL, I could literally type this out myself or use some program to generate that as well.
Dialogue: 0,0:43:03.87,0:43:09.60,中文,,0,0,0,,一旦我对 SQL 更熟悉了，我就可以自己输入这些内容，或者使用一些程序来生成它。
Dialogue: 0,0:43:09.60,0:43:12.62,英文,,0,0,0,,But what it's creating for me is this. Create table.
Dialogue: 0,0:43:09.60,0:43:12.62,中文,,0,0,0,,但它为我创建的是这个：创建一个表。
Dialogue: 0,0:43:12.62,0:43:18.38,英文,,0,0,0,,If it doesn't exist, even though it's more terse than that, I want to create a table called favorites.
Dialogue: 0,0:43:12.62,0:43:18.38,中文,,0,0,0,,如果它不存在，我想创建一个名为 favorites 的表，尽管它比这更简洁。
Dialogue: 0,0:43:18.38,0:43:24.23,英文,,0,0,0,,And then the columns for that table are going to be timestamp, which is going to be text.
Dialogue: 0,0:43:18.38,0:43:24.23,中文,,0,0,0,,该表的列将是 Timestamp，它将是文本类型。
Dialogue: 0,0:43:24.23,0:43:28.63,英文,,0,0,0,,Language, which is also going to be text, comma, problem, which is also going to be text.
Dialogue: 0,0:43:24.23,0:43:28.63,中文,,0,0,0,,Language，它也将是文本类型，逗号，problem，它也将是文本类型。
Dialogue: 0,0:43:28.63,0:43:40.52,英文,,0,0,0,,That was just inferred very trivially by the .import command to just figure out that, yes, just give me a three-column database table based on the Google form.
Dialogue: 0,0:43:28.63,0:43:40.52,中文,,0,0,0,,这只是通过 .import 命令简单地推断出来的，它只是要弄清楚，是的，只需根据 Google 表格给我一个三列的数据库表。
Dialogue: 0,0:43:40.52,0:43:41.72,英文,,0,0,0,,Questions on this?
Dialogue: 0,0:43:40.52,0:43:41.72,中文,,0,0,0,,对此有疑问吗？
Dialogue: 0,0:43:41.72,0:43:44.12,英文,,0,0,0,,These are commands you run once to get up and running.
Dialogue: 0,0:43:41.72,0:43:44.12,中文,,0,0,0,,这些命令只需要运行一次，就可以启动并运行。
Dialogue: 0,0:43:44.12,0:43:46.72,英文,,0,0,0,,You don't run these commands frequently.
Dialogue: 0,0:43:44.12,0:43:46.72,中文,,0,0,0,,你不需要频繁地运行这些命令。
Dialogue: 0,0:43:46.72,0:43:49.42,英文,,0,0,0,,But we have them on the slide just for reference.
Dialogue: 0,0:43:46.72,0:43:49.42,中文,,0,0,0,,但为了方便参考，我们把它们放在幻灯片上。
Dialogue: 0,0:43:49.42,0:43:51.88,英文,,0,0,0,,All right, so now let's do something a little more interesting.
Dialogue: 0,0:43:49.42,0:43:51.88,中文,,0,0,0,,好了，现在让我们做一些更有趣的事情。
Dialogue: 0,0:43:51.88,0:43:53.99,英文,,0,0,0,,I'm going to clear my SQLite terminal here.
Dialogue: 0,0:43:51.88,0:43:53.99,中文,,0,0,0,,我要清除我的 sqlite 终端。
Dialogue: 0,0:43:53.99,0:43:55.43,英文,,0,0,0,,But I'm still in SQLite.
Dialogue: 0,0:43:53.99,0:43:55.43,中文,,0,0,0,,但我仍然在 sqlite 中。
Dialogue: 0,0:43:55.43,0:44:00.37,英文,,0,0,0,,I'm going to now use some of my first SQL commands, which recall were,We're among them. Select.
Dialogue: 0,0:43:55.43,0:44:00.37,中文,,0,0,0,,我现在要使用我的一些第一个 SQL 命令，回想一下，其中之一是 SELECT。
Dialogue: 0,0:44:00.37,0:44:15.07,英文,,0,0,0,,So crud, C-R-U-D, the R with select, this is maybe the most common, the most useful, the most powerful thing to use with a SQL database, selecting data to answer questions akin to the ones we were trying to answer with Python.
Dialogue: 0,0:44:00.37,0:44:15.07,中文,,0,0,0,,在增删查改（CRUD）中，R 代表 SELECT，这可能是最常用、最有用、\N最强大的 SQL 数据库操作，用于选择数据来回答问题，类似于我们试图用 Python 回答的问题。
Dialogue: 0,0:44:15.07,0:44:16.35,英文,,0,0,0,,This is the general syntax.
Dialogue: 0,0:44:15.07,0:44:16.35,中文,,0,0,0,,这是一般语法。
Dialogue: 0,0:44:16.35,0:44:20.09,英文,,0,0,0,,Anytime you want to select data from a SQL database, you literally say select.
Dialogue: 0,0:44:16.35,0:44:20.09,中文,,0,0,0,,任何时候你想从 SQL 数据库中选择数据，你都可以用 `SELECT`。
Dialogue: 0,0:44:20.09,0:44:24.96,英文,,0,0,0,,You then specify the column or columns that you want to select data from.
Dialogue: 0,0:44:20.09,0:44:24.96,中文,,0,0,0,,然后指定要从中选择数据的列。
Dialogue: 0,0:44:24.96,0:44:32.16,英文,,0,0,0,,You literally write the word from, and then you specify the name of the table you want to get that data from, semicolon in this case.
Dialogue: 0,0:44:24.96,0:44:32.16,中文,,0,0,0,,写上 `FROM`，然后指定要从中获取数据的表的名称，本例中用分号结尾。
Dialogue: 0,0:44:32.16,0:44:35.22,英文,,0,0,0,,Everything that's in capitals here is a SQL keyword.
Dialogue: 0,0:44:32.16,0:44:35.22,中文,,0,0,0,,这里所有大写的都是 SQL 关键字。
Dialogue: 0,0:44:35.22,0:44:40.18,英文,,0,0,0,,Strictly speaking, you don't have to capitalize things, but we would encourage you to do so stylistically.
Dialogue: 0,0:44:35.22,0:44:40.18,中文,,0,0,0,,严格来说，你不必大写，但我们建议你这样做以保持代码风格一致。
Dialogue: 0,0:44:40.18,0:44:45.19,英文,,0,0,0,,And especially as you're learning and even as you're writing it, it just helps to distinguish SQL
Dialogue: 0,0:44:40.18,0:44:45.19,中文,,0,0,0,,尤其是在学习和编写代码时，这有助于区分 SQL
Dialogue: 0,0:44:45.19,0:44:49.41,英文,,0,0,0,,from words you chose, like the names of the columns and the data they're in.
Dialogue: 0,0:44:45.19,0:44:49.41,中文,,0,0,0,,和你自己选择的词语，比如列名和数据。
Dialogue: 0,0:44:49.41,0:44:52.77,英文,,0,0,0,,So do adopt early on this convention.
Dialogue: 0,0:44:49.41,0:44:52.77,中文,,0,0,0,,所以尽早养成这个习惯。
Dialogue: 0,0:44:52.77,0:44:56.12,英文,,0,0,0,,So let me go back now to my code space here.
Dialogue: 0,0:44:52.77,0:44:56.12,中文,,0,0,0,,现在回到我的代码空间。
Dialogue: 0,0:44:56.12,0:44:59.24,英文,,0,0,0,,I'm running my terminal window with SQLite 3 inside of it.
Dialogue: 0,0:44:56.12,0:44:59.24,中文,,0,0,0,,我在终端窗口中运行 sqlite 3。
Dialogue: 0,0:44:59.24,0:45:02.56,英文,,0,0,0,,Suppose that I just want to get all of the data from the favorites.
Dialogue: 0,0:44:59.24,0:45:02.56,中文,,0,0,0,,假设我只想从 favorites 表中获取所有数据。
Dialogue: 0,0:45:02.56,0:45:05.38,英文,,0,0,0,,Table, which was automatically imported. Let's do this.
Dialogue: 0,0:45:02.56,0:45:05.38,中文,,0,0,0,,它已经被自动导入了，我们来试试。
Dialogue: 0,0:45:05.38,0:45:07.66,英文,,0,0,0,,Select. I want everything.
Dialogue: 0,0:45:05.38,0:45:07.66,中文,,0,0,0,,`SELECT` 我想要所有东西。
Dialogue: 0,0:45:07.66,0:45:13.27,英文,,0,0,0,,Well, I can do timestamp, comma, language, comma, problem.
Dialogue: 0,0:45:07.66,0:45:13.27,中文,,0,0,0,,我可以写 `Timestamp, comma, language, comma, problem`。
Dialogue: 0,0:45:13.27,0:45:15.95,英文,,0,0,0,,But you know what? Here's a convenience already.
Dialogue: 0,0:45:13.27,0:45:15.95,中文,,0,0,0,,但是， 这里有个更方便的方法。
Dialogue: 0,0:45:15.95,0:45:25.23,英文,,0,0,0,,If you want everything, there's what's called a wildcard character in SQL, which is just a star, an asterisk, which means give me every column without my knowing even what they're called.
Dialogue: 0,0:45:15.95,0:45:25.23,中文,,0,0,0,,如果你想要所有东西，SQL 中有一个通配符，就是星号，意思是给我所有列，即使我不知道它们叫什么。
Dialogue: 0,0:45:25.23,0:45:28.49,英文,,0,0,0,,Let me go ahead now and say from favorites, semicolon.
Dialogue: 0,0:45:25.23,0:45:28.49,中文,,0,0,0,,现在输入 `FROM favorites;`。
Dialogue: 0,0:45:28.49,0:45:30.61,英文,,0,0,0,,And this is the SQL way.
Dialogue: 0,0:45:28.49,0:45:30.61,中文,,0,0,0,,这就是 SQL 的方式。
Dialogue: 0,0:45:30.61,0:45:36.46,英文,,0,0,0,,of opening the database, iterating over every row therein, printing out every row therein, done.
Dialogue: 0,0:45:30.61,0:45:36.46,中文,,0,0,0,,打开数据库，遍历其中的每一行，打印出来，完成。
Dialogue: 0,0:45:36.46,0:45:42.78,英文,,0,0,0,,So those three steps, which was like nine lines of Python code, give or take, earlier, is now one line of SQL.
Dialogue: 0,0:45:36.46,0:45:42.78,中文,,0,0,0,,这三个步骤，之前大约九行 Python 代码，现在只需要一行 SQL 代码。
Dialogue: 0,0:45:42.78,0:45:46.51,英文,,0,0,0,,I hit Enter. There is all of the data.
Dialogue: 0,0:45:42.78,0:45:46.51,中文,,0,0,0,,按下回车键。所有数据都在这里。
Dialogue: 0,0:45:46.51,0:45:50.41,英文,,0,0,0,,So I see now all of the data just outputted as a CSV here.
Dialogue: 0,0:45:46.51,0:45:50.41,中文,,0,0,0,,可以看到所有数据都以 CSV 格式输出。
Dialogue: 0,0:45:50.41,0:45:51.95,英文,,0,0,0,,But it's not the CSV file.
Dialogue: 0,0:45:50.41,0:45:51.95,中文,,0,0,0,,但它不是 CSV 文件。
Dialogue: 0,0:45:51.95,0:45:53.11,英文,,0,0,0,,It's now actually the table.
Dialogue: 0,0:45:51.95,0:45:53.11,中文,,0,0,0,,它实际上是表。
Dialogue: 0,0:45:53.11,0:45:58.69,英文,,0,0,0,,And in fact, just for good measure, let me do this, because you'll see the behavior a little differently the next time we open the file.
Dialogue: 0,0:45:53.11,0:45:58.69,中文,,0,0,0,,为了更好地说明，让我再做一次，因为下次打开文件时，会看到一些不同的行为。
Dialogue: 0,0:45:58.69,0:46:00.87,英文,,0,0,0,,I've just exited out of SQLite 3.
Dialogue: 0,0:45:58.69,0:46:00.87,中文,,0,0,0,,我已经退出了 sqlite 3。
Dialogue: 0,0:46:00.87,0:46:01.99,英文,,0,0,0,,I'm going to rerun it.
Dialogue: 0,0:46:00.87,0:46:01.99,中文,,0,0,0,,我要重新运行它。
Dialogue: 0,0:46:01.99,0:46:05.96,英文,,0,0,0,,But I'm not going to re-import the data or do anything like that, because my file now exists.
Dialogue: 0,0:46:01.99,0:46:05.96,中文,,0,0,0,,但我不会重新导入数据或做类似的事情，因为我的文件已经存在了。
Dialogue: 0,0:46:05.96,0:46:07.72,英文,,0,0,0,,In fact, let me take one step back.
Dialogue: 0,0:46:05.96,0:46:07.72,中文,,0,0,0,,让我后退一步。
Dialogue: 0,0:46:07.72,0:46:11.96,英文,,0,0,0,,If I type ls at my Linux prompt, there's my favorites.py from before.
Dialogue: 0,0:46:07.72,0:46:11.96,中文,,0,0,0,,如果在 Linux 提示符下输入 ls，就能看到之前的 favorites.py。
Dialogue: 0,0:46:11.96,0:46:13.86,英文,,0,0,0,,There's my favorites.csv from before.
Dialogue: 0,0:46:11.96,0:46:13.86,中文,,0,0,0,,还有之前的 favorites.csv。
Dialogue: 0,0:46:13.86,0:46:19.70,英文,,0,0,0,,And here's a third file that I did create a moment ago when I first ran SQLite 3.
Dialogue: 0,0:46:13.86,0:46:19.70,中文,,0,0,0,,这是我第一次运行 sqlite 3 时创建的第三个文件。
Dialogue: 0,0:46:19.70,0:46:21.14,英文,,0,0,0,,So the data is persistent.
Dialogue: 0,0:46:19.70,0:46:21.14,中文,,0,0,0,,所以数据是持久的。
Dialogue: 0,0:46:21.14,0:46:25.00,英文,,0,0,0,,It's not using RAM or memory. Anything I do now is saved there.
Dialogue: 0,0:46:21.14,0:46:25.00,中文,,0,0,0,,它没有使用 RAM 或内存。我现在所做的任何操作都会保存在那里。
Dialogue: 0,0:46:25.00,0:46:27.94,英文,,0,0,0,,So let's go ahead and rerun SQLite 3 with the same file.
Dialogue: 0,0:46:25.00,0:46:27.94,中文,,0,0,0,,让我们继续，用相同的文件重新运行 sqlite 3。
Dialogue: 0,0:46:27.94,0:46:31.15,英文,,0,0,0,,But I don't have to reimport everything because the file already exists.
Dialogue: 0,0:46:27.94,0:46:31.15,中文,,0,0,0,,但我不必重新导入所有内容，因为文件已经存在。
Dialogue: 0,0:46:31.15,0:46:32.83,英文,,0,0,0,,Let me now do that same thing again.
Dialogue: 0,0:46:31.15,0:46:32.83,中文,,0,0,0,,现在让我再做一遍同样的事情。
Dialogue: 0,0:46:32.83,0:46:36.53,英文,,0,0,0,,Select star from favorites to get all of the data.
Dialogue: 0,0:46:32.83,0:46:36.53,中文,,0,0,0,,从 favorites 中选择所有数据。
Dialogue: 0,0:46:36.53,0:46:40.07,英文,,0,0,0,,And what you'll see now is the same data, but it's a little prettier now.
Dialogue: 0,0:46:36.53,0:46:40.07,中文,,0,0,0,,现在你看到的是同样的数据，只是看起来更美观一些。
Dialogue: 0,0:46:40.07,0:46:44.51,英文,,0,0,0,,Because I reran it, I effectively disabled CSV mode this time.
Dialogue: 0,0:46:40.07,0:46:44.51,中文,,0,0,0,,因为我重新运行了程序，这次实际上禁用了 CSV 模式。
Dialogue: 0,0:46:44.51,0:46:51.50,英文,,0,0,0,,And what I'm now seeing is the entire contents of this database table called favorites.
Dialogue: 0,0:46:44.51,0:46:51.50,中文,,0,0,0,,我现在看到的是名为 favorites 的数据库表中的全部内容。
Dialogue: 0,0:46:51.50,0:46:52.90,英文,,0,0,0,,Now, there's nothing new here.
Dialogue: 0,0:46:51.50,0:46:52.90,中文,,0,0,0,,这里没什么新鲜的。
Dialogue: 0,0:46:52.90,0:46:58.06,英文,,0,0,0,,But you're just seeing now an ASCII or Unicode version of all of the same data from that database.
Dialogue: 0,0:46:52.90,0:46:58.06,中文,,0,0,0,,你只是看到了数据库中所有相同数据的 ASCII 或 Unicode 版本。
Dialogue: 0,0:46:58.06,0:47:00.00,英文,,0,0,0,,Well, suppose I want to get a subset of the data.
Dialogue: 0,0:46:58.06,0:47:00.00,中文,,0,0,0,,假设我想获取数据的子集。
Dialogue: 0,0:47:00.00,0:47:01.04,英文,,0,0,0,,Well, let me clear my screen.
Dialogue: 0,0:47:00.00,0:47:01.04,中文,,0,0,0,,让我先清一下屏幕。
Dialogue: 0,0:47:01.04,0:47:04.66,英文,,0,0,0,,And just like in Linux, I can hit Control-L just to clean things up aesthetically.
Dialogue: 0,0:47:01.04,0:47:04.66,中文,,0,0,0,,就像在 Linux 中一样，我可以按 Control-L 来整理一下界面。
Dialogue: 0,0:47:04.66,0:47:06.49,英文,,0,0,0,,Suppose I want to get just the languages.
Dialogue: 0,0:47:04.66,0:47:06.49,中文,,0,0,0,,假设我只想获取语言。
Dialogue: 0,0:47:06.49,0:47:09.73,英文,,0,0,0,,So I could do select language from favorites.
Dialogue: 0,0:47:06.49,0:47:09.73,中文,,0,0,0,,我可以执行 `SELECT language FROM favorites`。
Dialogue: 0,0:47:09.73,0:47:13.71,英文,,0,0,0,,And this will now select not all three columns, a.k.a. star.
Dialogue: 0,0:47:09.73,0:47:13.71,中文,,0,0,0,,这将不再选择所有三列，也就是星号（*）。
Dialogue: 0,0:47:13.71,0:47:17.36,英文,,0,0,0,,This will only select the language column and all of the data therein.
Dialogue: 0,0:47:13.71,0:47:17.36,中文,,0,0,0,,这只会选择 language 列及其中的所有数据。
Dialogue: 0,0:47:17.36,0:47:22.92,英文,,0,0,0,,If I hit Enter. Voila, now I just see those there. No timestamps, no problems.
Dialogue: 0,0:47:17.36,0:47:22.92,中文,,0,0,0,,如果我按下回车键。瞧，现在我只看到这些了。没有时间戳，没有问题。
Dialogue: 0,0:47:22.92,0:47:25.56,英文,,0,0,0,,It's just a slice of the table, if you will.
Dialogue: 0,0:47:22.92,0:47:25.56,中文,,0,0,0,,这只是表格的一部分。
Dialogue: 0,0:47:25.56,0:47:30.04,英文,,0,0,0,,All right, not that interesting still, because it's just a big column of data.
Dialogue: 0,0:47:25.56,0:47:30.04,中文,,0,0,0,,好吧，这仍然没什么意思，因为它只是一大列数据。
Dialogue: 0,0:47:30.04,0:47:31.77,英文,,0,0,0,,But now things get more interesting.
Dialogue: 0,0:47:30.04,0:47:31.77,中文,,0,0,0,,但现在事情变得有趣了。
Dialogue: 0,0:47:31.77,0:47:38.19,英文,,0,0,0,,It turns out in SQL. That there are functions that come with this language, just like C, just like Python.
Dialogue: 0,0:47:31.77,0:47:38.19,中文,,0,0,0,,事实证明，SQL 中也有一些函数，就像 C 语言和 Python 一样。
Dialogue: 0,0:47:38.19,0:47:48.53,英文,,0,0,0,,In SQL, some of the more useful ones, some of the simpler ones, are these here, AVERAGE, COUNT, DISTINCT, LOWER, MAX, MIN, UPPER, which pretty much do what they say.
Dialogue: 0,0:47:38.19,0:47:48.53,中文,,0,0,0,,在 SQL 中，一些更有用的、更简单的函数包括：\N`AVERAGE`、`COUNT`、`DISTINCT`、`LOWER`、`MAX`、`MIN`、`UPPER`，它们的功能基本和名字一样。
Dialogue: 0,0:47:48.53,0:47:50.60,英文,,0,0,0,,And COUNT is a particularly useful one.
Dialogue: 0,0:47:48.53,0:47:50.60,中文,,0,0,0,,`COUNT` 是一个特别有用的函数。
Dialogue: 0,0:47:50.60,0:47:51.74,英文,,0,0,0,,Let's start with that.
Dialogue: 0,0:47:50.60,0:47:51.74,中文,,0,0,0,,让我们从它开始。
Dialogue: 0,0:47:51.74,0:47:56.28,英文,,0,0,0,,It's a reasonable question to be asked, how many people submitted the Google form?
Dialogue: 0,0:47:51.74,0:47:56.28,中文,,0,0,0,,有多少人提交了 Google 表单？这是个很合理的问题。
Dialogue: 0,0:47:56.28,0:48:00.10,英文,,0,0,0,,By the time I actually downloaded the CSV, well, why don't we go ahead and do this?
Dialogue: 0,0:47:56.28,0:48:00.10,中文,,0,0,0,,在我实际下载 CSV 文件时，我们可以继续操作一下。
Dialogue: 0,0:48:00.10,0:48:03.03,英文,,0,0,0,,Let me go back to VS Code here in my terminal window.
Dialogue: 0,0:48:00.10,0:48:03.03,中文,,0,0,0,,让我回到终端窗口的 VS Code 中。
Dialogue: 0,0:48:03.03,0:48:06.93,英文,,0,0,0,,Let me select not star, but the count of star.
Dialogue: 0,0:48:03.03,0:48:06.93,中文,,0,0,0,,让我选择 star 的数量，而不是 star 本身。
Dialogue: 0,0:48:06.93,0:48:14.32,英文,,0,0,0,,So give me the count of the rows that are being returned from the database table called favorites.
Dialogue: 0,0:48:06.93,0:48:14.32,中文,,0,0,0,,所以给我返回 favorites 数据库表中的行数。
Dialogue: 0,0:48:14.32,0:48:16.52,英文,,0,0,0,,Now, when I hit Enter, I'm not going to get all of the data.
Dialogue: 0,0:48:14.32,0:48:16.52,中文,,0,0,0,,现在，当我按下回车键时，我不会得到所有的数据。
Dialogue: 0,0:48:16.52,0:48:19.87,英文,,0,0,0,,I'm just going to get simply a number.
Dialogue: 0,0:48:16.52,0:48:19.87,中文,,0,0,0,,我只得到一个数字。
Dialogue: 0,0:48:19.87,0:48:21.69,英文,,0,0,0,,430 rows came back.
Dialogue: 0,0:48:19.87,0:48:21.69,中文,,0,0,0,,返回了 430 行。
Dialogue: 0,0:48:21.69,0:48:22.75,英文,,0,0,0,,So that's pretty good.
Dialogue: 0,0:48:21.69,0:48:22.75,中文,,0,0,0,,这还不错。
Dialogue: 0,0:48:22.75,0:48:24.59,英文,,0,0,0,,I now know how much data is in there.
Dialogue: 0,0:48:22.75,0:48:24.59,中文,,0,0,0,,现在我知道里面有多少数据了。
Dialogue: 0,0:48:24.59,0:48:26.25,英文,,0,0,0,,Well, what languages were in there?
Dialogue: 0,0:48:24.59,0:48:26.25,中文,,0,0,0,,里面有哪些语言呢？
Dialogue: 0,0:48:26.25,0:48:32.20,英文,,0,0,0,,Well, I could do select language from favorites, just as before, but that's not thatuseful,\Nespecially if I'm inheriting the data.
Dialogue: 0,0:48:26.25,0:48:32.20,中文,,0,0,0,,我可以像之前那样，使用 `SELECT language FROM favorites` 命令，但这没什么用，尤其是在我继承数据的情况下。
Dialogue: 0,0:48:32.20,0:48:36.68,英文,,0,0,0,,Like I'm the analyst who's been handed a data set by my bossand they want me to crunch some numbers.
Dialogue: 0,0:48:32.20,0:48:36.68,中文,,0,0,0,,比如我是一个分析师，老板交给我一个数据集，让我分析一些数据。
Dialogue: 0,0:48:36.68,0:48:56.85,英文,,0,0,0,,OK, I could load this into Excel.I could sort it.But you can use SQL now to answer pretty basic questions too.If you want to select the distinct languages in the data set because you weren't privy to the Google Form, let me go ahead and select only the distinct languages from the favorites table.
Dialogue: 0,0:48:36.68,0:48:56.85,中文,,0,0,0,,我可以把它加载到 Excel 中，然后排序。但你现在也可以使用 SQL 来回答一些基本问题。\N如果你想选择数据集中不同的语言，因为你没有 Google 表单的权限，那么让我继续，只从 favorites 表中选择不同的语言。
Dialogue: 0,0:48:56.85,0:49:02.32,英文,,0,0,0,,And now I hit Enter, and I get back a much more succinct answer, just the three languages in question.
Dialogue: 0,0:48:56.85,0:49:02.32,中文,,0,0,0,,现在我按下回车键，得到一个更简洁的答案，就是这三种语言。
Dialogue: 0,0:49:02.32,0:49:12.26,英文,,0,0,0,,Not really that useful since I created the Google form, but certainly if you're inheriting data from someone else, you've just downloaded a data set, at least now I'm arguably wrapping my mind around what's going on.
Dialogue: 0,0:49:02.32,0:49:12.26,中文,,0,0,0,,因为是我创建的 Google 表单，所以这对我来说没什么用，\N但如果你从别人那里继承了数据，或者下载了一个数据集，那么至少现在我可以理解发生了什么。
Dialogue: 0,0:49:12.26,0:49:16.50,英文,,0,0,0,,Now, this is not necessary for such a small data set, but I can combine these things.
Dialogue: 0,0:49:12.26,0:49:16.50,中文,,0,0,0,,对于这么小的数据集来说，这不是必须的，但我可以把这些东西结合起来。
Dialogue: 0,0:49:16.50,0:49:25.32,英文,,0,0,0,,Select the count of the distinct languages in this data set called favorites, and now I should get back what answer?
Dialogue: 0,0:49:16.50,0:49:25.32,中文,,0,0,0,,选择名为 favorites 的数据集中不同语言的数量，现在我应该得到什么答案？
Dialogue: 0,0:49:25.32,0:49:27.50,英文,,0,0,0,,So hopefully, indeed, an answer called 3.
Dialogue: 0,0:49:25.32,0:49:27.50,中文,,0,0,0,,希望答案是 3。
Dialogue: 0,0:49:27.50,0:49:32.16,英文,,0,0,0,,And what you're getting back notice, aesthetically, too, is like a mini temporary table.
Dialogue: 0,0:49:27.50,0:49:32.16,中文,,0,0,0,,你会注意到，从外观上看，你得到的是一个迷你临时表。
Dialogue: 0,0:49:32.16,0:49:43.47,英文,,0,0,0,,When I asked for just the distinct languages, what SQL hands me back is this temporary table in memory that has one column called language and then three rows.
Dialogue: 0,0:49:32.16,0:49:43.47,中文,,0,0,0,,当我要求只查询不同的语言时，SQL 返回给我的是一个临时的内存表，它只有一列叫做 language，然后是三行。
Dialogue: 0,0:49:43.47,0:49:45.15,英文,,0,0,0,,Now, this is not saved anywhere.
Dialogue: 0,0:49:43.47,0:49:45.15,中文,,0,0,0,,现在，这个表没有被保存在任何地方。
Dialogue: 0,0:49:45.15,0:49:47.59,英文,,0,0,0,,It's just executed ephemerally like this.
Dialogue: 0,0:49:45.15,0:49:47.59,中文,,0,0,0,,它只是像这样短暂地执行了一下。
Dialogue: 0,0:49:47.59,0:49:49.59,英文,,0,0,0,,But that's why it's depicted in this way.
Dialogue: 0,0:49:47.59,0:49:49.59,中文,,0,0,0,,但这就是它以这种方式被描述的原因。
Dialogue: 0,0:49:49.59,0:49:54.59,英文,,0,0,0,,What you're getting is subsets of your data, smaller tables containing some of your data.
Dialogue: 0,0:49:49.59,0:49:54.59,中文,,0,0,0,,你得到的是数据的子集，包含部分数据的较小的表。
Dialogue: 0,0:49:54.59,0:49:58.46,英文,,0,0,0,,And same thing down here. This is like a crazy long column name.
Dialogue: 0,0:49:54.59,0:49:58.46,中文,,0,0,0,,下面也是一样。这就像一个超长的列名。
Dialogue: 0,0:49:58.46,0:50:00.58,英文,,0,0,0,,You can rename it if you really want.
Dialogue: 0,0:49:58.46,0:50:00.58,中文,,0,0,0,,如果你真的想，你可以重命名它。
Dialogue: 0,0:50:00.58,0:50:02.90,英文,,0,0,0,,But that's all we're seeing there.
Dialogue: 0,0:50:00.58,0:50:02.90,中文,,0,0,0,,但这就是我们在那裡看到的所有内容。
Dialogue: 0,0:50:02.90,0:50:07.34,英文,,0,0,0,,And in fact, if that's a little ugly, we can actually alias these things.
Dialogue: 0,0:50:02.90,0:50:07.34,中文,,0,0,0,,事实上，如果这看起来有点丑陋，我们实际上可以给这些东西起别名。
Dialogue: 0,0:50:07.34,0:50:11.99,英文,,0,0,0,,n is a common name for a variable, a number, in any programming language.
Dialogue: 0,0:50:07.34,0:50:11.99,中文,,0,0,0,,n 在任何编程语言中都是变量、数字的常用名称。
Dialogue: 0,0:50:11.99,0:50:16.35,英文,,0,0,0,,So I can actually alias this to be a column called n. Hit Enter.
Dialogue: 0,0:50:11.99,0:50:16.35,中文,,0,0,0,,所以我实际上可以给它起个别名叫 n。按下回车键。
Dialogue: 0,0:50:16.35,0:50:23.31,英文,,0,0,0,,And now I'm getting a tiny, tiny table whose column is called n that just has the one value there.
Dialogue: 0,0:50:16.35,0:50:23.31,中文,,0,0,0,,现在我得到了一个非常小的表，它的列名为 n，其中只有一个值。
Dialogue: 0,0:50:23.31,0:50:31.40,英文,,0,0,0,,All right, questions on the application of these functions here?
Dialogue: 0,0:50:23.31,0:50:31.40,中文,,0,0,0,,关于这些函数的应用，大家还有什么问题吗？
Dialogue: 0,0:50:31.40,0:50:32.04,英文,,0,0,0,,No?
Dialogue: 0,0:50:31.40,0:50:32.04,中文,,0,0,0,,没有？
Dialogue: 0,0:50:32.04,0:50:35.10,英文,,0,0,0,,Questions, yeah?
Dialogue: 0,0:50:32.04,0:50:35.10,中文,,0,0,0,,有问题，是吗？
Dialogue: 0,0:50:35.10,0:50:37.34,英文,,0,0,0,,Say it a little louder.
Dialogue: 0,0:50:35.10,0:50:37.34,中文,,0,0,0,,大声点说。
Dialogue: 0,0:50:37.34,0:50:39.36,英文,,0,0,0,,Oh, A-S, as, literally in English.
Dialogue: 0,0:50:37.34,0:50:39.36,中文,,0,0,0,,A-S，as，字面意思就是英语中的“作为”。
Dialogue: 0,0:50:39.36,0:50:42.72,英文,,0,0,0,,So rename this column as this.
Dialogue: 0,0:50:39.36,0:50:42.72,中文,,0,0,0,,所以把这一列重命名为这个。
Dialogue: 0,0:50:42.72,0:50:45.42,英文,,0,0,0,,Technically, it creates an alias for the column.
Dialogue: 0,0:50:42.72,0:50:45.42,中文,,0,0,0,,从技术上讲，它是为该列创建了一个别名。
Dialogue: 0,0:50:45.42,0:50:50.26,英文,,0,0,0,,So that's all. Yeah?
Dialogue: 0,0:50:45.42,0:50:50.26,中文,,0,0,0,,就是这样。明白了吗？
Dialogue: 0,0:50:50.26,0:50:50.82,英文,,0,0,0,,Exactly.
Dialogue: 0,0:50:50.26,0:50:50.82,中文,,0,0,0,,没错。
Dialogue: 0,0:50:50.82,0:50:57.52,英文,,0,0,0,,Distinct will operate on whatever you handed in parentheses and get rid of all of the duplicates, giving you back just the uniques.
Dialogue: 0,0:50:50.82,0:50:57.52,中文,,0,0,0,,DISTINCT 会对括号里的内容进行操作，去除所有重复项，只返回唯一值。
Dialogue: 0,0:50:57.52,0:50:58.46,英文,,0,0,0,,Correct.
Dialogue: 0,0:50:57.52,0:50:58.46,中文,,0,0,0,,对的。
Dialogue: 0,0:50:58.46,0:50:59.82,英文,,0,0,0,,Other questions here? Yeah?
Dialogue: 0,0:50:58.46,0:50:59.82,中文,,0,0,0,,还有其他问题吗？有吗？
Dialogue: 0,0:51:07.42,0:51:12.26,英文,,0,0,0,,Good question, when you define an alias like n, which I just did, does it become like a variable you can reuse?
Dialogue: 0,0:51:07.42,0:51:12.26,中文,,0,0,0,,问得好，当你像我刚才那样定义了一个别名 n 时，它会像变量一样可以重复使用吗？
Dialogue: 0,0:51:12.26,0:51:14.14,英文,,0,0,0,,Short answer, no, in this case.
Dialogue: 0,0:51:12.26,0:51:14.14,中文,,0,0,0,,简单来说，在这种情况下，不行。
Dialogue: 0,0:51:14.14,0:51:16.74,英文,,0,0,0,,But you can reuse it within your same query.
Dialogue: 0,0:51:14.14,0:51:16.74,中文,,0,0,0,,但你可以在同一个查询中重复使用它。
Dialogue: 0,0:51:16.74,0:51:27.44,英文,,0,0,0,,Even though these queries are getting a little longer, admittedly, statements that they are, you can actually reuse n in even longer queries, so later in your query.
Dialogue: 0,0:51:16.74,0:51:27.44,中文,,0,0,0,,尽管这些查询语句越来越长，但你实际上可以在更长的查询中，甚至在查询的后面部分重复使用 n。
Dialogue: 0,0:51:27.44,0:51:30.40,英文,,0,0,0,,And we'll see a few that are going to start to grow in length.
Dialogue: 0,0:51:27.44,0:51:30.40,中文,,0,0,0,,我们还会看到一些长度开始增加的查询语句。
Dialogue: 0,0:51:30.40,0:51:35.51,英文,,0,0,0,,So it's a nice way of nicknaming things just to be a little more terse in your query.
Dialogue: 0,0:51:30.40,0:51:35.51,中文,,0,0,0,,这是一个很好的方法，可以给事物起个昵称，让查询语句更简洁。
Dialogue: 0,0:51:35.51,0:51:42.67,英文,,0,0,0,,So we can transition to some of these more sophisticated queries, because it turns out there's some other techniques we can introduce as well.
Dialogue: 0,0:51:35.51,0:51:42.67,中文,,0,0,0,,我们可以过渡到一些更复杂的查询，因为事实证明，我们还可以介绍一些其他技术。
Dialogue: 0,0:51:42.67,0:51:44.67,英文,,0,0,0,,Here are some other keywords in SQL.
Dialogue: 0,0:51:42.67,0:51:44.67,中文,,0,0,0,,以下是 SQL 中的一些其他关键字。
Dialogue: 0,0:51:44.67,0:51:51.65,英文,,0,0,0,,And again, even though this is another list of things, there's only four things fundamentally we're doing, creating, reading, updating, and deleting data.
Dialogue: 0,0:51:44.67,0:51:51.65,中文,,0,0,0,,再说一次，即使这是另一份清单，我们从根本上来说只做了四件事：创建、读取、更新和删除数据。
Dialogue: 0,0:51:51.65,0:51:55.78,英文,,0,0,0,,These are just allowing us to fine-tune how we do it exactly.
Dialogue: 0,0:51:51.65,0:51:55.78,中文,,0,0,0,,这些只是让我们可以微调具体的操作方式。
Dialogue: 0,0:51:55.78,0:52:06.26,英文,,0,0,0,,So where is going to allow us to filter data, as we'll do in just a moment, like select data where this Conditional is true. Like is going to be an alternative to an equal sign.
Dialogue: 0,0:51:55.78,0:52:06.26,中文,,0,0,0,,WHERE 将允许我们过滤数据，就像我们稍后将要做的，比如选择满足此条件的数据。LIKE 是等号的替代方案。
Dialogue: 0,0:52:06.26,0:52:13.83,英文,,0,0,0,,So instead of looking for exactly Scratch, or exactly Python, or exactly C, you can look for something like dot, dot, dot.
Dialogue: 0,0:52:06.26,0:52:13.83,中文,,0,0,0,,与其查找完全匹配 Scratch、Python 或 C，不如查找类似 ... 的内容。
Dialogue: 0,0:52:13.83,0:52:18.11,英文,,0,0,0,,And it can be a little bit of a fuzzier match, if you will, with other characters as well.
Dialogue: 0,0:52:13.83,0:52:18.11,中文,,0,0,0,,如果愿意，它可以与其他字符进行模糊匹配。
Dialogue: 0,0:52:18.11,0:52:19.95,英文,,0,0,0,,Order by is going to deal with sorting.
Dialogue: 0,0:52:18.11,0:52:19.95,中文,,0,0,0,,ORDER BY 用于排序。
Dialogue: 0,0:52:19.95,0:52:25.68,英文,,0,0,0,,Limit is going to just let me limit the total number of rows that come back to 1, or 10, or finite.
Dialogue: 0,0:52:19.95,0:52:25.68,中文,,0,0,0,,LIMIT 用于限制返回的行数，可以是 1、10 或有限的数字。
Dialogue: 0,0:52:25.68,0:52:29.90,英文,,0,0,0,,If I don't want to see all 400 plus rows all at once, because I'm just trying to wrap my mind around it.
Dialogue: 0,0:52:25.68,0:52:29.90,中文,,0,0,0,,如果我不想一次看到所有 400 多行，因为我只是想弄明白它。
Dialogue: 0,0:52:29.90,0:52:32.20,英文,,0,0,0,,And group by is best shown by example.
Dialogue: 0,0:52:29.90,0:52:32.20,中文,,0,0,0,,GROUP BY 最好还是用例子说明。
Dialogue: 0,0:52:32.20,0:52:34.19,英文,,0,0,0,,So let's play with just a couple of these as well.
Dialogue: 0,0:52:32.20,0:52:34.19,中文,,0,0,0,,让我们来试试这些例子。
Dialogue: 0,0:52:34.19,0:52:36.19,英文,,0,0,0,,Let me go back to BS Code here.
Dialogue: 0,0:52:34.19,0:52:36.19,中文,,0,0,0,,让我回到 VS Code。
Dialogue: 0,0:52:36.19,0:52:37.05,英文,,0,0,0,,I'll clear my screen.
Dialogue: 0,0:52:36.19,0:52:37.05,中文,,0,0,0,,我清除一下屏幕。
Dialogue: 0,0:52:37.05,0:52:39.67,英文,,0,0,0,,I'm still in the same SQLite instance.
Dialogue: 0,0:52:37.05,0:52:39.67,中文,,0,0,0,,我还在同一个 sqlite 实例中。
Dialogue: 0,0:52:39.67,0:52:43.95,英文,,0,0,0,,And let's count how many of you liked C without writing Python code as before.
Dialogue: 0,0:52:39.67,0:52:43.95,中文,,0,0,0,,让我们计算一下有多少人喜欢 C 语言，这次不用像之前那样写 Python 代码。
Dialogue: 0,0:52:43.95,0:52:48.24,英文,,0,0,0,,So let me go ahead and select the count of the rows
Dialogue: 0,0:52:43.95,0:52:48.24,中文,,0,0,0,,我先选择计算行的数量
Dialogue: 0,0:52:48.24,0:53:06.81,英文,,0,0,0,,From favorites, where the language in each row equals C. And the convention in SQLite is to use single quotes any time you're surrounding a string that's meant to represent a literal piece of text, as opposed to C, which was double quotes, or Python, which was either.
Dialogue: 0,0:52:48.24,0:53:06.81,中文,,0,0,0,,来自 favorites 表格，其中每一行的 language 等于 C。\Nsqlite 的惯例是在表示一段文本字符串时使用单引号，而 C 语言使用双引号，Python 则两者都可以。
Dialogue: 0,0:53:06.81,0:53:13.21,英文,,0,0,0,,So this is selecting the count of rows from favorites table where the language in question is C.
Dialogue: 0,0:53:06.81,0:53:13.21,中文,,0,0,0,,这将选择 favorites 表中 language 为 C 的行的数量。
Dialogue: 0,0:53:13.21,0:53:15.59,英文,,0,0,0,,Enter, and this gives me 98.
Dialogue: 0,0:53:13.21,0:53:15.59,中文,,0,0,0,,输入，结果是 98。
Dialogue: 0,0:53:15.59,0:53:23.78,英文,,0,0,0,,Notice, though, if I omit that predicate like we did before, you'll get back the total number of rows that were in the table.
Dialogue: 0,0:53:15.59,0:53:23.78,中文,,0,0,0,,注意，如果像之前那样省略谓词，将会返回表中的总行数。
Dialogue: 0,0:53:23.78,0:53:31.24,英文,,0,0,0,,So where is what's called a predicate that just allows me to filter things, just like an if condition or the like in a language that we've seen before.
Dialogue: 0,0:53:23.78,0:53:31.24,中文,,0,0,0,,所以 WHERE 就是所谓的谓词，它允许我们过滤数据，就像我们在之前见过的语言中的 if 条件一样。
Dialogue: 0,0:53:31.24,0:53:38.83,英文,,0,0,0,,You can be a little more specific, like how many people really liked C and the Mario problem specifically?
Dialogue: 0,0:53:31.24,0:53:38.83,中文,,0,0,0,,你可以更具体一些，比如有多少人真正喜欢 C 语言，特别是 Mario 问题？
Dialogue: 0,0:53:38.83,0:53:40.43,英文,,0,0,0,,Well, let's do this.
Dialogue: 0,0:53:38.83,0:53:40.43,中文,,0,0,0,,让我们试试看。
Dialogue: 0,0:53:40.43,0:53:57.83,英文,,0,0,0,,Let's go ahead and do select the number of rows from the favorites table where the language is C and, so it's still literally the word ands and or, just like in Python, but not like in C, and problem equals Mario.
Dialogue: 0,0:53:40.43,0:53:57.83,中文,,0,0,0,,让我们继续，从 favorites 表中选择行的数量，其中 language 是 C，\N并且，它实际上仍然是 and 和 or 这样的词，就像在 Python 中一样，但不像在 C 语言中，然后 problem 等于 Mario。
Dialogue: 0,0:53:57.83,0:54:05.75,英文,,0,0,0,,So let's see if there's any fans of both C And the Mario problem, and three of us, really, like those two things together in this case.
Dialogue: 0,0:53:57.83,0:54:05.75,中文,,0,0,0,,让我们看看有没有人同时喜欢 C 语言和 Mario 问题，结果是三个人，真的，喜欢这两样东西的组合。
Dialogue: 0,0:54:05.75,0:54:06.82,英文,,0,0,0,,All right, what else can we do?
Dialogue: 0,0:54:05.75,0:54:06.82,中文,,0,0,0,,我们还能做什么？
Dialogue: 0,0:54:06.82,0:54:13.66,英文,,0,0,0,,Well, more compelling might be to see, kind of like in Python, for each language, what was the popularity thereof?
Dialogue: 0,0:54:06.82,0:54:13.66,中文,,0,0,0,,更引人注目的是，像 Python 中那样，查看每种语言的流行程度。
Dialogue: 0,0:54:13.66,0:54:21.18,英文,,0,0,0,,And at the moment, we don't really have a way of doing that, except in Python, where we had the loop, and we had those variables with the dictionary that did all of that counting for us.
Dialogue: 0,0:54:13.66,0:54:21.18,中文,,0,0,0,,目前，我们还没有办法做到这一点，除非使用 Python，我们有循环，有那些带有字典的变量来为我们进行计数。
Dialogue: 0,0:54:21.18,0:54:24.70,英文,,0,0,0,,You know, totally doable, but tedious, especially if your job is to analyze data.
Dialogue: 0,0:54:21.18,0:54:24.70,中文,,0,0,0,,可以做到，但很乏味，尤其是当你需要分析数据的时候。
Dialogue: 0,0:54:24.70,0:54:29.65,英文,,0,0,0,,My god, like, even writing 15 lines of code to answer simple questions is kind of ridiculous.
Dialogue: 0,0:54:24.70,0:54:29.65,中文,,0,0,0,,天哪，就为了回答这么简单的问题，写 15 行代码也太夸张了吧？
Dialogue: 0,0:54:29.65,0:54:31.67,英文,,0,0,0,,SQL can do better for us.
Dialogue: 0,0:54:29.65,0:54:31.67,中文,,0,0,0,,SQL 可以帮我们做得更好。
Dialogue: 0,0:54:31.67,0:54:33.64,英文,,0,0,0,,So let me go ahead and do this.
Dialogue: 0,0:54:31.67,0:54:33.64,中文,,0,0,0,,我来演示一下。
Dialogue: 0,0:54:33.64,0:54:37.28,英文,,0,0,0,,Let me go ahead and select every language.
Dialogue: 0,0:54:33.64,0:54:37.28,中文,,0,0,0,,我要选择所有语言，
Dialogue: 0,0:54:37.28,0:54:45.84,英文,,0,0,0,,And the count thereof from the favorites table, but this time, group by language.
Dialogue: 0,0:54:37.28,0:54:45.84,中文,,0,0,0,,并从 `favorites` 表中统计每种语言出现的次数，但这次要按语言分组。
Dialogue: 0,0:54:45.84,0:54:52.65,英文,,0,0,0,,So this was another one of the keywords that we can use in this abbreviated list of extra features of SQL.
Dialogue: 0,0:54:45.84,0:54:52.65,中文,,0,0,0,,`GROUP BY` 是 SQL 额外功能的简短列表中，我们可以使用的另一个关键词。
Dialogue: 0,0:54:52.65,0:54:55.77,英文,,0,0,0,,And this one's a little, takes a moment to wrap your mind around.
Dialogue: 0,0:54:52.65,0:54:55.77,中文,,0,0,0,,这个关键词需要花点时间才能理解。
Dialogue: 0,0:54:55.77,0:55:01.23,英文,,0,0,0,,But this is going to give me a two-column temporary table, where the first column is a language.
Dialogue: 0,0:54:55.77,0:55:01.23,中文,,0,0,0,,但这将返回一个包含两列的临时表，第一列是语言，
Dialogue: 0,0:55:01.23,0:55:05.56,英文,,0,0,0,,And the second column is the count thereof from this data set.
Dialogue: 0,0:55:01.23,0:55:05.56,中文,,0,0,0,,第二列是从这个数据集中统计出来的次数。
Dialogue: 0,0:55:05.56,0:55:12.32,英文,,0,0,0,,And group by language just means that only show me Scratch once, only show me C once, only show me Python once.
Dialogue: 0,0:55:05.56,0:55:12.32,中文,,0,0,0,,`GROUP BY language` 意思是只显示一次 Scratch，只显示一次 C，只显示一次 Python。
Dialogue: 0,0:55:12.32,0:55:19.42,英文,,0,0,0,,That is, group all of the identical values together, but keep track of how many of them there are.
Dialogue: 0,0:55:12.32,0:55:19.42,中文,,0,0,0,,也就是说，将所有相同的值分组在一起，但要记录它们出现的次数。
Dialogue: 0,0:55:19.42,0:55:24.78,英文,,0,0,0,,And so now, if I go over to SQLite, and I hit Enter.
Dialogue: 0,0:55:19.42,0:55:24.78,中文,,0,0,0,,现在，如果我转到 sqlite，按下回车键，
Dialogue: 0,0:55:24.78,0:55:32.29,英文,,0,0,0,,Now I have, in SQL version, the exact same output that I had from Python that took me, what, 15-plus lines before.
Dialogue: 0,0:55:24.78,0:55:32.29,中文,,0,0,0,,我就能在 SQL 版本中，得到与之前 Python 代码完全相同的输出，而 Python 代码花了不止 15 行。
Dialogue: 0,0:55:32.29,0:55:41.59,英文,,0,0,0,,Now we're down to just one, because SQL, structured query language, is all about constructing queries like this to answer questions and get back answers.
Dialogue: 0,0:55:32.29,0:55:41.59,中文,,0,0,0,,现在我们只需要一行代码，因为结构化查询语言 SQL，就是用来构建像这样的查询来回答问题并获得答案的。
Dialogue: 0,0:55:41.59,0:55:45.03,英文,,0,0,0,,If we want to clean this up a little bit, you asked earlier about sorting order.
Dialogue: 0,0:55:41.59,0:55:45.03,中文,,0,0,0,,如果想让结果更清晰一点，你之前问过排序的问题。
Dialogue: 0,0:55:45.03,0:55:48.97,英文,,0,0,0,,Well, we can do that, too. There's another key phrase we can use here.
Dialogue: 0,0:55:45.03,0:55:48.97,中文,,0,0,0,,我们也可以做到。这里可以使用另一个关键词。
Dialogue: 0,0:55:48.97,0:55:55.02,英文,,0,0,0,,We can order by the count of those rows and then run that query here.
Dialogue: 0,0:55:48.97,0:55:55.02,中文,,0,0,0,,我们可以使用 `ORDER BY` 按这些行的数量排序，然后运行查询。
Dialogue: 0,0:55:55.02,0:55:58.80,英文,,0,0,0,,So now, unfortunately, they're from smallest to biggest, but we can reverse that.
Dialogue: 0,0:55:55.02,0:55:58.80,中文,,0,0,0,,现在结果是从最小到最大的顺序，但我们可以反过来。
Dialogue: 0,0:55:58.80,0:56:00.98,英文,,0,0,0,,It turns out, and my query is starting to wrap here.
Dialogue: 0,0:55:58.80,0:56:00.98,中文,,0,0,0,,事实证明，我的查询语句要超出屏幕了。
Dialogue: 0,0:56:00.98,0:56:02.56,英文,,0,0,0,,I'll zoom out for a moment.
Dialogue: 0,0:56:00.98,0:56:02.56,中文,,0,0,0,,我缩小一下。
Dialogue: 0,0:56:02.56,0:56:08.71,英文,,0,0,0,,If you want to order by count, the default is in ascending order, abbreviated A-S-C.
Dialogue: 0,0:56:02.56,0:56:08.71,中文,,0,0,0,,如果要按计数排序，默认是升序，缩写为 A-S-C。
Dialogue: 0,0:56:08.71,0:56:16.37,英文,,0,0,0,,If you want to reverse the sort in SQL, instead of using reverse equals true like we did in Python, you say D-E-S-C for descending order.
Dialogue: 0,0:56:08.71,0:56:16.37,中文,,0,0,0,,如果要在 SQL 中反转排序，不同于在 Python 中使用 `reverse equals true`，你要用 D-E-S-C 表示降序。
Dialogue: 0,0:56:16.37,0:56:19.63,英文,,0,0,0,,And now we get almost the same output, but Flipped in reverse.
Dialogue: 0,0:56:16.37,0:56:19.63,中文,,0,0,0,,现在我们得到了几乎相同的输出，但是反过来了。
Dialogue: 0,0:56:19.63,0:56:24.78,英文,,0,0,0,,So it's just a lot faster to answer questions once, of course, you get some muscle memory and some comfort with it.
Dialogue: 0,0:56:19.63,0:56:24.78,中文,,0,0,0,,一旦你建立了一些肌肉记忆并对其感到舒适，回答问题就快多了。
Dialogue: 0,0:56:24.78,0:56:25.94,英文,,0,0,0,,Well, what else can I do?
Dialogue: 0,0:56:24.78,0:56:25.94,中文,,0,0,0,,还有什么可以做的？
Dialogue: 0,0:56:25.94,0:56:29.00,英文,,0,0,0,,You know, what if I just care about the most popular language?
Dialogue: 0,0:56:25.94,0:56:29.00,中文,,0,0,0,,如果我只关心最流行的语言呢？
Dialogue: 0,0:56:29.00,0:56:32.60,英文,,0,0,0,,I don't care about the second place or the third place languages or anything else.
Dialogue: 0,0:56:29.00,0:56:32.60,中文,,0,0,0,,我不关心第二名、第三名或其他任何语言。
Dialogue: 0,0:56:32.60,0:56:35.00,英文,,0,0,0,,Well, let me add one more clause here.
Dialogue: 0,0:56:32.60,0:56:35.00,中文,,0,0,0,,让我再加一个子句。
Dialogue: 0,0:56:35.00,0:56:36.88,英文,,0,0,0,,Limit the answer to one.
Dialogue: 0,0:56:35.00,0:56:36.88,中文,,0,0,0,,将答案限制为一个。
Dialogue: 0,0:56:36.88,0:56:48.00,英文,,0,0,0,,And no matter how many rows should come back now, I just get the number one language as of the data set we collected with 270 votes for it.
Dialogue: 0,0:56:36.88,0:56:48.00,中文,,0,0,0,,现在无论应该返回多少行，我都只得到在我们收集的数据集中排名第一的语言，它获得了 270 票。
Dialogue: 0,0:56:48.00,0:56:52.06,英文,,0,0,0,,Questions on this?
Dialogue: 0,0:56:48.00,0:56:52.06,中文,,0,0,0,,对此有疑问吗？
Dialogue: 0,0:56:52.06,0:56:55.42,英文,,0,0,0,,Any questions here?
Dialogue: 0,0:56:52.06,0:56:55.42,中文,,0,0,0,,这里有任何问题吗？
Dialogue: 0,0:56:55.42,0:56:55.82,英文,,0,0,0,,No?
Dialogue: 0,0:56:55.42,0:56:55.82,中文,,0,0,0,,没有？
Dialogue: 0,0:56:55.82,0:57:02.25,英文,,0,0,0,,Well, what if we're starting to introduce SQL, and it was kind of too late to make it into the Google form.
Dialogue: 0,0:56:55.82,0:57:02.25,中文,,0,0,0,,如果我们开始介绍 SQL，而现在将其加入 Google 表单已经太晚了，该怎么办？
Dialogue: 0,0:57:02.25,0:57:04.33,英文,,0,0,0,,So it turns out there's syntax for this, too.
Dialogue: 0,0:57:02.25,0:57:04.33,中文,,0,0,0,,事实证明，这也有语法。
Dialogue: 0,0:57:04.33,0:57:07.57,英文,,0,0,0,,You can create data, of course, not just the tables, but the data they're in.
Dialogue: 0,0:57:04.33,0:57:07.57,中文,,0,0,0,,当然，你可以创建数据，不仅是表，还有表中的数据。
Dialogue: 0,0:57:07.57,0:57:11.69,英文,,0,0,0,,And here's the typical syntax for inserting data into a SQL database.
Dialogue: 0,0:57:07.57,0:57:11.69,中文,,0,0,0,,以下是将数据插入 SQL 数据库的典型语法。
Dialogue: 0,0:57:11.69,0:57:15.03,英文,,0,0,0,,You literally say, insert into the name of the table.
Dialogue: 0,0:57:11.69,0:57:15.03,中文,,0,0,0,,你直接说，插入到表名中。
Dialogue: 0,0:57:15.03,0:57:20.94,英文,,0,0,0,,And then in parentheses, you specify one or more columns for which you have values that you want to insert.
Dialogue: 0,0:57:15.03,0:57:20.94,中文,,0,0,0,,然后在括号中，指定一个或多个列，你要为其插入值。
Dialogue: 0,0:57:20.94,0:57:25.66,英文,,0,0,0,,This is to say, you don't have to give values for every column in the given row.
Dialogue: 0,0:57:20.94,0:57:25.66,中文,,0,0,0,,也就是说，你不必为给定行中的每一列都提供值。
Dialogue: 0,0:57:25.66,0:57:30.08,英文,,0,0,0,,If you only have answers to some of those questions, you can enumerate them here like this.
Dialogue: 0,0:57:25.66,0:57:30.08,中文,,0,0,0,,如果你只知道其中一部分问题的答案，可以像这样在这里枚举它们。
Dialogue: 0,0:57:30.08,0:57:32.06,英文,,0,0,0,,But the values you insert are going to be these.
Dialogue: 0,0:57:30.08,0:57:32.06,中文,,0,0,0,,但你要插入的值是这些。
Dialogue: 0,0:57:32.06,0:57:35.58,英文,,0,0,0,,So you literally say, after the closed parenthesis, values.
Dialogue: 0,0:57:32.06,0:57:35.58,中文,,0,0,0,,所以你要在右括号后面写上 values。
Dialogue: 0,0:57:35.58,0:57:42.31,英文,,0,0,0,,And then in a second set of parentheses, with the same length comma separated list, you specify what values do you want to insert.
Dialogue: 0,0:57:35.58,0:57:42.31,中文,,0,0,0,,然后在第二对括号中，用相同长度的逗号分隔列表，指定要插入的值。
Dialogue: 0,0:57:42.31,0:57:43.89,英文,,0,0,0,,So it's a little verbose.
Dialogue: 0,0:57:42.31,0:57:43.89,中文,,0,0,0,,所以这有点冗长。
Dialogue: 0,0:57:43.89,0:57:48.59,英文,,0,0,0,,And frankly, longer term, you're going to use Python code to automatically do these kinds of insertions.
Dialogue: 0,0:57:43.89,0:57:48.59,中文,,0,0,0,,坦白说，从长远来看，你会用 Python 代码来自动完成这类插入操作。
Dialogue: 0,0:57:48.59,0:57:50.22,英文,,0,0,0,,But let's go ahead and try this.
Dialogue: 0,0:57:48.59,0:57:50.22,中文,,0,0,0,,但我们继续试试这个。
Dialogue: 0,0:57:50.22,0:57:58.12,英文,,0,0,0,,Right now, if I do select distinct language from favorites again,
Dialogue: 0,0:57:50.22,0:57:58.12,中文,,0,0,0,,现在，如果我再次执行 `SELECT DISTINCT language FROM favorites`，
Dialogue: 0,0:57:58.12,0:58:00.00,英文,,0,0,0,,We see this, just these three candidates.
Dialogue: 0,0:57:58.12,0:58:00.00,中文,,0,0,0,,我们会看到这个，只有这三个候选项。
Dialogue: 0,0:58:00.00,0:58:09.55,英文,,0,0,0,,But we've now taught you a bit of SQL, so let's do Insert, Into, Favorites, the column called Language.
Dialogue: 0,0:58:00.00,0:58:09.55,中文,,0,0,0,,但我们现在已经教你了一些 SQL 知识，所以让我们执行 `INSERT INTO favorites`，列名为 `language`。
Dialogue: 0,0:58:09.55,0:58:10.23,英文,,0,0,0,,And you know what?
Dialogue: 0,0:58:09.55,0:58:10.23,中文,,0,0,0,,你知道吗？
Dialogue: 0,0:58:10.23,0:58:12.23,英文,,0,0,0,,I'm going to give a problem here.
Dialogue: 0,0:58:10.23,0:58:12.23,中文,,0,0,0,,我要在这里出一道题。
Dialogue: 0,0:58:12.23,0:58:17.96,英文,,0,0,0,,The values for which, and let me zoom back out, are going to be quote, unquote, SQL and quote, unquote, 50-ville.
Dialogue: 0,0:58:12.23,0:58:17.96,中文,,0,0,0,,它的值，让我缩小一点，将是 "SQL" 和 "50-ville"。
Dialogue: 0,0:58:17.96,0:58:21.44,英文,,0,0,0,,You'll soon see what that's all about, semicolon.
Dialogue: 0,0:58:17.96,0:58:21.44,中文,,0,0,0,,你很快就会明白这是什么意思了，分号。
Dialogue: 0,0:58:21.44,0:58:24.62,英文,,0,0,0,,Nothing seems to happen, but that's usually a good thing.
Dialogue: 0,0:58:21.44,0:58:24.62,中文,,0,0,0,,似乎什么也没发生，但这通常是件好事。
Dialogue: 0,0:58:24.62,0:58:31.03,英文,,0,0,0,,And now if I scroll back up in my queries, in SQLite 3, you can scroll back and forth in time to avoid retyping things.
Dialogue: 0,0:58:24.62,0:58:31.03,中文,,0,0,0,,现在，如果我在 sqlite 3 的查询中向上滚动，你可以在时间上前后滚动以避免重新输入内容。
Dialogue: 0,0:58:31.03,0:58:35.53,英文,,0,0,0,,Now I should see, indeed, four candidate languages here.
Dialogue: 0,0:58:31.03,0:58:35.53,中文,,0,0,0,,现在我应该能看到，这里确实有四种候选语言。
Dialogue: 0,0:58:35.53,0:58:43.20,英文,,0,0,0,,Now suppose that you were never really a fan of C, and maybe you programmed a little bit in high school or in the real world, and you liked C++.
Dialogue: 0,0:58:35.53,0:58:43.20,中文,,0,0,0,,假设你从来都不是 C 语言的粉丝，也许你在高中或现实世界中编写过一些代码，你喜欢 C++。
Dialogue: 0,0:58:43.20,0:58:45.78,英文,,0,0,0,,Well, there's a whole lot of answers.
Dialogue: 0,0:58:43.20,0:58:45.78,中文,,0,0,0,,有很多答案。
Dialogue: 0,0:58:45.78,0:59:01.71,英文,,0,0,0,,For C, so select star from favorites where language equals, quote unquote, C. So here's everyone who submitted the answer for C. Let's presume that, no, they didn't really want C. They wanted C++, which is not a language we teach in the class.
Dialogue: 0,0:58:45.78,0:59:01.71,中文,,0,0,0,,对于 C 语言，执行 `SELECT * FROM favorites WHERE language equals` "C"。\N这就是所有提交 C 语言答案的人。假设他们并不真的想要 C 语言，他们想要的是 C++，而这门语言我们课上没有教。
Dialogue: 0,0:59:01.71,0:59:04.03,英文,,0,0,0,,But I could also now do this.
Dialogue: 0,0:59:01.71,0:59:04.03,中文,,0,0,0,,但我现在也可以这样做。
Dialogue: 0,0:59:04.03,0:59:10.25,英文,,0,0,0,,you can use the update command to set a column or columns to different values where some condition is met.
Dialogue: 0,0:59:04.03,0:59:10.25,中文,,0,0,0,,可以使用 UPDATE 命令，在满足某些条件的情况下，将一个或多个列设置为不同的值。
Dialogue: 0,0:59:10.25,0:59:19.48,英文,,0,0,0,,So if I do update table name, set column name equal to some value, filtering it perhaps by where some condition is true.
Dialogue: 0,0:59:10.25,0:59:19.48,中文,,0,0,0,,所以如果我执行 UPDATE 表名 SET 列名 = 某值`，可以通过 `WHERE 某条件为真` 来进行过滤。
Dialogue: 0,0:59:19.48,0:59:34.00,英文,,0,0,0,,So suppose I've changed my mind or, you know what, let's go ahead and do update favorites, set language equal to maybe C++ where language equals C.
Dialogue: 0,0:59:19.48,0:59:34.00,中文,,0,0,0,,假设我改变了主意，或者，我们继续，执行 UPDATE favorites SET language = 'C++' WHERE language = 'C'`。
Dialogue: 0,0:59:34.00,0:59:35.22,英文,,0,0,0,,Now, this is destructive.
Dialogue: 0,0:59:34.00,0:59:35.22,中文,,0,0,0,,现在，这是破坏性的。
Dialogue: 0,0:59:35.22,0:59:40.27,英文,,0,0,0,,So you generally don't want to do this unless you have a backup of your data, too, overriding what people's answers are.
Dialogue: 0,0:59:35.22,0:59:40.27,中文,,0,0,0,,所以通常情况下，除非你备份了数据，否则不要这样做，这会覆盖人们的答案。
Dialogue: 0,0:59:40.27,0:59:42.63,英文,,0,0,0,,This seems to have been successful because no error messages.
Dialogue: 0,0:59:40.27,0:59:42.63,中文,,0,0,0,,这似乎成功了，因为没有错误信息。
Dialogue: 0,0:59:42.63,0:59:49.58,英文,,0,0,0,,And if I rerun the previous select that gives me all of the favorites where language equals C, now, indeed, I get none.
Dialogue: 0,0:59:42.63,0:59:49.58,中文,,0,0,0,,如果我重新运行之前的 SELECT 语句，它会返回 language 等于 C 的所有 favorites，现在确实一个都没有了。
Dialogue: 0,0:59:49.58,0:59:52.08,英文,,0,0,0,,But if I search for C++.
Dialogue: 0,0:59:49.58,0:59:52.08,中文,,0,0,0,,但如果我搜索 C++。
Dialogue: 0,0:59:52.08,0:59:53.10,英文,,0,0,0,,Now I get a lot.
Dialogue: 0,0:59:52.08,0:59:53.10,中文,,0,0,0,,现在我得到了很多。
Dialogue: 0,0:59:53.10,1:00:01.13,英文,,0,0,0,,And if I get rid of that where clause altogether and just look at the contents of my database, now you see that, indeed, C++ is commingled with all the other data.
Dialogue: 0,0:59:53.10,1:00:01.13,中文,,0,0,0,,如果我去掉 WHERE 子句，只查看数据库的内容，现在你会发现，C++ 确实与所有其他数据混合在一起了。
Dialogue: 0,1:00:01.13,1:00:02.89,英文,,0,0,0,,This is not what you all intended, of course.
Dialogue: 0,1:00:01.13,1:00:02.89,中文,,0,0,0,,当然，这不是你们想要的。
Dialogue: 0,1:00:02.89,1:00:04.17,英文,,0,0,0,,So I can undo this.
Dialogue: 0,1:00:02.89,1:00:04.17,中文,,0,0,0,,所以我可以撤销。
Dialogue: 0,1:00:04.17,1:00:06.15,英文,,0,0,0,,Let me go ahead and undo what I just did.
Dialogue: 0,1:00:04.17,1:00:06.15,中文,,0,0,0,,让我撤销我刚才的操作。
Dialogue: 0,1:00:06.15,1:00:12.59,英文,,0,0,0,,Let me set my favorite language to C, where language equals C++.
Dialogue: 0,1:00:06.15,1:00:12.59,中文,,0,0,0,,让我把最喜欢的语言设置为 C，条件是 language = C++。
Dialogue: 0,1:00:12.59,1:00:14.69,英文,,0,0,0,,But the predicate is important.
Dialogue: 0,1:00:12.59,1:00:14.69,中文,,0,0,0,,但谓词很重要。
Dialogue: 0,1:00:14.69,1:00:16.38,英文,,0,0,0,,This I'm not going to do.
Dialogue: 0,1:00:14.69,1:00:16.38,中文,,0,0,0,,我不打算这样做。
Dialogue: 0,1:00:16.38,1:00:20.38,英文,,0,0,0,,What if I accidentally omitted this predicate, the where clause?
Dialogue: 0,1:00:16.38,1:00:20.38,中文,,0,0,0,,如果我不小心省略了这个谓词，即 WHERE 子句，会怎么样？
Dialogue: 0,1:00:20.38,1:00:26.14,英文,,0,0,0,,How would that screw things up, might you think?
Dialogue: 0,1:00:20.38,1:00:26.14,中文,,0,0,0,,你认为这会如何搞砸？
Dialogue: 0,1:00:26.14,1:00:34.06,英文,,0,0,0,,Yeah, in back. It would set every row's language to, indeed, C. And this is dangerous.
Dialogue: 0,1:00:26.14,1:00:34.06,中文,,0,0,0,,是的，后面那位同学说对了，它会把每一行的 language 都设置为 C。这很危险。
Dialogue: 0,1:00:34.06,1:00:41.56,英文,,0,0,0,,And if you start Googling around for, like, SQL mistakes or the like, people in the real world have accidentally run commands like this.
Dialogue: 0,1:00:34.06,1:00:41.56,中文,,0,0,0,,如果你在谷歌上搜索“SQL 错误”之类的关键词，你会发现现实中有些人真的不小心运行过这样的命令。
Dialogue: 0,1:00:41.56,1:00:55.11,英文,,0,0,0,,And without naming names, a former member of our teaching staff at one point accidentally ran a command like this and changed every student's name in our database to, Bobby, I think it was, the same name for every row because they simply forgot a predicate.
Dialogue: 0,1:00:41.56,1:00:55.11,中文,,0,0,0,,恕不点名，我们教职工中的一位成员曾经不小心运行了一个类似的命令，\N把我们数据库中每个学生的名字都改成了 Bobby，我记得是这个名字，每一行都是同一个名字，因为他只是忘记了一个谓词。
Dialogue: 0,1:00:55.11,1:00:58.01,英文,,0,0,0,,So here, too, there's dangers in code.
Dialogue: 0,1:00:55.11,1:00:58.01,中文,,0,0,0,,代码也是有风险的。
Dialogue: 0,1:00:58.01,1:01:05.75,英文,,0,0,0,,And you should adopt the habit quite quickly of always, one, backing up your data, like with CP, for instance, in Linux, or any other technique.
Dialogue: 0,1:00:58.01,1:01:05.75,中文,,0,0,0,,你应该尽快养成习惯，第一，备份数据，比如在 Linux 中使用 `cp` 命令，或者其他任何方法。
Dialogue: 0,1:01:05.75,1:01:11.35,英文,,0,0,0,,Or just making sure before you hit Enter that, yes, this is indeed the query I want to execute.
Dialogue: 0,1:01:05.75,1:01:11.35,中文,,0,0,0,,或者在按下回车键之前，再次确认这确实是你想要执行的查询。
Dialogue: 0,1:01:11.35,1:01:14.87,英文,,0,0,0,,And generally speaking, in the real world, there should be process controls in place.
Dialogue: 0,1:01:11.35,1:01:14.87,中文,,0,0,0,,一般来说，现实世界中应该有流程控制。
Dialogue: 0,1:01:14.87,1:01:19.74,英文,,0,0,0,,Like, the intern should not have access to the production database, the live database, and the like.
Dialogue: 0,1:01:14.87,1:01:19.74,中文,,0,0,0,,比如实习生不应该有权访问生产数据库、实时数据库等等。
Dialogue: 0,1:01:19.74,1:01:21.74,英文,,0,0,0,,But you have a lot of power now with these queries.
Dialogue: 0,1:01:19.74,1:01:21.74,中文,,0,0,0,,但你现在可以用这些查询做很多事情。
Dialogue: 0,1:01:21.74,1:01:25.44,英文,,0,0,0,,So just be all the more careful, because very easily can you do bad things.
Dialogue: 0,1:01:21.74,1:01:25.44,中文,,0,0,0,,所以要格外小心，因为你很容易做出坏事。
Dialogue: 0,1:01:25.44,1:01:26.78,英文,,0,0,0,,So let me undo this.
Dialogue: 0,1:01:25.44,1:01:26.78,中文,,0,0,0,,让我撤销这个操作。
Dialogue: 0,1:01:26.78,1:01:30.90,英文,,0,0,0,,Where language equals quote, unquote, C++.
Dialogue: 0,1:01:26.78,1:01:30.90,中文,,0,0,0,,`WHERE language` = "C++"。
Dialogue: 0,1:01:30.90,1:01:31.90,英文,,0,0,0,,And I'll zoom back out.
Dialogue: 0,1:01:30.90,1:01:31.90,中文,,0,0,0,,我再缩小一点。
Dialogue: 0,1:01:31.90,1:01:32.66,英文,,0,0,0,,Enter.
Dialogue: 0,1:01:31.90,1:01:32.66,中文,,0,0,0,,回车。
Dialogue: 0,1:01:32.66,1:01:34.60,英文,,0,0,0,,And now I think we're back in business.
Dialogue: 0,1:01:32.66,1:01:34.60,中文,,0,0,0,,现在我想我们恢复正常了。
Dialogue: 0,1:01:34.60,1:01:35.12,英文,,0,0,0,,C.
Dialogue: 0,1:01:34.60,1:01:35.12,中文,,0,0,0,,C。
Dialogue: 0,1:01:35.12,1:01:36.17,英文,,0,0,0,,is among the answers.
Dialogue: 0,1:01:35.12,1:01:36.17,中文,,0,0,0,,是答案之一。
Dialogue: 0,1:01:36.17,1:01:42.88,英文,,0,0,0,,Yeah?
Dialogue: 0,1:01:36.17,1:01:42.88,中文,,0,0,0,,是吗？
Dialogue: 0,1:01:42.88,1:01:45.43,英文,,0,0,0,,Is essentially doing what at the end?
Dialogue: 0,1:01:42.88,1:01:45.43,中文,,0,0,0,,它最终做了什么？
Dialogue: 0,1:01:45.43,1:01:46.69,英文,,0,0,0,,It's essentially find-and-replace.
Dialogue: 0,1:01:45.43,1:01:46.69,中文,,0,0,0,,它本质上是查找和替换。
Dialogue: 0,1:01:46.69,1:01:51.21,英文,,0,0,0,,Yes, in layperson's terms, this is find-and-replace implemented with SQL.
Dialogue: 0,1:01:46.69,1:01:51.21,中文,,0,0,0,,是的，通俗地说，这就是用 SQL 实现的查找和替换。
Dialogue: 0,1:01:51.21,1:02:01.81,英文,,0,0,0,,And in fact, the authors of Microsoft Word or Google Docs might very well be using language like this SQL when you go to the nice, graphical, user-friendly find-and-replace box.
Dialogue: 0,1:01:51.21,1:02:01.81,中文,,0,0,0,,实际上，当你使用 Microsoft Word 或 Google Docs 中用户友好的“查找和替换”功能时，它们的作者很可能使用了类似 SQL 这样的语言。
Dialogue: 0,1:02:01.81,1:02:04.51,英文,,0,0,0,,This may very well be what they're doing underneath the hood.
Dialogue: 0,1:02:01.81,1:02:04.51,中文,,0,0,0,,这很可能就是他们在后台所做的。
Dialogue: 0,1:02:04.51,1:02:07.87,英文,,0,0,0,,Or of course, they could be using some other language altogether.
Dialogue: 0,1:02:04.51,1:02:07.87,中文,,0,0,0,,当然，他们也可能使用了其他语言。
Dialogue: 0,1:02:07.87,1:02:09.43,英文,,0,0,0,,There's one last.
Dialogue: 0,1:02:07.87,1:02:09.43,中文,,0,0,0,,还有一个。
Dialogue: 0,1:02:09.43,1:02:16.58,英文,,0,0,0,,Syntax that's worth knowing, delete, which for better or for worse is even more destructive, whereby it allows you to delete rows from tables.
Dialogue: 0,1:02:09.43,1:02:16.58,中文,,0,0,0,,值得了解的语法是 `DELETE`，无论好坏，它都更具破坏性，因为它允许你从表中删除行。
Dialogue: 0,1:02:16.58,1:02:20.27,英文,,0,0,0,,It's distinct from drop, which lets you delete tables themselves.
Dialogue: 0,1:02:16.58,1:02:20.27,中文,,0,0,0,,它不同于 `drop`，`drop` 允许删除表本身。
Dialogue: 0,1:02:20.27,1:02:21.67,英文,,0,0,0,,This focuses on rows.
Dialogue: 0,1:02:20.27,1:02:21.67,中文,,0,0,0,,`delete`  关注的是行。
Dialogue: 0,1:02:21.67,1:02:31.91,英文,,0,0,0,,So suppose that you really, really, didn't like, let's say, Tiedemann was a little challenging if you tackled that more comfortable problem.
Dialogue: 0,1:02:21.67,1:02:31.91,中文,,0,0,0,,假设你真的，真的不喜欢 Tiedemann，如果你之前解决过更简单的题目，你会觉得 Tiedemann 有点挑战性。
Dialogue: 0,1:02:31.91,1:02:42.46,英文,,0,0,0,,So if you really don't want to even think about Tiedemann anymore, so why don't we do delete from favorites where problem equals, and I won't execute it for real, Tiedemann.
Dialogue: 0,1:02:31.91,1:02:42.46,中文,,0,0,0,,所以如果你真的不想再考虑 Tiedemann 了，我们可以这样做：\N`DELETE FROM favorites WHERE problem = 'Tiedemann'`，我不会真的执行它。
Dialogue: 0,1:02:42.46,1:02:50.27,英文,,0,0,0,,This would have the effect of deleting every row, including the language therein and the timestamp, where the student answered Tiedemann.
Dialogue: 0,1:02:42.46,1:02:50.27,中文,,0,0,0,,这将删除学生回答 Tiedemann 的每一行，包括其中的语言和时间戳。
Dialogue: 0,1:02:50.27,1:02:54.12,英文,,0,0,0,,Worse than this would be this.
Dialogue: 0,1:02:50.27,1:02:54.12,中文,,0,0,0,,比这更糟糕的是这个。
Dialogue: 0,1:02:54.12,1:02:55.10,英文,,0,0,0,,Why might this be bad?
Dialogue: 0,1:02:54.12,1:02:55.10,中文,,0,0,0,,为什么这很糟糕？
Dialogue: 0,1:02:55.10,1:03:00.91,英文,,0,0,0,,OK, chuckling, because there's no predicate.
Dialogue: 0,1:02:55.10,1:03:00.91,中文,,0,0,0,,你在笑，因为这里没有谓词。
Dialogue: 0,1:03:00.91,1:03:04.87,英文,,0,0,0,,There's no filter, which means literally this would delete all of the data.
Dialogue: 0,1:03:00.91,1:03:04.87,中文,,0,0,0,,没有过滤器，这意味着它会删除所有数据。
Dialogue: 0,1:03:04.87,1:03:07.89,英文,,0,0,0,,So again, with great power here comes great responsibility.
Dialogue: 0,1:03:04.87,1:03:07.89,中文,,0,0,0,,能力越大，责任越大。
Dialogue: 0,1:03:07.89,1:03:12.50,英文,,0,0,0,,Now, this has just been a data set of, what, 430 rows by us dynamically created.
Dialogue: 0,1:03:07.89,1:03:12.50,中文,,0,0,0,,我们动态创建的这个数据集只有 430 行。
Dialogue: 0,1:03:12.50,1:03:17.68,英文,,0,0,0,,There's, of course, some really juicy data sets in the real world in one website you might have heard or an app you might have used.
Dialogue: 0,1:03:12.50,1:03:17.68,中文,,0,0,0,,当然，在你可能听说过的某个网站或使用过的应用程序中，现实世界中存在一些非常庞大的数据集。
Dialogue: 0,1:03:17.68,1:03:27.40,英文,,0,0,0,,is IMDB, the Internet Movie Database, which wonderfully makes some of their data available for download as CSV files or technically TSV files, tab-separated values.
Dialogue: 0,1:03:17.68,1:03:27.40,中文,,0,0,0,,那就是 IMDB，互联网电影数据库，它很好地将他们的一些数据作为 CSV 文件（或者技术上说是 TSV 文件，制表符分隔值文件）提供下载。
Dialogue: 0,1:03:27.40,1:03:34.16,英文,,0,0,0,,But what we did in advance of class was download some of that data for both TV shows in the real world and movies in the real world.
Dialogue: 0,1:03:27.40,1:03:34.16,中文,,0,0,0,,我们在课前下载了其中一些数据，包括现实世界中的电视剧和电影。
Dialogue: 0,1:03:34.16,1:03:39.59,英文,,0,0,0,,And what's wonderful about this data set is it's not just Dozens or hundreds or even thousands of lines.
Dialogue: 0,1:03:34.16,1:03:39.59,中文,,0,0,0,,这个数据集的好处在于它不只有几十行、几百行，甚至几千行。
Dialogue: 0,1:03:39.59,1:03:47.39,英文,,0,0,0,,There are millions of rows of juicy data, TV shows and movies, with which most folks are probably familiar, at least with a subset.
Dialogue: 0,1:03:39.59,1:03:47.39,中文,,0,0,0,,这里有数百万行包含电视剧和电影信息的丰富数据，大多数人可能都熟悉，至少对其中一部分很熟悉。
Dialogue: 0,1:03:47.39,1:03:54.60,英文,,0,0,0,,And we'll see in just a little bit that this data comes in the form of now six different tables that we've given you.
Dialogue: 0,1:03:47.39,1:03:54.60,中文,,0,0,0,,稍后我们会看到，这些数据以我们提供给你的六个不同表格的形式出现。
Dialogue: 0,1:03:54.60,1:04:01.96,英文,,0,0,0,,And the tables in question for today are going to be The people in the TV business, the stars they're in, the shows that people are producing, and the like.
Dialogue: 0,1:03:54.60,1:04:01.96,中文,,0,0,0,,今天要讨论的表格是关于电视行业的人员、他们参演的节目、人们制作的节目等等。
Dialogue: 0,1:04:01.96,1:04:07.22,英文,,0,0,0,,This is a picture we'll revisit to enable you to wrap your minds around what the actual data is.
Dialogue: 0,1:04:01.96,1:04:07.22,中文,,0,0,0,,稍后我们会重新审视这张图，帮助你理解实际数据是什么样子的。
Dialogue: 0,1:04:07.22,1:04:10.47,英文,,0,0,0,,This feels like a good opportunity, though, for a snack.
Dialogue: 0,1:04:07.22,1:04:10.47,中文,,0,0,0,,不过，现在似乎是吃点东西的好时机。
Dialogue: 0,1:04:10.47,1:04:13.63,英文,,0,0,0,,In fact, in just a moment, we have a whole lot of Rice Krispie treats out in the lobby.
Dialogue: 0,1:04:10.47,1:04:13.63,中文,,0,0,0,,事实上，过一会儿，我们在大厅里会提供很多 Rice Krispie Treats。
Dialogue: 0,1:04:13.63,1:04:18.47,英文,,0,0,0,,But if folks could perhaps acknowledge this mini wedding cake here.
Dialogue: 0,1:04:13.63,1:04:18.47,中文,,0,0,0,,但希望大家也能注意到这个迷你结婚蛋糕。
Dialogue: 0,1:04:18.47,1:04:21.69,英文,,0,0,0,,CS50's own Carter Zenke is getting married this week.
Dialogue: 0,1:04:18.47,1:04:21.69,中文,,0,0,0,,cs50 的 Carter Zenke 这周要结婚了。
Dialogue: 0,1:04:21.69,1:04:26.57,英文,,0,0,0,,So congratulations to Carter.
Dialogue: 0,1:04:21.69,1:04:26.57,中文,,0,0,0,,祝贺 Carter。
Dialogue: 0,1:04:26.57,1:04:26.95,英文,,0,0,0,,as well.
Dialogue: 0,1:04:26.57,1:04:26.95,中文,,0,0,0,,也祝贺大家。
Dialogue: 0,1:04:38.10,1:04:41.86,英文,,0,0,0,,OK, there's only one piece of cake in that box, but a lot of Rice Krispie treats in the transept.
Dialogue: 0,1:04:38.10,1:04:41.86,中文,,0,0,0,,那个盒子里只有一块蛋糕，但在教堂过道有很多 Rice Krispie Treats。
Dialogue: 0,1:04:41.86,1:04:45.79,英文,,0,0,0,,Let's take 10 minutes, and we'll be back with Internet Movie Database in 10.
Dialogue: 0,1:04:41.86,1:04:45.79,中文,,0,0,0,,我们休息十分钟，十分钟后回来讲解互联网电影数据库。
Dialogue: 0,1:04:45.79,1:04:47.23,英文,,0,0,0,,All right, we are back.
Dialogue: 0,1:04:45.79,1:04:47.23,中文,,0,0,0,,好了，我们回来了。
Dialogue: 0,1:04:47.23,1:04:52.89,英文,,0,0,0,,So if you've never been, you can actually go to imdb.com right now and play around or download the mobile app.
Dialogue: 0,1:04:47.23,1:04:52.89,中文,,0,0,0,,如果你从未访问过，你现在就可以访问 imdb.com，随意浏览或下载移动应用程序。
Dialogue: 0,1:04:52.89,1:04:57.98,英文,,0,0,0,,And it's just big database of a lot of TV shows and movies and actors and the like.
Dialogue: 0,1:04:52.89,1:04:57.98,中文,,0,0,0,,它就是一个包含大量电视剧、电影、演员等信息的大型数据库。
Dialogue: 0,1:04:57.98,1:05:00.76,英文,,0,0,0,,But what indeed is nice is you can download some of that data.
Dialogue: 0,1:04:57.98,1:05:00.76,中文,,0,0,0,,但它的好处是你可以下载其中一些数据。
Dialogue: 0,1:05:00.76,1:05:02.40,英文,,0,0,0,,And that's what I've done in advance.
Dialogue: 0,1:05:00.76,1:05:02.40,中文,,0,0,0,,这就是我提前做的事情。
Dialogue: 0,1:05:02.40,1:05:09.55,英文,,0,0,0,,And what we've done is we wrote some Python code to convert some of the Flat file databases that they let you download.
Dialogue: 0,1:05:02.40,1:05:09.55,中文,,0,0,0,,我们所做的就是编写了一些 Python 代码，将他们允许下载的一些平面文件数据库转换格式。
Dialogue: 0,1:05:09.55,1:05:17.94,英文,,0,0,0,,And we converted it into a SQL database with six tables, so not just one, but six, that ultimately are these here.
Dialogue: 0,1:05:09.55,1:05:17.94,中文,,0,0,0,,我们把它转换成了一个包含六个表的 SQL 数据库，不是一个，而是六个，最终就是这里显示的这些。
Dialogue: 0,1:05:17.94,1:05:27.26,英文,,0,0,0,,And let me just help you wrap your minds around what this picture is, which is an entity relationship diagram, which is just to say each of these boxes on the screen represents a table.
Dialogue: 0,1:05:17.94,1:05:27.26,中文,,0,0,0,,让我来帮助你理解这张图，它是一个实体关系图，也就是说屏幕上的每个框代表一个表。
Dialogue: 0,1:05:27.26,1:05:32.09,英文,,0,0,0,,And each of the arrows, or edges, represents some kind of relationship across the tables.
Dialogue: 0,1:05:27.26,1:05:32.09,中文,,0,0,0,,每个箭头或边代表了表之间某种关系。
Dialogue: 0,1:05:32.09,1:05:36.25,英文,,0,0,0,,Because up until now, the only data we had were those three columns in the favorites table.
Dialogue: 0,1:05:32.09,1:05:36.25,中文,,0,0,0,,因为到目前为止，我们拥有的唯一数据是 favorites 表中的三列。
Dialogue: 0,1:05:36.25,1:05:45.55,英文,,0,0,0,,But what gets really useful about SQL databases, just like a Google spreadsheet or an Excel file, is you can have multiple sheets, or in a database, multiple tables.
Dialogue: 0,1:05:36.25,1:05:45.55,中文,,0,0,0,,但与 Google 电子表格或 Excel 文件一样，SQL 数据库真正有用之处在于，你可以拥有多个工作表，或者在数据库中拥有多个表。
Dialogue: 0,1:05:45.55,1:05:53.88,英文,,0,0,0,,And so what we're about to see is that in this IMDB database for TV shows, there's going to be a dedicated table for all the people in the TV business.
Dialogue: 0,1:05:45.55,1:05:53.88,中文,,0,0,0,,我们将看到，在这个 IMDB 电视剧数据库中，将有一个专门的表格用于存放所有从事电视行业的人员。
Dialogue: 0,1:05:53.88,1:05:59.26,英文,,0,0,0,,There's going to be a dedicated table for all of the TV shows that are in their database as of right now.
Dialogue: 0,1:05:53.88,1:05:59.26,中文,,0,0,0,,还会有一个专门的表格，用于存放截至目前数据库中所有的电视剧。
Dialogue: 0,1:05:59.26,1:06:09.65,英文,,0,0,0,,There's going to be a dedicated table for writers in that industry, for the ratings of shows, for the genres to which shows belong, comedy and the like.
Dialogue: 0,1:05:59.26,1:06:09.65,中文,,0,0,0,,在这个行业中，还会有专门的表格用于存放编剧、电视剧的评分、电视剧所属的类型，例如喜剧等等。
Dialogue: 0,1:06:09.65,1:06:19.16,英文,,0,0,0,,And then lastly, there's going to be this table, which somehow associates People with the TV shows that they star in and vice versa.
Dialogue: 0,1:06:09.65,1:06:19.16,中文,,0,0,0,,最后，还会有一个表格，以某种方式将人员与他们出演的电视剧关联起来，反之亦然。
Dialogue: 0,1:06:19.16,1:06:22.28,英文,,0,0,0,,And so let's consider first what this looks like in code.
Dialogue: 0,1:06:19.16,1:06:22.28,中文,,0,0,0,,让我们先看看代码中是什么样子的。
Dialogue: 0,1:06:22.28,1:06:25.26,英文,,0,0,0,,And we'll see that it's going to overwhelm intentionally at first.
Dialogue: 0,1:06:22.28,1:06:25.26,中文,,0,0,0,,我们会发现它一开始会让人不知所措，这是有意为之的。
Dialogue: 0,1:06:25.26,1:06:26.14,英文,,0,0,0,,But I'm going to do this.
Dialogue: 0,1:06:25.26,1:06:26.14,中文,,0,0,0,,我要这样做。
Dialogue: 0,1:06:26.14,1:06:27.70,英文,,0,0,0,,I'm going to go back to my terminal window.
Dialogue: 0,1:06:26.14,1:06:27.70,中文,,0,0,0,,我要回到我的终端窗口。
Dialogue: 0,1:06:27.70,1:06:34.23,英文,,0,0,0,,And during the break, I downloaded from the course's website a file called shows.db, which we made in advance for you.
Dialogue: 0,1:06:27.70,1:06:34.23,中文,,0,0,0,,在休息期间，我从课程网站上下载了一个名为 shows.db 的文件，这是我们提前为你准备好的。
Dialogue: 0,1:06:34.23,1:06:40.19,英文,,0,0,0,,And if I type ls, I'll see all of my favorites files from before, the CSV, the DB, and the Python file.
Dialogue: 0,1:06:34.23,1:06:40.19,中文,,0,0,0,,如果我输入 ls，我会看到之前所有 favorites 文件，包括 CSV、DB 和 Python 文件。
Dialogue: 0,1:06:40.19,1:06:42.57,英文,,0,0,0,,But now there's shows.db.
Dialogue: 0,1:06:40.19,1:06:42.57,中文,,0,0,0,,但现在多了 shows.db。
Dialogue: 0,1:06:42.57,1:06:45.52,英文,,0,0,0,,So I'm going to go ahead in my full screen terminal window here.
Dialogue: 0,1:06:42.57,1:06:45.52,中文,,0,0,0,,所以我要在我的全屏终端窗口中继续操作。
Dialogue: 0,1:06:45.52,1:06:48.34,英文,,0,0,0,,I'm not using actual tabs or code files now.
Dialogue: 0,1:06:45.52,1:06:48.34,中文,,0,0,0,,我现在没有使用实际的选项卡或代码文件。
Dialogue: 0,1:06:48.34,1:06:54.97,英文,,0,0,0,,I'm going to run SQLite 3. On the file called shows.db, and I'm just going to see this version information here.
Dialogue: 0,1:06:48.34,1:06:54.97,中文,,0,0,0,,我要在名为 shows.db 的文件上运行 sqlite 3，我将在这里看到这个版本信息。
Dialogue: 0,1:06:54.97,1:07:01.21,英文,,0,0,0,,Let me clear my screen and run the one command I ran earlier to show us the schema of the favorites database.
Dialogue: 0,1:06:54.97,1:07:01.21,中文,,0,0,0,,让我清空屏幕，然后运行之前运行过的一条命令，向我们展示 favorites 数据库的架构。
Dialogue: 0,1:07:01.21,1:07:04.33,英文,,0,0,0,,Now we'll see the schema for the shows database.
Dialogue: 0,1:07:01.21,1:07:04.33,中文,,0,0,0,,现在我们将看到 shows 数据库的架构。
Dialogue: 0,1:07:04.33,1:07:08.30,英文,,0,0,0,,And there's a lot going on here, but let me scroll back up to the very top, the beginning.
Dialogue: 0,1:07:04.33,1:07:08.30,中文,,0,0,0,,这里发生了很多事情，让我向上滚动到最顶部，也就是开头。
Dialogue: 0,1:07:08.30,1:07:10.62,英文,,0,0,0,,And we see this here.
Dialogue: 0,1:07:08.30,1:07:10.62,中文,,0,0,0,,我们可以在这里看到。
Dialogue: 0,1:07:10.62,1:07:21.46,英文,,0,0,0,,So when I run .schema, we see a dump, really, of all of the SQL CREATE TABLE commands that were run in order to create this database for you.
Dialogue: 0,1:07:10.62,1:07:21.46,中文,,0,0,0,,当我运行.schema时，我们会看到一个转储，实际上是所有为创建数据库而运行的 SQL CREATE TABLE 命令。
Dialogue: 0,1:07:21.46,1:07:27.46,英文,,0,0,0,,And one of those tables is called Genres, and another People, Ratings, Shows, Stars, and so forth.
Dialogue: 0,1:07:21.46,1:07:27.46,中文,,0,0,0,,其中一个表叫做 Genres，还有 People、Ratings、Shows、Stars 等等。
Dialogue: 0,1:07:27.46,1:07:34.25,英文,,0,0,0,,And the columns therein, even though it's formatted a little more prettily than the automatically generated CREATE TABLE statement for favorites,
Dialogue: 0,1:07:27.46,1:07:34.25,中文,,0,0,0,,其中的列，即使它的格式比自动生成的 favorites 表的 CREATE TABLE 语句要漂亮一些，
Dialogue: 0,1:07:34.25,1:07:38.91,英文,,0,0,0,,whereby we have one column per line of output here.
Dialogue: 0,1:07:34.25,1:07:38.91,中文,,0,0,0,,这里每一行输出对应一列。
Dialogue: 0,1:07:38.91,1:07:50.88,英文,,0,0,0,,In the, for instance, people table, there's going to be an ID column, like unique identifier, like a Harvard ID, a Yale ID, or the like, a name column, a birth year, and then some other stuff.
Dialogue: 0,1:07:38.91,1:07:50.88,中文,,0,0,0,,例如，在 People 表中，将有一个 id 列，例如唯一标识符，如哈佛 id、耶鲁 id 等，一个姓名列，一个出生年份，然后是一些其他的东西。
Dialogue: 0,1:07:50.88,1:07:56.25,英文,,0,0,0,,If I scroll down to shows, every show in the world is going to have a unique ID as well.
Dialogue: 0,1:07:50.88,1:07:56.25,中文,,0,0,0,,如果我向下滚动到 Shows，世界上每个节目也会有一个唯一的 id。
Dialogue: 0,1:07:56.25,1:08:02.61,英文,,0,0,0,,A title, of course, the year in which it debuted, and the total number of episodes as of the time we downloaded the data.
Dialogue: 0,1:07:56.25,1:08:02.61,中文,,0,0,0,,当然，还有一个标题，它首播的年份，以及截至我们下载数据时的总集数。
Dialogue: 0,1:08:02.61,1:08:04.25,英文,,0,0,0,,And then what else is there?
Dialogue: 0,1:08:02.61,1:08:04.25,中文,,0,0,0,,那还有什么呢？
Dialogue: 0,1:08:04.25,1:08:08.11,英文,,0,0,0,,Some of these are a little less obvious, like ratings here.
Dialogue: 0,1:08:04.25,1:08:08.11,中文,,0,0,0,,其中一些不太明显，比如这里的 Ratings。
Dialogue: 0,1:08:08.11,1:08:12.77,英文,,0,0,0,,So ratings don't have an ID column, but they have a show ID column.
Dialogue: 0,1:08:08.11,1:08:12.77,中文,,0,0,0,,Ratings 没有 id 列，但有一个 show_id 列。
Dialogue: 0,1:08:12.77,1:08:16.01,英文,,0,0,0,,And a rating, like a 5-point scale or 10-point scale or the like.
Dialogue: 0,1:08:12.77,1:08:16.01,中文,,0,0,0,,还有一个评分，比如 5 分制或 10 分制之类的。
Dialogue: 0,1:08:16.01,1:08:19.45,英文,,0,0,0,,And then the total number of votes that were collected to contribute to that rating.
Dialogue: 0,1:08:16.01,1:08:19.45,中文,,0,0,0,,以及为得出该评分而收集的总票数。
Dialogue: 0,1:08:19.45,1:08:23.73,英文,,0,0,0,,IMDB allows people to upvote and downvote shows and movies and the like.
Dialogue: 0,1:08:19.45,1:08:23.73,中文,,0,0,0,,IMDB 允许人们对节目、电影等进行投票。
Dialogue: 0,1:08:23.73,1:08:26.33,英文,,0,0,0,,And then similarly is genre structured.
Dialogue: 0,1:08:23.73,1:08:26.33,中文,,0,0,0,,Genre 的结构也类似。
Dialogue: 0,1:08:26.33,1:08:28.00,英文,,0,0,0,,There's a show ID.
Dialogue: 0,1:08:26.33,1:08:28.00,中文,,0,0,0,,有一个 show_id。
Dialogue: 0,1:08:28.00,1:08:33.54,英文,,0,0,0,,And then there's a genre, which is going to be like an English word, like comedy or drama or something else.
Dialogue: 0,1:08:28.00,1:08:33.54,中文,,0,0,0,,然后是一个类型，它将是一个英文单词，比如喜剧或戏剧等等。
Dialogue: 0,1:08:33.54,1:08:38.60,英文,,0,0,0,,And then what else? Let's go a little further at the bottom here for stars and writers.
Dialogue: 0,1:08:33.54,1:08:38.60,中文,,0,0,0,,还有什么？让我们再往下看看 Stars 和 Writers。
Dialogue: 0,1:08:38.60,1:08:40.86,英文,,0,0,0,,If we go to the very bottom here.
Dialogue: 0,1:08:38.60,1:08:40.86,中文,,0,0,0,,如果我们走到最下面。
Dialogue: 0,1:08:40.86,1:08:43.68,英文,,0,0,0,,Stars and writers are similarly structured, too.
Dialogue: 0,1:08:40.86,1:08:43.68,中文,,0,0,0,,Stars 和 Writers 的结构也类似。
Dialogue: 0,1:08:43.68,1:08:47.10,英文,,0,0,0,,They have a show ID and a person ID.
Dialogue: 0,1:08:43.68,1:08:47.10,中文,,0,0,0,,它们有一个show_id 和person_id。
Dialogue: 0,1:08:47.10,1:08:48.68,英文,,0,0,0,,So show and person.
Dialogue: 0,1:08:47.10,1:08:48.68,中文,,0,0,0,,也就是节目和人物。
Dialogue: 0,1:08:48.68,1:08:52.56,英文,,0,0,0,,And then this writers table has a show ID and a person ID.
Dialogue: 0,1:08:48.68,1:08:52.56,中文,,0,0,0,,然后这个编剧表里有一个show_id 和person_id。
Dialogue: 0,1:08:52.56,1:08:55.43,英文,,0,0,0,,And there's a whole lot of other words that we'll come to in just a moment.
Dialogue: 0,1:08:52.56,1:08:55.43,中文,,0,0,0,,还有很多其他词，我们马上就会看到。
Dialogue: 0,1:08:55.43,1:08:58.19,英文,,0,0,0,,But what is this code hinting at?
Dialogue: 0,1:08:55.43,1:08:58.19,中文,,0,0,0,,但这代码暗示了什么？
Dialogue: 0,1:08:58.19,1:09:07.29,英文,,0,0,0,,Well, if I go back to the picture from earlier here, you'll see that this picture captures the relationships among these various tables.
Dialogue: 0,1:08:58.19,1:09:07.29,中文,,0,0,0,,如果我们回到之前的那张图片，你会发现这张图片捕捉到了这些不同表格之间的关系。
Dialogue: 0,1:09:07.29,1:09:17.06,英文,,0,0,0,,So for instance, if we focus on shows for just a moment, a show, again, has a unique ID, a title, a year in which it debuted, and a total number of episodes.
Dialogue: 0,1:09:07.29,1:09:17.06,中文,,0,0,0,,例如，如果我们暂时只关注节目，一个节目有一个唯一的 id、标题、首播年份和总集数。
Dialogue: 0,1:09:17.06,1:09:24.33,英文,,0,0,0,,If you want to figure out what genre or genres a show belongs to, because some shows are just comedies.
Dialogue: 0,1:09:17.06,1:09:24.33,中文,,0,0,0,,如果你想知道一个节目属于什么类型，因为有些节目只是喜剧。
Dialogue: 0,1:09:24.33,1:09:26.11,英文,,0,0,0,,Some shows are just dramas.
Dialogue: 0,1:09:24.33,1:09:26.11,中文,,0,0,0,,有些节目只是戏剧。
Dialogue: 0,1:09:26.11,1:09:30.75,英文,,0,0,0,,You know, some shows are arguably comedies and dramas, depending on the episode or the like.
Dialogue: 0,1:09:26.11,1:09:30.75,中文,,0,0,0,,有些节目可以说是喜剧和戏剧，这取决于那一集或类似的因素。
Dialogue: 0,1:09:30.75,1:09:35.92,英文,,0,0,0,,So you can imagine wanting to associate two or three or even more genres with a show.
Dialogue: 0,1:09:30.75,1:09:35.92,中文,,0,0,0,,所以你可以想象想把两个、三个甚至更多的类型与一个节目联系起来。
Dialogue: 0,1:09:35.92,1:09:40.12,英文,,0,0,0,,This line here in this second table allows us to do that.
Dialogue: 0,1:09:35.92,1:09:40.12,中文,,0,0,0,,第二个表中的这一行允许我们这样做。
Dialogue: 0,1:09:40.12,1:09:49.26,英文,,0,0,0,,Every row in the genres table we'll see has two items, a show ID, which relates to the idea of a show.
Dialogue: 0,1:09:40.12,1:09:49.26,中文,,0,0,0,,我们会看到类型表中的每一行都有两个项目，一个show_id，它与节目的概念相关。
Dialogue: 0,1:09:49.26,1:09:54.68,英文,,0,0,0,,And that's why these lines literally line up with that specific column name.
Dialogue: 0,1:09:49.26,1:09:54.68,中文,,0,0,0,,这就是为什么这些线与特定的列名一致。
Dialogue: 0,1:09:54.68,1:09:59.33,英文,,0,0,0,,And a genre, which is going to be like, quote unquote, comedy, quote unquote, drama, or something else.
Dialogue: 0,1:09:54.68,1:09:59.33,中文,,0,0,0,,还有一个类型，它类似于“喜剧”、“戏剧”或其他类型。
Dialogue: 0,1:09:59.33,1:10:13.79,英文,,0,0,0,,Now, with that said, design question, why have we deliberately not just gotten rid of this genres table and made our lives simpler by just adding a genre column to this shows table?
Dialogue: 0,1:09:59.33,1:10:13.79,中文,,0,0,0,,现在，设计上的问题来了，为什么我们不干脆去掉这个类型表，直接在这个节目表中添加一个类型列，让我们的生活更简单呢？
Dialogue: 0,1:10:13.79,1:10:17.23,英文,,0,0,0,,And again, a table is just like a sheet with rows and columns.
Dialogue: 0,1:10:13.79,1:10:17.23,中文,,0,0,0,,表格就像一个有行和列的工作表。
Dialogue: 0,1:10:17.23,1:10:21.32,英文,,0,0,0,,At the moment, shows only have four columns, ID, title, year, episodes.
Dialogue: 0,1:10:17.23,1:10:21.32,中文,,0,0,0,,目前，节目只有四列：id、标题、年份和集数。
Dialogue: 0,1:10:21.32,1:10:29.14,英文,,0,0,0,,Why not just add a fifth column called genre And put the show genre there.
Dialogue: 0,1:10:21.32,1:10:29.14,中文,,0,0,0,,为什么不直接添加第五列，叫做类型，然后把节目类型放在那里呢？
Dialogue: 0,1:10:29.14,1:10:32.28,英文,,0,0,0,,Any intuition here?
Dialogue: 0,1:10:29.14,1:10:32.28,中文,,0,0,0,,对此有什么想法吗？
Dialogue: 0,1:10:32.28,1:10:35.02,英文,,0,0,0,,Why not just keep things simple?
Dialogue: 0,1:10:32.28,1:10:35.02,中文,,0,0,0,,为什么不保持简单呢？
Dialogue: 0,1:10:35.02,1:10:42.24,英文,,0,0,0,,Yeah, in back.
Dialogue: 0,1:10:35.02,1:10:42.24,中文,,0,0,0,,对，后面那位同学。
Dialogue: 0,1:10:42.24,1:10:42.96,英文,,0,0,0,,Exactly.
Dialogue: 0,1:10:42.24,1:10:42.96,中文,,0,0,0,,没错。
Dialogue: 0,1:10:42.96,1:10:49.88,英文,,0,0,0,,If you add a fifth column here and call it genre, then you have to pick a genre specifically.
Dialogue: 0,1:10:42.96,1:10:49.88,中文,,0,0,0,,如果你在这里添加第五列并将其命名为“类型”，那么你就必须明确选择一种类型。
Dialogue: 0,1:10:49.88,1:10:56.51,英文,,0,0,0,,You have to put in that cell, presumably, comedy, or drama, or musical, or something else.
Dialogue: 0,1:10:49.88,1:10:56.51,中文,,0,0,0,,你必须在这个单元格中填写喜剧、戏剧、音乐剧或其他类型。
Dialogue: 0,1:10:56.51,1:10:58.29,英文,,0,0,0,,Now, you could write multiple words in the cell.
Dialogue: 0,1:10:56.51,1:10:58.29,中文,,0,0,0,,当然，你可以在一个单元格中写多个词。
Dialogue: 0,1:10:58.29,1:11:00.99,英文,,0,0,0,,But generally speaking, that would be sloppy, bad design.
Dialogue: 0,1:10:58.29,1:11:00.99,中文,,0,0,0,,但一般来说，这样做会很混乱，设计也不好。
Dialogue: 0,1:11:00.99,1:11:03.67,英文,,0,0,0,,Every cell, just like in a spreadsheet, should really have one value.
Dialogue: 0,1:11:00.99,1:11:03.67,中文,,0,0,0,,就像电子表格一样，每个单元格都应该只有一个值。
Dialogue: 0,1:11:03.67,1:11:04.95,英文,,0,0,0,,It might have multiple words.
Dialogue: 0,1:11:03.67,1:11:04.95,中文,,0,0,0,,它可能包含多个词。
Dialogue: 0,1:11:04.95,1:11:08.49,英文,,0,0,0,,But it shouldn't be like a weirdly comma-separated list of multiple things.
Dialogue: 0,1:11:04.95,1:11:08.49,中文,,0,0,0,,但不应该像一个奇怪的、用逗号分隔的多个事物的列表。
Dialogue: 0,1:11:08.49,1:11:19.54,英文,,0,0,0,,It should just be in a different cell in that case. So if you instead were to design this with just a single column called genre, you're imposing what a computer scientist would call a one-to-one relationship.
Dialogue: 0,1:11:08.49,1:11:19.54,中文,,0,0,0,,在这种情况下，它应该放在另一个单元格中。如果你只设计一个名为“类型”的列，你就强加了一种计算机科学家称之为“一对一关系”的东西。
Dialogue: 0,1:11:19.54,1:11:21.80,英文,,0,0,0,,Every show has one genre.
Dialogue: 0,1:11:19.54,1:11:21.80,中文,,0,0,0,,每个节目都只有一种类型。
Dialogue: 0,1:11:21.80,1:11:23.80,英文,,0,0,0,,And that's not necessarily a good thing.
Dialogue: 0,1:11:21.80,1:11:23.80,中文,,0,0,0,,这并不一定是件好事。
Dialogue: 0,1:11:23.80,1:11:28.64,英文,,0,0,0,,Or strictly speaking, it would be a many-to-one, because the same genre could belong to multiple shows.
Dialogue: 0,1:11:23.80,1:11:28.64,中文,,0,0,0,,或者严格来说，应该是“多对一”关系，因为同一种类型可以属于多个节目。
Dialogue: 0,1:11:28.64,1:11:31.76,英文,,0,0,0,,But each show could only have one genre in that case.
Dialogue: 0,1:11:28.64,1:11:31.76,中文,,0,0,0,,但在这种情况下，每个节目只能有一种类型。
Dialogue: 0,1:11:31.76,1:11:42.95,英文,,0,0,0,,What a relational database allows you to do, and relational is indeed the operative word, it allows you to factor out some of your information and then have maybe one show here in one row.
Dialogue: 0,1:11:31.76,1:11:42.95,中文,,0,0,0,,关系数据库允许你做的是——“关系”确实是关键词——它允许你提取出一些信息，然后在一行中只放一个节目。
Dialogue: 0,1:11:42.95,1:11:52.52,英文,,0,0,0,,But then in this genres table, you could have one row for that one show genre, or you could have two rows in the genres table for comedy and for drama.
Dialogue: 0,1:11:42.95,1:11:52.52,中文,,0,0,0,,然后在这个“类型”表中，你可以为这个节目的类型设置一行，或者你可以在“类型”表中设置两行，分别对应喜剧和戏剧。
Dialogue: 0,1:11:52.52,1:11:55.54,英文,,0,0,0,,Or if it has a third genre, you could just add another row here.
Dialogue: 0,1:11:52.52,1:11:55.54,中文,,0,0,0,,或者，如果它有第三种类型，你可以在这里再添加一行。
Dialogue: 0,1:11:55.54,1:11:57.74,英文,,0,0,0,,So you still have one row.
Dialogue: 0,1:11:55.54,1:11:57.74,中文,,0,0,0,,所以你仍然只有一行。
Dialogue: 0,1:11:57.74,1:12:06.25,英文,,0,0,0,,for the show itself with all the juiciest details, but a variable number of rows by having this relationship with another table.
Dialogue: 0,1:11:57.74,1:12:06.25,中文,,0,0,0,,用于存储节目本身的所有重要细节，但通过与另一个表建立这种关系，可以拥有可变数量的行。
Dialogue: 0,1:12:06.25,1:12:10.11,英文,,0,0,0,,Meanwhile, ratings work the same way, at least in this case.
Dialogue: 0,1:12:06.25,1:12:10.11,中文,,0,0,0,,同时，评分机制也以相同的方式运作，至少在这个例子中是这样。
Dialogue: 0,1:12:10.11,1:12:12.93,英文,,0,0,0,,A show has ID, title, year, and episodes.
Dialogue: 0,1:12:10.11,1:12:12.93,中文,,0,0,0,,一个电视剧有 id、标题、年份和剧集。
Dialogue: 0,1:12:12.93,1:12:23.68,英文,,0,0,0,,But if you want to figure out its rating, you have to kind of follow the arrow here, so to speak, and look up the corresponding show ID in this table, find the rating of that show, and the total number of ratings.
Dialogue: 0,1:12:12.93,1:12:23.68,中文,,0,0,0,,但如果你想知道它的评分，你必须沿着箭头，从这里查找到该剧在另一个表格中对应的 id，找到该剧的评分以及评分总数。
Dialogue: 0,1:12:23.68,1:12:26.62,英文,,0,0,0,,So that's been factored out, too, for better or for worse.
Dialogue: 0,1:12:23.68,1:12:26.62,中文,,0,0,0,,所以这也被分解出来了，无论好坏。
Dialogue: 0,1:12:26.62,1:12:28.70,英文,,0,0,0,,Now let's consider people.
Dialogue: 0,1:12:26.62,1:12:28.70,中文,,0,0,0,,现在让我们来看看人物。
Dialogue: 0,1:12:28.70,1:12:32.23,英文,,0,0,0,,People have just three columns, ID, name, and birth.
Dialogue: 0,1:12:28.70,1:12:32.23,中文,,0,0,0,,人物表只有三列，id、姓名和出生年份。
Dialogue: 0,1:12:32.23,1:12:38.23,英文,,0,0,0,,But there's no mention of the TV show in which people have starred or the TV shows that a person has written.
Dialogue: 0,1:12:32.23,1:12:38.23,中文,,0,0,0,,但没有提到人物出演过的电视剧或编写的电视剧。
Dialogue: 0,1:12:38.23,1:12:39.11,英文,,0,0,0,,Well, why is that?
Dialogue: 0,1:12:38.23,1:12:39.11,中文,,0,0,0,,这是为什么呢？
Dialogue: 0,1:12:39.11,1:12:45.58,英文,,0,0,0,,Well, if you just had a fourth column here called Show, well, you would have to decide what show is that person in.
Dialogue: 0,1:12:39.11,1:12:45.58,中文,,0,0,0,,如果你在这里添加第四列叫做“电视剧”，你就必须决定这个人出演的是哪一部电视剧。
Dialogue: 0,1:12:45.58,1:12:49.26,英文,,0,0,0,,And no one could ever act again in another show because there's no room to store the data.
Dialogue: 0,1:12:45.58,1:12:49.26,中文,,0,0,0,,并且没有人能够再出演其他电视剧了，因为没有空间存储数据。
Dialogue: 0,1:12:49.26,1:12:55.42,英文,,0,0,0,,But if someone, of course, a popular actor, can star in multiple shows, well, we could have
Dialogue: 0,1:12:49.26,1:12:55.42,中文,,0,0,0,,但是如果一个人，当然，一个受欢迎的演员，可以出演多部电视剧，我们可以这样做：
Dialogue: 0,1:12:55.42,1:13:02.49,英文,,0,0,0,,One ID for that person, one name, one birth year, obviously. Like, there's only one Steve Carell as an actor in the world of people.
Dialogue: 0,1:12:55.42,1:13:02.49,中文,,0,0,0,,为该演员设置一个 id，一个姓名，一个出生年份。例如，在人物的世界里只有一个史蒂夫·卡瑞尔。
Dialogue: 0,1:13:02.49,1:13:14.62,英文,,0,0,0,,But Steve Carell, in this example, could have his person ID, whatever his Harvard ID equivalent, Yale ID equivalent is, appear in multiple rows in this table so that it can be associated with multiple shows.
Dialogue: 0,1:13:02.49,1:13:14.62,中文,,0,0,0,,但是史蒂夫·卡瑞尔，在这个例子中，\N可以将他的人物 id（无论他的哈佛 id 或耶鲁 id 是什么）出现在这个表的多个行中，以便它可以与多部电视剧相关联。
Dialogue: 0,1:13:14.62,1:13:18.80,英文,,0,0,0,,And this allows you to create what's called a one-to-many relationship.
Dialogue: 0,1:13:14.62,1:13:18.80,中文,,0,0,0,,这允许你创建所谓的一对多关系。
Dialogue: 0,1:13:18.80,1:13:20.63,英文,,0,0,0,,Or technically, it's bidirectional.
Dialogue: 0,1:13:18.80,1:13:20.63,中文,,0,0,0,,或者从技术上讲，它是双向的。
Dialogue: 0,1:13:20.63,1:13:23.11,英文,,0,0,0,,It's a many-to-many relationship. Why?
Dialogue: 0,1:13:20.63,1:13:23.11,中文,,0,0,0,,这是一种多对多关系。为什么呢？
Dialogue: 0,1:13:23.11,1:13:29.17,英文,,0,0,0,,Well, one show can certainly have multiple people in it and multiple people writing for it, just in the real world.
Dialogue: 0,1:13:23.11,1:13:29.17,中文,,0,0,0,,因为一部电视剧肯定会有多位演员和编剧参与，这在现实世界中很常见。
Dialogue: 0,1:13:29.17,1:13:35.24,英文,,0,0,0,,But conversely, one person could certainly act in multiple shows or write multiple shows.
Dialogue: 0,1:13:29.17,1:13:35.24,中文,,0,0,0,,反过来说，一个人当然也可以出演多部电视剧或编写多部电视剧。
Dialogue: 0,1:13:35.24,1:13:38.48,英文,,0,0,0,,So this is what you get with relational databases.
Dialogue: 0,1:13:35.24,1:13:38.48,中文,,0,0,0,,这就是关系型数据库的优势。
Dialogue: 0,1:13:38.48,1:13:43.80,英文,,0,0,0,,You put your sort of canonical data for people in one place, for shows in another place.
Dialogue: 0,1:13:38.48,1:13:43.80,中文,,0,0,0,,你可以将人物的规范数据放在一个地方，将电视剧的数据放在另一个地方。
Dialogue: 0,1:13:43.80,1:13:49.04,英文,,0,0,0,,And then you use these additional tables to relate one thing to another.
Dialogue: 0,1:13:43.80,1:13:49.04,中文,,0,0,0,,然后你可以使用这些额外的表格将事物联系起来。
Dialogue: 0,1:13:49.04,1:13:50.39,英文,,0,0,0,,So we won't dwell on the pictures.
Dialogue: 0,1:13:49.04,1:13:50.39,中文,,0,0,0,,我们不细讲这些图片。
Dialogue: 0,1:13:50.39,1:13:54.35,英文,,0,0,0,,That's just if you can wrap your mind around the data set better that way.
Dialogue: 0,1:13:50.39,1:13:54.35,中文,,0,0,0,,这只是为了让你更好地理解数据集。
Dialogue: 0,1:13:54.35,1:13:55.85,英文,,0,0,0,,That's one way of thinking about it.
Dialogue: 0,1:13:54.35,1:13:55.85,中文,,0,0,0,,这是一种思考方式。
Dialogue: 0,1:13:55.85,1:14:00.42,英文,,0,0,0,,But recall that the code we just saw for the schema, again, escalated quickly.
Dialogue: 0,1:13:55.85,1:14:00.42,中文,,0,0,0,,但回想一下我们刚才看到的模式代码，它很快就变得复杂了。
Dialogue: 0,1:14:00.42,1:14:02.42,英文,,0,0,0,,There's a lot of keywords I haven't mentioned yet.
Dialogue: 0,1:14:00.42,1:14:02.42,中文,,0,0,0,,有很多关键词我还没提到。
Dialogue: 0,1:14:02.42,1:14:04.34,英文,,0,0,0,,But some of these are perhaps familiar.
Dialogue: 0,1:14:02.42,1:14:04.34,中文,,0,0,0,,但其中一些你可能很熟悉。
Dialogue: 0,1:14:04.34,1:14:06.31,英文,,0,0,0,,They're capitalized differently here.
Dialogue: 0,1:14:04.34,1:14:06.31,中文,,0,0,0,,它们在这里的大小写不同。
Dialogue: 0,1:14:06.31,1:14:10.69,英文,,0,0,0,,But integer is on the list here. Null is on the list, albeit technically not null.
Dialogue: 0,1:14:06.31,1:14:10.69,中文,,0,0,0,,但 Integer 在这里。 NULL 也在列表中，虽然技术上不是 NULL。
Dialogue: 0,1:14:10.69,1:14:21.22,英文,,0,0,0,,So let's tease apart some of these keywords and consider what they're actually doing for your database, because now we're exploring features that do not exist in the world of spreadsheets alone.
Dialogue: 0,1:14:10.69,1:14:21.22,中文,,0,0,0,,让我们来分析一下这些关键词，看看它们在数据库中究竟做了什么，因为现在我们要探索的是电子表格中不存在的功能。
Dialogue: 0,1:14:21.22,1:14:32.57,英文,,0,0,0,,So it turns out in a SQL database, specifically SQLite, which is the version of SQL we use in CS50 and which is commonly used for things like mobile applications nowadays, it's like a lightweight version of SQL.
Dialogue: 0,1:14:21.22,1:14:32.57,中文,,0,0,0,,事实证明，在一个 SQL 数据库中，特别是 sqlite（我们在 cs50 中使用的 SQL 版本，现在常用于移动应用程序），它就像一个轻量级的 SQL。
Dialogue: 0,1:14:32.57,1:14:37.11,英文,,0,0,0,,It's when you aren't trying to run Twitter and have billions and billions of rows necessarily.
Dialogue: 0,1:14:32.57,1:14:37.11,中文,,0,0,0,,当你不需要运行 Twitter 并且有数十亿行数据的时候，你就可以使用它。
Dialogue: 0,1:14:37.11,1:14:44.84,英文,,0,0,0,,You've got hundreds, thousands, tens of thousands, maybe even a few million, but not crazy numbers, crazy amounts of data.
Dialogue: 0,1:14:37.11,1:14:44.84,中文,,0,0,0,,你有成百上千，甚至数百万行数据，但不是海量数据。
Dialogue: 0,1:14:44.84,1:14:49.24,英文,,0,0,0,,In the world of SQLite specifically, there's these five data types.
Dialogue: 0,1:14:44.84,1:14:49.24,中文,,0,0,0,,在 sqlite 中，有这五种数据类型。
Dialogue: 0,1:14:49.24,1:14:52.38,英文,,0,0,0,,So just like in C, we had int and char and the like.
Dialogue: 0,1:14:49.24,1:14:52.38,中文,,0,0,0,,就像在 C 语言中，我们有 int、char 等等。
Dialogue: 0,1:14:52.38,1:14:54.28,英文,,0,0,0,,In SQL, we have these.
Dialogue: 0,1:14:52.38,1:14:54.28,中文,,0,0,0,,在 SQL 中，我们有这些。
Dialogue: 0,1:14:54.28,1:14:57.35,英文,,0,0,0,,Blob, which is kind of funny, but it just means binary large object.
Dialogue: 0,1:14:54.28,1:14:57.35,中文,,0,0,0,,Blob，这很有趣，它的意思是二进制大对象。
Dialogue: 0,1:14:57.35,1:15:03.05,英文,,0,0,0,,So it's like a binary data type, zeros and ones that aren't necessarily fitting into the other categories.
Dialogue: 0,1:14:57.35,1:15:03.05,中文,,0,0,0,,所以它就像一种二进制数据类型，0 和 1 不一定属于其他类别。
Dialogue: 0,1:15:03.05,1:15:05.47,英文,,0,0,0,,Integer, which of course is an integer as we know it.
Dialogue: 0,1:15:03.05,1:15:05.47,中文,,0,0,0,,Integer，也就是我们知道的整数。
Dialogue: 0,1:15:05.47,1:15:11.34,英文,,0,0,0,,Numeric, which is kind of a catch-all for numbers that are formatted specially, so like a date.
Dialogue: 0,1:15:05.47,1:15:11.34,中文,,0,0,0,,Numeric 数据类型，包含各种特殊格式的数字，例如日期。
Dialogue: 0,1:15:11.34,1:15:16.51,英文,,0,0,0,,It would be like year, year, year, year, dash month, month, dash day, day.
Dialogue: 0,1:15:11.34,1:15:16.51,中文,,0,0,0,,它可能是 年-月-日的格式。
Dialogue: 0,1:15:16.51,1:15:18.09,英文,,0,0,0,,And this is actually a wonderful thing.
Dialogue: 0,1:15:16.51,1:15:18.09,中文,,0,0,0,,这其实很棒。
Dialogue: 0,1:15:18.09,1:15:22.71,英文,,0,0,0,,Depending on the country you're from, you might think your date system in your country is great or it's horrible.
Dialogue: 0,1:15:18.09,1:15:22.71,中文,,0,0,0,,你可能会觉得你国家的日期系统很好用，也可能觉得很糟糕，这取决于你来自哪里。
Dialogue: 0,1:15:22.71,1:15:29.48,英文,,0,0,0,,The US system is horrible because we have month, Day and then year, which is impossible to sort.
Dialogue: 0,1:15:22.71,1:15:29.48,中文,,0,0,0,,美国的日期系统很糟糕，因为我们用月-日-年的格式，这根本无法排序。
Dialogue: 0,1:15:29.48,1:15:31.94,英文,,0,0,0,,It is the wrong way, objectively, to store data.
Dialogue: 0,1:15:29.48,1:15:31.94,中文,,0,0,0,,客观来说，这不是存储数据的正确方法。
Dialogue: 0,1:15:31.94,1:15:33.94,英文,,0,0,0,,And yet, here we are using this at scale.
Dialogue: 0,1:15:31.94,1:15:33.94,中文,,0,0,0,,然而，我们一直在大规模地使用它。
Dialogue: 0,1:15:33.94,1:15:35.62,英文,,0,0,0,,Other countries have gotten this better.
Dialogue: 0,1:15:33.94,1:15:35.62,中文,,0,0,0,,其他国家在这方面做得更好。
Dialogue: 0,1:15:35.62,1:15:38.89,英文,,0,0,0,,Numeric and SQL itself standardizes that stuff.
Dialogue: 0,1:15:35.62,1:15:38.89,中文,,0,0,0,,SQL 本身对这些内容进行了标准化。
Dialogue: 0,1:15:38.89,1:15:46.75,英文,,0,0,0,,So it doesn't matter what country you're from, you're storing your data in this particular way, for instance. Times are standardized and other types of numeric data as well.
Dialogue: 0,1:15:38.89,1:15:46.75,中文,,0,0,0,,所以无论你来自哪个国家，你都可以用这种特定的方式存储数据。例如，时间和其他类型的数值数据都是标准化的。
Dialogue: 0,1:15:46.75,1:15:52.58,英文,,0,0,0,,Real is synonymous with float, so something with a decimal point and some number of digits thereafter.
Dialogue: 0,1:15:46.75,1:15:52.58,中文,,0,0,0,,Real 类型等同于 float 类型，也就是带小数点的数字。
Dialogue: 0,1:15:52.58,1:15:55.71,英文,,0,0,0,,And then text is just for strings and the like.
Dialogue: 0,1:15:52.58,1:15:55.71,中文,,0,0,0,,Text 类型用于存储字符串等数据。
Dialogue: 0,1:15:55.71,1:15:59.77,英文,,0,0,0,,With other even fancier databases, like MySQL, PostgreSQL,
Dialogue: 0,1:15:55.71,1:15:59.77,中文,,0,0,0,,其他更高级的数据库，比如 MySQL、PostgreSQL，
Dialogue: 0,1:15:59.77,1:16:05.66,英文,,0,0,0,,Glorical and other products you might have heard of. There's even more data types where you have to make even finer-grained decisions.
Dialogue: 0,1:15:59.77,1:16:05.66,中文,,0,0,0,,还有 Glorical 以及其他你可能听说过的产品， 它们有更多的数据类型，你需要做出更细粒度的选择。
Dialogue: 0,1:16:05.66,1:16:07.98,英文,,0,0,0,,But for SQLite, it's indeed pretty lightweight.
Dialogue: 0,1:16:05.66,1:16:07.98,中文,,0,0,0,,但 sqlite 的确非常轻量级。
Dialogue: 0,1:16:07.98,1:16:12.26,英文,,0,0,0,,And you or we just have to decide the data types for each column in a table.
Dialogue: 0,1:16:07.98,1:16:12.26,中文,,0,0,0,,我们只需要决定表中每一列的数据类型。
Dialogue: 0,1:16:12.26,1:16:15.10,英文,,0,0,0,,But there's these additional constraints in the world of SQL.
Dialogue: 0,1:16:12.26,1:16:15.10,中文,,0,0,0,,但在 SQL 中还有一些额外的约束条件。
Dialogue: 0,1:16:15.10,1:16:21.30,英文,,0,0,0,,You can additionally say that Cells in this column may or may not be null.
Dialogue: 0,1:16:15.10,1:16:21.30,中文,,0,0,0,,你可以额外规定， 这一列的单元格是否可以为空。
Dialogue: 0,1:16:21.30,1:16:31.21,英文,,0,0,0,,So if you want to protect yourself from yourself so you don't screw up and insert a null, that is a blank value, you can explicitly design a table to have a column that cannot be null.
Dialogue: 0,1:16:21.30,1:16:31.21,中文,,0,0,0,,如果你想保护自己避免出错，插入空值，也就是空白值，你可以显式地设计一个表，让它的某一列不能为 NULL。
Dialogue: 0,1:16:31.21,1:16:39.19,英文,,0,0,0,,And so in fact, someone came up during the break to ask me about my having manually inserted SQL, quote unquote, SQL, into our favorites database.
Dialogue: 0,1:16:31.21,1:16:39.19,中文,,0,0,0,,事实上，休息时有人过来问我，关于我手动将 SQL（带引号的 SQL）插入到我们的 favorites 数据库中。
Dialogue: 0,1:16:39.19,1:16:40.61,英文,,0,0,0,,You might recall that I kind of cheated.
Dialogue: 0,1:16:39.19,1:16:40.61,中文,,0,0,0,,你可能还记得我耍了点小聪明。
Dialogue: 0,1:16:40.61,1:16:46.13,英文,,0,0,0,,I just inserted SQL, quote unquote, and 50-ville, the name of a new problem, quote unquote.
Dialogue: 0,1:16:40.61,1:16:46.13,中文,,0,0,0,,我只是插入了 SQL（带引号的），以及 50-ville（一个新问题的名称，带引号的）。
Dialogue: 0,1:16:46.13,1:16:49.25,英文,,0,0,0,,But what did I not insert into the database?
Dialogue: 0,1:16:46.13,1:16:49.25,中文,,0,0,0,,但是我没有在数据库中插入什么？
Dialogue: 0,1:16:49.25,1:16:50.09,英文,,0,0,0,,A timestamp.
Dialogue: 0,1:16:49.25,1:16:50.09,中文,,0,0,0,,时间戳。
Dialogue: 0,1:16:50.09,1:16:50.86,英文,,0,0,0,,And I could have.
Dialogue: 0,1:16:50.09,1:16:50.86,中文,,0,0,0,,我本来可以插入的。
Dialogue: 0,1:16:50.86,1:16:53.42,英文,,0,0,0,,I could have put the current day and time a few minutes ago.
Dialogue: 0,1:16:50.86,1:16:53.42,中文,,0,0,0,,我可以在几分钟前插入当前的日期和时间。
Dialogue: 0,1:16:53.42,1:16:54.42,英文,,0,0,0,,But I didn't.
Dialogue: 0,1:16:53.42,1:16:54.42,中文,,0,0,0,,但我没有。
Dialogue: 0,1:16:54.42,1:16:58.78,英文,,0,0,0,,And that's fine if it's acceptable to you and the product you're building.
Dialogue: 0,1:16:54.42,1:16:58.78,中文,,0,0,0,,如果你和你要构建的产品可以接受，那也没关系。
Dialogue: 0,1:16:58.78,1:17:00.30,英文,,0,0,0,,But I could have prevented that.
Dialogue: 0,1:16:58.78,1:17:00.30,中文,,0,0,0,,但我可以阻止这种情况发生。
Dialogue: 0,1:17:00.30,1:17:07.26,英文,,0,0,0,,If we had defined the table to have a timestamp column that isn't just text, but it's text that's not null,
Dialogue: 0,1:17:00.30,1:17:07.26,中文,,0,0,0,,如果我们将表定义为有一个 Timestamp 列，它不仅是文本，而且是不为空的文本，
Dialogue: 0,1:17:07.26,1:17:10.66,英文,,0,0,0,,SQL would have complained and would not have let me complete that insertion.
Dialogue: 0,1:17:07.26,1:17:10.66,中文,,0,0,0,,SQL 就会报错，不会让我完成插入操作。
Dialogue: 0,1:17:10.66,1:17:15.34,英文,,0,0,0,,So there's these kinds of built-in defenses that you don't necessarily get with a spreadsheet alone.
Dialogue: 0,1:17:10.66,1:17:15.34,中文,,0,0,0,,所以数据库有一些内置的防御机制，这些是电子表格所不具备的。
Dialogue: 0,1:17:15.34,1:17:17.19,英文,,0,0,0,,And unique means exactly that.
Dialogue: 0,1:17:15.34,1:17:17.19,中文,,0,0,0,,UNIQUE 的意思就是字面意思。
Dialogue: 0,1:17:17.19,1:17:30.31,英文,,0,0,0,,If you want to make sure that every row in that column is unique, maybe for email addresses, or in the US, social security numbers, or anything that you want to make sure you don't have two versions of, you can specify that the column is unique.
Dialogue: 0,1:17:17.19,1:17:30.31,中文,,0,0,0,,如果你想确保该列中的每一行都是唯一的，比如电子邮件地址，\N或者在美国的社会安全号码，或者任何你不想有两个版本的东西，你可以指定该列是唯一的。
Dialogue: 0,1:17:30.31,1:17:32.23,英文,,0,0,0,,And there's other such constraints as well.
Dialogue: 0,1:17:30.31,1:17:32.23,中文,,0,0,0,,还有其他类似的约束条件。
Dialogue: 0,1:17:32.23,1:17:37.18,英文,,0,0,0,,But again, this is just a list of features that you get. from a proper relational database.
Dialogue: 0,1:17:32.23,1:17:37.18,中文,,0,0,0,,但这只是一系列功能的列表，你可以从一个规范的关系数据库中获得这些功能。
Dialogue: 0,1:17:37.18,1:17:44.98,英文,,0,0,0,,But perhaps the most intellectually interesting one and the most powerful one is what's called here a primary key and a foreign key.
Dialogue: 0,1:17:37.18,1:17:44.98,中文,,0,0,0,,但也许最有趣、最强大的功能是这里所说的主键和外键。
Dialogue: 0,1:17:44.98,1:17:47.74,英文,,0,0,0,,And let me go back now to this output.
Dialogue: 0,1:17:44.98,1:17:47.74,中文,,0,0,0,,现在让我回到这个输出。
Dialogue: 0,1:17:47.74,1:17:55.33,英文,,0,0,0,,If we look at shows, you'll see that a show, again, has an ID, a title, a year, and a number of episodes.
Dialogue: 0,1:17:47.74,1:17:55.33,中文,,0,0,0,,如果我们来看 `shows` 表，你会发现，`shows` 表同样有一个 id、标题、年份和集数。
Dialogue: 0,1:17:55.33,1:17:57.23,英文,,0,0,0,,And now the data types might make sense.
Dialogue: 0,1:17:55.33,1:17:57.23,中文,,0,0,0,,现在数据类型应该讲得通了。
Dialogue: 0,1:17:57.23,1:18:02.34,英文,,0,0,0,,The ID, it turns out, just like a Harvard ID, a Yale ID, is going to be an integer, so a simple number.
Dialogue: 0,1:17:57.23,1:18:02.34,中文,,0,0,0,,事实证明，id 和哈佛 id、耶鲁 id 一样，是一个整数，也就是一个简单的数字。
Dialogue: 0,1:18:02.34,1:18:04.52,英文,,0,0,0,,The title, of course, is going to be text, but not null.
Dialogue: 0,1:18:02.34,1:18:04.52,中文,,0,0,0,,标题当然会是文本，但不能为空。
Dialogue: 0,1:18:04.52,1:18:07.26,英文,,0,0,0,,Like, it would be weird if a TV show had no name.
Dialogue: 0,1:18:04.52,1:18:07.26,中文,,0,0,0,,例如，一部电视剧没有名字就很奇怪。
Dialogue: 0,1:18:07.26,1:18:08.26,英文,,0,0,0,,Like, that can't be.
Dialogue: 0,1:18:07.26,1:18:08.26,中文,,0,0,0,,这是不可能的。
Dialogue: 0,1:18:08.26,1:18:10.88,英文,,0,0,0,,Like, the whole world would break, or your TV guide and whatnot.
Dialogue: 0,1:18:08.26,1:18:10.88,中文,,0,0,0,,那样的话，全世界都会乱套，你的电视指南什么的也都会乱套。
Dialogue: 0,1:18:10.88,1:18:13.72,英文,,0,0,0,,So that makes sense there to say not null.
Dialogue: 0,1:18:10.88,1:18:13.72,中文,,0,0,0,,所以在那里说非空是有道理的。
Dialogue: 0,1:18:13.72,1:18:16.03,英文,,0,0,0,,Year is numeric, so it's a standardized form.
Dialogue: 0,1:18:13.72,1:18:16.03,中文,,0,0,0,,年份是数字，所以它是一种标准化格式。
Dialogue: 0,1:18:16.03,1:18:19.31,英文,,0,0,0,,Episodes is an integer, like how many episodes have been produced.
Dialogue: 0,1:18:16.03,1:18:19.31,中文,,0,0,0,,`episodes` 是一个整数，表示已经制作了多少集。
Dialogue: 0,1:18:19.31,1:18:21.07,英文,,0,0,0,,And then lastly, notice this.
Dialogue: 0,1:18:19.31,1:18:21.07,中文,,0,0,0,,最后注意这一点。
Dialogue: 0,1:18:21.07,1:18:26.31,英文,,0,0,0,,The primary key of the shows table is apparently the column called ID.
Dialogue: 0,1:18:21.07,1:18:26.31,中文,,0,0,0,,`shows` 表的主键显然是名为 id 的列。
Dialogue: 0,1:18:26.31,1:18:27.93,英文,,0,0,0,,Mentioned a few lines earlier.
Dialogue: 0,1:18:26.31,1:18:27.93,中文,,0,0,0,,前面几行提到过。
Dialogue: 0,1:18:27.93,1:18:34.76,英文,,0,0,0,,This just means that the database will use the ID column as the unique identifier.
Dialogue: 0,1:18:27.93,1:18:34.76,中文,,0,0,0,,这仅仅意味着数据库将使用 id 列作为唯一标识符。
Dialogue: 0,1:18:34.76,1:18:43.56,英文,,0,0,0,,So it's similar to the unique keyword, but primary key just means the database is going to treat it as special, too, and make sure that it is uniquely identifying your data.
Dialogue: 0,1:18:34.76,1:18:43.56,中文,,0,0,0,,所以它类似于 `unique` 关键字，但主键仅仅意味着数据库也会将其视为特殊的，并确保它能唯一标识你的数据。
Dialogue: 0,1:18:43.56,1:18:45.50,英文,,0,0,0,,But what's interesting is this.
Dialogue: 0,1:18:43.56,1:18:45.50,中文,,0,0,0,,但有趣的是这一点。
Dialogue: 0,1:18:45.50,1:18:48.07,英文,,0,0,0,,Notice if I scroll back up to People,
Dialogue: 0,1:18:45.50,1:18:48.07,中文,,0,0,0,,注意，如果我向上滚动到 `People` 表，
Dialogue: 0,1:18:48.07,1:18:51.57,英文,,0,0,0,,People were sort of similarly structured, but with different attributes.
Dialogue: 0,1:18:48.07,1:18:51.57,中文,,0,0,0,,`People` 表的结构与之类似，但属性不同。
Dialogue: 0,1:18:51.57,1:18:58.94,英文,,0,0,0,,Like up here, we had a person has an ID, a name, a birth year, and a primary key of ID.
Dialogue: 0,1:18:51.57,1:18:58.94,中文,,0,0,0,,就像这里，我们有一个人，他有一个 id、一个名字、一个出生年份和一个 id 主键。
Dialogue: 0,1:18:58.94,1:19:01.20,英文,,0,0,0,,So ID is, again, integer.
Dialogue: 0,1:18:58.94,1:19:01.20,中文,,0,0,0,,所以 id 还是整数。
Dialogue: 0,1:19:01.20,1:19:06.59,英文,,0,0,0,,Name is text, but not null, because it'd be weird to have a human with absolutely no name textually.
Dialogue: 0,1:19:01.20,1:19:06.59,中文,,0,0,0,,姓名是文本，但不能为空，因为如果一个人文本上完全没有名字会很奇怪。
Dialogue: 0,1:19:06.59,1:19:07.95,英文,,0,0,0,,Birth is going to be numeric.
Dialogue: 0,1:19:06.59,1:19:07.95,中文,,0,0,0,,出生日期将是数字。
Dialogue: 0,1:19:07.95,1:19:10.93,英文,,0,0,0,,But the primary key of people is ID.
Dialogue: 0,1:19:07.95,1:19:10.93,中文,,0,0,0,,但 people 表的主键是 id。
Dialogue: 0,1:19:10.93,1:19:15.13,英文,,0,0,0,,as well. So those are the unique columns that the database will just treat special.
Dialogue: 0,1:19:10.93,1:19:15.13,中文,,0,0,0,,也是。所以这些是数据库将特殊对待的唯一列。
Dialogue: 0,1:19:15.13,1:19:15.97,英文,,0,0,0,,Why?
Dialogue: 0,1:19:15.13,1:19:15.97,中文,,0,0,0,,为什么？
Dialogue: 0,1:19:15.97,1:19:17.38,英文,,0,0,0,,Well, we just looked at shows.
Dialogue: 0,1:19:15.97,1:19:17.38,中文,,0,0,0,,我们刚刚看了 shows 表。
Dialogue: 0,1:19:17.38,1:19:19.04,英文,,0,0,0,,We just looked at people.
Dialogue: 0,1:19:17.38,1:19:19.04,中文,,0,0,0,,我们刚刚看了 people 表。
Dialogue: 0,1:19:19.04,1:19:22.58,英文,,0,0,0,,Let's focus now on this one down here, stars.
Dialogue: 0,1:19:19.04,1:19:22.58,中文,,0,0,0,,现在让我们关注一下 stars 表。
Dialogue: 0,1:19:22.58,1:19:25.26,英文,,0,0,0,,How do you determine who stars in a TV show?
Dialogue: 0,1:19:22.58,1:19:25.26,中文,,0,0,0,,如何确定谁出演了电视剧？
Dialogue: 0,1:19:25.26,1:19:28.32,英文,,0,0,0,,Well, we had two columns, the show ID and the person ID.
Dialogue: 0,1:19:25.26,1:19:28.32,中文,,0,0,0,,我们有两列，show_id 和 person_id。
Dialogue: 0,1:19:28.32,1:19:31.15,英文,,0,0,0,,This is the incarnation of a many-to-many relationship.
Dialogue: 0,1:19:28.32,1:19:31.15,中文,,0,0,0,,这就是多对多关系的体现。
Dialogue: 0,1:19:31.15,1:19:32.75,英文,,0,0,0,,One person could be in many shows.
Dialogue: 0,1:19:31.15,1:19:32.75,中文,,0,0,0,,一个人可以出演多部电视剧。
Dialogue: 0,1:19:32.75,1:19:35.85,英文,,0,0,0,,One show could certainly have many people in it or writing for it.
Dialogue: 0,1:19:32.75,1:19:35.85,中文,,0,0,0,,一部电视剧当然可以有很多人出演或编剧。
Dialogue: 0,1:19:35.85,1:19:37.27,英文,,0,0,0,,But notice this.
Dialogue: 0,1:19:35.85,1:19:37.27,中文,,0,0,0,,但是注意这一点。
Dialogue: 0,1:19:37.27,1:19:57.83,英文,,0,0,0,,Within this table of two columns, showId and personId, there's what's going to be called a foreign key called showId that references the shows table's id column, and then another foreign key called personId, though I could call these things in parentheses anything I want, that references the people table's id column.
Dialogue: 0,1:19:37.27,1:19:57.83,中文,,0,0,0,,在这张包含 show_id 和 person_id 两列的表中，有一个被称为外键的 show_id，\N它引用了 shows 表的 id 列，然后是另一个名为 person_id 的外键（尽管我可以在括号中随意命名），它引用了 people 表的 id 列。
Dialogue: 0,1:19:57.83,1:20:00.11,英文,,0,0,0,,Now, you're not going to often have to type commands like this.
Dialogue: 0,1:19:57.83,1:20:00.11,中文,,0,0,0,,通常，你不需要经常键入这样的命令。
Dialogue: 0,1:20:00.11,1:20:06.31,英文,,0,0,0,,Again, you set the database up once in the beginning, typically, maybe with some help from a TF, maybe with help of Google or the like.
Dialogue: 0,1:20:00.11,1:20:06.31,中文,,0,0,0,,同样，你通常只需在开始时设置一次数据库，可能需要 TF 的帮助，也可能需要 Google 等的帮助。
Dialogue: 0,1:20:06.31,1:20:12.90,英文,,0,0,0,,But once your database is designed, it's back to the crud, like create, read, update, delete, the selects, the inserts, the deletions, and the like.
Dialogue: 0,1:20:06.31,1:20:12.90,中文,,0,0,0,,但是一旦你的数据库设计好了，就回到了 CRUD，比如创建、读取、更新、删除，选择、插入、删除等等。
Dialogue: 0,1:20:12.90,1:20:14.52,英文,,0,0,0,,But what's this implying?
Dialogue: 0,1:20:12.90,1:20:14.52,中文,,0,0,0,,但这意味着什么？
Dialogue: 0,1:20:14.52,1:20:23.28,英文,,0,0,0,,These keywords, like primary key and foreign key, are what are doing in code what this picture was painting a moment ago.
Dialogue: 0,1:20:14.52,1:20:23.28,中文,,0,0,0,,这些关键字，如主键和外键，就是在代码中实现刚才图片所描绘的内容。
Dialogue: 0,1:20:23.28,1:20:27.59,英文,,0,0,0,,These lines here are drawn literally to line up with the corresponding things.
Dialogue: 0,1:20:23.28,1:20:27.59,中文,,0,0,0,,这些线条对应着相应的内容。
Dialogue: 0,1:20:27.59,1:20:30.89,英文,,0,0,0,,People's ID lines up with person ID.
Dialogue: 0,1:20:27.59,1:20:30.89,中文,,0,0,0,,People id 与 person_id 相对应。
Dialogue: 0,1:20:30.89,1:20:34.51,英文,,0,0,0,,Show's ID lines up with show ID.
Dialogue: 0,1:20:30.89,1:20:34.51,中文,,0,0,0,,shows_id 与 show_id 相对应。
Dialogue: 0,1:20:34.51,1:20:40.88,英文,,0,0,0,,And so you're just seeing graphical version, code version, graphical code that creates these relationships.
Dialogue: 0,1:20:34.51,1:20:40.88,中文,,0,0,0,,你看到的只是图形版本、代码版本以及创建这些关系的图形代码。
Dialogue: 0,1:20:40.88,1:20:42.72,英文,,0,0,0,,Now, given that.
Dialogue: 0,1:20:40.88,1:20:42.72,中文,,0,0,0,,现在，考虑到这一点。
Dialogue: 0,1:20:42.72,1:20:45.10,英文,,0,0,0,,Let's actually see what these things look like.
Dialogue: 0,1:20:42.72,1:20:45.10,中文,,0,0,0,,让我们看看这些东西是什么样子的。
Dialogue: 0,1:20:45.10,1:20:47.28,英文,,0,0,0,,So let me go back to VS Code here.
Dialogue: 0,1:20:45.10,1:20:47.28,中文,,0,0,0,,让我回到 VS Code。
Dialogue: 0,1:20:47.28,1:20:48.28,英文,,0,0,0,,Let me clear my screen.
Dialogue: 0,1:20:47.28,1:20:48.28,中文,,0,0,0,,让我清空屏幕。
Dialogue: 0,1:20:48.28,1:20:51.23,英文,,0,0,0,,I'm still within SQLite with shows.db.
Dialogue: 0,1:20:48.28,1:20:51.23,中文,,0,0,0,,我仍然在使用 shows.db 数据库。
Dialogue: 0,1:20:51.23,1:20:53.69,英文,,0,0,0,,Let me go ahead and do what I do with any new database.
Dialogue: 0,1:20:51.23,1:20:53.69,中文,,0,0,0,,让我像处理任何新数据库一样操作它。
Dialogue: 0,1:20:53.69,1:21:02.69,英文,,0,0,0,,If I ever download something or I'm trying to wrap my mind around a problem, usually it doesn't come with a pretty picture or a, you know, Three-hour lecture to explain what the data set is.
Dialogue: 0,1:20:53.69,1:21:02.69,中文,,0,0,0,,如果我下载了一些东西，或者我正在尝试理解一个问题，通常情况下，它不会附带漂亮的图片，也不会用三个小时的讲座来解释数据集是什么。
Dialogue: 0,1:21:02.69,1:21:07.44,英文,,0,0,0,,Rather, you just have the data set and your own knowledge of SQL. So let me play around.
Dialogue: 0,1:21:02.69,1:21:07.44,中文,,0,0,0,,相反，你只有数据集和你自己的 SQL 知识，所以让我来试试看。
Dialogue: 0,1:21:07.44,1:21:09.86,英文,,0,0,0,,So .schema shows me all of the tables.
Dialogue: 0,1:21:07.44,1:21:09.86,中文,,0,0,0,,`.schema` 会显示所有的数据表。
Dialogue: 0,1:21:09.86,1:21:10.88,英文,,0,0,0,,That might be a starting point.
Dialogue: 0,1:21:09.86,1:21:10.88,中文,,0,0,0,,这可能是一个起点。
Dialogue: 0,1:21:10.88,1:21:11.90,英文,,0,0,0,,OK, this is interesting.
Dialogue: 0,1:21:10.88,1:21:11.90,中文,,0,0,0,,这很有趣。
Dialogue: 0,1:21:11.90,1:21:13.74,英文,,0,0,0,,I know what people are.
Dialogue: 0,1:21:11.90,1:21:13.74,中文,,0,0,0,,我知道 `people` 是什么。
Dialogue: 0,1:21:13.74,1:21:16.56,英文,,0,0,0,,Let's go ahead and show me all the people.
Dialogue: 0,1:21:13.74,1:21:16.56,中文,,0,0,0,,让我们看看 `people` 表里的所有内容。
Dialogue: 0,1:21:16.56,1:21:18.76,英文,,0,0,0,,So SELECT star FROM people.
Dialogue: 0,1:21:16.56,1:21:18.76,中文,,0,0,0,,`SELECT * FROM people`。
Dialogue: 0,1:21:18.76,1:21:23.77,英文,,0,0,0,,I'm just trying to wrap my mind around what this data set looks like in a more user-friendly way.
Dialogue: 0,1:21:18.76,1:21:23.77,中文,,0,0,0,,我只是想以一种更友好的方式来理解这个数据集是什么样子的。
Dialogue: 0,1:21:23.77,1:21:26.79,英文,,0,0,0,,OK, that's already a lot of people.
Dialogue: 0,1:21:23.77,1:21:26.79,中文,,0,0,0,,这里已经有很多了。
Dialogue: 0,1:21:26.79,1:21:28.09,英文,,0,0,0,,As you see, the year is flying by.
Dialogue: 0,1:21:26.79,1:21:28.09,中文,,0,0,0,,你看，这一年过得真快。
Dialogue: 0,1:21:28.09,1:21:31.37,英文,,0,0,0,,There's been a lot of people in the TV business.
Dialogue: 0,1:21:28.09,1:21:31.37,中文,,0,0,0,,电视行业里有很多人。
Dialogue: 0,1:21:31.37,1:21:33.58,英文,,0,0,0,,So this was maybe not the best query to run.
Dialogue: 0,1:21:31.37,1:21:33.58,中文,,0,0,0,,所以这可能不是最好的查询方式。
Dialogue: 0,1:21:33.58,1:21:40.78,英文,,0,0,0,,But this is indicative of just how large this data set is from IMDB.
Dialogue: 0,1:21:33.58,1:21:40.78,中文,,0,0,0,,但这表明了 IMDB 的数据集有多大。
Dialogue: 0,1:21:40.78,1:21:44.96,英文,,0,0,0,,Whenever you lose control over your computer, Control-C is your friend to interrupt.
Dialogue: 0,1:21:40.78,1:21:44.96,中文,,0,0,0,,每当你的电脑失控时，Control-C 是你中断程序的好帮手。
Dialogue: 0,1:21:44.96,1:21:46.44,英文,,0,0,0,,What would have been better?
Dialogue: 0,1:21:44.96,1:21:46.44,中文,,0,0,0,,那怎样做会更好呢？
Dialogue: 0,1:21:46.44,1:21:50.12,英文,,0,0,0,,Because I don't think I need to know all of the million people in the world.
Dialogue: 0,1:21:46.44,1:21:50.12,中文,,0,0,0,,因为我觉得我不需要知道世界上所有这上百万人。
Dialogue: 0,1:21:50.12,1:21:52.14,英文,,0,0,0,,I could do, like, limit me to 10 people.
Dialogue: 0,1:21:50.12,1:21:52.14,中文,,0,0,0,,我可以这样做，比如，限制在 10 个人以内。
Dialogue: 0,1:21:52.14,1:21:59.72,英文,,0,0,0,,All right, and that's enough now to get a sense of, like, Fred Astaire has an ID of 1, first person ever, birth year of 1899.
Dialogue: 0,1:21:52.14,1:21:59.72,中文,,0,0,0,,现在这足以让我们了解到，比如，Fred Astaire 的 id 是 1，第一个记录的人，出生年份是 1899 年。
Dialogue: 0,1:21:59.72,1:22:07.63,英文,,0,0,0,,Lauren Bacall and all of these other people from yesteryear, you see that they are the first 10 people in the database.
Dialogue: 0,1:21:59.72,1:22:07.63,中文,,0,0,0,,Lauren Bacall 以及所有这些过去的人物，你可以看到他们是数据库中的前 10 个人。
Dialogue: 0,1:22:07.63,1:22:09.09,英文,,0,0,0,,So there's an example of some of the data.
Dialogue: 0,1:22:07.63,1:22:09.09,中文,,0,0,0,,这就是一些数据的例子。
Dialogue: 0,1:22:09.09,1:22:12.55,英文,,0,0,0,,Now, if I want to wrap my mind around what a show is, you know, I know it technically.
Dialogue: 0,1:22:09.09,1:22:12.55,中文,,0,0,0,,现在，如果我想了解什么是“剧集”，技术上我已经知道了。
Dialogue: 0,1:22:12.55,1:22:13.89,英文,,0,0,0,,I know it from the picture.
Dialogue: 0,1:22:12.55,1:22:13.89,中文,,0,0,0,,我从图片中了解到的。
Dialogue: 0,1:22:13.89,1:22:15.33,英文,,0,0,0,,But let's just look at some raw data.
Dialogue: 0,1:22:13.89,1:22:15.33,中文,,0,0,0,,但我们来看看一些原始数据。
Dialogue: 0,1:22:15.33,1:22:17.76,英文,,0,0,0,,So instead of saying select star from people,
Dialogue: 0,1:22:15.33,1:22:17.76,中文,,0,0,0,,所以与其说 SELECT * FROM people，
Dialogue: 0,1:22:17.76,1:22:21.74,英文,,0,0,0,,Let me go ahead and select star from shows limit 10.
Dialogue: 0,1:22:17.76,1:22:21.74,中文,,0,0,0,,我直接运行 SELECT * FROM shows LIMIT 10。
Dialogue: 0,1:22:21.74,1:22:26.24,英文,,0,0,0,,And OK, I've only heard of or seen a couple of these.
Dialogue: 0,1:22:21.74,1:22:26.24,中文,,0,0,0,,我只听说过或者看过其中的几部剧。
Dialogue: 0,1:22:26.24,1:22:28.04,英文,,0,0,0,,But these are older shows at that.
Dialogue: 0,1:22:26.24,1:22:28.04,中文,,0,0,0,,但这些都是比较老的剧集了。
Dialogue: 0,1:22:28.04,1:22:33.09,英文,,0,0,0,,But I see that every show has an ID, a title, a year in which it debuted, and a number of episodes.
Dialogue: 0,1:22:28.04,1:22:33.09,中文,,0,0,0,,但我看到每个剧集都有一个 id，一个标题，一个首播年份，以及剧集数量。
Dialogue: 0,1:22:33.09,1:22:35.43,英文,,0,0,0,,But perhaps most opaque is going to be this.
Dialogue: 0,1:22:33.09,1:22:35.43,中文,,0,0,0,,但也许最难理解的是这个。
Dialogue: 0,1:22:35.43,1:22:42.33,英文,,0,0,0,,Select star from stars, where this is the table that associates people with shows.
Dialogue: 0,1:22:35.43,1:22:42.33,中文,,0,0,0,,从 stars 表中选择 star，这个表将人物和节目关联起来。
Dialogue: 0,1:22:42.33,1:22:47.14,英文,,0,0,0,,Am I going to see any names or show titles here?
Dialogue: 0,1:22:42.33,1:22:47.14,中文,,0,0,0,,我会在这里看到任何姓名或节目名称吗？
Dialogue: 0,1:22:47.14,1:22:49.32,英文,,0,0,0,,Not according to the definition we saw earlier.
Dialogue: 0,1:22:47.14,1:22:49.32,中文,,0,0,0,,根据我们之前看到的定义，不会。
Dialogue: 0,1:22:49.32,1:22:50.48,英文,,0,0,0,,Oh, I should have done my limit.
Dialogue: 0,1:22:49.32,1:22:50.48,中文,,0,0,0,,我应该限制一下输出结果。
Dialogue: 0,1:22:50.48,1:22:51.78,英文,,0,0,0,,Let me interrupt that.
Dialogue: 0,1:22:50.48,1:22:51.78,中文,,0,0,0,,让我打断一下。
Dialogue: 0,1:22:51.78,1:22:52.73,英文,,0,0,0,,Let me do that again.
Dialogue: 0,1:22:51.78,1:22:52.73,中文,,0,0,0,,让我再做一次。
Dialogue: 0,1:22:52.73,1:22:54.43,英文,,0,0,0,,Limit 10.
Dialogue: 0,1:22:52.73,1:22:54.43,中文,,0,0,0,,LIMIT 10。
Dialogue: 0,1:22:54.43,1:22:55.17,英文,,0,0,0,,No.
Dialogue: 0,1:22:54.43,1:22:55.17,中文,,0,0,0,,没有。
Dialogue: 0,1:22:55.17,1:23:03.62,英文,,0,0,0,,And this is where now you're definitely in the programmer world, because this would be the most annoying spreadsheet to use on your Mac or PC ever, if you just had a sheet.
Dialogue: 0,1:22:55.17,1:23:03.62,中文,,0,0,0,,这就是你现在绝对处于程序员世界的地方，因为如果你的 Mac 或 PC 上只有一个工作表，这将是你用过的最烦人的电子表格。
Dialogue: 0,1:23:03.62,1:23:08.92,英文,,0,0,0,,With all of these numbers that associates one thing with the other, like, my god, how do you figure out who this is or what this is?
Dialogue: 0,1:23:03.62,1:23:08.92,中文,,0,0,0,,所有这些数字都把一件事和另一件事联系起来，比如，天哪，你怎么知道这是谁或者这是什么？
Dialogue: 0,1:23:08.92,1:23:12.93,英文,,0,0,0,,You have to manually Control-F or Command-F looking for the data.
Dialogue: 0,1:23:08.92,1:23:12.93,中文,,0,0,0,,你必须手动按 Control-F 或 Command-F 来查找数据。
Dialogue: 0,1:23:12.93,1:23:14.45,英文,,0,0,0,,But a database doesn't care.
Dialogue: 0,1:23:12.93,1:23:14.45,中文,,0,0,0,,但数据库不在乎。
Dialogue: 0,1:23:14.45,1:23:18.23,英文,,0,0,0,,Once you know SQL, you can sort of stitch these things back together.
Dialogue: 0,1:23:14.45,1:23:18.23,中文,,0,0,0,,一旦你懂 SQL，你就可以把这些东西重新拼接起来。
Dialogue: 0,1:23:18.23,1:23:21.55,英文,,0,0,0,,So what you're seeing here are foreign keys.
Dialogue: 0,1:23:18.23,1:23:21.55,中文,,0,0,0,,所以你在这里看到的是外键。
Dialogue: 0,1:23:21.55,1:23:22.67,英文,,0,0,0,,Foreign keys, why?
Dialogue: 0,1:23:21.55,1:23:22.67,中文,,0,0,0,,外键，为什么？
Dialogue: 0,1:23:22.67,1:23:31.18,英文,,0,0,0,,Because show ID corresponds to the same numbers from that other table called shows that has a proper primary key called ID.
Dialogue: 0,1:23:22.67,1:23:31.18,中文,,0,0,0,,因为 show_id 对应于另一个名为 shows 的表中的相同数字，该表有一个名为 id 的主键。
Dialogue: 0,1:23:31.18,1:23:39.12,英文,,0,0,0,,Person ID is a foreign key in this context because it refers to numbers that belong to, really, the people table and its ID column.
Dialogue: 0,1:23:31.18,1:23:39.12,中文,,0,0,0,,person_id 在这种情况下是一个外键，因为它指的是属于 people 表及其 id 列的数字。
Dialogue: 0,1:23:39.12,1:23:44.11,英文,,0,0,0,,So this is just a way of somehow linking them. And so if you think of, I always think of this in my mind's eye as this.
Dialogue: 0,1:23:39.12,1:23:44.11,中文,,0,0,0,,所以这只是以某种方式将它们链接起来的一种方式。我总是在脑海中把这个想象成这样。
Dialogue: 0,1:23:44.11,1:23:51.75,英文,,0,0,0,,If this is the people table, this is the shows table, And there's this middle table in between, the stars table.
Dialogue: 0,1:23:44.11,1:23:51.75,中文,,0,0,0,,如果这是 people 表，这是 shows 表，那么中间有一个 stars 表。
Dialogue: 0,1:23:51.75,1:23:58.92,英文,,0,0,0,,There's some way of stitching those two together by lining up the IDs of one with the other and getting back some more data.
Dialogue: 0,1:23:51.75,1:23:58.92,中文,,0,0,0,,可以通过将一个表的 id 与另一个表的 id 对齐并获取更多数据来将这两个表拼接在一起。
Dialogue: 0,1:23:58.92,1:24:01.64,英文,,0,0,0,,So let's actually play with some of this data.
Dialogue: 0,1:23:58.92,1:24:01.64,中文,,0,0,0,,我们来实际操作一下这些数据。
Dialogue: 0,1:24:01.64,1:24:05.50,英文,,0,0,0,,How about we start where we emphasized earlier, genres.
Dialogue: 0,1:24:01.64,1:24:05.50,中文,,0,0,0,,先从我们之前强调的“类型”开始。
Dialogue: 0,1:24:05.50,1:24:08.32,英文,,0,0,0,,So let me go ahead and take a quick look at all of the genres in this database.
Dialogue: 0,1:24:05.50,1:24:08.32,中文,,0,0,0,,我先快速浏览一下数据库中的所有类型。
Dialogue: 0,1:24:08.32,1:24:10.59,英文,,0,0,0,,So select star from genres.
Dialogue: 0,1:24:08.32,1:24:10.59,中文,,0,0,0,,执行 `SELECT * FROM genres`。
Dialogue: 0,1:24:10.59,1:24:15.25,英文,,0,0,0,,Star is usually going to be a little overwhelming, but it just gives me a sense of what the data is.
Dialogue: 0,1:24:10.59,1:24:15.25,中文,,0,0,0,,`star` 通常会返回很多数据，但这让我们对数据内容有个大致了解。
Dialogue: 0,1:24:15.25,1:24:19.47,英文,,0,0,0,,But let's actually look at, um, Let's go look at all of them there.
Dialogue: 0,1:24:15.25,1:24:19.47,中文,,0,0,0,,但我们来看看，我们来看看所有数据。
Dialogue: 0,1:24:19.47,1:24:21.01,英文,,0,0,0,,OK, that's a lot.
Dialogue: 0,1:24:19.47,1:24:21.01,中文,,0,0,0,,数据真多。
Dialogue: 0,1:24:21.01,1:24:24.66,英文,,0,0,0,,These are all official genres from IMDb.
Dialogue: 0,1:24:21.01,1:24:24.66,中文,,0,0,0,,这些都是来自 IMDb 的官方类型。
Dialogue: 0,1:24:24.66,1:24:25.76,英文,,0,0,0,,OK, it went OK.
Dialogue: 0,1:24:24.66,1:24:25.76,中文,,0,0,0,,还可以。
Dialogue: 0,1:24:25.76,1:24:27.18,英文,,0,0,0,,It wasn't terribly long.
Dialogue: 0,1:24:25.76,1:24:27.18,中文,,0,0,0,,数据也不是特别多。
Dialogue: 0,1:24:27.18,1:24:28.42,英文,,0,0,0,,Let me filter that down.
Dialogue: 0,1:24:27.18,1:24:28.42,中文,,0,0,0,,我来筛选一下。
Dialogue: 0,1:24:28.42,1:24:36.13,英文,,0,0,0,,So from genres where genre equals comedy, capital C, just based on the data I'm seeing.
Dialogue: 0,1:24:28.42,1:24:36.13,中文,,0,0,0,,执行 `FROM genres WHERE genre equals Comedy`，根据我看到的数据，“Comedy”的首字母要大写。
Dialogue: 0,1:24:36.13,1:24:38.43,英文,,0,0,0,,OK, so what am I seeing now?
Dialogue: 0,1:24:36.13,1:24:38.43,中文,,0,0,0,,好，现在看到了什么？
Dialogue: 0,1:24:38.43,1:24:42.79,英文,,0,0,0,,And in fact, let me limit this arbitrarily to 10, though I could limit it to anything I want.
Dialogue: 0,1:24:38.43,1:24:42.79,中文,,0,0,0,,我随意地将结果限制为 10 个，当然也可以限制为任何数量。
Dialogue: 0,1:24:42.79,1:24:45.13,英文,,0,0,0,,Here are 10 comedies.
Dialogue: 0,1:24:42.79,1:24:45.13,中文,,0,0,0,,这里有 10 部喜剧。
Dialogue: 0,1:24:45.13,1:24:46.23,英文,,0,0,0,,What are they?
Dialogue: 0,1:24:45.13,1:24:46.23,中文,,0,0,0,,它们是什么？
Dialogue: 0,1:24:46.23,1:24:47.31,英文,,0,0,0,,Well, who the heck knows?
Dialogue: 0,1:24:46.23,1:24:47.31,中文,,0,0,0,,谁知道呢？
Dialogue: 0,1:24:47.31,1:24:49.59,英文,,0,0,0,,Like, all I know are the 10 show IDs.
Dialogue: 0,1:24:47.31,1:24:49.59,中文,,0,0,0,,我只知道这 10 个节目的 id。
Dialogue: 0,1:24:49.59,1:24:51.20,英文,,0,0,0,,Now, I could do something like this.
Dialogue: 0,1:24:49.59,1:24:51.20,中文,,0,0,0,,现在，我可以这样做。
Dialogue: 0,1:24:51.20,1:24:55.66,英文,,0,0,0,,As we've seen before with SQL, I could do, all right, well, let's figure out what this show ID is.
Dialogue: 0,1:24:51.20,1:24:55.66,中文,,0,0,0,,就像我们之前在 SQL 中看到的，我可以这样做，好吧，让我们来看看这个show_id 是什么。
Dialogue: 0,1:24:55.66,1:25:04.18,英文,,0,0,0,,Select star from shows where the ID of the show I'm looking for equals what?
Dialogue: 0,1:24:55.66,1:25:04.18,中文,,0,0,0,,从 shows 表中选择 star，其中节目的 id 等于多少？
Dialogue: 0,1:25:04.18,1:25:06.90,英文,,0,0,0,,6, 2, 6, 1, 4, semicolon.
Dialogue: 0,1:25:04.18,1:25:06.90,中文,,0,0,0,,6、2、6、1、4，分号。
Dialogue: 0,1:25:06.90,1:25:10.77,英文,,0,0,0,,So I could manually look it up by cross-referencing the other table.
Dialogue: 0,1:25:06.90,1:25:10.77,中文,,0,0,0,,我可以通过交叉引用另一个表手动查找。
Dialogue: 0,1:25:10.77,1:25:14.87,英文,,0,0,0,,OK, so that was the show in question there, the first comedy in the data set.
Dialogue: 0,1:25:10.77,1:25:14.87,中文,,0,0,0,,这就是我们要找的节目，数据集中第一个喜剧。
Dialogue: 0,1:25:14.87,1:25:16.41,英文,,0,0,0,,Let me look up the second one.
Dialogue: 0,1:25:14.87,1:25:16.41,中文,,0,0,0,,让我看看第二个。
Dialogue: 0,1:25:16.41,1:25:20.72,英文,,0,0,0,,So instead of that, let's do 6, 3, 8, 8, 1, Enter.
Dialogue: 0,1:25:16.41,1:25:20.72,中文,,0,0,0,,所以与其那样，我们输入 6、3、8、8、1，回车。
Dialogue: 0,1:25:20.72,1:25:22.40,英文,,0,0,0,,OK, so that's that show.
Dialogue: 0,1:25:20.72,1:25:22.40,中文,,0,0,0,,就是那个节目。
Dialogue: 0,1:25:22.40,1:25:23.64,英文,,0,0,0,,And let's do one more.
Dialogue: 0,1:25:22.40,1:25:23.64,中文,,0,0,0,,我们再来看一个。
Dialogue: 0,1:25:23.64,1:25:28.86,英文,,0,0,0,,And suffice it to say, this is just getting tedious and vulnerable to mistakes quickly.
Dialogue: 0,1:25:23.64,1:25:28.86,中文,,0,0,0,,可以说，这只会变得乏味且容易出错。
Dialogue: 0,1:25:28.86,1:25:31.71,英文,,0,0,0,,This surely can't be the way to do this.
Dialogue: 0,1:25:28.86,1:25:31.71,中文,,0,0,0,,这肯定不是正确的方法。
Dialogue: 0,1:25:31.71,1:25:35.51,英文,,0,0,0,,And indeed, SQL is going to let us do this a little more powerfully instead.
Dialogue: 0,1:25:31.71,1:25:35.51,中文,,0,0,0,,实际上，SQL 可以让我们更高效地完成这项工作。
Dialogue: 0,1:25:35.51,1:25:42.56,英文,,0,0,0,,Let's do this. Instead of getting this table temporarily with all these show IDs and all these genres, let's refine the query.
Dialogue: 0,1:25:35.51,1:25:42.56,中文,,0,0,0,,我们来试试这个。与其临时获取包含所有show_id 和所有类型的表格，不如优化一下查询。
Dialogue: 0,1:25:42.56,1:25:52.05,英文,,0,0,0,,So let's just select the show ID from the genres table where the genre equals, quote, unquote, comedy.
Dialogue: 0,1:25:42.56,1:25:52.05,中文,,0,0,0,,我们只从 genres 表中选择show_id，其中类型等于“喜剧”。
Dialogue: 0,1:25:52.05,1:25:56.65,英文,,0,0,0,,Now I have a big list of show IDs, all of which are comedy.
Dialogue: 0,1:25:52.05,1:25:56.65,中文,,0,0,0,,现在我有一个很大的show_id 列表，所有这些都是喜剧。
Dialogue: 0,1:25:56.65,1:25:57.29,英文,,0,0,0,,How many?
Dialogue: 0,1:25:56.65,1:25:57.29,中文,,0,0,0,,有多少个？
Dialogue: 0,1:25:57.29,1:25:58.84,英文,,0,0,0,,Well, I can combine ideas from earlier.
Dialogue: 0,1:25:57.29,1:25:58.84,中文,,0,0,0,,我可以结合之前的想法。
Dialogue: 0,1:25:58.84,1:26:03.74,英文,,0,0,0,,I can just count all of those show IDs, or star if I want to just do that too.
Dialogue: 0,1:25:58.84,1:26:03.74,中文,,0,0,0,,我可以统计所有这些show_id，或者如果我想的话，也可以统计星号。
Dialogue: 0,1:26:03.74,1:26:09.92,英文,,0,0,0,,But I can count all those show IDs, 48,706 comedies in IMDB's database for TV shows.
Dialogue: 0,1:26:03.74,1:26:09.92,中文,,0,0,0,,但我可以统计所有这些show_id，IMDB 数据库中有 48,706 部喜剧电视剧。
Dialogue: 0,1:26:09.92,1:26:11.20,英文,,0,0,0,,So it feels like a lot.
Dialogue: 0,1:26:09.92,1:26:11.20,中文,,0,0,0,,感觉很多。
Dialogue: 0,1:26:11.20,1:26:18.20,英文,,0,0,0,,But how can I now use that information and get back the titles of comedies in the database without doing it manually?
Dialogue: 0,1:26:11.20,1:26:18.20,中文,,0,0,0,,但是，如何使用这些信息并在不手动操作的情况下获取数据库中喜剧的标题？
Dialogue: 0,1:26:18.20,1:26:19.73,英文,,0,0,0,,Well, let's do this.
Dialogue: 0,1:26:18.20,1:26:19.73,中文,,0,0,0,,我们来试试这个。
Dialogue: 0,1:26:19.73,1:26:21.27,英文,,0,0,0,,I have a moment ago this query.
Dialogue: 0,1:26:19.73,1:26:21.27,中文,,0,0,0,,我刚才查了下这个。
Dialogue: 0,1:26:21.27,1:26:29.51,英文,,0,0,0,,Select the show ID from genres where the current genre is, quote unquote, comedy.
Dialogue: 0,1:26:21.27,1:26:29.51,中文,,0,0,0,,从 genres 表中选出 genre 为 “Comedy” 的剧的 id。
Dialogue: 0,1:26:29.51,1:26:33.04,英文,,0,0,0,,What if I kind of nest these queries, kind of like grade school math in parentheses?
Dialogue: 0,1:26:29.51,1:26:33.04,中文,,0,0,0,,如果我把这些查询嵌套起来，就像小学数学里的括号一样，会怎么样？
Dialogue: 0,1:26:33.04,1:26:36.20,英文,,0,0,0,,What if I combine this whole thing in parentheses?
Dialogue: 0,1:26:33.04,1:26:36.20,中文,,0,0,0,,如果我把整个东西都放在括号里呢？
Dialogue: 0,1:26:36.20,1:26:38.08,英文,,0,0,0,,And now let me select what I really want.
Dialogue: 0,1:26:36.20,1:26:38.08,中文,,0,0,0,,现在让我来选择我真正想要的。
Dialogue: 0,1:26:38.08,1:26:43.09,英文,,0,0,0,,Let me go ahead and select, how about the title
Dialogue: 0,1:26:38.08,1:26:43.09,中文,,0,0,0,,让我继续，选择，比如标题。
Dialogue: 0,1:26:43.09,1:26:52.63,英文,,0,0,0,,of all shows where the ID of the show is in this list of show IDs.
Dialogue: 0,1:26:43.09,1:26:52.63,中文,,0,0,0,,所有 id 在这个 id 列表中的剧的标题。
Dialogue: 0,1:26:52.63,1:27:04.81,英文,,0,0,0,,So if you agree that the shows table has an ID column, which is otherwise known as its primary key, the unique ID that identifies it, just like our Harvard IDs, our Yale IDs,
Dialogue: 0,1:26:52.63,1:27:04.81,中文,,0,0,0,,如果你们认同 shows 表有一个 id 列，也就是它的主键，用于标识它的唯一 id，就像我们的哈佛 id、耶鲁 id 一样，
Dialogue: 0,1:27:04.81,1:27:17.81,英文,,0,0,0,,and you agree that per a moment ago, this shorter query will give me back just the show IDs of all of the comedies in the database, you can actually combine or nest these queries together.
Dialogue: 0,1:27:04.81,1:27:17.81,中文,,0,0,0,,并且你们认同刚才说的，这个较短的查询只会返回数据库中所有喜剧的 id，那么你们就可以将这些查询组合或嵌套在一起。
Dialogue: 0,1:27:17.81,1:27:22.11,英文,,0,0,0,,It's going to respect SQLite order of operations with parentheses, just like grade school math.
Dialogue: 0,1:27:17.81,1:27:22.11,中文,,0,0,0,,它会像小学数学一样，按照 sqlite 的运算顺序来处理括号。
Dialogue: 0,1:27:22.11,1:27:24.03,英文,,0,0,0,,The thing in parentheses will be executed first.
Dialogue: 0,1:27:22.11,1:27:24.03,中文,,0,0,0,,括号里的内容会先执行。
Dialogue: 0,1:27:24.03,1:27:27.58,英文,,0,0,0,,That gives it back a list of IDs, like what, 48,000 IDs.
Dialogue: 0,1:27:24.03,1:27:27.58,中文,,0,0,0,,它会返回一个 id 列表，比如 48,000 个 id。
Dialogue: 0,1:27:27.58,1:27:36.50,英文,,0,0,0,,And then this query, the outer query, is going to get the title from all of the shows where the ID of the show is in that big list of 48,000.
Dialogue: 0,1:27:27.58,1:27:36.50,中文,,0,0,0,,然后这个查询，也就是外部查询，会从所有 id 在这 48,000 个 id 列表中的剧中获取标题。
Dialogue: 0,1:27:36.50,1:27:40.83,英文,,0,0,0,,So if I now execute these together, I think the list is still going to be a little long.
Dialogue: 0,1:27:36.50,1:27:40.83,中文,,0,0,0,,如果我现在把它们一起执行，我认为列表还是会有点长。
Dialogue: 0,1:27:40.83,1:27:42.67,英文,,0,0,0,,But let me execute it together.
Dialogue: 0,1:27:40.83,1:27:42.67,中文,,0,0,0,,但我还是把它一起执行。
Dialogue: 0,1:27:42.67,1:27:46.91,英文,,0,0,0,,Now I see this long list of outputs, a little overwhelming.
Dialogue: 0,1:27:42.67,1:27:46.91,中文,,0,0,0,,现在我看到了这个长长的输出列表，有点太多了。
Dialogue: 0,1:27:46.91,1:27:50.83,英文,,0,0,0,,Let's go ahead and maybe limit it to just 10.
Dialogue: 0,1:27:46.91,1:27:50.83,中文,,0,0,0,,我们把它限制到 10 个吧。
Dialogue: 0,1:27:50.83,1:27:52.53,英文,,0,0,0,,as before for discussion's sake.
Dialogue: 0,1:27:50.83,1:27:52.53,中文,,0,0,0,,就像之前为了讨论方便一样。
Dialogue: 0,1:27:52.53,1:28:01.52,英文,,0,0,0,,And now I see 10 comedies ordered arbitrarily from however they're in the database that happen to indeed have comedy as their genre.
Dialogue: 0,1:27:52.53,1:28:01.52,中文,,0,0,0,,现在我看到了 10 部喜剧，它们的排序是随机的，取决于它们在数据库中的顺序，而且它们确实是喜剧类型。
Dialogue: 0,1:28:01.52,1:28:04.22,英文,,0,0,0,,If I want to do this a little more cleanly, I could do this.
Dialogue: 0,1:28:01.52,1:28:04.22,中文,,0,0,0,,如果我想做得更简洁一点，我可以这样做。
Dialogue: 0,1:28:04.22,1:28:13.43,英文,,0,0,0,,Let's see. Why don't I order by title ascending order, which is alphabetically, or the default is also ascending, limit 10.
Dialogue: 0,1:28:04.22,1:28:13.43,中文,,0,0,0,,我们来看看。 我不用默认的升序，而是按标题升序排列，也就是按字母顺序排列，限制为 10 个。
Dialogue: 0,1:28:13.43,1:28:16.21,英文,,0,0,0,,Now I see the top 10.
Dialogue: 0,1:28:13.43,1:28:16.21,中文,,0,0,0,,现在我看到了前 10 名。
Dialogue: 0,1:28:16.21,1:28:20.59,英文,,0,0,0,,I mean, weirdly named things with hash symbols, presumably to get their titles up to the beginning.
Dialogue: 0,1:28:16.21,1:28:20.59,中文,,0,0,0,,我的意思是，奇怪的名字前面带井号，大概是为了让它们的标题排在最前面。
Dialogue: 0,1:28:20.59,1:28:22.45,英文,,0,0,0,,Or maybe these are hashtags.
Dialogue: 0,1:28:20.59,1:28:22.45,中文,,0,0,0,,或者，也许这些是标签。
Dialogue: 0,1:28:22.45,1:28:27.79,英文,,0,0,0,,Here now we have alphabetically the top first 10 shows that are comedies.
Dialogue: 0,1:28:22.45,1:28:27.79,中文,,0,0,0,,现在我们按字母顺序排列了排名前 10 的喜剧节目。
Dialogue: 0,1:28:27.79,1:28:31.96,英文,,0,0,0,,Any questions on these kinds of queries?
Dialogue: 0,1:28:27.79,1:28:31.96,中文,,0,0,0,,对这类查询有什么问题吗？
Dialogue: 0,1:28:31.96,1:28:39.94,英文,,0,0,0,,It's kind of a lot, but at the same time, it's just like composing the smaller ideas from before into slightly more useful queries.
Dialogue: 0,1:28:31.96,1:28:39.94,中文,,0,0,0,,虽然内容很多，但同时，它就像把之前较小的想法组合成更有用的查询。
Dialogue: 0,1:28:39.94,1:28:41.08,英文,,0,0,0,,Yeah?
Dialogue: 0,1:28:39.94,1:28:41.08,中文,,0,0,0,,是吗？
Dialogue: 0,1:28:46.99,1:28:48.73,英文,,0,0,0,,Do foreign keys have to set the relationship?
Dialogue: 0,1:28:46.99,1:28:48.73,中文,,0,0,0,,外键必须设置关系吗？
Dialogue: 0,1:28:48.73,1:29:01.47,英文,,0,0,0,,When you create the table, the programmer or the database administrator would create that relationship by using those keywords, primary key and foreign key, that teaches the database what is related to what, per the picture.
Dialogue: 0,1:28:48.73,1:29:01.47,中文,,0,0,0,,创建表时，程序员或数据库管理员可以使用主键和外键这些关键字来创建关系，这些关键字会根据图片告诉数据库哪些内容与哪些内容相关。
Dialogue: 0,1:29:01.47,1:29:02.61,英文,,0,0,0,,So you do that once.
Dialogue: 0,1:29:01.47,1:29:02.61,中文,,0,0,0,,所以你只需要做一次。
Dialogue: 0,1:29:02.61,1:29:13.43,英文,,0,0,0,,And now, I, being the sort of programmer who's familiar with the database, I am just using these foreign keys in a manner consistent with their design.
Dialogue: 0,1:29:02.61,1:29:13.43,中文,,0,0,0,,现在，作为一个熟悉数据库的程序员，我只是以与其设计一致的方式使用这些外键。
Dialogue: 0,1:29:13.43,1:29:23.90,英文,,0,0,0,,But this is where it's useful at some point, even if no one hands you a picture, to make sure you understand the database, because that's going to inform literally what you type in SQL to get the data you care about.
Dialogue: 0,1:29:13.43,1:29:23.90,中文,,0,0,0,,但这就是它在某些时候有用的地方，即使没有人给你看图片，也要确保你理解数据库，\N因为这将直接影响你在 SQL 中输入的内容，从而获得你关心的数据。
Dialogue: 0,1:29:23.90,1:29:26.00,英文,,0,0,0,,Well, let's do something a little more precise.
Dialogue: 0,1:29:23.90,1:29:26.00,中文,,0,0,0,,好吧，我们来做一些更精确的事情。
Dialogue: 0,1:29:26.00,1:29:34.38,英文,,0,0,0,,How about, very reasonable question, and honestly, this is exactly what imdb.com and the app are for, what if you want to find all of the shows that Steve Carell is in?
Dialogue: 0,1:29:26.00,1:29:34.38,中文,,0,0,0,,一个非常合理的问题，老实说，这正是 imdb.com 和该应用程序的用途，如果你想找到史蒂夫·卡瑞尔出演的所有节目怎么办？
Dialogue: 0,1:29:34.38,1:29:40.39,英文,,0,0,0,,Like, kind of a reasonable query, like literally something someone might type into Google, or more specifically, IMDB.
Dialogue: 0,1:29:34.38,1:29:40.39,中文,,0,0,0,,这就像一个合理的查询，就像人们在谷歌，或者更具体地说，在 IMDB 中输入的内容一样。
Dialogue: 0,1:29:40.39,1:29:48.65,英文,,0,0,0,,It's not really obvious at first glance how to do that, though, because from my database, if these are my six tables, well, I can pretty easily get Steve Carell from here.
Dialogue: 0,1:29:40.39,1:29:48.65,中文,,0,0,0,,不过，乍一看并不知道如何做到这一点，因为从我的数据库来看，如果这是我的六个表，我可以很容易地从这里得到史蒂夫·卡瑞尔。
Dialogue: 0,1:29:48.65,1:29:53.23,英文,,0,0,0,,But I can really only get his ID number, whatever that is, his name, which I know already, and his birth year.
Dialogue: 0,1:29:48.65,1:29:53.23,中文,,0,0,0,,但我实际上只能得到他的 id 号码，不管是什么，他的名字，我已经知道了，还有他的出生年份。
Dialogue: 0,1:29:53.23,1:29:56.42,英文,,0,0,0,,OK, interesting, but has nothing to do with the shows that he's in.
Dialogue: 0,1:29:53.23,1:29:56.42,中文,,0,0,0,,好吧，有意思，但这与他出演的节目无关。
Dialogue: 0,1:29:56.42,1:29:59.04,英文,,0,0,0,,I can look at shows over here.
Dialogue: 0,1:29:56.42,1:29:59.04,中文,,0,0,0,,我可以看看这里的节目。
Dialogue: 0,1:29:59.04,1:30:02.86,英文,,0,0,0,,But there's no mention of Steve Carell, right, because there's no person ID here.
Dialogue: 0,1:29:59.04,1:30:02.86,中文,,0,0,0,,但这里没有提到 Steve Carell，对吧，因为这里没有人物 id。
Dialogue: 0,1:30:02.86,1:30:04.62,英文,,0,0,0,,Where is that relationship implemented?
Dialogue: 0,1:30:02.86,1:30:04.62,中文,,0,0,0,,这种关系是在哪里实现的？
Dialogue: 0,1:30:04.62,1:30:06.72,英文,,0,0,0,,Well, it's implemented down here.
Dialogue: 0,1:30:04.62,1:30:06.72,中文,,0,0,0,,它是在这里实现的。
Dialogue: 0,1:30:06.72,1:30:07.78,英文,,0,0,0,,So how do we do this?
Dialogue: 0,1:30:06.72,1:30:07.78,中文,,0,0,0,,那我们该怎么做呢？
Dialogue: 0,1:30:07.78,1:30:16.29,英文,,0,0,0,,Well, here's the perfect example of a lesson we've been trying to emphasize for weeks of taking these baby steps, like break larger problems down into smaller ones.
Dialogue: 0,1:30:07.78,1:30:16.29,中文,,0,0,0,,这就好比是我们几周来一直强调的一个道理的完美例子：循序渐进，将大问题分解成小问题。
Dialogue: 0,1:30:16.29,1:30:20.73,英文,,0,0,0,,And let's do something like this. Let's just get everything I know about Steve Carell from the database.
Dialogue: 0,1:30:16.29,1:30:20.73,中文,,0,0,0,,我们这样做：从数据库中获取所有关于 Steve Carell 的信息。
Dialogue: 0,1:30:20.73,1:30:26.88,英文,,0,0,0,,Let's select star from people, where the name of the person is, quote unquote, Steve Carell.
Dialogue: 0,1:30:20.73,1:30:26.88,中文,,0,0,0,,我们从 people 表中选择所有内容，条件是人物姓名是 "Steve Carell"。
Dialogue: 0,1:30:26.88,1:30:28.80,英文,,0,0,0,,I just want to see what data we've got.
Dialogue: 0,1:30:26.88,1:30:28.80,中文,,0,0,0,,我只想看看我们有哪些数据。
Dialogue: 0,1:30:28.80,1:30:30.46,英文,,0,0,0,,And here's what we have.
Dialogue: 0,1:30:28.80,1:30:30.46,中文,,0,0,0,,这就是我们所拥有的。
Dialogue: 0,1:30:30.46,1:30:33.26,英文,,0,0,0,,OK, there's only one Steve Carell, born in 1962.
Dialogue: 0,1:30:30.46,1:30:33.26,中文,,0,0,0,,只有一个 Steve Carell，出生于 1962 年。
Dialogue: 0,1:30:33.26,1:30:37.13,英文,,0,0,0,,And his unique ID is 136797, according to IMDB.
Dialogue: 0,1:30:33.26,1:30:37.13,中文,,0,0,0,,根据 IMDB，他唯一的 id 是 136797。
Dialogue: 0,1:30:37.13,1:30:41.05,英文,,0,0,0,,This isn't some global actor identifier, per se.
Dialogue: 0,1:30:37.13,1:30:41.05,中文,,0,0,0,,这本身并不是一个全球演员标识符。
Dialogue: 0,1:30:41.05,1:30:45.13,英文,,0,0,0,,All right, well, how do I get now all of the shows that Steve Carell is in?
Dialogue: 0,1:30:41.05,1:30:45.13,中文,,0,0,0,,那么，如何才能获取 Steve Carell 出演过的所有剧集呢？
Dialogue: 0,1:30:45.13,1:30:46.27,英文,,0,0,0,,Well, I could do this.
Dialogue: 0,1:30:45.13,1:30:46.27,中文,,0,0,0,,我可以这样做。
Dialogue: 0,1:30:46.27,1:30:51.22,英文,,0,0,0,,Select. star from stars, not to confuse the two.
Dialogue: 0,1:30:46.27,1:30:51.22,中文,,0,0,0,,从 stars 表中选择所有内容，不要与前面的星号混淆。
Dialogue: 0,1:30:51.22,1:30:59.58,英文,,0,0,0,,One's the symbol, one's the table name, where person ID equals 136797.
Dialogue: 0,1:30:51.22,1:30:59.58,中文,,0,0,0,,一个是符号，一个是表名，条件是 person_id 等于 136797。
Dialogue: 0,1:30:59.58,1:31:04.92,英文,,0,0,0,,So I think this will now give me everything from the stars table that relates to Steve Carell.
Dialogue: 0,1:30:59.58,1:31:04.92,中文,,0,0,0,,我认为这将返回 stars 表中所有与 Steve Carell 相关的内容。
Dialogue: 0,1:31:04.92,1:31:08.38,英文,,0,0,0,,OK, and you'll see person ID is the same, because I'm literally searching for just Steve Carell.
Dialogue: 0,1:31:04.92,1:31:08.38,中文,,0,0,0,,可以看到，person_id 是相同的，因为我只是在搜索 Steve Carell。
Dialogue: 0,1:31:08.38,1:31:12.54,英文,,0,0,0,,But there are, what, like 20 or so shows that he's been in.
Dialogue: 0,1:31:08.38,1:31:12.54,中文,,0,0,0,,但是，他好像出演过 20 多部剧集。
Dialogue: 0,1:31:12.54,1:31:14.38,英文,,0,0,0,,All right, well, here's where things would get tedious.
Dialogue: 0,1:31:12.54,1:31:14.38,中文,,0,0,0,,这就是事情变得乏味的地方。
Dialogue: 0,1:31:14.38,1:31:15.32,英文,,0,0,0,,What are those shows?
Dialogue: 0,1:31:14.38,1:31:15.32,中文,,0,0,0,,那些是什么节目？
Dialogue: 0,1:31:15.32,1:31:16.88,英文,,0,0,0,,Well, I could do select.
Dialogue: 0,1:31:15.32,1:31:16.88,中文,,0,0,0,,我可以使用 SELECT 语句。
Dialogue: 0,1:31:16.88,1:31:21.47,英文,,0,0,0,,Title from shows where the ID of the show equals.
Dialogue: 0,1:31:16.88,1:31:21.47,中文,,0,0,0,,从 id 等于某个值的节目中选择标题。
Dialogue: 0,1:31:21.47,1:31:25.75,英文,,0,0,0,,And here, whenever you copy-paste, you're probably doing something wrong.
Dialogue: 0,1:31:21.47,1:31:25.75,中文,,0,0,0,,当你复制粘贴的时候，你很可能做错了什么。
Dialogue: 0,1:31:25.75,1:31:28.79,英文,,0,0,0,,OK, he was in the Dana Carvey show, familiar with that.
Dialogue: 0,1:31:25.75,1:31:28.79,中文,,0,0,0,,他参加过 Dana Carvey 的节目，我很熟悉。
Dialogue: 0,1:31:28.79,1:31:29.57,英文,,0,0,0,,Let's do another one.
Dialogue: 0,1:31:28.79,1:31:29.57,中文,,0,0,0,,我们再试一次。
Dialogue: 0,1:31:29.57,1:31:31.47,英文,,0,0,0,,We'll copy-paste this.
Dialogue: 0,1:31:29.57,1:31:31.47,中文,,0,0,0,,我们复制粘贴这个。
Dialogue: 0,1:31:31.47,1:31:34.26,英文,,0,0,0,,Where ID equals this.
Dialogue: 0,1:31:31.47,1:31:34.26,中文,,0,0,0,,其中 id 等于这个值。
Dialogue: 0,1:31:34.26,1:31:35.28,英文,,0,0,0,,Over the top, another.
Dialogue: 0,1:31:34.26,1:31:35.28,中文,,0,0,0,,再来一个。
Dialogue: 0,1:31:35.28,1:31:40.24,英文,,0,0,0,,And if we keep digging, we'll probably find the office. But my god, that's going to take forever to do 20 queries manually.
Dialogue: 0,1:31:35.28,1:31:40.24,中文,,0,0,0,,如果我们继续挖掘，我们可能会找到《办公室》。但是，天哪，手动执行 20 个查询要花费很长时间。
Dialogue: 0,1:31:40.24,1:31:41.36,英文,,0,0,0,,It's not very dynamic.
Dialogue: 0,1:31:40.24,1:31:41.36,中文,,0,0,0,,这不太灵活。
Dialogue: 0,1:31:41.36,1:31:43.99,英文,,0,0,0,,But what if we just nest these queries a little more dynamically?
Dialogue: 0,1:31:41.36,1:31:43.99,中文,,0,0,0,,但是，如果我们更加动态地嵌套这些查询呢？
Dialogue: 0,1:31:43.99,1:31:45.91,英文,,0,0,0,,So let me start from the beginning again.
Dialogue: 0,1:31:43.99,1:31:45.91,中文,,0,0,0,,让我从头开始。
Dialogue: 0,1:31:45.91,1:31:55.76,英文,,0,0,0,,What if we go ahead and select everything we know about people whose name equals Steve.
Dialogue: 0,1:31:45.91,1:31:55.76,中文,,0,0,0,,如果我们继续，选择所有关于名字等于 Steve 的人的信息会怎么样？
Dialogue: 0,1:31:55.76,1:31:58.36,英文,,0,0,0,,Correll, that gave us earlier this data.
Dialogue: 0,1:31:55.76,1:31:58.36,中文,,0,0,0,,Correll，这给了我们之前的数据。
Dialogue: 0,1:31:58.36,1:31:59.48,英文,,0,0,0,,I don't need all of that data.
Dialogue: 0,1:31:58.36,1:31:59.48,中文,,0,0,0,,我不需要所有这些数据。
Dialogue: 0,1:31:59.48,1:32:01.37,英文,,0,0,0,,I know his name. I don't care about his birth year.
Dialogue: 0,1:31:59.48,1:32:01.37,中文,,0,0,0,,我知道他的名字。我不在乎他的出生年份。
Dialogue: 0,1:32:01.37,1:32:05.29,英文,,0,0,0,,So let's change this to just be give me the ID of Steve Correll.
Dialogue: 0,1:32:01.37,1:32:05.29,中文,,0,0,0,,让我们把这个改成只给我 Steve Correll 的 id。
Dialogue: 0,1:32:05.29,1:32:08.62,英文,,0,0,0,,And that gives me back now this smaller temporary data set.
Dialogue: 0,1:32:05.29,1:32:08.62,中文,,0,0,0,,现在它返回了这个更小的临时数据集。
Dialogue: 0,1:32:08.62,1:32:11.74,英文,,0,0,0,,All right, can I now use this?
Dialogue: 0,1:32:08.62,1:32:11.74,中文,,0,0,0,,我现在可以使用这个了吗？
Dialogue: 0,1:32:11.74,1:32:12.60,英文,,0,0,0,,Inside of another query.
Dialogue: 0,1:32:11.74,1:32:12.60,中文,,0,0,0,,在另一个查询语句里面。
Dialogue: 0,1:32:12.60,1:32:14.28,英文,,0,0,0,,Well, let me wrap the whole thing with parentheses.
Dialogue: 0,1:32:12.60,1:32:14.28,中文,,0,0,0,,我来用括号把整个语句括起来。
Dialogue: 0,1:32:14.28,1:32:22.44,英文,,0,0,0,,And now let me say, select star from the stars table, where the person ID equals this.
Dialogue: 0,1:32:14.28,1:32:22.44,中文,,0,0,0,,现在我输入，从 stars 表中选择所有列，条件是 person_id 等于这个值。
Dialogue: 0,1:32:22.44,1:32:26.66,英文,,0,0,0,,So I'm deliberately not using in, because I'm assuming there's indeed only one Steve Carell in the world.
Dialogue: 0,1:32:22.44,1:32:26.66,中文,,0,0,0,,我故意没有使用 in，因为我假设世界上只有一个 Steve Carell。
Dialogue: 0,1:32:26.66,1:32:30.81,英文,,0,0,0,,So I'm not getting back a list of Steve Carells. I'm getting back the one and only, in this case.
Dialogue: 0,1:32:26.66,1:32:30.81,中文,,0,0,0,,所以我不会得到一串 Steve Carell 的列表，而是在这个情况下只得到唯一的一个。
Dialogue: 0,1:32:30.81,1:32:31.93,英文,,0,0,0,,So equal is fine.
Dialogue: 0,1:32:30.81,1:32:31.93,中文,,0,0,0,,所以使用等于号就可以了。
Dialogue: 0,1:32:31.93,1:32:33.49,英文,,0,0,0,,In is when you have multiple.
Dialogue: 0,1:32:31.93,1:32:33.49,中文,,0,0,0,,当你有多个结果时，就使用 in。
Dialogue: 0,1:32:33.49,1:32:34.97,英文,,0,0,0,,Equal is when you have one.
Dialogue: 0,1:32:33.49,1:32:34.97,中文,,0,0,0,,当你只有一个结果时，就使用等于号。
Dialogue: 0,1:32:34.97,1:32:36.45,英文,,0,0,0,,Let me go ahead and hit Enter now.
Dialogue: 0,1:32:34.97,1:32:36.45,中文,,0,0,0,,我来按一下回车键。
Dialogue: 0,1:32:36.45,1:32:37.75,英文,,0,0,0,,OK, that's more data than I need.
Dialogue: 0,1:32:36.45,1:32:37.75,中文,,0,0,0,,这数据比我需要的多。
Dialogue: 0,1:32:37.75,1:32:40.35,英文,,0,0,0,,I don't need like 20 copies of Steve Carell's person ID.
Dialogue: 0,1:32:37.75,1:32:40.35,中文,,0,0,0,,我不需要 20 份 Steve Carell 的 person_id 副本。
Dialogue: 0,1:32:40.35,1:32:41.51,英文,,0,0,0,,So let me hit up.
Dialogue: 0,1:32:40.35,1:32:41.51,中文,,0,0,0,,我按一下向上键。
Dialogue: 0,1:32:41.51,1:32:42.31,英文,,0,0,0,,Let me go back.
Dialogue: 0,1:32:41.51,1:32:42.31,中文,,0,0,0,,返回上一条语句。
Dialogue: 0,1:32:42.31,1:32:46.61,英文,,0,0,0,,And let me just get show ID from Steve Carell.
Dialogue: 0,1:32:42.31,1:32:46.61,中文,,0,0,0,,我只想获取 Steve Carell 对应的 show_id。
Dialogue: 0,1:32:46.61,1:32:52.33,英文,,0,0,0,,And now I have a list of just the 20 or so show IDs that he has been in.
Dialogue: 0,1:32:46.61,1:32:52.33,中文,,0,0,0,,现在我得到了一个列表，里面只有他参演过的 20 个左右的剧集 id。
Dialogue: 0,1:32:52.33,1:32:57.26,英文,,0,0,0,,All right, how can I now use this? Well, let me hit up. Let me put the whole thing in parentheses.
Dialogue: 0,1:32:52.33,1:32:57.26,中文,,0,0,0,,我现在如何使用这个结果呢？我按向上键，把整个语句放在括号里。
Dialogue: 0,1:32:57.26,1:32:58.98,英文,,0,0,0,,And now let me select what I really want.
Dialogue: 0,1:32:57.26,1:32:58.98,中文,,0,0,0,,现在我来选择我真正想要的内容。
Dialogue: 0,1:32:58.98,1:33:03.54,英文,,0,0,0,,Select title from shows where.
Dialogue: 0,1:32:58.98,1:33:03.54,中文,,0,0,0,,从 shows 表中选择 title 列，条件是……
Dialogue: 0,1:33:03.54,1:33:05.12,英文,,0,0,0,,And here's the final flourish.
Dialogue: 0,1:33:03.54,1:33:05.12,中文,,0,0,0,,这是最后的点睛之笔。
Dialogue: 0,1:33:05.12,1:33:11.66,英文,,0,0,0,,The shows table has an ID, has a title, has a year, and has an episode.
Dialogue: 0,1:33:05.12,1:33:11.66,中文,,0,0,0,,shows 表包含 id、title、year 和 episode 列。
Dialogue: 0,1:33:11.66,1:33:21.66,英文,,0,0,0,,And what I really want, though, is to check which shows have ID that is what.
Dialogue: 0,1:33:11.66,1:33:21.66,中文,,0,0,0,,但我真正想要的是检查哪些剧集的 id 是符合条件的。
Dialogue: 0,1:33:21.66,1:33:24.59,英文,,0,0,0,,Anyone want to finish the thought?
Dialogue: 0,1:33:21.66,1:33:24.59,中文,,0,0,0,,有人想把这句话说完吗？
Dialogue: 0,1:33:24.59,1:33:28.67,英文,,0,0,0,,I just want to, yeah.
Dialogue: 0,1:33:24.59,1:33:28.67,中文,,0,0,0,,我只想，是的。
Dialogue: 0,1:33:28.67,1:33:31.59,英文,,0,0,0,,Exactly, ID in this. And this is getting ugly.
Dialogue: 0,1:33:28.67,1:33:31.59,中文,,0,0,0,,没错，这里的 id。这变得越来越复杂了。
Dialogue: 0,1:33:31.59,1:33:35.73,英文,,0,0,0,,And when you actually write your queries in a text file, you can format them nicely and indent them.
Dialogue: 0,1:33:31.59,1:33:35.73,中文,,0,0,0,,当你把查询语句写在一个文本文件中时，你可以很好地格式化它们并缩进它们。
Dialogue: 0,1:33:35.73,1:33:38.67,英文,,0,0,0,,My font is just getting, I don't want to make it too small to fit everything.
Dialogue: 0,1:33:35.73,1:33:38.67,中文,,0,0,0,,我的字体越来越小，我不想为了适应所有内容而把它设置得太小。
Dialogue: 0,1:33:38.67,1:33:40.47,英文,,0,0,0,,But now we have three queries.
Dialogue: 0,1:33:38.67,1:33:40.47,中文,,0,0,0,,但现在我们有三个查询语句。
Dialogue: 0,1:33:40.47,1:33:42.21,英文,,0,0,0,,One is in doubly nested parentheses.
Dialogue: 0,1:33:40.47,1:33:42.21,中文,,0,0,0,,一个是双重嵌套的括号。
Dialogue: 0,1:33:42.21,1:33:43.37,英文,,0,0,0,,Then there's the middle one.
Dialogue: 0,1:33:42.21,1:33:43.37,中文,,0,0,0,,然后是中间的。
Dialogue: 0,1:33:43.37,1:33:44.69,英文,,0,0,0,,Then there's the outer one.
Dialogue: 0,1:33:43.37,1:33:44.69,中文,,0,0,0,,然后是最外面的一个。
Dialogue: 0,1:33:44.69,1:33:52.39,英文,,0,0,0,,So this last query is going to get me the title from shows where the ID of the show is in this big list of 20 or so show IDs that Steve Carell is in.
Dialogue: 0,1:33:44.69,1:33:52.39,中文,,0,0,0,,所以最后一个查询语句将从剧集中获取标题，这些剧集的 id 在这个包含大约 20 个史蒂夫·卡瑞尔参演的剧集 id 的大列表中。
Dialogue: 0,1:33:52.39,1:33:54.93,英文,,0,0,0,,And I knew that because I looked up his name here.
Dialogue: 0,1:33:52.39,1:33:54.93,中文,,0,0,0,,我知道这一点是因为我在这里查了他的名字。
Dialogue: 0,1:33:54.93,1:33:58.68,英文,,0,0,0,,And notice, what I did not do this time is I didn't manually hard code his ID number.
Dialogue: 0,1:33:54.93,1:33:58.68,中文,,0,0,0,,注意，这次我没有做的是，我没有手动硬编码他的 id 号码。
Dialogue: 0,1:33:58.68,1:33:59.44,英文,,0,0,0,,There's no need.
Dialogue: 0,1:33:58.68,1:33:59.44,中文,,0,0,0,,没有必要。
Dialogue: 0,1:33:59.44,1:34:04.04,英文,,0,0,0,,That would be kind of a bad way to implement a website if you're using a database underneath the hood.
Dialogue: 0,1:33:59.44,1:34:04.04,中文,,0,0,0,,如果你在后台使用数据库，这将是一种糟糕的网站实现方式。
Dialogue: 0,1:34:04.04,1:34:08.44,英文,,0,0,0,,You want the IMDB for real to search for whatever the human typed in.
Dialogue: 0,1:34:04.04,1:34:08.44,中文,,0,0,0,,你希望真正的 IMDB 网站能够搜索用户输入的任何内容。
Dialogue: 0,1:34:08.44,1:34:12.20,英文,,0,0,0,,And no one's going to know Steve Carell's person ID or anything else.
Dialogue: 0,1:34:08.44,1:34:12.20,中文,,0,0,0,,没有人会知道史蒂夫·卡瑞尔的个人 id 或其他任何信息。
Dialogue: 0,1:34:12.20,1:34:14.60,英文,,0,0,0,,So here, we've done this all dynamically.
Dialogue: 0,1:34:12.20,1:34:14.60,中文,,0,0,0,,所以在这里，我们已经动态地完成了所有这些。
Dialogue: 0,1:34:14.60,1:34:18.71,英文,,0,0,0,,And now, if I hit Enter, I think I get all of his shows.
Dialogue: 0,1:34:14.60,1:34:18.71,中文,,0,0,0,,现在，如果我按下回车键，我想我会得到他所有的电视剧。
Dialogue: 0,1:34:18.71,1:34:22.03,英文,,0,0,0,,Let's go ahead and order this by title just to make it tidy.
Dialogue: 0,1:34:18.71,1:34:22.03,中文,,0,0,0,,让我们按标题排序，这样看起来更整齐。
Dialogue: 0,1:34:22.03,1:34:25.28,英文,,0,0,0,,And you probably will see at least one or more shows that you know.
Dialogue: 0,1:34:22.03,1:34:25.28,中文,,0,0,0,,你可能至少看过上面一两部剧。
Dialogue: 0,1:34:25.28,1:34:29.68,英文,,0,0,0,,And probably the most popular is dot, dot, dot. The Office.
Dialogue: 0,1:34:25.28,1:34:29.68,中文,,0,0,0,,其中最受欢迎的莫过于... 《办公室》。
Dialogue: 0,1:34:29.68,1:34:37.37,英文,,0,0,0,,So this is literally the kind of query that's being executed underneath the hood when you go to websites or apps like IMDb.
Dialogue: 0,1:34:29.68,1:34:37.37,中文,,0,0,0,,当你访问 IMDb 之类的网站或应用程序时，这实际上就是后台执行的查询类型。
Dialogue: 0,1:34:37.37,1:34:48.59,英文,,0,0,0,,Your textual query is probably being plugged into a longer SQL query like this, where some programmer at IMDb probably wrote this whole query in advance weeks, months, years ago.
Dialogue: 0,1:34:37.37,1:34:48.59,中文,,0,0,0,,你输入的文本查询可能会被插入到一个更长的 SQL 查询中，就像这样，IMDb 的程序员可能在几周、几个月甚至几年前就预先写好了整个查询。
Dialogue: 0,1:34:48.59,1:34:55.70,英文,,0,0,0,,And they're just somehow plugging in the value that you, the human, typed into the search box or the like.
Dialogue: 0,1:34:48.59,1:34:55.70,中文,,0,0,0,,他们只是以某种方式插入了你这个人在搜索框或类似的地方输入的值。
Dialogue: 0,1:34:55.70,1:34:58.57,英文,,0,0,0,,Questions now.
Dialogue: 0,1:34:55.70,1:34:58.57,中文,,0,0,0,,有什么问题吗？
Dialogue: 0,1:34:58.57,1:35:03.11,英文,,0,0,0,,on finding this data or any other.
Dialogue: 0,1:34:58.57,1:35:03.11,中文,,0,0,0,,关于查找这些数据或其他任何数据。
Dialogue: 0,1:35:03.11,1:35:03.89,英文,,0,0,0,,No?
Dialogue: 0,1:35:03.11,1:35:03.89,中文,,0,0,0,,没有？
Dialogue: 0,1:35:03.89,1:35:04.49,英文,,0,0,0,,OK.
Dialogue: 0,1:35:03.89,1:35:04.49,中文,,0,0,0,,好的。
Dialogue: 0,1:35:04.49,1:35:06.85,英文,,0,0,0,,So where else could we go with this?
Dialogue: 0,1:35:04.49,1:35:06.85,中文,,0,0,0,,那么，我们还可以用它做什么呢？
Dialogue: 0,1:35:06.85,1:35:12.71,英文,,0,0,0,,Well, let's consider how else we might combine data.
Dialogue: 0,1:35:06.85,1:35:12.71,中文,,0,0,0,,让我们考虑一下，还可以如何组合数据。
Dialogue: 0,1:35:12.71,1:35:25.45,英文,,0,0,0,,Suppose that the next question actually, perhaps appropriately, would be focusing in on not just people and shows and these stars, but how do we gather more information about the shows themselves, like the genres, the ratings, or the like?
Dialogue: 0,1:35:12.71,1:35:25.45,中文,,0,0,0,,假设下一个问题恰好是，不仅关注人员、节目和这些明星，还关注如何收集更多关于节目本身的信息，比如类型、评级等等。
Dialogue: 0,1:35:25.45,1:35:28.13,英文,,0,0,0,,So indeed, let's focus on just these two tables here.
Dialogue: 0,1:35:25.45,1:35:28.13,中文,,0,0,0,,事实上，让我们只关注这两张表。
Dialogue: 0,1:35:28.13,1:35:31.76,英文,,0,0,0,,Recall that every show has an ID, a title, a year, and episodes.
Dialogue: 0,1:35:28.13,1:35:31.76,中文,,0,0,0,,回想一下，每个节目都有一个 id、一个标题、一个年份和几集。
Dialogue: 0,1:35:31.76,1:35:36.28,英文,,0,0,0,,But it also might have one or more relationships with rows in this other tables called genres.
Dialogue: 0,1:35:31.76,1:35:36.28,中文,,0,0,0,,但它也可能与另一个名为 genres 的表中的一行或多行存在关系。
Dialogue: 0,1:35:36.28,1:35:42.58,英文,,0,0,0,,And this is so that a show can be a comedy, can be a drama, can be any number of other things one row per.
Dialogue: 0,1:35:36.28,1:35:42.58,中文,,0,0,0,,这样一来，一部剧就可以是喜剧，也可以是剧情片，也可以是任何其他类型，每种类型一行。
Dialogue: 0,1:35:42.58,1:35:46.98,英文,,0,0,0,,So you would see the same show ID again and again and again with a different ID.
Dialogue: 0,1:35:42.58,1:35:46.98,中文,,0,0,0,,所以你会一遍又一遍地看到相同的show_id，但 id 不同。
Dialogue: 0,1:35:46.98,1:35:51.20,英文,,0,0,0,,genre written in English, like comedy, drama, or the like.
Dialogue: 0,1:35:46.98,1:35:51.20,中文,,0,0,0,,用英语写的类型，比如喜剧、剧情片等等。
Dialogue: 0,1:35:51.20,1:35:53.98,英文,,0,0,0,,Well, how do I kind of reconstitute that data?
Dialogue: 0,1:35:51.20,1:35:53.98,中文,,0,0,0,,那么，如何重新构建这些数据呢？
Dialogue: 0,1:35:53.98,1:35:56.89,英文,,0,0,0,,Well, turns out there's a few different ways to do this.
Dialogue: 0,1:35:53.98,1:35:56.89,中文,,0,0,0,,事实证明，有几种不同的方法可以做到这一点。
Dialogue: 0,1:35:56.89,1:36:00.87,英文,,0,0,0,,And let me propose that we introduce this keyword here, join.
Dialogue: 0,1:35:56.89,1:36:00.87,中文,,0,0,0,,我来介绍一个新的关键词，`join`。
Dialogue: 0,1:36:00.87,1:36:05.49,英文,,0,0,0,,And this is really the most powerful of the keywords in SQL itself.
Dialogue: 0,1:36:00.87,1:36:05.49,中文,,0,0,0,,它可以说是 SQL 中功能最强大的关键词。
Dialogue: 0,1:36:05.49,1:36:06.53,英文,,0,0,0,,It doesn't have to be used.
Dialogue: 0,1:36:05.49,1:36:06.53,中文,,0,0,0,,它并非必须使用。
Dialogue: 0,1:36:06.53,1:36:11.57,英文,,0,0,0,,We've seen with nested queries that you can still select data across multiple tables.
Dialogue: 0,1:36:06.53,1:36:11.57,中文,,0,0,0,,前面我们已经见过嵌套查询，它也可以跨多个表格选择数据。
Dialogue: 0,1:36:11.57,1:36:13.55,英文,,0,0,0,,But here is another way.
Dialogue: 0,1:36:11.57,1:36:13.55,中文,,0,0,0,,这里还有另一种方法。
Dialogue: 0,1:36:13.55,1:36:14.60,英文,,0,0,0,,So let me do this.
Dialogue: 0,1:36:13.55,1:36:14.60,中文,,0,0,0,,我来演示一下。
Dialogue: 0,1:36:14.60,1:36:17.96,英文,,0,0,0,,Let me go back to my SQLite database.
Dialogue: 0,1:36:14.60,1:36:17.96,中文,,0,0,0,,回到我的 sqlite 数据库。
Dialogue: 0,1:36:17.96,1:36:23.70,英文,,0,0,0,,And let me select, sort of in one breath, exactly the data I want.
Dialogue: 0,1:36:17.96,1:36:23.70,中文,,0,0,0,,用一条语句查询我想要的所有数据。
Dialogue: 0,1:36:23.70,1:36:27.06,英文,,0,0,0,,Select star from shows.
Dialogue: 0,1:36:23.70,1:36:27.06,中文,,0,0,0,,`SELECT * FROM shows`。
Dialogue: 0,1:36:27.06,1:36:30.71,英文,,0,0,0,,And let's just limit this initially to 10 to see what it looks like.
Dialogue: 0,1:36:27.06,1:36:30.71,中文,,0,0,0,,我们先 `LIMIT` 到 10 条，看看结果是什么样。
Dialogue: 0,1:36:30.71,1:36:32.33,英文,,0,0,0,,All right, that's again the shows data.
Dialogue: 0,1:36:30.71,1:36:32.33,中文,,0,0,0,,这又是 `shows` 表格中的数据。
Dialogue: 0,1:36:32.33,1:36:34.75,英文,,0,0,0,,Select star from genres.
Dialogue: 0,1:36:32.33,1:36:34.75,中文,,0,0,0,,`SELECT * FROM genres`。
Dialogue: 0,1:36:34.75,1:36:37.91,英文,,0,0,0,,Let's limit that to 10 too, just to wrap our minds around it.
Dialogue: 0,1:36:34.75,1:36:37.91,中文,,0,0,0,,我们也把它 `LIMIT` 到 10 条，方便我们理解。
Dialogue: 0,1:36:37.91,1:36:39.83,英文,,0,0,0,,And now this is not that useful.
Dialogue: 0,1:36:37.91,1:36:39.83,中文,,0,0,0,,目前的结果用处不大。
Dialogue: 0,1:36:39.83,1:36:43.65,英文,,0,0,0,,However, the data in the leftmost column here
Dialogue: 0,1:36:39.83,1:36:43.65,中文,,0,0,0,,不过，左边第一列的数据
Dialogue: 0,1:36:43.65,1:36:45.47,英文,,0,0,0,,is the primary key in the shows table.
Dialogue: 0,1:36:43.65,1:36:45.47,中文,,0,0,0,,是 `shows` 表格的主键。
Dialogue: 0,1:36:45.47,1:36:47.05,英文,,0,0,0,,These are just unique IDs.
Dialogue: 0,1:36:45.47,1:36:47.05,中文,,0,0,0,,这些只是唯一的 id。
Dialogue: 0,1:36:47.05,1:36:51.44,英文,,0,0,0,,The data here in the genres table, recall, show ID is the foreign key.
Dialogue: 0,1:36:47.05,1:36:51.44,中文,,0,0,0,,`genres` 表格中的 `show_id` 数据，回忆一下，它是外键。
Dialogue: 0,1:36:51.44,1:36:56.82,英文,,0,0,0,,So it's the same numbers, but just copied into another table so that we can have this relationship across them.
Dialogue: 0,1:36:51.44,1:36:56.82,中文,,0,0,0,,所以这些数字是相同的，只是复制到了另一个表格中，这样它们之间就建立了关系。
Dialogue: 0,1:36:56.82,1:37:09.18,英文,,0,0,0,,How do I kind of line up these numbers with these numbers to get back a wider table that has title, and year, and episodes, and genre, and heck, ratings, and all of that, too, if we want?
Dialogue: 0,1:36:56.82,1:37:09.18,中文,,0,0,0,,如何将这些数字与那些数字对齐，得到一个更宽的表格，包含标题、年份、集数、类型，以及评分等所有内容呢？
Dialogue: 0,1:37:09.18,1:37:12.78,英文,,0,0,0,,Well, you can join these tables by just telling the database what to join on what.
Dialogue: 0,1:37:09.18,1:37:12.78,中文,,0,0,0,,你可以通过告诉数据库要将哪些内容连接在一起来连接这些表。
Dialogue: 0,1:37:12.78,1:37:14.14,英文,,0,0,0,,So let me do this.
Dialogue: 0,1:37:12.78,1:37:14.14,中文,,0,0,0,,我来演示一下。
Dialogue: 0,1:37:14.14,1:37:17.42,英文,,0,0,0,,Select star from shows.
Dialogue: 0,1:37:14.14,1:37:17.42,中文,,0,0,0,,从 `shows` 表中选择所有列。
Dialogue: 0,1:37:17.42,1:37:21.81,英文,,0,0,0,,Join that table, though, on the genres table.
Dialogue: 0,1:37:17.42,1:37:21.81,中文,,0,0,0,,将该表连接到 `genres` 表。
Dialogue: 0,1:37:21.81,1:37:24.17,英文,,0,0,0,,Well, how do you want to join those two tables?
Dialogue: 0,1:37:21.81,1:37:24.17,中文,,0,0,0,,你想如何连接这两个表呢？
Dialogue: 0,1:37:24.17,1:37:29.61,英文,,0,0,0,,And again, the two tables from the picture look like this. How do you tell SQL programmatically to sort of
Dialogue: 0,1:37:24.17,1:37:29.61,中文,,0,0,0,,图片中的两个表看起来像这样，如何以编程方式告诉 SQL 将其中一个表放在另一个表的旁边？
Dialogue: 0,1:37:29.61,1:37:31.29,英文,,0,0,0,,Put one of them right next to the other.
Dialogue: 0,1:37:29.61,1:37:31.29,中文,,0,0,0,,将所有 id 对齐，以便你获得一个更大的数据集？
Dialogue: 0,1:37:31.29,1:37:34.86,英文,,0,0,0,,Line up all of the IDs so that you just get one larger data set.
Dialogue: 0,1:37:31.29,1:37:34.86,中文,,0,0,0,,将所有 id 排成一行，这样就得到了一个更大的数据集。
Dialogue: 0,1:37:34.86,1:37:39.20,英文,,0,0,0,,Well, we can use, indeed, this syntax called join.
Dialogue: 0,1:37:34.86,1:37:39.20,中文,,0,0,0,,我们可以使用这种叫做 `join` 的语法。
Dialogue: 0,1:37:39.20,1:37:41.37,英文,,0,0,0,,So back to VS Code here.
Dialogue: 0,1:37:39.20,1:37:41.37,中文,,0,0,0,,回到 VS Code。
Dialogue: 0,1:37:41.37,1:37:44.48,英文,,0,0,0,,And let me join these two tables.
Dialogue: 0,1:37:41.37,1:37:44.48,中文,,0,0,0,,我来连接这两个表。
Dialogue: 0,1:37:44.48,1:37:46.12,英文,,0,0,0,,Sorry, typo here.
Dialogue: 0,1:37:44.48,1:37:46.12,中文,,0,0,0,,抱歉，这里有个拼写错误。
Dialogue: 0,1:37:46.12,1:37:51.95,英文,,0,0,0,,Join genres on the shows tables ID column, a.k.a.
Dialogue: 0,1:37:46.12,1:37:51.95,中文,,0,0,0,,将 `genres` 表连接到 `shows` 表的 id 列（也就是主键）上，该列等于 `genres` 表的 `show_id` 列（也就是外键）。
Dialogue: 0,1:37:51.95,1:37:59.29,英文,,0,0,0,,its primary key, equaling the genres tables show ID column, a.k.a. the foreign key.
Dialogue: 0,1:37:51.95,1:37:59.29,中文,,0,0,0,,换句话说，这看起来有点难懂，但我只是在告诉 SQL 如何对齐这两个表，以及哪个列与另一个列匹配，以便数字对齐，从而得到一个更宽的表。
Dialogue: 0,1:37:59.29,1:38:10.64,英文,,0,0,0,,So in other words, it looks a little cryptic, but I'm just telling SQL how to line up these two tables and what column to match with the other so that the numbers line up and I get essentially a wider table.
Dialogue: 0,1:37:59.29,1:38:10.64,中文,,0,0,0,,换句话说，这看起来有点难以理解，但我只是在告诉 SQL\N 如何将这两个表对齐，以及哪个列与另一个列匹配，以便数字对齐，并最终得到一个更宽的表。
Dialogue: 0,1:38:10.64,1:38:15.14,英文,,0,0,0,,Let me go ahead and hit, uh, Semicolon and Enter.
Dialogue: 0,1:38:10.64,1:38:15.14,中文,,0,0,0,,按一下分号和回车键。
Dialogue: 0,1:38:15.14,1:38:17.30,英文,,0,0,0,,And this is now going to give me a lot of data.
Dialogue: 0,1:38:15.14,1:38:17.30,中文,,0,0,0,,这会返回很多数据。
Dialogue: 0,1:38:17.30,1:38:18.62,英文,,0,0,0,,We might have to interrupt it.
Dialogue: 0,1:38:17.30,1:38:18.62,中文,,0,0,0,,我们可能得中断一下。
Dialogue: 0,1:38:18.62,1:38:29.35,英文,,0,0,0,,But notice, even at a glance, we're getting the ID, the title, the year, the number of episodes, the ID again, redundantly, but that's to be expected if I'm joining them, and the genre all the way on the right.
Dialogue: 0,1:38:18.62,1:38:29.35,中文,,0,0,0,,但请注意，即使粗略地看一下，我们也能看到 \Nid、标题、年份、剧集数量、重复的 id（如果我将它们连接起来，这是意料之中的），以及最右边的类型。
Dialogue: 0,1:38:29.35,1:38:31.80,英文,,0,0,0,,Let me hit Control-C to interrupt.
Dialogue: 0,1:38:29.35,1:38:31.80,中文,,0,0,0,,按 Ctrl+C 中断。
Dialogue: 0,1:38:31.80,1:38:33.92,英文,,0,0,0,,Let me just limit this to the office.
Dialogue: 0,1:38:31.80,1:38:33.92,中文,,0,0,0,,我把它限定在“办公室”这部剧里。
Dialogue: 0,1:38:33.92,1:38:36.50,英文,,0,0,0,,So where title equals, quote unquote, the office.
Dialogue: 0,1:38:33.92,1:38:36.50,中文,,0,0,0,,也就是 title =“The office”。
Dialogue: 0,1:38:36.50,1:38:39.88,英文,,0,0,0,,So we can focus on just one sample datum.
Dialogue: 0,1:38:36.50,1:38:39.88,中文,,0,0,0,,这样我们就可以只关注一个样本数据了。
Dialogue: 0,1:38:39.88,1:38:43.46,英文,,0,0,0,,And here, fun fact, there's been more than one office.
Dialogue: 0,1:38:39.88,1:38:43.46,中文,,0,0,0,,这里有个有趣的事实：不止一部剧叫“办公室”。
Dialogue: 0,1:38:43.46,1:38:49.44,英文,,0,0,0,,The one that you all probably like is this one that started in 2005 with 188 episodes.
Dialogue: 0,1:38:43.46,1:38:49.44,中文,,0,0,0,,大家可能喜欢的是2005年开播的这部，有188集。
Dialogue: 0,1:38:49.44,1:38:53.16,英文,,0,0,0,,Its ID in the shows table is 386676.
Dialogue: 0,1:38:49.44,1:38:53.16,中文,,0,0,0,,它在 shows 表中的 id 是 386676。
Dialogue: 0,1:38:53.16,1:38:54.84,英文,,0,0,0,,That's confirmed over here, too.
Dialogue: 0,1:38:53.16,1:38:54.84,中文,,0,0,0,,这里也证实了这一点。
Dialogue: 0,1:38:54.84,1:38:57.36,英文,,0,0,0,,So again, we've just joined the two tables, how?
Dialogue: 0,1:38:54.84,1:38:57.36,中文,,0,0,0,,那么我们是如何将两张表连接起来的？
Dialogue: 0,1:38:57.36,1:38:58.87,英文,,0,0,0,,By lining up those fields.
Dialogue: 0,1:38:57.36,1:38:58.87,中文,,0,0,0,,通过将这些字段对齐。
Dialogue: 0,1:38:58.87,1:39:04.83,英文,,0,0,0,,But now that we can see that almost all of the offices produced over the decades are comedies, except for this one.
Dialogue: 0,1:38:58.87,1:39:04.83,中文,,0,0,0,,我们可以看到，过去几十年里制作的几乎所有“办公室”都是喜剧，除了这一部。
Dialogue: 0,1:39:04.83,1:39:11.93,英文,,0,0,0,,There was a version of the office produced in 2001 that was considered more of, A drama, unsure if it's related to the other.
Dialogue: 0,1:39:04.83,1:39:11.93,中文,,0,0,0,,2001年制作的“办公室”被认为更偏向剧情片，不确定是否与其他版本有关。
Dialogue: 0,1:39:11.93,1:39:13.77,英文,,0,0,0,,How can we link in other data?
Dialogue: 0,1:39:11.93,1:39:13.77,中文,,0,0,0,,我们如何链接其他数据？
Dialogue: 0,1:39:13.77,1:39:16.84,英文,,0,0,0,,Well, let's go ahead and link in ratings, too, or instead.
Dialogue: 0,1:39:13.77,1:39:16.84,中文,,0,0,0,,让我们链接评分数据。
Dialogue: 0,1:39:16.84,1:39:28.70,英文,,0,0,0,,So instead of joining this with genres, let me go ahead and rewind here and join shows on ratings on shows.id equals ratings.showid.
Dialogue: 0,1:39:16.84,1:39:28.70,中文,,0,0,0,,我们不把它和 genres 表连接，而是把它和 ratings 表连接，连接条件是 shows.id = ratings.show_id。
Dialogue: 0,1:39:28.70,1:39:35.87,英文,,0,0,0,,And let's limit it to the office, too, for discussion's sake, where title equals, quote unquote, the office. Semicolon.
Dialogue: 0,1:39:28.70,1:39:35.87,中文,,0,0,0,,为了便于讨论，我们还是把它限定在“办公室”这部剧里，也就是 title =“The office”。
Dialogue: 0,1:39:35.87,1:39:52.26,英文,,0,0,0,,And now you can see that among the various offices, it looks like the one that most of us probably know and love is the highest rated, also with a 9.0, with like 585,000 people having cast votes for, whereas these other shows seem to have been less popular.
Dialogue: 0,1:39:35.87,1:39:52.26,中文,,0,0,0,,可以看到，在众多“办公室”中，我们大多数人可能知道和喜欢的那部评分最高，\N也是9.0分，大约有585,000人参与了投票，而其他几部剧似乎不太受欢迎。
Dialogue: 0,1:39:52.26,1:39:56.46,英文,,0,0,0,,And perhaps that's why, indeed, you see fewer episodes for them as well.
Dialogue: 0,1:39:52.26,1:39:56.46,中文,,0,0,0,,这也许就是为什么它们的剧集更少。
Dialogue: 0,1:39:56.46,1:40:05.15,英文,,0,0,0,,So even though we've put the data in multiple places, you can still kind of reconstitute it by lining things up in this way and rejoining the tables.
Dialogue: 0,1:39:56.46,1:40:05.15,中文,,0,0,0,,因此，即使我们将数据放在多个地方，你仍然可以通过这种方式将它们对齐并重新连接起来。
Dialogue: 0,1:40:05.15,1:40:09.12,英文,,0,0,0,,Questions now on this.
Dialogue: 0,1:40:05.15,1:40:09.12,中文,,0,0,0,,现在有疑问吗？
Dialogue: 0,1:40:09.12,1:40:16.59,英文,,0,0,0,,This is the heart of what SQL does and what relational databases do for you.
Dialogue: 0,1:40:09.12,1:40:16.59,中文,,0,0,0,,这就是 SQL 的核心功能，也是关系型数据库为你做的事情。
Dialogue: 0,1:40:16.59,1:40:18.22,英文,,0,0,0,,Questions.
Dialogue: 0,1:40:16.59,1:40:18.22,中文,,0,0,0,,问题。
Dialogue: 0,1:40:18.22,1:40:20.49,英文,,0,0,0,,All right, a few final features.
Dialogue: 0,1:40:18.22,1:40:20.49,中文,,0,0,0,,还有一些最后的功能。
Dialogue: 0,1:40:20.49,1:40:24.21,英文,,0,0,0,,There's not all that much that SQL takes practice like anything else.
Dialogue: 0,1:40:20.49,1:40:24.21,中文,,0,0,0,,SQL 并没有太多需要练习的地方，就像其他东西一样。
Dialogue: 0,1:40:24.21,1:40:32.28,英文,,0,0,0,,But in terms of syntax and capabilities, let's just introduce you to a couple of final features here and problems that arise and how we might solve them.
Dialogue: 0,1:40:24.21,1:40:32.28,中文,,0,0,0,,但在语法和功能方面，让我们在这里向你介绍几个最后的功能，以及出现的问题以及我们如何解决它们。
Dialogue: 0,1:40:32.28,1:40:34.58,英文,,0,0,0,,Let's do this as well.
Dialogue: 0,1:40:32.28,1:40:34.58,中文,,0,0,0,,我们也这样做。
Dialogue: 0,1:40:34.58,1:40:40.90,英文,,0,0,0,,So let me go back into VS Code here, and let's just find out Steve Carell's information again.
Dialogue: 0,1:40:34.58,1:40:40.90,中文,,0,0,0,,让我回到 VS Code，让我们再次找出 Steve Carell 的信息。
Dialogue: 0,1:40:40.90,1:40:47.72,英文,,0,0,0,,Last time we did it with this nested query by getting his ID, and then the show IDs, and then the titles for those show IDs.
Dialogue: 0,1:40:40.90,1:40:47.72,中文,,0,0,0,,上次我们通过获取他的 id，然后是剧集 id，然后是这些剧集 id 的标题，使用这个嵌套查询来完成的。
Dialogue: 0,1:40:47.72,1:40:51.20,英文,,0,0,0,,With join, you can do it a little differently. And any of these ways are fine.
Dialogue: 0,1:40:47.72,1:40:51.20,中文,,0,0,0,,使用 join，你可以用稍微不同的方式来做。这些方法中的任何一种都可以。
Dialogue: 0,1:40:51.20,1:40:53.82,英文,,0,0,0,,One might become easier to you mentally than another.
Dialogue: 0,1:40:51.20,1:40:53.82,中文,,0,0,0,,其中一种对你来说可能比另一种更容易理解。
Dialogue: 0,1:40:53.82,1:40:57.24,英文,,0,0,0,,Let's go ahead and select the titles from what?
Dialogue: 0,1:40:53.82,1:40:57.24,中文,,0,0,0,,让我们继续，从哪里选择标题？
Dialogue: 0,1:40:57.24,1:41:03.21,英文,,0,0,0,,Let's select the title from The people table, but, and I'm going to hit Enter.
Dialogue: 0,1:40:57.24,1:41:03.21,中文,,0,0,0,,让我们从 people 表中选择标题，但是，我要按回车键。
Dialogue: 0,1:41:03.21,1:41:12.37,英文,,0,0,0,,And when you're using SQLite 3 interactively, if you ever find yourself with a prompt that says dot, dot, dot, angle bracket, it means you're continuing your thought onto the next line.
Dialogue: 0,1:41:03.21,1:41:12.37,中文,,0,0,0,,当你以交互方式使用 sqlite 3 时，如果你发现自己遇到了一个显示点、点、点、尖括号的提示符，这意味着你正在将你的想法延续到下一行。
Dialogue: 0,1:41:12.37,1:41:18.59,英文,,0,0,0,,If you didn't intend that, you can sometimes hit semicolon to just end the thought, and hit Enter, and just even if it triggers an error.
Dialogue: 0,1:41:12.37,1:41:18.59,中文,,0,0,0,,如果你不是故意的，你有时可以按分号来结束这个想法，然后按回车键，即使它会触发错误。
Dialogue: 0,1:41:18.59,1:41:21.40,英文,,0,0,0,,But this is one way of formatting my queries now a little more nicely.
Dialogue: 0,1:41:18.59,1:41:21.40,中文,,0,0,0,,但这是一种现在可以更好地格式化我的查询的方法。
Dialogue: 0,1:41:21.40,1:41:24.72,英文,,0,0,0,,I'm just going to add some white space so that it's a little easier to read.
Dialogue: 0,1:41:21.40,1:41:24.72,中文,,0,0,0,,我要添加一些空格，这样它就更容易阅读了。
Dialogue: 0,1:41:24.72,1:41:25.68,英文,,0,0,0,,What do I want to select?
Dialogue: 0,1:41:24.72,1:41:25.68,中文,,0,0,0,,我想选择什么？
Dialogue: 0,1:41:25.68,1:41:40.59,英文,,0,0,0,,Well, I want to select the title of shows from the people table joined with the stars table on the people tables ID column equaling the stars tables person ID column.
Dialogue: 0,1:41:25.68,1:41:40.59,中文,,0,0,0,,我想从 people 表中选择剧集的标题，该表与 stars 表连接，连接条件是 people 表的 id 列等于 stars 表的 person_id 列。
Dialogue: 0,1:41:40.59,1:41:45.16,英文,,0,0,0,,So in other words, if you think back to what people are and what stars are, One has an ID.
Dialogue: 0,1:41:40.59,1:41:45.16,中文,,0,0,0,,换句话说，如果你回想一下 people 和 stars 是什么，一个有 id。
Dialogue: 0,1:41:45.16,1:41:48.24,英文,,0,0,0,,One has a person ID. I'm just now connecting those two tables.
Dialogue: 0,1:41:45.16,1:41:48.24,中文,,0,0,0,,一个有 person_id。我现在只是在连接这两个表。
Dialogue: 0,1:41:48.24,1:41:49.60,英文,,0,0,0,,I'm joining those two.
Dialogue: 0,1:41:48.24,1:41:49.60,中文,,0,0,0,,我正在连接这两个表。
Dialogue: 0,1:41:49.60,1:41:53.44,英文,,0,0,0,,But I want to do this as well with another table.
Dialogue: 0,1:41:49.60,1:41:53.44,中文,,0,0,0,,我还想对另一个表做同样的事情。
Dialogue: 0,1:41:53.44,1:41:55.00,英文,,0,0,0,,Let me additionally join in.
Dialogue: 0,1:41:53.44,1:41:55.00,中文,,0,0,0,,让我再加入一个表。
Dialogue: 0,1:41:55.00,1:41:56.26,英文,,0,0,0,,So now I only have two hands.
Dialogue: 0,1:41:55.00,1:41:56.26,中文,,0,0,0,,现在我只有两只手了。
Dialogue: 0,1:41:56.26,1:41:59.48,英文,,0,0,0,,But now I'm putting a third table joined in together here.
Dialogue: 0,1:41:56.26,1:41:59.48,中文,,0,0,0,,但现在我要把第三个表连接在一起了。
Dialogue: 0,1:41:59.48,1:42:06.06,英文,,0,0,0,,Join shows on stars.showid equals shows.id.
Dialogue: 0,1:41:59.48,1:42:06.06,中文,,0,0,0,,将 shows 表基于 stars.show_id 等于 shows.id 连接起来。
Dialogue: 0,1:42:06.06,1:42:08.64,英文,,0,0,0,,So this is now linking three tables together.
Dialogue: 0,1:42:06.06,1:42:08.64,中文,,0,0,0,,所以现在是将三个表连接在一起。
Dialogue: 0,1:42:08.64,1:42:10.39,英文,,0,0,0,,But I only care about this for one person.
Dialogue: 0,1:42:08.64,1:42:10.39,中文,,0,0,0,,但我只关心一个人的信息。
Dialogue: 0,1:42:10.39,1:42:14.85,英文,,0,0,0,,So where the name of the person equals quote, unquote, Steve Carell.
Dialogue: 0,1:42:10.39,1:42:14.85,中文,,0,0,0,,所以条件是人的名字等于“Steve Carell”。
Dialogue: 0,1:42:14.85,1:42:29.25,英文,,0,0,0,,So more cryptic, to be sure, but what we're doing with this query is just taking all three tables that we care about, and we're joining them all together at once using this new join syntax, literally telling the database what columns to line up with what.
Dialogue: 0,1:42:14.85,1:42:29.25,中文,,0,0,0,,当然，这更难理解一些，但我们用这个查询所做的，就是把我们关心的三个表都取出来，\N然后用这个新的 join 语法一次性把它们连接在一起，直接告诉数据库哪些列要和哪些列对齐。
Dialogue: 0,1:42:29.25,1:42:33.81,英文,,0,0,0,,And then we filter at the very end, just like before, to get back, if I hit Enter,
Dialogue: 0,1:42:29.25,1:42:33.81,中文,,0,0,0,,然后我们在最后进行过滤，就像之前一样，如果我按下回车键，就能得到我们想要的结果。
Dialogue: 0,1:42:33.81,1:42:42.80,英文,,0,0,0,,The answer we want, which in this case is a little slower at the moment, but that same list of 20 or so shows that he's been in. There's one other way to do this.
Dialogue: 0,1:42:33.81,1:42:42.80,中文,,0,0,0,,答案是，这次稍微慢一点，但还是那20多部他参演过的电视剧。还有另一种方法可以做到这一点。
Dialogue: 0,1:42:42.80,1:42:47.38,英文,,0,0,0,,And again, these are all in the slides online, so you can repeat them without having to jot down everything.
Dialogue: 0,1:42:42.80,1:42:47.38,中文,,0,0,0,,同样，这些内容都可以在线获取，所以你不需要记下所有内容，可以重复查看。
Dialogue: 0,1:42:47.38,1:42:48.96,英文,,0,0,0,,And we'll put them in the notes too.
Dialogue: 0,1:42:47.38,1:42:48.96,中文,,0,0,0,,我们也会把它们放在笔记里。
Dialogue: 0,1:42:48.96,1:42:52.87,英文,,0,0,0,,But there's another way to do this. I could also use an implicit join.
Dialogue: 0,1:42:48.96,1:42:52.87,中文,,0,0,0,,但还有另一种方法可以做到这一点。我也可以使用隐式连接。
Dialogue: 0,1:42:52.87,1:42:57.45,英文,,0,0,0,,So that was an explicit join because I literally typed the word join multiple times at that.
Dialogue: 0,1:42:52.87,1:42:57.45,中文,,0,0,0,,那是一个显式连接，因为我确实多次输入了“join”这个词。
Dialogue: 0,1:42:57.45,1:42:59.59,英文,,0,0,0,,But let me go ahead and select the title.
Dialogue: 0,1:42:57.45,1:42:59.59,中文,,0,0,0,,但让我继续，选择标题。
Dialogue: 0,1:42:59.59,1:43:03.08,英文,,0,0,0,,from these three tables, people, stars, and shows.
Dialogue: 0,1:42:59.59,1:43:03.08,中文,,0,0,0,,从这三个表中选择：people、stars 和 shows。
Dialogue: 0,1:43:03.08,1:43:17.29,英文,,0,0,0,,And this might just be nicer, because if you know what tables you want to select data from, just enumerate them, separated by commas, which you might prefer in your mind, where the people ID equals the stars person ID.
Dialogue: 0,1:43:03.08,1:43:17.29,中文,,0,0,0,,这可能会更好一些，因为如果你知道要从哪些表中选择数据，只需将它们列举出来，\N用逗号分隔，这在你的脑海中可能会更清晰，其中 people 表的 id 等于 stars 表的 person_id。
Dialogue: 0,1:43:17.29,1:43:22.58,英文,,0,0,0,,And the star's show ID equals the show's ID.
Dialogue: 0,1:43:17.29,1:43:22.58,中文,,0,0,0,,并且 stars 表的 show_id = shows.id。
Dialogue: 0,1:43:22.58,1:43:25.48,英文,,0,0,0,,And the name of the person equals Steve Carell.
Dialogue: 0,1:43:22.58,1:43:25.48,中文,,0,0,0,,并且人的名字等于 Steve Carell。
Dialogue: 0,1:43:25.48,1:43:27.10,英文,,0,0,0,,So this is an implicit join.
Dialogue: 0,1:43:25.48,1:43:27.10,中文,,0,0,0,,这就是隐式连接。
Dialogue: 0,1:43:27.10,1:43:29.96,英文,,0,0,0,,And honestly, I constantly reference my notes for some of this stuff, too.
Dialogue: 0,1:43:27.10,1:43:29.96,中文,,0,0,0,,说实话，我也经常参考我的笔记来回顾这些内容。
Dialogue: 0,1:43:29.96,1:43:32.94,英文,,0,0,0,,It's not the kind of thing that's going to come like this to you after just one day.
Dialogue: 0,1:43:29.96,1:43:32.94,中文,,0,0,0,,这不是你一天就能学会的东西。
Dialogue: 0,1:43:32.94,1:43:35.62,英文,,0,0,0,,But it's just a different way of expressing the same thing.
Dialogue: 0,1:43:32.94,1:43:35.62,中文,,0,0,0,,但这只是表达同一事物的不同方式。
Dialogue: 0,1:43:35.62,1:43:37.86,英文,,0,0,0,,I want to select data from three different tables.
Dialogue: 0,1:43:35.62,1:43:37.86,中文,,0,0,0,,我想从三个不同的表格中选择数据。
Dialogue: 0,1:43:37.86,1:43:49.55,英文,,0,0,0,,And hey, SQL, here is how I want you to line those tables up so that I can get like-related data for Steve Carell, and this now will achieve the same results, ultimately.
Dialogue: 0,1:43:37.86,1:43:49.55,中文,,0,0,0,,SQL，我想要你这样排列这些表格，以便我能够获得 Steve Carell 的相关数据，最终这将实现相同的结果。
Dialogue: 0,1:43:49.55,1:43:54.19,英文,,0,0,0,,Let me hit Enter.
Dialogue: 0,1:43:49.55,1:43:54.19,中文,,0,0,0,,按下回车键。
Dialogue: 0,1:43:54.19,1:43:55.79,英文,,0,0,0,,And there we go. So a little slower.
Dialogue: 0,1:43:54.19,1:43:55.79,中文,,0,0,0,,好了，速度有点慢。
Dialogue: 0,1:43:55.79,1:43:59.84,英文,,0,0,0,,And the performance might vary based on computer, based on implementation of SQL.
Dialogue: 0,1:43:55.79,1:43:59.84,中文,,0,0,0,,性能可能会因计算机和 SQL 实现的不同而有所差异。
Dialogue: 0,1:43:59.84,1:44:01.28,英文,,0,0,0,,But I think I still have the same answers.
Dialogue: 0,1:43:59.84,1:44:01.28,中文,,0,0,0,,但我认为我的答案还是一样的。
Dialogue: 0,1:44:01.28,1:44:08.34,英文,,0,0,0,,Now, suppose, as I often do, and I had to look it up again last time, suppose you forget how to spell Steve Carell's name.
Dialogue: 0,1:44:01.28,1:44:08.34,中文,,0,0,0,,假设，就像我经常做的那样，上次也不得不查了一下，假设你忘记了 Steve Carell 的名字怎么拼写。
Dialogue: 0,1:44:08.34,1:44:10.39,英文,,0,0,0,,Is it two Rs, two Ls, or the like?
Dialogue: 0,1:44:08.34,1:44:10.39,中文,,0,0,0,,是两个 R，两个 L，还是类似的？
Dialogue: 0,1:44:10.39,1:44:12.37,英文,,0,0,0,,Well, I could also do something like this.
Dialogue: 0,1:44:10.39,1:44:12.37,中文,,0,0,0,,我也可以这样做。
Dialogue: 0,1:44:12.37,1:44:14.33,英文,,0,0,0,,Select, well, let's just keep this simple.
Dialogue: 0,1:44:12.37,1:44:14.33,中文,,0,0,0,,选择，保持简单一点。
Dialogue: 0,1:44:14.33,1:44:16.19,英文,,0,0,0,,Select star from people.
Dialogue: 0,1:44:14.33,1:44:16.19,中文,,0,0,0,,从 people 表格中选择所有内容。
Dialogue: 0,1:44:16.19,1:44:20.01,英文,,0,0,0,,Where name equals, I've been deliberately getting it right so as to not embarrass myself.
Dialogue: 0,1:44:16.19,1:44:20.01,中文,,0,0,0,,其中 name 等于，我一直故意写对，以免尴尬。
Dialogue: 0,1:44:20.01,1:44:22.25,英文,,0,0,0,,That's the Steve Carell I keep querying.
Dialogue: 0,1:44:20.01,1:44:22.25,中文,,0,0,0,,这就是我一直在查询的 Steve Carell。
Dialogue: 0,1:44:22.25,1:44:26.10,英文,,0,0,0,,If you forget, well, you could try searching for just Steve's.
Dialogue: 0,1:44:22.25,1:44:26.10,中文,,0,0,0,,如果你忘记了，你可以试着只搜索 Steve。
Dialogue: 0,1:44:26.10,1:44:28.42,英文,,0,0,0,,But interestingly, there's a bunch of Steve's.
Dialogue: 0,1:44:26.10,1:44:28.42,中文,,0,0,0,,但有趣的是，有很多叫 Steve 的人。
Dialogue: 0,1:44:28.42,1:44:30.28,英文,,0,0,0,,We don't know when they were born.
Dialogue: 0,1:44:28.42,1:44:30.28,中文,,0,0,0,,我们不知道他们是什么时候出生的。
Dialogue: 0,1:44:30.28,1:44:35.44,英文,,0,0,0,,But that's probably not the Steve Carell we want if we don't have his last name.
Dialogue: 0,1:44:30.28,1:44:35.44,中文,,0,0,0,,但如果我们没有他的姓，这可能就不是我们想要的史蒂夫·卡瑞尔了。
Dialogue: 0,1:44:35.44,1:44:39.58,英文,,0,0,0,,So I could alternatively do, well, it's Steve, and then it starts with a C, I think.
Dialogue: 0,1:44:35.44,1:44:39.58,中文,,0,0,0,,所以我可以换一种方式，是史蒂夫，然后我想应该是以 C 开头的。
Dialogue: 0,1:44:39.58,1:44:42.71,英文,,0,0,0,,Well, it turns out there's another wild card you can use in SQL.
Dialogue: 0,1:44:39.58,1:44:42.71,中文,,0,0,0,,事实证明，你可以在 SQL 中使用另一个通配符。
Dialogue: 0,1:44:42.71,1:44:46.21,英文,,0,0,0,,We used the asterisk to select all of the columns.
Dialogue: 0,1:44:42.71,1:44:46.21,中文,,0,0,0,,我们使用星号来选择所有列。
Dialogue: 0,1:44:46.21,1:44:50.87,英文,,0,0,0,,You can, in quotes, use a percent sign to say C something.
Dialogue: 0,1:44:46.21,1:44:50.87,中文,,0,0,0,,你可以使用引号中的百分号来表示 C 后面跟着一些字符。
Dialogue: 0,1:44:50.87,1:44:56.82,英文,,0,0,0,,So there's zero or more characters after the letter C. And now this doesn't work.
Dialogue: 0,1:44:50.87,1:44:56.82,中文,,0,0,0,,所以字母 C 后面有零个或多个字符。但这行不通。
Dialogue: 0,1:44:56.82,1:45:01.90,英文,,0,0,0,,Because now I would be literally looking for Steve, space, C, something.
Dialogue: 0,1:44:56.82,1:45:01.90,中文,,0,0,0,,因为现在我实际上要查找的是史蒂夫，空格，C，以及后面的内容。
Dialogue: 0,1:45:01.90,1:45:10.75,英文,,0,0,0,,But recall earlier, I mentioned that one other keyword, which is for fuzzier matching, so to speak, where it's like not exactly what you're looking for, but it's like what you're looking for.
Dialogue: 0,1:45:01.90,1:45:10.75,中文,,0,0,0,,但回想一下之前我提到的另一个关键字，它用于模糊匹配，也就是说，它不完全是你正在查找的内容，但它类似于你正在查找的内容。
Dialogue: 0,1:45:10.75,1:45:17.24,英文,,0,0,0,,If you instead say where his name is like Steve, space, C, something, now we'll get back a whole bunch of Steve's.
Dialogue: 0,1:45:10.75,1:45:17.24,中文,,0,0,0,,如果你改为说他的名字像史蒂夫，空格，C，以及后面的内容，现在我们会得到一大堆史蒂夫。
Dialogue: 0,1:45:17.24,1:45:20.00,英文,,0,0,0,,But I think now I could probably find the one I'm actually looking for.
Dialogue: 0,1:45:17.24,1:45:20.00,中文,,0,0,0,,但我认为现在我可能可以找到我真正要找的那个人了。
Dialogue: 0,1:45:20.00,1:45:22.50,英文,,0,0,0,,If I don't remember his name, you can use multiple percent signs.
Dialogue: 0,1:45:20.00,1:45:22.50,中文,,0,0,0,,如果你不记得他的名字，可以使用多个百分号。
Dialogue: 0,1:45:22.50,1:45:25.34,英文,,0,0,0,,If you forget what his first name is, you could reverse the order.
Dialogue: 0,1:45:22.50,1:45:25.34,中文,,0,0,0,,如果你忘记了他的名字，你可以颠倒顺序。
Dialogue: 0,1:45:25.34,1:45:30.07,英文,,0,0,0,,But that, too, is a very powerful SQL feature at that.
Dialogue: 0,1:45:25.34,1:45:30.07,中文,,0,0,0,,但这同样是一个非常强大的 SQL 功能。
Dialogue: 0,1:45:30.07,1:45:32.71,英文,,0,0,0,,Questions on these queries here?
Dialogue: 0,1:45:30.07,1:45:32.71,中文,,0,0,0,,关于这些查询，大家有什么问题吗？
Dialogue: 0,1:45:32.71,1:45:35.77,英文,,0,0,0,,Yeah?
Dialogue: 0,1:45:32.71,1:45:35.77,中文,,0,0,0,,有吗？
Dialogue: 0,1:45:35.77,1:45:38.90,英文,,0,0,0,,Sorry?
Dialogue: 0,1:45:35.77,1:45:38.90,中文,,0,0,0,,什么？
Dialogue: 0,1:45:38.90,1:45:42.57,英文,,0,0,0,,What about it? Oh, yeah, sure.
Dialogue: 0,1:45:38.90,1:45:42.57,中文,,0,0,0,,怎么了？好的，没问题。
Dialogue: 0,1:45:42.57,1:45:49.90,英文,,0,0,0,,So the query I used here, there's a lot of Steve's whose last name starts with C. Oops, too far.
Dialogue: 0,1:45:42.57,1:45:49.90,中文,,0,0,0,,我在这里使用的查询，有很多史蒂夫的姓氏是以 C 开头的。太远了。
Dialogue: 0,1:45:49.90,1:45:57.11,英文,,0,0,0,,The last query I executed was this one here, where the name is like, quote unquote, Steve C percent sign.
Dialogue: 0,1:45:49.90,1:45:57.11,中文,,0,0,0,,我执行的最后一个查询是这个，其中姓名类似于，引号，Steve C 百分号。
Dialogue: 0,1:45:57.11,1:46:00.15,英文,,0,0,0,,So that's just another tool for your toolkit here.
Dialogue: 0,1:45:57.11,1:46:00.15,中文,,0,0,0,,所以这只是你工具箱里的另一个工具。
Dialogue: 0,1:46:00.15,1:46:05.36,英文,,0,0,0,,But you'll perhaps have noticed that those two, prior to that query, the joins I did were sort of slow.
Dialogue: 0,1:46:00.15,1:46:05.36,中文,,0,0,0,,你可能已经注意到，在我进行查询之前，那两个连接的速度有点慢。
Dialogue: 0,1:46:05.36,1:46:07.62,英文,,0,0,0,,And honestly, this database isn't even that big.
Dialogue: 0,1:46:05.36,1:46:07.62,中文,,0,0,0,,说实话，这个数据库甚至没有那么大。
Dialogue: 0,1:46:07.62,1:46:10.27,英文,,0,0,0,,Yes, it has tens of thousands of rows in it.
Dialogue: 0,1:46:07.62,1:46:10.27,中文,,0,0,0,,是的，它里面有成千上万行数据。
Dialogue: 0,1:46:10.27,1:46:17.72,英文,,0,0,0,,But in the real world, in most of the apps you and I use a lot every day or websites, there's millions, even billions of rows of data.
Dialogue: 0,1:46:10.27,1:46:17.72,中文,,0,0,0,,但在现实世界中，在我们每天使用的大多数应用程序或网站中，都有数百万甚至数十亿行数据。
Dialogue: 0,1:46:17.72,1:46:26.92,英文,,0,0,0,,If I had to wait on my computer here or my code space a second or two to get the data, that's not going to work for millions of users or customers, certainly.
Dialogue: 0,1:46:17.72,1:46:26.92,中文,,0,0,0,,如果我必须在我的电脑上或我的代码空间里等一两秒钟才能获取数据，那肯定行不通，尤其是对数百万用户或客户来说。
Dialogue: 0,1:46:26.92,1:46:28.98,英文,,0,0,0,,So how can we actually improve things?
Dialogue: 0,1:46:26.92,1:46:28.98,中文,,0,0,0,,那么我们怎样才能真正改进呢？
Dialogue: 0,1:46:28.98,1:46:40.25,英文,,0,0,0,,Well, it turns out another upside of a proper relational database is that it's not just a spreadsheet where the onus is on you to find the data you're looking for.
Dialogue: 0,1:46:28.98,1:46:40.25,中文,,0,0,0,,事实证明，一个合适的的关系型数据库的另一个优点是，它不仅仅是一个电子表格，你需要自己去查找需要的数据。
Dialogue: 0,1:46:40.25,1:46:43.82,英文,,0,0,0,,You can also tell the database to index the data for you.
Dialogue: 0,1:46:40.25,1:46:43.82,中文,,0,0,0,,你也可以告诉数据库为你索引数据。
Dialogue: 0,1:46:43.82,1:46:57.98,英文,,0,0,0,,An index is an efficient, Cheat sheet for finding data fast, like books in the real world often have indices at the end of the book where you can look things up alphabetically, and then you can cross-reference it for the pages that that topic appears on.
Dialogue: 0,1:46:43.82,1:46:57.98,中文,,0,0,0,,索引是一种高效的快速查找数据的“小抄”，就像现实世界中的书籍通常在书的末尾有索引，\N你可以按字母顺序查找内容，然后你可以交叉引用该主题出现的页面。
Dialogue: 0,1:46:57.98,1:47:08.89,英文,,0,0,0,,Same idea in a database. If you tell the database in advance that you want to search on a certain column frequently, you can tell it to build a fancy index that will just allow you to search that column faster.
Dialogue: 0,1:46:57.98,1:47:08.89,中文,,0,0,0,,数据库中的想法也一样。如果你提前告诉数据库你想要频繁地搜索某个列，你可以告诉它建立一个很棒的索引，让你可以更快地搜索该列。
Dialogue: 0,1:47:08.89,1:47:13.29,英文,,0,0,0,,By default, These columns are going to be searched, most likely, by a linear search.
Dialogue: 0,1:47:08.89,1:47:13.29,中文,,0,0,0,,默认情况下，这些列很可能是通过线性搜索来搜索的。
Dialogue: 0,1:47:13.29,1:47:17.53,英文,,0,0,0,,Like, not even binary search, because the data might not be sorted, because it came in in any order.
Dialogue: 0,1:47:13.29,1:47:17.53,中文,,0,0,0,,甚至都不是二分搜索，因为数据可能没有排序，因为它们是以任何顺序进入的。
Dialogue: 0,1:47:17.53,1:47:22.77,英文,,0,0,0,,But if you create an index, you're probably going to get something closer to logarithmic than linear.
Dialogue: 0,1:47:17.53,1:47:22.77,中文,,0,0,0,,但是，如果创建一个索引，你可能会得到更接近对数而不是线性的结果。
Dialogue: 0,1:47:22.77,1:47:25.08,英文,,0,0,0,,And that's going to be a big plus overall.
Dialogue: 0,1:47:22.77,1:47:25.08,中文,,0,0,0,,总的来说，这将是一个很大的优势。
Dialogue: 0,1:47:25.08,1:47:26.38,英文,,0,0,0,,So let me do something simple here.
Dialogue: 0,1:47:25.08,1:47:26.38,中文,,0,0,0,,让我来做一个简单的示范。
Dialogue: 0,1:47:26.38,1:47:33.32,英文,,0,0,0,,First, let me turn on a SQLite-specific feature that just is going to time all of my queries by writing dot timer on.
Dialogue: 0,1:47:26.38,1:47:33.32,中文,,0,0,0,,首先，让我打开一个 sqlite 特定的功能，它将通过写入 . timer on 来计时我的所有查询。
Dialogue: 0,1:47:33.32,1:47:36.00,英文,,0,0,0,,I just want to keep track of.
Dialogue: 0,1:47:33.32,1:47:36.00,中文,,0,0,0,,我只是想跟踪一下。
Dialogue: 0,1:47:36.00,1:47:37.72,英文,,0,0,0,,How long each of these commands takes.
Dialogue: 0,1:47:36.00,1:47:37.72,中文,,0,0,0,,每个命令需要多长时间。
Dialogue: 0,1:47:37.72,1:47:40.55,英文,,0,0,0,,This one is not a slow command, so this is just going to be relative.
Dialogue: 0,1:47:37.72,1:47:40.55,中文,,0,0,0,,这不是一个慢命令，所以这只是一个相对的时间。
Dialogue: 0,1:47:40.55,1:47:45.95,英文,,0,0,0,,But let's just select everything from the shows table where the title thereof is the office.
Dialogue: 0,1:47:40.55,1:47:45.95,中文,,0,0,0,,但是，让我们从 shows 表中选择所有标题为 The office 的内容。
Dialogue: 0,1:47:45.95,1:47:49.05,英文,,0,0,0,,Let's see how long this relatively simple query takes.
Dialogue: 0,1:47:45.95,1:47:49.05,中文,,0,0,0,,让我们看看这个相对简单的查询需要多长时间。
Dialogue: 0,1:47:49.05,1:47:51.03,英文,,0,0,0,,All right, not very long at all.
Dialogue: 0,1:47:49.05,1:47:51.03,中文,,0,0,0,,好的，一点也不长。
Dialogue: 0,1:47:51.03,1:47:54.90,英文,,0,0,0,,In real terms, like less than a second, 0.035 seconds.
Dialogue: 0,1:47:51.03,1:47:54.90,中文,,0,0,0,,实际上，不到一秒，0.035 秒。
Dialogue: 0,1:47:54.90,1:47:57.14,英文,,0,0,0,,So not slow by any means.
Dialogue: 0,1:47:54.90,1:47:57.14,中文,,0,0,0,,所以无论如何都不算慢。
Dialogue: 0,1:47:57.14,1:48:03.24,英文,,0,0,0,,But if you've got hundreds, thousands, millions of users, every one of those milliseconds could very well add up.
Dialogue: 0,1:47:57.14,1:48:03.24,中文,,0,0,0,,但如果你有成百上千，甚至上百万的用户，这其中的每一毫秒都可能累积起来。
Dialogue: 0,1:48:03.24,1:48:04.67,英文,,0,0,0,,So can we do better?
Dialogue: 0,1:48:03.24,1:48:04.67,中文,,0,0,0,,那么我们能做得更好吗？
Dialogue: 0,1:48:04.67,1:48:06.43,英文,,0,0,0,,Well, we can if I do this.
Dialogue: 0,1:48:04.67,1:48:06.43,中文,,0,0,0,,如果我这样做，我们可以。
Dialogue: 0,1:48:06.43,1:48:11.93,英文,,0,0,0,,If I use syntax like this once in the beginning of the design of my database,
Dialogue: 0,1:48:06.43,1:48:11.93,中文,,0,0,0,,如果我在数据库设计的开始使用这样的语法，
Dialogue: 0,1:48:11.93,1:48:18.90,英文,,0,0,0,,I create not a table, but an index with some name on a specific table on one or more columns.
Dialogue: 0,1:48:11.93,1:48:18.90,中文,,0,0,0,,我创建的不是表，而是在一个或多个列的特定表上的，带有一些名称的索引。
Dialogue: 0,1:48:18.90,1:48:29.98,英文,,0,0,0,,I can give a clue, a hint to the database in advance saying, please optimize with some secret sauce searching or selecting on this column in this table so that my searches are faster.
Dialogue: 0,1:48:18.90,1:48:29.98,中文,,0,0,0,,我可以提前给数据库一个提示，告诉它请使用一些秘密方法来优化搜索或选择此表中的此列，以便我的搜索速度更快。
Dialogue: 0,1:48:29.98,1:48:30.77,英文,,0,0,0,,So let me do this.
Dialogue: 0,1:48:29.98,1:48:30.77,中文,,0,0,0,,让我来试试。
Dialogue: 0,1:48:30.77,1:48:32.77,英文,,0,0,0,,Let me go back to VS Code here.
Dialogue: 0,1:48:30.77,1:48:32.77,中文,,0,0,0,,让我回到 VS Code。
Dialogue: 0,1:48:32.77,1:48:36.43,英文,,0,0,0,,Let me create an index called, how about, TitleIndex.
Dialogue: 0,1:48:32.77,1:48:36.43,中文,,0,0,0,,让我创建一个名为 title_index 的索引。
Dialogue: 0,1:48:36.43,1:48:40.25,英文,,0,0,0,,I could call it anything I want, but I want to search faster on titles.
Dialogue: 0,1:48:36.43,1:48:40.25,中文,,0,0,0,,我可以随便叫它，但我希望更快地搜索标题。
Dialogue: 0,1:48:40.25,1:48:47.12,英文,,0,0,0,,So I'm going to call this a TitleIndex, where, rather, TitleIndex on the table called Shows.
Dialogue: 0,1:48:40.25,1:48:47.12,中文,,0,0,0,,所以我打算称之为 title_index，或者更确切地说，是在名为 Shows 的表上的 title_index。
Dialogue: 0,1:48:47.12,1:48:50.64,英文,,0,0,0,,And then in parentheses is the syntax, the column called Title.
Dialogue: 0,1:48:47.12,1:48:50.64,中文,,0,0,0,,括号里是语法，名为 title 的列。
Dialogue: 0,1:48:50.64,1:48:57.74,英文,,0,0,0,,So again, I've just borrowed this canonical syntax, and I've just translated it into something that's TV show specific.
Dialogue: 0,1:48:50.64,1:48:57.74,中文,,0,0,0,,再说一次，我只是借用了这个规范的语法，并把它翻译成特定于电视剧的东西。
Dialogue: 0,1:48:57.74,1:49:00.32,英文,,0,0,0,,All right, what is this going to do for me?
Dialogue: 0,1:48:57.74,1:49:00.32,中文,,0,0,0,,这对我有什么帮助？
Dialogue: 0,1:49:00.32,1:49:05.87,英文,,0,0,0,,Once I hit Enter, this is going to create in the computer's memory, the database's memory, something called a B-tree.
Dialogue: 0,1:49:00.32,1:49:05.87,中文,,0,0,0,,一旦我按下回车键，这将在计算机内存，也就是数据库内存中创建一个叫做 B 树的东西。
Dialogue: 0,1:49:05.87,1:49:07.37,英文,,0,0,0,,It's not a binary tree.
Dialogue: 0,1:49:05.87,1:49:07.37,中文,,0,0,0,,它不是二叉树。
Dialogue: 0,1:49:07.37,1:49:14.10,英文,,0,0,0,,A B-tree is actually a potentially more efficient data structure that we didn't talk about a few weeks back in week five.
Dialogue: 0,1:49:07.37,1:49:14.10,中文,,0,0,0,,B 树实际上是一种可能更高效的数据结构，我们在第五周没有讨论过。
Dialogue: 0,1:49:14.10,1:49:17.88,英文,,0,0,0,,But it looks a little something like this, which looks similar to a binary tree.
Dialogue: 0,1:49:14.10,1:49:17.88,中文,,0,0,0,,它看起来像这样，类似于二叉树。
Dialogue: 0,1:49:17.88,1:49:20.93,英文,,0,0,0,,But does anyone notice what makes this not a binary tree?
Dialogue: 0,1:49:17.88,1:49:20.93,中文,,0,0,0,,但是有人注意到是什么让它不是二叉树吗？
Dialogue: 0,1:49:26.69,1:49:31.69,英文,,0,0,0,,Exactly, binary tree by implying 2 has no more than two children per node.
Dialogue: 0,1:49:26.69,1:49:31.69,中文,,0,0,0,,没错，二叉树意味着每个节点最多只有两个子节点。
Dialogue: 0,1:49:31.69,1:49:33.58,英文,,0,0,0,,But here's a perfect example, 1, 2, 3.
Dialogue: 0,1:49:31.69,1:49:33.58,中文,,0,0,0,,但这是一个完美的例子：1、2、3。
Dialogue: 0,1:49:33.58,1:49:36.04,英文,,0,0,0,,And there could be four children, five children, or more.
Dialogue: 0,1:49:33.58,1:49:36.04,中文,,0,0,0,,可以有四个子节点、五个子节点甚至更多。
Dialogue: 0,1:49:36.04,1:49:40.64,英文,,0,0,0,,But the effect of that, if you have a very wide tree, the upside is that it's very short.
Dialogue: 0,1:49:36.04,1:49:40.64,中文,,0,0,0,,但这样做的效果是，如果你有一个非常宽的树，好处是它非常矮。
Dialogue: 0,1:49:40.64,1:49:43.82,英文,,0,0,0,,It pulls the data higher up, closer to the node.
Dialogue: 0,1:49:40.64,1:49:43.82,中文,,0,0,0,,它将数据拉高到更靠近节点的位置。
Dialogue: 0,1:49:43.82,1:49:44.54,英文,,0,0,0,,to the root node.
Dialogue: 0,1:49:43.82,1:49:44.54,中文,,0,0,0,,更靠近根节点。
Dialogue: 0,1:49:44.54,1:49:52.10,英文,,0,0,0,,And recall that the root node is where we began our searches in the past, whether it was a BST, a binary search tree, even a trie, or other data structures.
Dialogue: 0,1:49:44.54,1:49:52.10,中文,,0,0,0,,回想一下，根节点是我们过去开始搜索的地方，无论是 BST、二叉搜索树、甚至是 Trie 或其他数据结构。
Dialogue: 0,1:49:52.10,1:49:53.54,英文,,0,0,0,,We always began at the top.
Dialogue: 0,1:49:52.10,1:49:53.54,中文,,0,0,0,,我们总是从顶部开始。
Dialogue: 0,1:49:53.54,1:50:06.71,英文,,0,0,0,,So the higher up you can pull the data, even if it makes the data structure very wide, you're going to be able to do boom, boom, boom, look up queries, look up data probably much faster, certainly than if it's just a very long list, like a column by default.
Dialogue: 0,1:49:53.54,1:50:06.71,中文,,0,0,0,,即使数据结构变得非常宽，只要你能把数据拉高，你就能快速地进行查询、查找数据，肯定比仅仅使用一个很长的列表（比如默认的列）要快得多。
Dialogue: 0,1:50:06.71,1:50:10.13,英文,,0,0,0,,So with that said, let me go back to VS Code.
Dialogue: 0,1:50:06.71,1:50:10.13,中文,,0,0,0,,那么，话虽如此，让我回到 VS Code。
Dialogue: 0,1:50:10.13,1:50:11.37,英文,,0,0,0,,I didn't create the index yet.
Dialogue: 0,1:50:10.13,1:50:11.37,中文,,0,0,0,,我还没有创建索引。
Dialogue: 0,1:50:11.37,1:50:13.45,英文,,0,0,0,,Let me go ahead and hit Enter and create it.
Dialogue: 0,1:50:11.37,1:50:13.45,中文,,0,0,0,,让我继续并按下回车键创建它。
Dialogue: 0,1:50:13.45,1:50:14.87,英文,,0,0,0,,All right, it took a minute, a moment.
Dialogue: 0,1:50:13.45,1:50:14.87,中文,,0,0,0,,这花了一分钟，一会儿。
Dialogue: 0,1:50:14.87,1:50:17.93,英文,,0,0,0,,It took like half a second, which obviously is not that slow.
Dialogue: 0,1:50:14.87,1:50:17.93,中文,,0,0,0,,大概花了半秒钟，显然这并不算慢。
Dialogue: 0,1:50:17.93,1:50:20.37,英文,,0,0,0,,But with more data, that could have been even slower.
Dialogue: 0,1:50:17.93,1:50:20.37,中文,,0,0,0,,但随着数据量的增加，速度可能会更慢。
Dialogue: 0,1:50:20.37,1:50:22.84,英文,,0,0,0,,But it's a one-time operation as of now.
Dialogue: 0,1:50:20.37,1:50:22.84,中文,,0,0,0,,但到目前为止，这是一次性操作。
Dialogue: 0,1:50:22.84,1:50:29.46,英文,,0,0,0,,And now, let me hit up and let me select the same data from shows where title equals the office.
Dialogue: 0,1:50:22.84,1:50:29.46,中文,,0,0,0,,现在，让我按向上键，从 `shows` 表中选择 `title` = `The office` 的相同数据。
Dialogue: 0,1:50:29.46,1:50:34.20,英文,,0,0,0,,Last time, just a moment ago, it took 0.035 seconds.
Dialogue: 0,1:50:29.46,1:50:34.20,中文,,0,0,0,,就在刚才，它花了 0.035 秒。
Dialogue: 0,1:50:34.20,1:50:35.42,英文,,0,0,0,,No, not slow.
Dialogue: 0,1:50:34.20,1:50:35.42,中文,,0,0,0,,不，不算慢。
Dialogue: 0,1:50:35.42,1:50:39.09,英文,,0,0,0,,But also, that's going to add up if I have lots of users of IMDB.
Dialogue: 0,1:50:35.42,1:50:39.09,中文,,0,0,0,,但如果我有大量 IMDB 用户，这也会累积起来。
Dialogue: 0,1:50:39.09,1:50:42.17,英文,,0,0,0,,Let's go ahead now and execute the same query again.
Dialogue: 0,1:50:39.09,1:50:42.17,中文,,0,0,0,,现在让我们再次执行相同的查询。
Dialogue: 0,1:50:42.17,1:50:46.12,英文,,0,0,0,,How long did that take?
Dialogue: 0,1:50:42.17,1:50:46.12,中文,,0,0,0,,这次花了多长时间？
Dialogue: 0,1:50:46.12,1:50:48.91,英文,,0,0,0,,0.001 seconds now. I mean, practically nothing.
Dialogue: 0,1:50:46.12,1:50:48.91,中文,,0,0,0,,现在是 0.001 秒。 我的意思是，几乎没有。
Dialogue: 0,1:50:48.91,1:50:50.95,英文,,0,0,0,,And so that's the sort of opportunity now.
Dialogue: 0,1:50:48.91,1:50:50.95,中文,,0,0,0,,这就是机会所在。
Dialogue: 0,1:50:50.95,1:51:04.15,英文,,0,0,0,,When you've got lots of data and you want to really speed up these searches, these indexes, these indices that just create for you these magical data structures in the database's memory, it allows you to search on columns that you are pretty sure you want to search on more effectively.
Dialogue: 0,1:50:50.95,1:51:04.15,中文,,0,0,0,,当你有很多数据，并且希望真正加快搜索速度时，这些索引，\N这些在数据库内存中为你创建的神奇数据结构，允许你更有效地在确定要搜索的列上进行搜索。
Dialogue: 0,1:51:04.15,1:51:13.66,英文,,0,0,0,,Now, by contrast, if you've ever used Google or Bing or some search engine that has advanced search, some of those text boxes that you can search more precisely in might very well be slower.
Dialogue: 0,1:51:04.15,1:51:13.66,中文,,0,0,0,,相比之下，如果你曾经使用过 Google、Bing 或其他具有高级搜索功能的搜索引擎，你会发现，那些可以让你更精确搜索的文本框可能会更慢。
Dialogue: 0,1:51:13.66,1:51:14.26,英文,,0,0,0,,Why?
Dialogue: 0,1:51:13.66,1:51:14.26,中文,,0,0,0,,为什么？
Dialogue: 0,1:51:14.26,1:51:19.58,英文,,0,0,0,,Well, probably you don't want to go crazy and just index every column on every table.
Dialogue: 0,1:51:14.26,1:51:19.58,中文,,0,0,0,,你可能不想疯狂地索引每个表上的每一列。
Dialogue: 0,1:51:19.58,1:51:21.16,英文,,0,0,0,,Why?
Dialogue: 0,1:51:19.58,1:51:21.16,中文,,0,0,0,,为什么？
Dialogue: 0,1:51:21.16,1:51:24.86,英文,,0,0,0,,What might be the intuition?
Dialogue: 0,1:51:21.16,1:51:24.86,中文,,0,0,0,,intuition 是什么？
Dialogue: 0,1:51:24.86,1:51:28.51,英文,,0,0,0,,Like, if logically indexes speed things up, why not index everything?
Dialogue: 0,1:51:24.86,1:51:28.51,中文,,0,0,0,,从逻辑上讲，如果索引可以加快速度，为什么不索引所有内容？
Dialogue: 0,1:51:28.51,1:51:30.85,英文,,0,0,0,,There's always going to be a trade-off here.
Dialogue: 0,1:51:28.51,1:51:30.85,中文,,0,0,0,,这里总会有一个权衡。
Dialogue: 0,1:51:30.85,1:51:33.03,英文,,0,0,0,,What might that be?
Dialogue: 0,1:51:30.85,1:51:33.03,中文,,0,0,0,,那会是什么？
Dialogue: 0,1:51:33.03,1:51:37.04,英文,,0,0,0,,Yeah? Yeah, it's going to take a lot of storage, right?
Dialogue: 0,1:51:33.03,1:51:37.04,中文,,0,0,0,,它会占用大量存储空间，对吧？
Dialogue: 0,1:51:37.04,1:51:38.88,英文,,0,0,0,,This is just a slide on the screen.
Dialogue: 0,1:51:37.04,1:51:38.88,中文,,0,0,0,,这只是屏幕上的一张幻灯片。
Dialogue: 0,1:51:38.88,1:51:41.00,英文,,0,0,0,,But this has to go somewhere.
Dialogue: 0,1:51:38.88,1:51:41.00,中文,,0,0,0,,但这需要存储空间。
Dialogue: 0,1:51:41.00,1:51:44.90,英文,,0,0,0,,This needs space in the computer's memory or on the hard drive or the like.
Dialogue: 0,1:51:41.00,1:51:44.90,中文,,0,0,0,,这需要占用计算机内存、硬盘或类似设备上的空间。
Dialogue: 0,1:51:44.90,1:51:47.53,英文,,0,0,0,,And that's fine if you have unlimited space.
Dialogue: 0,1:51:44.90,1:51:47.53,中文,,0,0,0,,如果你的空间无限大，这没问题。
Dialogue: 0,1:51:47.53,1:51:49.21,英文,,0,0,0,,But odds are, you don't.
Dialogue: 0,1:51:47.53,1:51:49.21,中文,,0,0,0,,但很有可能，你没有。
Dialogue: 0,1:51:49.21,1:51:51.01,英文,,0,0,0,,And that's going to get expensive for different reasons.
Dialogue: 0,1:51:49.21,1:51:51.01,中文,,0,0,0,,而且这会因为不同的原因变得很昂贵。
Dialogue: 0,1:51:51.01,1:51:56.97,英文,,0,0,0,,So maybe you only want to index certain columns and certain tables and not all of them.
Dialogue: 0,1:51:51.01,1:51:56.97,中文,,0,0,0,,所以也许你只想索引某些列和某些表，而不是所有列和表。
Dialogue: 0,1:51:56.97,1:51:57.69,英文,,0,0,0,,Because you know what?
Dialogue: 0,1:51:56.97,1:51:57.69,中文,,0,0,0,,因为？
Dialogue: 0,1:51:57.69,1:52:02.67,英文,,0,0,0,,Even if a user really wants to search, maybe by advanced search on some other
Dialogue: 0,1:51:57.69,1:52:02.67,中文,,0,0,0,,即使用户真的想搜索，也许是通过高级搜索其他
Dialogue: 0,1:52:02.67,1:52:05.00,英文,,0,0,0,,Column or table altogether, fine.
Dialogue: 0,1:52:02.67,1:52:05.00,中文,,0,0,0,,列或表，都可以。
Dialogue: 0,1:52:05.00,1:52:16.16,英文,,0,0,0,,If once in a while a query is slow, we're probably getting the bigger bang for our buck by optimizing the common cases, the more popular queries that people actually care about too.
Dialogue: 0,1:52:05.00,1:52:16.16,中文,,0,0,0,,如果偶尔有一次查询很慢，通过优化常见情况、人们真正关心的更流行的查询，我们可能获得更大的收益。
Dialogue: 0,1:52:16.16,1:52:25.05,英文,,0,0,0,,All right, so let's come full circle and bring this now back to how we actually began, which was with some Python code.
Dialogue: 0,1:52:16.16,1:52:25.05,中文,,0,0,0,,好，让我们回到原点，回到我们最初开始的地方，也就是一些 Python 代码。
Dialogue: 0,1:52:25.05,1:52:27.65,英文,,0,0,0,,So it turns out these are not either-or decisions.
Dialogue: 0,1:52:25.05,1:52:27.65,中文,,0,0,0,,事实证明，这些都不是非此即彼的决定。
Dialogue: 0,1:52:27.65,1:52:33.33,英文,,0,0,0,,It turns out in the real world, developers are constantly using one, two, three languages at once.
Dialogue: 0,1:52:27.65,1:52:33.33,中文,,0,0,0,,事实证明，在现实世界中，开发者会经常同时使用一两种、甚至三种语言。
Dialogue: 0,1:52:33.33,1:52:38.15,英文,,0,0,0,,In fact, next week, I rattled off HTML, CSS, and JavaScript, one of which is a proper programming language.
Dialogue: 0,1:52:33.33,1:52:38.15,中文,,0,0,0,,事实上，下周，我列举了 HTML、CSS 和 JavaScript，其中一种是标准的编程语言。
Dialogue: 0,1:52:38.15,1:52:40.68,英文,,0,0,0,,But those languages are often used together.
Dialogue: 0,1:52:38.15,1:52:40.68,中文,,0,0,0,,但这些语言经常一起使用。
Dialogue: 0,1:52:40.68,1:52:50.68,英文,,0,0,0,,Totally normal and common to use Python in SQL, or Java in SQL, or Swift in SQL, or any number of different combinations with a database language.
Dialogue: 0,1:52:40.68,1:52:50.68,中文,,0,0,0,,在 SQL 中使用 Python，或者在 SQL 中使用 Java、Swift，或者使用数据库语言的任何其他组合，都是完全正常和常见的。
Dialogue: 0,1:52:50.68,1:53:01.52,英文,,0,0,0,,You might use your preferred programming language, Java, Python, C++, to create the user interface and the logic that implements the program itself.
Dialogue: 0,1:52:50.68,1:53:01.52,中文,,0,0,0,,你可以使用你喜欢的编程语言，Java、Python、C++，来创建用户界面和实现程序本身的逻辑。
Dialogue: 0,1:53:01.52,1:53:04.18,英文,,0,0,0,,But for your data, SQL is a really good candidate.
Dialogue: 0,1:53:01.52,1:53:04.18,中文,,0,0,0,,但对于你的数据来说，SQL 是一个非常好的选择。
Dialogue: 0,1:53:04.18,1:53:08.26,英文,,0,0,0,,And indeed, we've seen already that SQL can just speed up certain operations you can change.
Dialogue: 0,1:53:04.18,1:53:08.26,中文,,0,0,0,,事实上，我们已经看到 SQL 可以加速某些操作。
Dialogue: 0,1:53:08.26,1:53:11.37,英文,,0,0,0,,You can collapse 15 lines of code into just one.
Dialogue: 0,1:53:08.26,1:53:11.37,中文,,0,0,0,,你可以将 15 行代码压缩成一行。
Dialogue: 0,1:53:11.37,1:53:13.49,英文,,0,0,0,,And you can use these things together.
Dialogue: 0,1:53:11.37,1:53:13.49,中文,,0,0,0,,而且你可以一起使用这些东西。
Dialogue: 0,1:53:13.49,1:53:16.77,英文,,0,0,0,,So let me come back to, I'm going to quit out of SQLite.
Dialogue: 0,1:53:13.49,1:53:16.77,中文,,0,0,0,,让我回到，我要退出 sqlite。
Dialogue: 0,1:53:16.77,1:53:18.77,英文,,0,0,0,,I'm going to minimize my terminal window.
Dialogue: 0,1:53:16.77,1:53:18.77,中文,,0,0,0,,我把终端窗口最小化。
Dialogue: 0,1:53:18.77,1:53:22.19,英文,,0,0,0,,And here's where we left off before with favorites.py.
Dialogue: 0,1:53:18.77,1:53:22.19,中文,,0,0,0,,这是我们之前用 favorites.py 写到的地方。
Dialogue: 0,1:53:22.19,1:53:27.61,英文,,0,0,0,,With favorites.py, everything was being stored in favorites.csv.
Dialogue: 0,1:53:22.19,1:53:27.61,中文,,0,0,0,,在 favorites.py 中，所有的内容都存储在 favorites.csv 中。
Dialogue: 0,1:53:27.61,1:53:36.08,英文,,0,0,0,,And recall that we eventually imported that CSV file into favorites.db automatically with .import, just so we could start playing around with SQL.
Dialogue: 0,1:53:27.61,1:53:36.08,中文,,0,0,0,,回想一下，我们最终使用 .import 自动将 CSV 文件导入到 favorites.db 中，这样我们就可以开始使用 SQL 了。
Dialogue: 0,1:53:36.08,1:53:37.96,英文,,0,0,0,,But we can now tie these two together.
Dialogue: 0,1:53:36.08,1:53:37.96,中文,,0,0,0,,但我们现在可以把这两者结合起来。
Dialogue: 0,1:53:37.96,1:53:40.76,英文,,0,0,0,,And a way to do that is as follows.
Dialogue: 0,1:53:37.96,1:53:40.76,中文,,0,0,0,,方法如下。
Dialogue: 0,1:53:40.76,1:53:42.72,英文,,0,0,0,,CS50 has a library for Python.
Dialogue: 0,1:53:40.76,1:53:42.72,中文,,0,0,0,,cs50 有一个 Python 库。
Dialogue: 0,1:53:42.72,1:53:47.44,英文,,0,0,0,,You might recall having available getString, getInt, getFloat.
Dialogue: 0,1:53:42.72,1:53:47.44,中文,,0,0,0,,你可能还记得有 get_string、get_int、get_float 可用。
Dialogue: 0,1:53:47.44,1:53:55.80,英文,,0,0,0,,You don't strictly need to use them in Python, because it's much easier to just use the input function and then try, accept, and convert things to int or float or the like.
Dialogue: 0,1:53:47.44,1:53:55.80,中文,,0,0,0,,在 Python 中，你并不一定需要使用它们，因为使用 input 函数，然后使用 try、accept 并将内容转换为 int、float 或类似类型要容易得多。
Dialogue: 0,1:53:55.80,1:54:00.51,英文,,0,0,0,,But it's a lot more work to use SQL and Python without a third-party library.
Dialogue: 0,1:53:55.80,1:54:00.51,中文,,0,0,0,,但是，如果不使用第三方库，使用 SQL 和 Python 会有很多工作要做。
Dialogue: 0,1:54:00.51,1:54:05.21,英文,,0,0,0,,A lot of the commercial options or popular open source options are actually just complicated to use.
Dialogue: 0,1:54:00.51,1:54:05.21,中文,,0,0,0,,许多商业选择或流行的开源选择实际上使用起来都很复杂。
Dialogue: 0,1:54:05.21,1:54:15.41,英文,,0,0,0,,So CS50 does have a very useful function inside of its library for Python that you should use and must use for the problem set that just makes it easy to execute Python
Dialogue: 0,1:54:05.21,1:54:15.41,中文,,0,0,0,,因此，cs50 的 Python 库中确实有一个非常有用的函数，你应该在问题集中使用它，而且必须使用它，它可以很容易地在 Python 中执行
Dialogue: 0,1:54:15.41,1:54:18.12,英文,,0,0,0,,Execute SQL inside of your Python code.
Dialogue: 0,1:54:15.41,1:54:18.12,中文,,0,0,0,,在你的 Python 代码中执行 SQL。
Dialogue: 0,1:54:18.12,1:54:22.36,英文,,0,0,0,,But it's built on top of a very popular open source alternative.
Dialogue: 0,1:54:18.12,1:54:22.36,中文,,0,0,0,,但它建立在一个非常流行的开源替代方案之上。
Dialogue: 0,1:54:22.36,1:54:24.42,英文,,0,0,0,,So you can use that, too, in the real world.
Dialogue: 0,1:54:22.36,1:54:24.42,中文,,0,0,0,,你也可以在现实世界中使用它。
Dialogue: 0,1:54:24.42,1:54:26.80,英文,,0,0,0,,So the documentation for that's at this URL here.
Dialogue: 0,1:54:24.42,1:54:26.80,中文,,0,0,0,,相关文档在这个 URL 里。
Dialogue: 0,1:54:26.80,1:54:32.31,英文,,0,0,0,,But I'll show you what we need to know here by focusing back on favorites.py.
Dialogue: 0,1:54:26.80,1:54:32.31,中文,,0,0,0,,但我将把重点放在 favorites.py 上，向你展示我们需要知道的内容。
Dialogue: 0,1:54:32.31,1:54:35.49,英文,,0,0,0,,What I'm going to do here as follows is this.
Dialogue: 0,1:54:32.31,1:54:35.49,中文,,0,0,0,,我要做的是这样的。
Dialogue: 0,1:54:35.49,1:54:42.77,英文,,0,0,0,,Let me delete everything from favorites.py except for, let's say, this.
Dialogue: 0,1:54:35.49,1:54:42.77,中文,,0,0,0,,让我从 favorites.py 中删除所有内容，除了这个。
Dialogue: 0,1:54:42.77,1:54:46.09,英文,,0,0,0,,From CS50 import SQL in all caps.
Dialogue: 0,1:54:42.77,1:54:46.09,中文,,0,0,0,,从 cs50 导入 SQL，全部大写。
Dialogue: 0,1:54:46.09,1:54:53.33,英文,,0,0,0,,So that's importing a SQL feature from CS50's library that's going to allow me to open a DB file in code.
Dialogue: 0,1:54:46.09,1:54:53.33,中文,,0,0,0,,这就是从 cs50 库中导入 SQL 功能，它能让我在代码中打开 db 文件。
Dialogue: 0,1:54:53.33,1:54:54.39,英文,,0,0,0,,How do I do that?
Dialogue: 0,1:54:53.33,1:54:54.39,中文,,0,0,0,,该怎么做呢？
Dialogue: 0,1:54:54.39,1:54:58.36,英文,,0,0,0,,Well, let me create a variable called db for database, though I could call it anything I want.
Dialogue: 0,1:54:54.39,1:54:58.36,中文,,0,0,0,,我先创建一个名为 db 的变量，表示数据库，当然我也可以随便取名。
Dialogue: 0,1:54:58.36,1:55:09.74,英文,,0,0,0,,Let me call this SQL function and pass in, using special syntax that's not CS50 specific, it's an industry thing, SQLite colon slash slash slash.
Dialogue: 0,1:54:58.36,1:55:09.74,中文,,0,0,0,,我调用这个 SQL 函数，并传入一个特殊的语法，这不是 cs50 特有的，而是一个行业标准，sqlite colon slash slash slash。
Dialogue: 0,1:55:09.74,1:55:15.23,英文,,0,0,0,,Unlike every other URL you type, this one literally has three in this context here.
Dialogue: 0,1:55:09.74,1:55:15.23,中文,,0,0,0,,与你输入的任何其他 URL 不同，这个 URL 在这里的确切含义是三个斜杠。
Dialogue: 0,1:55:15.23,1:55:18.51,英文,,0,0,0,,And then the name of the database, which in this case is favorites.db.
Dialogue: 0,1:55:15.23,1:55:18.51,中文,,0,0,0,,然后是数据库的名称，本例中是 favorites.db。
Dialogue: 0,1:55:18.51,1:55:30.60,英文,,0,0,0,,So this is just a way of telling this SQL library that we wrote, but that works exactly like third-party alternatives, oakbinfavorites.db using the SQLite technology, if you will.
Dialogue: 0,1:55:18.51,1:55:30.60,中文,,0,0,0,,这只是告诉我们编写的这个 SQL 库，它与第三方库 oakbinfavorites.db 的工作原理完全相同，都使用了 sqlite 技术。
Dialogue: 0,1:55:30.60,1:55:32.44,英文,,0,0,0,,All right, let's just ask the user a question.
Dialogue: 0,1:55:30.60,1:55:32.44,中文,,0,0,0,,好，我们问用户一个问题。
Dialogue: 0,1:55:32.44,1:55:36.14,英文,,0,0,0,,Give me your favorite.
Dialogue: 0,1:55:32.44,1:55:36.14,中文,,0,0,0,,告诉我你最喜欢的。
Dialogue: 0,1:55:36.14,1:55:38.12,英文,,0,0,0,,So we're going to use input instead of getString.
Dialogue: 0,1:55:36.14,1:55:38.12,中文,,0,0,0,,我们要使用 input 而不是 get_string。
Dialogue: 0,1:55:38.12,1:55:41.44,英文,,0,0,0,,But we could use getString. But they're pretty much the same for our purposes.
Dialogue: 0,1:55:38.12,1:55:41.44,中文,,0,0,0,,当然我们也可以用 get_string，但在我们这种情况下，两者几乎一样。
Dialogue: 0,1:55:41.44,1:55:43.41,英文,,0,0,0,,Let's ask the user for their favorite.
Dialogue: 0,1:55:41.44,1:55:43.41,中文,,0,0,0,,我们让用户输入他们最喜欢的。
Dialogue: 0,1:55:43.41,1:55:55.64,英文,,0,0,0,,And now, in Python code, let us select from favorites.db all of the rows where students specify that problem as their favorite.
Dialogue: 0,1:55:43.41,1:55:55.64,中文,,0,0,0,,现在，在 Python 代码中，让我们从 favorites.db 中选择所有学生指定该问题为最喜欢的行。
Dialogue: 0,1:55:55.64,1:55:57.72,英文,,0,0,0,,So in SQL alone, it would be this.
Dialogue: 0,1:55:55.64,1:55:57.72,中文,,0,0,0,,所以如果只用 SQL，应该是这样的。
Dialogue: 0,1:55:57.72,1:56:08.14,英文,,0,0,0,,Select star from favorites where problem equals, and I'll do, well, whatever my favorite's going to be.
Dialogue: 0,1:55:57.72,1:56:08.14,中文,,0,0,0,,从 favorites 中选择所有列，条件是 problem 等于，我会输入，不管我最喜欢的是什么，比如 problem = Mario。
Dialogue: 0,1:56:08.14,1:56:10.28,英文,,0,0,0,,Like, problem equals Mario, for instance.
Dialogue: 0,1:56:08.14,1:56:10.28,中文,,0,0,0,,比如，problem = Mario。
Dialogue: 0,1:56:10.28,1:56:13.45,英文,,0,0,0,,So if I were just using SQL, I would literally write something like that.
Dialogue: 0,1:56:10.28,1:56:13.45,中文,,0,0,0,,所以如果我只是用 SQL，我会直接写这样的语句。
Dialogue: 0,1:56:13.45,1:56:14.95,英文,,0,0,0,,But I'm in a .py file now.
Dialogue: 0,1:56:13.45,1:56:14.95,中文,,0,0,0,,但我现在在一个 .py 文件中。
Dialogue: 0,1:56:14.95,1:56:17.05,英文,,0,0,0,,Like, I have to use Python syntax.
Dialogue: 0,1:56:14.95,1:56:17.05,中文,,0,0,0,,我必须使用 Python 语法。
Dialogue: 0,1:56:17.05,1:56:18.69,英文,,0,0,0,,But Python supports strings.
Dialogue: 0,1:56:17.05,1:56:18.69,中文,,0,0,0,,但 Python 支持字符串。
Dialogue: 0,1:56:18.69,1:56:19.97,英文,,0,0,0,,SQL is just text.
Dialogue: 0,1:56:18.69,1:56:19.97,中文,,0,0,0,,SQL 其实就是文本。
Dialogue: 0,1:56:19.97,1:56:21.01,英文,,0,0,0,,It's just a string.
Dialogue: 0,1:56:19.97,1:56:21.01,中文,,0,0,0,,它只是一个字符串。
Dialogue: 0,1:56:21.01,1:56:26.80,英文,,0,0,0,,So I could certainly just put my SQL code in a string, perhaps, and then pass it to a Python function.
Dialogue: 0,1:56:21.01,1:56:26.80,中文,,0,0,0,,所以我可以把 SQL 代码放到一个字符串里，然后把它传递给一个 Python 函数。
Dialogue: 0,1:56:26.80,1:56:28.90,英文,,0,0,0,,And here's the bridge between the two.
Dialogue: 0,1:56:26.80,1:56:28.90,中文,,0,0,0,,这就是两者之间的桥梁。
Dialogue: 0,1:56:28.90,1:56:32.93,英文,,0,0,0,,If you just treat SQL as any old text, we can put it in a string and execute it.
Dialogue: 0,1:56:28.90,1:56:32.93,中文,,0,0,0,,如果把 SQL 看作普通的文本，就可以把它放到字符串中执行。
Dialogue: 0,1:56:32.93,1:56:34.92,英文,,0,0,0,,So let me actually do this.
Dialogue: 0,1:56:32.93,1:56:34.92,中文,,0,0,0,,我来演示一下。
Dialogue: 0,1:56:34.92,1:56:40.20,英文,,0,0,0,,Let me go ahead and create a variable called rows, which is eventually going to contain all the rows from the database.
Dialogue: 0,1:56:34.92,1:56:40.20,中文,,0,0,0,,我先创建一个名为 rows 的变量，它最终将包含数据库中的所有行。
Dialogue: 0,1:56:40.20,1:56:45.89,英文,,0,0,0,,Let me go ahead and select db.execute.
Dialogue: 0,1:56:40.20,1:56:45.89,中文,,0,0,0,,然后选择 db.execute。
Dialogue: 0,1:56:45.89,1:56:51.52,英文,,0,0,0,,This is the one function you need to know about inside of CS50's library, and it literally executes a SQL statement.
Dialogue: 0,1:56:45.89,1:56:51.52,中文,,0,0,0,,这是 cs50 库中你需要知道的唯一函数，它可以直接执行 SQL 语句。
Dialogue: 0,1:56:51.52,1:56:56.34,英文,,0,0,0,,And then in quotes, you pass it literally what you want to execute.
Dialogue: 0,1:56:51.52,1:56:56.34,中文,,0,0,0,,在引号中，传入要执行的语句即可。
Dialogue: 0,1:56:56.34,1:56:59.20,英文,,0,0,0,,And let me go ahead and close the parenthesis at the end there.
Dialogue: 0,1:56:56.34,1:56:59.20,中文,,0,0,0,,最后把括号闭合。
Dialogue: 0,1:56:59.20,1:57:00.70,英文,,0,0,0,,And now let me just try this.
Dialogue: 0,1:56:59.20,1:57:00.70,中文,,0,0,0,,现在试一下。
Dialogue: 0,1:57:00.70,1:57:04.31,英文,,0,0,0,,So for row in rows, let's iterate over all of the rows.
Dialogue: 0,1:57:00.70,1:57:04.31,中文,,0,0,0,,用 for row in rows 遍历所有行。
Dialogue: 0,1:57:04.31,1:57:12.59,英文,,0,0,0,,Let me go ahead and print out, how about row, quote unquote.
Dialogue: 0,1:57:04.31,1:57:12.59,中文,,0,0,0,,打印出 row。
Dialogue: 0,1:57:12.59,1:57:15.77,英文,,0,0,0,,And what do I want here?
Dialogue: 0,1:57:12.59,1:57:15.77,中文,,0,0,0,,这里需要什么呢？
Dialogue: 0,1:57:15.77,1:57:20.10,英文,,0,0,0,,Let's print out the timestamp of that person for kicks.
Dialogue: 0,1:57:15.77,1:57:20.10,中文,,0,0,0,,打印该用户的 Timestamp。
Dialogue: 0,1:57:20.10,1:57:22.28,英文,,0,0,0,,All right, let me open my terminal window.
Dialogue: 0,1:57:20.10,1:57:22.28,中文,,0,0,0,,打开终端窗口。
Dialogue: 0,1:57:22.28,1:57:23.92,英文,,0,0,0,,Python of favorites.py.
Dialogue: 0,1:57:22.28,1:57:23.92,中文,,0,0,0,,输入 python favorites.py。
Dialogue: 0,1:57:23.92,1:57:27.91,英文,,0,0,0,,Crossing my fingers here for sure.
Dialogue: 0,1:57:23.92,1:57:27.91,中文,,0,0,0,,祈祷一切顺利。
Dialogue: 0,1:57:27.91,1:57:31.29,英文,,0,0,0,,Enter.
Dialogue: 0,1:57:27.91,1:57:31.29,中文,,0,0,0,,回车。
Dialogue: 0,1:57:31.29,1:57:32.27,英文,,0,0,0,,There we go. Favorites.
Dialogue: 0,1:57:31.29,1:57:32.27,中文,,0,0,0,,好了，收藏夹。
Dialogue: 0,1:57:32.27,1:57:34.48,英文,,0,0,0,,I'll type in Mario.
Dialogue: 0,1:57:32.27,1:57:34.48,中文,,0,0,0,,我输入Mario。
Dialogue: 0,1:57:34.48,1:57:42.50,英文,,0,0,0,,OK, so I got back, it's not very interesting, but I got back all of the timestamps of students who typed in Mario that we imported into this database.
Dialogue: 0,1:57:34.48,1:57:42.50,中文,,0,0,0,,好，我得到了结果，虽然没什么意思，但我得到了所有输入Mario的学生的时间戳，这些数据是我们导入到这个数据库中的。
Dialogue: 0,1:57:42.50,1:57:45.35,英文,,0,0,0,,Well, what I really care about is how popular Mario is.
Dialogue: 0,1:57:42.50,1:57:45.35,中文,,0,0,0,,我想知道的是Mario有多受欢迎。
Dialogue: 0,1:57:45.35,1:57:46.93,英文,,0,0,0,,So let me change this a little bit.
Dialogue: 0,1:57:45.35,1:57:46.93,中文,,0,0,0,,稍微改一下。
Dialogue: 0,1:57:46.93,1:57:50.89,英文,,0,0,0,,Let me change this to count the number of rows.
Dialogue: 0,1:57:46.93,1:57:50.89,中文,,0,0,0,,把它改成计算行数。
Dialogue: 0,1:57:50.89,1:57:52.07,英文,,0,0,0,,And let me keep it simple.
Dialogue: 0,1:57:50.89,1:57:52.07,中文,,0,0,0,,简单一点。
Dialogue: 0,1:57:52.07,1:58:02.38,英文,,0,0,0,,Let me give an alias like I proposed earlier, like as n, where n is a number, so that now down here, I can actually just do this, print out the value of n.
Dialogue: 0,1:57:52.07,1:58:02.38,中文,,0,0,0,,像我之前建议的那样，给它一个别名，比如n，其中n是一个数字，这样在下面，我就可以这样做，打印出n的值。
Dialogue: 0,1:58:02.38,1:58:05.90,英文,,0,0,0,,All right, let me go back to my terminal window, run Python to favorites.py.
Dialogue: 0,1:58:02.38,1:58:05.90,中文,,0,0,0,,好了，回到终端窗口，运行python favorites.py。
Dialogue: 0,1:58:05.90,1:58:08.14,英文,,0,0,0,,Let me type in Mario, Enter.
Dialogue: 0,1:58:05.90,1:58:08.14,中文,,0,0,0,,输入Mario，回车。
Dialogue: 0,1:58:08.14,1:58:09.82,英文,,0,0,0,,OK, 39.
Dialogue: 0,1:58:08.14,1:58:09.82,中文,,0,0,0,,好，39。
Dialogue: 0,1:58:09.82,1:58:11.30,英文,,0,0,0,,Now, technically, I'm cheating.
Dialogue: 0,1:58:09.82,1:58:11.30,中文,,0,0,0,,严格来说，我这是在作弊。
Dialogue: 0,1:58:11.30,1:58:17.79,英文,,0,0,0,,Like, honestly, if I'm executing select count, we've seen before, it only ever returns one row, not multiple.
Dialogue: 0,1:58:11.30,1:58:17.79,中文,,0,0,0,,因为，老实说，如果我执行SELECT COUNT，我们之前看到过，它只返回一行，而不是多行。
Dialogue: 0,1:58:17.79,1:58:19.29,英文,,0,0,0,,So there's really nothing to iterate over.
Dialogue: 0,1:58:17.79,1:58:19.29,中文,,0,0,0,,所以实际上没有什么可迭代的。
Dialogue: 0,1:58:19.29,1:58:20.45,英文,,0,0,0,,But it's working fine.
Dialogue: 0,1:58:19.29,1:58:20.45,中文,,0,0,0,,但它运行得很好。
Dialogue: 0,1:58:20.45,1:58:21.45,英文,,0,0,0,,It's just iterating once.
Dialogue: 0,1:58:20.45,1:58:21.45,中文,,0,0,0,,它只迭代了一次。
Dialogue: 0,1:58:21.45,1:58:22.81,英文,,0,0,0,,But I'm getting lucky.
Dialogue: 0,1:58:21.45,1:58:22.81,中文,,0,0,0,,但我只是侥幸成功了。
Dialogue: 0,1:58:22.81,1:58:26.29,英文,,0,0,0,,So technically, what I should probably just do is this.
Dialogue: 0,1:58:22.81,1:58:26.29,中文,,0,0,0,,所以严格来说，我应该这样做。
Dialogue: 0,1:58:26.29,1:58:29.50,英文,,0,0,0,,I should probably give myself a variable called row.
Dialogue: 0,1:58:26.29,1:58:29.50,中文,,0,0,0,,我应该给自己一个叫做row的变量。
Dialogue: 0,1:58:29.50,1:58:35.00,英文,,0,0,0,,Set it equal to the very first row and only row that came back.
Dialogue: 0,1:58:29.50,1:58:35.00,中文,,0,0,0,,把它设置为等于返回的第一行也是唯一一行。
Dialogue: 0,1:58:35.00,1:58:39.64,英文,,0,0,0,,And now print out that row's n column.
Dialogue: 0,1:58:35.00,1:58:39.64,中文,,0,0,0,,现在打印出该行的第 n 列。
Dialogue: 0,1:58:39.64,1:58:40.89,英文,,0,0,0,,Let me rerun the program.
Dialogue: 0,1:58:39.64,1:58:40.89,中文,,0,0,0,,让我重新运行程序。
Dialogue: 0,1:58:40.89,1:58:42.11,英文,,0,0,0,,I'll type in Mario again.
Dialogue: 0,1:58:40.89,1:58:42.11,中文,,0,0,0,,我会再次输入 Mario。
Dialogue: 0,1:58:42.11,1:58:45.33,英文,,0,0,0,,Enter. And I still see 39.
Dialogue: 0,1:58:42.11,1:58:45.33,中文,,0,0,0,,回车。我仍然看到 39。
Dialogue: 0,1:58:45.33,1:58:48.23,英文,,0,0,0,,So this, of course, I don't strictly need to do this.
Dialogue: 0,1:58:45.33,1:58:48.23,中文,,0,0,0,,当然，我不需要严格这样做。
Dialogue: 0,1:58:48.23,1:58:49.67,英文,,0,0,0,,I don't really need a variable.
Dialogue: 0,1:58:48.23,1:58:49.67,中文,,0,0,0,,我不需要变量。
Dialogue: 0,1:58:49.67,1:58:52.59,英文,,0,0,0,,I can do rows bracket 0 instead.
Dialogue: 0,1:58:49.67,1:58:52.59,中文,,0,0,0,,我可以直接使用 rows[0]。
Dialogue: 0,1:58:52.59,1:58:55.01,英文,,0,0,0,,But let me focus on what this library is now doing.
Dialogue: 0,1:58:52.59,1:58:55.01,中文,,0,0,0,,但是，让我专注于这个库现在正在做什么。
Dialogue: 0,1:58:55.01,1:59:05.72,英文,,0,0,0,,So per the documentation, what the CS50 execute function always does for you is it returns A list of dictionaries.
Dialogue: 0,1:58:55.01,1:59:05.72,中文,,0,0,0,,根据文档，cs50 execute 函数为你做的就是返回一个字典列表。
Dialogue: 0,1:59:05.72,1:59:12.65,英文,,0,0,0,,So if your query returns nothing, like no matches, you get back an empty list, like open bracket, close bracket, nothing in it.
Dialogue: 0,1:59:05.72,1:59:12.65,中文,,0,0,0,,如果你的查询没有返回任何结果，比如没有匹配项，你会得到一个空列表，就像 [ ]，里面什么都没有。
Dialogue: 0,1:59:12.65,1:59:15.79,英文,,0,0,0,,Any loop is not going to execute anything useful because there's nothing in it.
Dialogue: 0,1:59:12.65,1:59:15.79,中文,,0,0,0,,任何循环都不会执行任何有用的操作，因为里面什么都没有。
Dialogue: 0,1:59:15.79,1:59:22.86,英文,,0,0,0,,If, though, you get back one row, you're going to get back a list of size 1, inside of which is a single dictionary.
Dialogue: 0,1:59:15.79,1:59:22.86,中文,,0,0,0,,但是，如果你返回一行，你将得到一个大小为 1 的列表，其中包含一个字典。
Dialogue: 0,1:59:22.86,1:59:29.25,英文,,0,0,0,,That dictionary is going to have keys that correspond to whatever you selected, be it the columns or the count.
Dialogue: 0,1:59:22.86,1:59:29.25,中文,,0,0,0,,该字典将包含与你选择的任何内容相对应的键，无论是列还是计数。
Dialogue: 0,1:59:29.25,1:59:32.85,英文,,0,0,0,,So when I selected star before, I would have gotten all of the columns.
Dialogue: 0,1:59:29.25,1:59:32.85,中文,,0,0,0,,所以当我之前选择星号时，我会得到所有的列。
Dialogue: 0,1:59:32.85,1:59:35.17,英文,,0,0,0,,That's how I was able to access timestamp.
Dialogue: 0,1:59:32.85,1:59:35.17,中文,,0,0,0,,这就是为什么我能够访问 Timestamp。
Dialogue: 0,1:59:35.17,1:59:36.89,英文,,0,0,0,,Here, I'm just selecting count.
Dialogue: 0,1:59:35.17,1:59:36.89,中文,,0,0,0,,在这里，我只是选择了 COUNT。
Dialogue: 0,1:59:36.89,1:59:38.87,英文,,0,0,0,,And I don't want to have to type this down here.
Dialogue: 0,1:59:36.89,1:59:38.87,中文,,0,0,0,,我不想在这里输入这个。
Dialogue: 0,1:59:38.87,1:59:40.25,英文,,0,0,0,,That would just look kind of atrocious.
Dialogue: 0,1:59:38.87,1:59:40.25,中文,,0,0,0,,这看起来有点糟糕。
Dialogue: 0,1:59:40.25,1:59:41.07,英文,,0,0,0,,It would work.
Dialogue: 0,1:59:40.25,1:59:41.07,中文,,0,0,0,,它会起作用的。
Dialogue: 0,1:59:41.07,1:59:44.79,英文,,0,0,0,,But it would look weird to just keep retyping count, paren, star, close paren.
Dialogue: 0,1:59:41.07,1:59:44.79,中文,,0,0,0,,但是，一遍又一遍地输入 count, print, star, close print 看起来很奇怪。
Dialogue: 0,1:59:44.79,1:59:50.57,英文,,0,0,0,,So I just created an alias called n just to make my life easier or cleaner down here.
Dialogue: 0,1:59:44.79,1:59:50.57,中文,,0,0,0,,我只是创建了一个名为 n 的别名，为了让下面的代码更简洁一些。
Dialogue: 0,1:59:50.57,1:59:57.60,英文,,0,0,0,,So to be clear, the CS50 execute function returns a list of dictionaries when you're using select.
Dialogue: 0,1:59:50.57,1:59:57.60,中文,,0,0,0,,需要明确的是，当你使用 SELECT 语句时，cs50 的 execute 函数会返回一个字典列表。
Dialogue: 0,1:59:57.60,2:00:05.04,英文,,0,0,0,,And that is how I can now get back the first and only row and then print out that row's n value.
Dialogue: 0,1:59:57.60,2:00:05.04,中文,,0,0,0,,这就是我现在如何获取第一行（也是唯一一行）数据，并打印出该行的 n 值。
Dialogue: 0,2:00:05.04,2:00:08.64,英文,,0,0,0,,It is identical to, let me do this.
Dialogue: 0,2:00:05.04,2:00:08.64,中文,,0,0,0,,这和下面这段代码是等价的。
Dialogue: 0,2:00:08.64,2:00:11.73,英文,,0,0,0,,Let me highlight this whole line of text.
Dialogue: 0,2:00:08.64,2:00:11.73,中文,,0,0,0,,让我高亮显示这整行文本。
Dialogue: 0,2:00:11.73,2:00:16.63,英文,,0,0,0,,Let me, in my terminal window, run SQLite3 of favorites.db, like we did before break.
Dialogue: 0,2:00:11.73,2:00:16.63,中文,,0,0,0,,让我在终端窗口中运行 sqlite3 打开 favorites.db，就像我们之前休息前做的那样。
Dialogue: 0,2:00:16.63,2:00:19.41,英文,,0,0,0,,Let me just copy-paste this query.
Dialogue: 0,2:00:16.63,2:00:19.41,中文,,0,0,0,,让我直接复制粘贴这个查询语句。
Dialogue: 0,2:00:19.41,2:00:20.25,英文,,0,0,0,,Enter.
Dialogue: 0,2:00:19.41,2:00:20.25,中文,,0,0,0,,回车。
Dialogue: 0,2:00:20.25,2:00:24.63,英文,,0,0,0,,That's the table I got back earlier when we played with SQL manually.
Dialogue: 0,2:00:20.25,2:00:24.63,中文,,0,0,0,,这就是我们之前手动操作 SQL 时返回的表。
Dialogue: 0,2:00:24.63,2:00:26.90,英文,,0,0,0,,And so when I get back this table, here's the key.
Dialogue: 0,2:00:24.63,2:00:26.90,中文,,0,0,0,,当我们取回这个表时，关键点来了。
Dialogue: 0,2:00:26.90,2:00:28.46,英文,,0,0,0,,Here's the value.
Dialogue: 0,2:00:26.90,2:00:28.46,中文,,0,0,0,,这是值。
Dialogue: 0,2:00:28.46,2:00:34.74,英文,,0,0,0,,And I only have one row, which is why I'm just blindly indexing into rows bracket 0, because I know there's always going to be an answer there.
Dialogue: 0,2:00:28.46,2:00:34.74,中文,,0,0,0,,我只有一行数据，这就是为什么我直接使用 rows[0] 进行索引，因为我知道那里一定会有一个答案。
Dialogue: 0,2:00:34.74,2:00:36.90,英文,,0,0,0,,It's going to be 0 or 1 or more.
Dialogue: 0,2:00:34.74,2:00:36.90,中文,,0,0,0,,它可以是 0、1 或更多。
Dialogue: 0,2:00:36.90,2:00:39.02,英文,,0,0,0,,But I know now it's going to be called n.
Dialogue: 0,2:00:36.90,2:00:39.02,中文,,0,0,0,,但我知道现在它会被称为 n。
Dialogue: 0,2:00:39.02,2:00:40.48,英文,,0,0,0,,Because of this here.
Dialogue: 0,2:00:39.02,2:00:40.48,中文,,0,0,0,,因为这里的代码。
Dialogue: 0,2:00:40.48,2:00:41.66,英文,,0,0,0,,So what have I just done?
Dialogue: 0,2:00:40.48,2:00:41.66,中文,,0,0,0,,那么我做了什么？
Dialogue: 0,2:00:41.66,2:00:43.15,英文,,0,0,0,,Well, this is SQL down here.
Dialogue: 0,2:00:41.66,2:00:43.15,中文,,0,0,0,,这是 SQL 查询语句。
Dialogue: 0,2:00:43.15,2:00:48.67,英文,,0,0,0,,And this is just me being like a data scientist, asking questions about my data, just using like black and white SQL queries.
Dialogue: 0,2:00:43.15,2:00:48.67,中文,,0,0,0,,而我只是像数据科学家一样，使用简单的 SQL 查询语句来询问我的数据。
Dialogue: 0,2:00:48.67,2:00:53.87,英文,,0,0,0,,This is me now being a Python programmer who wants to talk to a SQL database using Python.
Dialogue: 0,2:00:48.67,2:00:53.87,中文,,0,0,0,,而现在我是一个 Python 程序员，想使用 Python 与 SQL 数据库交互。
Dialogue: 0,2:00:53.87,2:00:56.95,英文,,0,0,0,,And the bridge we're using happens to be the CS50 library.
Dialogue: 0,2:00:53.87,2:00:56.95,中文,,0,0,0,,我们使用的桥梁正是 cs50 库。
Dialogue: 0,2:00:56.95,2:00:59.99,英文,,0,0,0,,But again, there's third party free libraries you can also use as well.
Dialogue: 0,2:00:56.95,2:00:59.99,中文,,0,0,0,,但同样，也有第三方免费库可以使用。
Dialogue: 0,2:00:59.99,2:01:01.79,英文,,0,0,0,,Ours is just very Simple.
Dialogue: 0,2:00:59.99,2:01:01.79,中文,,0,0,0,,我们这个只是非常简单。
Dialogue: 0,2:01:01.79,2:01:07.60,英文,,0,0,0,,And indeed, the documentation will explain how execute behaves a little differently for inserts, updates, and deletes.
Dialogue: 0,2:01:01.79,2:01:07.60,中文,,0,0,0,,实际上，文档会解释 execute 对于插入、更新和删除操作的行为方式略有不同。
Dialogue: 0,2:01:07.60,2:01:13.22,英文,,0,0,0,,You don't get back a list because you're not selecting anything, but you do get back some return values.
Dialogue: 0,2:01:07.60,2:01:13.22,中文,,0,0,0,,你不会得到一个列表，因为你没有选择任何内容，但你会得到一些返回值。
Dialogue: 0,2:01:13.22,2:01:16.08,英文,,0,0,0,,Questions on this?
Dialogue: 0,2:01:13.22,2:01:16.08,中文,,0,0,0,,对此有疑问吗？
Dialogue: 0,2:01:16.08,2:01:23.44,英文,,0,0,0,,That's the last of our Python code that ties everything together in spirit.
Dialogue: 0,2:01:16.08,2:01:23.44,中文,,0,0,0,,这是我们 Python 代码的最后一部分，它将所有内容从精神上联系在一起。
Dialogue: 0,2:01:23.44,2:01:29.22,英文,,0,0,0,,Yeah?
Dialogue: 0,2:01:23.44,2:01:29.22,中文,,0,0,0,,是吗？
Dialogue: 0,2:01:29.22,2:01:31.99,英文,,0,0,0,,What this one here?
Dialogue: 0,2:01:29.22,2:01:31.99,中文,,0,0,0,,这一个是干什么的？
Dialogue: 0,2:01:31.99,2:01:37.79,英文,,0,0,0,,Yes, so db.execute, by definition, returns a list of rows.
Dialogue: 0,2:01:31.99,2:01:37.79,中文,,0,0,0,,是的，根据定义，db.execute 返回一个行的列表。
Dialogue: 0,2:01:37.79,2:01:42.36,英文,,0,0,0,,And each of those rows happens to be a dictionary because it's convenient, key value pairs.
Dialogue: 0,2:01:37.79,2:01:42.36,中文,,0,0,0,,每一行恰好都是一个字典，因为它很方便，键值对。
Dialogue: 0,2:01:42.36,2:01:51.46,英文,,0,0,0,,If I'm selecting the count of rows, I just know, from having learned SQL an hour ago, that this is always going to give me a single row whose column, in this case, is called n.
Dialogue: 0,2:01:42.36,2:01:51.46,中文,,0,0,0,,如果我选择行的数量，从一个小时前学习 SQL 的经验来看，我知道这将始终给我一个单行，其列在本例中称为 n。
Dialogue: 0,2:01:51.46,2:02:00.46,英文,,0,0,0,,So if I know it's a single row, I can just blindly, just like in C, go into that list, or an array in C, and go to the first location.
Dialogue: 0,2:01:51.46,2:02:00.46,中文,,0,0,0,,所以如果我知道它是一个单行，我可以像在 C 语言中那样，直接进入列表，或者 C 语言中的数组，然后转到第一个位置。
Dialogue: 0,2:02:00.46,2:02:02.72,英文,,0,0,0,,And then treat that as the single row.
Dialogue: 0,2:02:00.46,2:02:02.72,中文,,0,0,0,,然后将其视为单行。
Dialogue: 0,2:02:02.72,2:02:04.42,英文,,0,0,0,,What you don't want to do is this.
Dialogue: 0,2:02:02.72,2:02:04.42,中文,,0,0,0,,你不应该这样做。
Dialogue: 0,2:02:04.42,2:02:13.27,英文,,0,0,0,,Even if you, the human, know the query returns one row, you can't just magically change the variable name to be singular and expect to have only one value.
Dialogue: 0,2:02:04.42,2:02:13.27,中文,,0,0,0,,即使你作为一个人知道查询返回一行，你也不能神奇地将变量名更改为单数形式，并期望只有一个值。
Dialogue: 0,2:02:13.27,2:02:15.01,英文,,0,0,0,,You will always have a list.
Dialogue: 0,2:02:13.27,2:02:15.01,中文,,0,0,0,,你将始终拥有一个列表。
Dialogue: 0,2:02:15.01,2:02:20.07,英文,,0,0,0,,So even if there is only one value in it, it's up to you to do something like this to get at it.
Dialogue: 0,2:02:15.01,2:02:20.07,中文,,0,0,0,,因此，即使其中只有一个值，也需要你执行类似的操作才能获取它。
Dialogue: 0,2:02:20.07,2:02:27.35,英文,,0,0,0,,Or if you prefer more succinctness, you can do rows bracket i bracket n. That'll achieve the same thing without a variable.
Dialogue: 0,2:02:20.07,2:02:27.35,中文,,0,0,0,,或者，如果你喜欢更简洁的表达方式，可以使用 rows[i]['n']。这将实现相同的结果，而无需使用变量。
Dialogue: 0,2:02:27.35,2:02:28.49,英文,,0,0,0,,Yeah?
Dialogue: 0,2:02:27.35,2:02:28.49,中文,,0,0,0,,是吗？
Dialogue: 0,2:02:34.32,2:02:40.65,英文,,0,0,0,,Good, so I have been misleading this whole time and cheating because this is only ever going to return Mario.
Dialogue: 0,2:02:34.32,2:02:40.65,中文,,0,0,0,,很好，我一直都在误导大家，因为这只会返回 Mario。
Dialogue: 0,2:02:40.65,2:02:44.69,英文,,0,0,0,,I'm ignoring the favorite that the human typed in here on line 5.
Dialogue: 0,2:02:40.65,2:02:44.69,中文,,0,0,0,,我忽略了用户在第 5 行输入的最喜欢的项。
Dialogue: 0,2:02:44.69,2:02:45.69,英文,,0,0,0,,So let me fix that.
Dialogue: 0,2:02:44.69,2:02:45.69,中文,,0,0,0,,我来修正一下。
Dialogue: 0,2:02:45.69,2:02:49.93,英文,,0,0,0,,And that's going to lead us to some of the problems that arise ultimately with SQL.
Dialogue: 0,2:02:45.69,2:02:49.93,中文,,0,0,0,,这就会引出一些最终使用 SQL 时出现的问题。
Dialogue: 0,2:02:49.93,2:02:54.03,英文,,0,0,0,,The right way to solve that problem, let me get rid of my terminal window here.
Dialogue: 0,2:02:49.93,2:02:54.03,中文,,0,0,0,,解决这个问题的正确方法是，让我把终端窗口移开。
Dialogue: 0,2:02:54.03,2:03:02.89,英文,,0,0,0,,The right way to solve this problem is not to use an f string, like we did in Python generally, because SQL queries, as we'll see in a moment, can be dangerous.
Dialogue: 0,2:02:54.03,2:03:02.89,中文,,0,0,0,,解决这个问题的正确方法不是像我们在 Python 中通常做的那样使用 f 字符串，因为我们稍后会看到，SQL 查询可能很危险。
Dialogue: 0,2:03:02.89,2:03:15.82,英文,,0,0,0,,When you want to plug in users' data into a query that you've written most of in advance, you should, you must, you had better use a placeholder, namely a question mark in this case.
Dialogue: 0,2:03:02.89,2:03:15.82,中文,,0,0,0,,当你想要将用户数据插入到你预先编写的大部分查询中时，你应该，你必须，你最好使用占位符，在本例中是问号。
Dialogue: 0,2:03:15.82,2:03:21.92,英文,,0,0,0,,This is somewhat specific to CS50's library, but we just borrowed the convention that every other library uses, too.
Dialogue: 0,2:03:15.82,2:03:21.92,中文,,0,0,0,,这在一定程度上是 cs50 库特有的，但我们只是借用了其他所有库也在使用的惯例。
Dialogue: 0,2:03:21.92,2:03:25.70,英文,,0,0,0,,In the world of SQL, single question marks are used as placeholders.
Dialogue: 0,2:03:21.92,2:03:25.70,中文,,0,0,0,,在 SQL 世界中，单个问号被用作占位符。
Dialogue: 0,2:03:25.70,2:03:28.14,英文,,0,0,0,,And the way you do this is as follows.
Dialogue: 0,2:03:25.70,2:03:28.14,中文,,0,0,0,,你这样做的方法如下。
Dialogue: 0,2:03:28.14,2:03:30.78,英文,,0,0,0,,If you want to plug in a value.
Dialogue: 0,2:03:28.14,2:03:30.78,中文,,0,0,0,,如果你想插入一个值。
Dialogue: 0,2:03:30.78,2:03:39.41,英文,,0,0,0,,For that question mark, just like in printf in C, you specify as a second or a third or a fourth argument all of the values you want plugged into this.
Dialogue: 0,2:03:30.78,2:03:39.41,中文,,0,0,0,,对于那个问号，就像在 C 语言中的 printf 中一样，你要指定第二个、第三个或第四个参数，把你想要插入的所有值都插入进去。
Dialogue: 0,2:03:39.41,2:03:42.59,英文,,0,0,0,,So in C, weeks ago, we were using %s.
Dialogue: 0,2:03:39.41,2:03:42.59,中文,,0,0,0,,所以在几周前的 C 语言中，我们使用的是 %s。
Dialogue: 0,2:03:42.59,2:03:43.87,英文,,0,0,0,,Same exact idea.
Dialogue: 0,2:03:42.59,2:03:43.87,中文,,0,0,0,,完全一样的思路。
Dialogue: 0,2:03:43.87,2:03:47.05,英文,,0,0,0,,In SQL, it's a question mark that you use instead.
Dialogue: 0,2:03:43.87,2:03:47.05,中文,,0,0,0,,在 SQL 中，你使用的是问号。
Dialogue: 0,2:03:47.05,2:03:55.26,英文,,0,0,0,,This now, if I open back my terminal window and I run python of favorites.py, type in Mario, I should still get 39.
Dialogue: 0,2:03:47.05,2:03:55.26,中文,,0,0,0,,现在，如果我打开终端窗口并运行 python favorites.py，输入 Mario，我应该仍然得到 39。
Dialogue: 0,2:03:55.26,2:04:00.70,英文,,0,0,0,,But now I can also type in Scratch, perhaps, and get 44 for that very first piece at 0.
Dialogue: 0,2:03:55.26,2:04:00.70,中文,,0,0,0,,但现在我也可以输入 Scratch，也许，并在第 0 个位置得到 44。
Dialogue: 0,2:04:00.70,2:04:02.82,英文,,0,0,0,,And that one is even more popular here.
Dialogue: 0,2:04:00.70,2:04:02.82,中文,,0,0,0,,那一个在这里更受欢迎。
Dialogue: 0,2:04:02.82,2:04:04.36,英文,,0,0,0,,So this now is correct.
Dialogue: 0,2:04:02.82,2:04:04.36,中文,,0,0,0,,所以现在这是正确的。
Dialogue: 0,2:04:04.36,2:04:10.07,英文,,0,0,0,,It would work to use an f string here and then plug in a value like favorite here.
Dialogue: 0,2:04:04.36,2:04:10.07,中文,,0,0,0,,在这里使用 f 字符串，然后插入像 favorite 这样的值，是可行的。
Dialogue: 0,2:04:10.07,2:04:11.83,英文,,0,0,0,,But you'll see in just a moment, don't do that.
Dialogue: 0,2:04:10.07,2:04:11.83,中文,,0,0,0,,但你马上就会看到，不要那样做。
Dialogue: 0,2:04:11.83,2:04:18.25,英文,,0,0,0,,You will expose yourself to potential hack or attacks by trusting the user's input.
Dialogue: 0,2:04:11.83,2:04:18.25,中文,,0,0,0,,你会因为信任用户的输入而让自己暴露在潜在的黑客攻击或攻击之下。
Dialogue: 0,2:04:18.25,2:04:24.03,英文,,0,0,0,,And so in fact, let's transition from that to exactly some of these kinds of challenges, namely two, before we wrap up.
Dialogue: 0,2:04:18.25,2:04:24.03,中文,,0,0,0,,实际上，让我们从这里过渡到其中的一些挑战，也就是两个，在我们结束之前。
Dialogue: 0,2:04:24.03,2:04:36.14,英文,,0,0,0,,So in the world of SQL, especially when it's used at scale at the Twitters and the Googles of the world, a lot of lots of data is probably coming into the database all at once, because multiple people are opening their phones at the same time around the world.
Dialogue: 0,2:04:24.03,2:04:36.14,中文,,0,0,0,,在 SQL 的世界里，尤其是当它被像 Twitter 和 Google 这样的大规模公司使用时，\N很多很多数据可能同时涌入数据库，因为世界各地有很多人在同一时间打开他们的手机。
Dialogue: 0,2:04:36.14,2:04:39.20,英文,,0,0,0,,They're clicking on the same links roughly at the same time around the world.
Dialogue: 0,2:04:36.14,2:04:39.20,中文,,0,0,0,,他们在世界各地几乎在同一时间点击相同的链接。
Dialogue: 0,2:04:39.20,2:04:44.12,英文,,0,0,0,,When you have thousands of people all using your site at once, order of operations is going to be important.
Dialogue: 0,2:04:39.20,2:04:44.12,中文,,0,0,0,,当有成千上万的人同时使用你的网站时，操作顺序就变得很重要了。
Dialogue: 0,2:04:44.12,2:04:50.06,英文,,0,0,0,,But unfortunately, in SQL and in other contexts of computing, there's this risk of what's known as a race condition.
Dialogue: 0,2:04:44.12,2:04:50.06,中文,,0,0,0,,但不幸的是，在 SQL 和其他计算环境中，存在着一种被称为竞争条件的风险。
Dialogue: 0,2:04:50.06,2:04:53.49,英文,,0,0,0,,So for instance, has anyone ever seen or liked this?
Dialogue: 0,2:04:50.06,2:04:53.49,中文,,0,0,0,,例如，有人见过或喜欢过这个吗？
Dialogue: 0,2:04:53.49,2:04:55.99,英文,,0,0,0,,This is like, yes, the world record egg.
Dialogue: 0,2:04:53.49,2:04:55.99,中文,,0,0,0,,这就是那个世界纪录鸡蛋。
Dialogue: 0,2:04:55.99,2:04:58.51,英文,,0,0,0,,It's like this thing that was very popular a while back.
Dialogue: 0,2:04:55.99,2:04:58.51,中文,,0,0,0,,它就像这个东西，一段时间以前非常流行。
Dialogue: 0,2:04:58.51,2:04:59.79,英文,,0,0,0,,It's still kind of going strong.
Dialogue: 0,2:04:58.51,2:04:59.79,中文,,0,0,0,,它现在仍然很火。
Dialogue: 0,2:04:59.79,2:05:06.59,英文,,0,0,0,,But if you go to the Instagram profile for world record egg, the goal was to make the most liked Instagram post ever.
Dialogue: 0,2:04:59.79,2:05:06.59,中文,,0,0,0,,但是如果你去 Instagram 上看世界纪录鸡蛋的个人主页，他们的目标是让它成为有史以来点赞最多的 Instagram 帖子。
Dialogue: 0,2:05:06.59,2:05:08.13,英文,,0,0,0,,And they did pretty well.
Dialogue: 0,2:05:06.59,2:05:08.13,中文,,0,0,0,,而且他们做得很好。
Dialogue: 0,2:05:08.13,2:05:09.11,英文,,0,0,0,,It's just this.
Dialogue: 0,2:05:08.13,2:05:09.11,中文,,0,0,0,,它只是这个。
Dialogue: 0,2:05:09.11,2:05:10.79,英文,,0,0,0,,It's just a picture of an egg.
Dialogue: 0,2:05:09.11,2:05:10.79,中文,,0,0,0,,它只是一张鸡蛋的照片。
Dialogue: 0,2:05:10.79,2:05:18.72,英文,,0,0,0,,Now, at the height of the popularity, there might have been hundreds, thousands, tens of thousands of people clicking pretty much at the same time on this egg.
Dialogue: 0,2:05:10.79,2:05:18.72,中文,,0,0,0,,现在，在它最火的时候，可能有成百上千，甚至上万人几乎在同一时间点击了这张鸡蛋的照片。
Dialogue: 0,2:05:18.72,2:05:23.46,英文,,0,0,0,,So it actually creates a potential problem with the integrity of Instagram's data.
Dialogue: 0,2:05:18.72,2:05:23.46,中文,,0,0,0,,所以这实际上给 Instagram 数据的完整性带来了一个潜在的问题。
Dialogue: 0,2:05:23.46,2:05:24.16,英文,,0,0,0,,Why?
Dialogue: 0,2:05:23.46,2:05:24.16,中文,,0,0,0,,为什么？
Dialogue: 0,2:05:24.16,2:05:31.91,英文,,0,0,0,,Well, if you have all these requests coming in at once, how do you possibly keep track of all of them and update your counter in a way that can keep up with all of that traffic?
Dialogue: 0,2:05:24.16,2:05:31.91,中文,,0,0,0,,好吧，如果有这么多请求同时涌入，你怎么可能跟踪所有这些请求，并以一种能够跟上所有流量的方式更新你的计数器呢？
Dialogue: 0,2:05:31.91,2:05:32.43,英文,,0,0,0,,Why?
Dialogue: 0,2:05:31.91,2:05:32.43,中文,,0,0,0,,为什么？
Dialogue: 0,2:05:32.43,2:05:37.81,英文,,0,0,0,,Well, let's just hypothesize what Meta, formerly Facebook, was doing underneath the hood with Instagram.
Dialogue: 0,2:05:32.43,2:05:37.81,中文,,0,0,0,,好吧，让我们假设 Meta，也就是之前的 Facebook，在 Instagram 的后台是怎么做的。
Dialogue: 0,2:05:37.81,2:05:38.92,英文,,0,0,0,,if this were their code.
Dialogue: 0,2:05:37.81,2:05:38.92,中文,,0,0,0,,如果这是他们的代码。
Dialogue: 0,2:05:38.92,2:05:44.66,英文,,0,0,0,,So suppose, for the sake of discussion, that Instagram servers are using a mix of Python and SQL.
Dialogue: 0,2:05:38.92,2:05:44.66,中文,,0,0,0,,假设，为了讨论方便，Instagram 服务器混合使用了 Python 和 SQL。
Dialogue: 0,2:05:44.66,2:05:50.92,英文,,0,0,0,,Probably not using the CS50 library, but they could absolutely be using those two languages or two others together.
Dialogue: 0,2:05:44.66,2:05:50.92,中文,,0,0,0,,他们可能没有使用 cs50 库，但完全可以使用这两种语言或其他两种语言一起使用。
Dialogue: 0,2:05:50.92,2:05:55.40,英文,,0,0,0,,Suppose they do this in order to update the number of likes for that post.
Dialogue: 0,2:05:50.92,2:05:55.40,中文,,0,0,0,,假设他们这样做是为了更新帖子的点赞数。
Dialogue: 0,2:05:55.40,2:06:00.34,英文,,0,0,0,,They first execute a SQL query like select the current number of likes
Dialogue: 0,2:05:55.40,2:06:00.34,中文,,0,0,0,,他们首先执行一个 SQL 查询，比如从 posts 表中选择当前的点赞数，
Dialogue: 0,2:06:00.34,2:06:08.73,英文,,0,0,0,,from a table called posts, where the ID of the post equals whatever the unique identifier is for that specific egg in the table.
Dialogue: 0,2:06:00.34,2:06:08.73,中文,,0,0,0,,其中帖子的 id 等于表中该特定鸡蛋的唯一标识符。
Dialogue: 0,2:06:08.73,2:06:12.65,英文,,0,0,0,,And then they store the result in this rows variable, just like I did.
Dialogue: 0,2:06:08.73,2:06:12.65,中文,,0,0,0,,然后他们将结果存储在这个 rows 变量中，就像我做的那样。
Dialogue: 0,2:06:12.65,2:06:13.75,英文,,0,0,0,,And then they do this.
Dialogue: 0,2:06:12.65,2:06:13.75,中文,,0,0,0,,然后他们这样做。
Dialogue: 0,2:06:13.75,2:06:16.53,英文,,0,0,0,,They create a variable called likes.
Dialogue: 0,2:06:13.75,2:06:16.53,中文,,0,0,0,,他们创建了一个名为 likes 的变量。
Dialogue: 0,2:06:16.53,2:06:21.49,英文,,0,0,0,,They set it equal to rows, bracket 0, so the very first row in the result set.
Dialogue: 0,2:06:16.53,2:06:21.49,中文,,0,0,0,,他们将其设置为等于 rows[0]，即结果集中的第一行。
Dialogue: 0,2:06:21.49,2:06:25.19,英文,,0,0,0,,And they get the likes key. So this is literally what I just did with the count.
Dialogue: 0,2:06:21.49,2:06:25.19,中文,,0,0,0,,然后他们获取 likes 键。这实际上就是我刚才用 count 做的。
Dialogue: 0,2:06:25.19,2:06:29.28,英文,,0,0,0,,Let me hypothesize that Instagram does something similar with the total number of likes.
Dialogue: 0,2:06:25.19,2:06:29.28,中文,,0,0,0,,我假设 Instagram 对点赞总数做了类似的操作。
Dialogue: 0,2:06:29.28,2:06:30.54,英文,,0,0,0,,Why are they doing this?
Dialogue: 0,2:06:29.28,2:06:30.54,中文,,0,0,0,,他们为什么要这样做？
Dialogue: 0,2:06:30.54,2:06:43.55,英文,,0,0,0,,Because they then want to execute a third line of code that executes, update the posts table, set the new number of likes equal to something where the ID of the post equals this other thing.
Dialogue: 0,2:06:30.54,2:06:43.55,中文,,0,0,0,,因为他们想执行第三行代码，执行更新 posts 表，将新的点赞数设置为等于某个值，其中帖子的 id 等于另一个值。
Dialogue: 0,2:06:43.55,2:06:46.91,英文,,0,0,0,,Now notice, just like in printf, there's the comma-separated list of values.
Dialogue: 0,2:06:43.55,2:06:46.91,中文,,0,0,0,,请注意，就像在 printf 中一样，这里有一个逗号分隔的值列表。
Dialogue: 0,2:06:46.91,2:06:51.99,英文,,0,0,0,,They want to update the current number of likes from the current value to the current value plus 1.
Dialogue: 0,2:06:46.91,2:06:51.99,中文,,0,0,0,,他们希望将当前点赞数从当前值更新为当前值加 1。
Dialogue: 0,2:06:51.99,2:06:53.63,英文,,0,0,0,,So it's likes plus 1.
Dialogue: 0,2:06:51.99,2:06:53.63,中文,,0,0,0,,所以是 likes + 1。
Dialogue: 0,2:06:53.63,2:06:59.32,英文,,0,0,0,,And then we plug in the ID for this. So suppose this is what Instagram's doing.
Dialogue: 0,2:06:53.63,2:06:59.32,中文,,0,0,0,,然后我们插入 id。假设这就是 Instagram 所做的。
Dialogue: 0,2:06:59.32,2:07:15.69,英文,,0,0,0,,Whenever you execute multiple lines of code independently, and you're so popular like Instagram that you have thousands, hundreds of thousands of servers potentially, it is quite possible that if you and I and everyone else in the room clicks that egg at the same time, it's not going to be the case statistically that, like,
Dialogue: 0,2:06:59.32,2:07:15.69,中文,,0,0,0,,当你独立执行多行代码时，而且你像 Instagram 一样受欢迎，拥有成千上万，甚至数十万台服务器，\N那么很有可能，如果你、我和房间里的其他人同时点击那个鸡蛋，从统计学上来说，情况就不是这样，
Dialogue: 0,2:07:15.69,2:07:19.46,英文,,0,0,0,,Three lines of code are executed for me, and then three lines for you, and then three lines for you.
Dialogue: 0,2:07:15.69,2:07:19.46,中文,,0,0,0,,先为我执行三行代码，然后为你执行三行，然后再为你执行三行。
Dialogue: 0,2:07:19.46,2:07:21.04,英文,,0,0,0,,They're probably going to get interspersed.
Dialogue: 0,2:07:19.46,2:07:21.04,中文,,0,0,0,,它们可能会穿插进行。
Dialogue: 0,2:07:21.04,2:07:30.99,英文,,0,0,0,,Like, this gets executed for me, and then this gets executed for you, and then they get back to doing work for me, and so forth, just to kind of multitask, just like a human might, but at a super speed here.
Dialogue: 0,2:07:21.04,2:07:30.99,中文,,0,0,0,,这行代码先为我执行，然后为你执行，再回到我这里，就这样同时处理多项任务，就像人一样，只不过速度超级快。
Dialogue: 0,2:07:30.99,2:07:35.73,英文,,0,0,0,,The problem, though, is if these lines of code get interrupted, what could go wrong?
Dialogue: 0,2:07:30.99,2:07:35.73,中文,,0,0,0,,但问题是，如果这些代码行被打断了，会发生什么错误呢？
Dialogue: 0,2:07:35.73,2:07:38.63,英文,,0,0,0,,Well, suppose that Carter and I both click the egg at the same time.
Dialogue: 0,2:07:35.73,2:07:38.63,中文,,0,0,0,,假设我和卡特同时点击了鸡蛋。
Dialogue: 0,2:07:38.63,2:07:41.95,英文,,0,0,0,,And suppose the current number of likes back in the day is 100.
Dialogue: 0,2:07:38.63,2:07:41.95,中文,,0,0,0,,假设当时点赞数是 100。
Dialogue: 0,2:07:41.95,2:07:45.03,英文,,0,0,0,,That stores, in this variable, the value 100.
Dialogue: 0,2:07:41.95,2:07:45.03,中文,,0,0,0,,它会将 100 存储在这个变量中。
Dialogue: 0,2:07:45.03,2:07:50.38,英文,,0,0,0,,But if we click so close in time, we might get back the same answer to this select query.
Dialogue: 0,2:07:45.03,2:07:50.38,中文,,0,0,0,,但是如果我们点击的时间非常接近，我们可能会从这个查询中得到相同的答案。
Dialogue: 0,2:07:50.38,2:07:54.56,英文,,0,0,0,,As of that moment in time, when David and Carter clicked, it had 100 likes.
Dialogue: 0,2:07:50.38,2:07:54.56,中文,,0,0,0,,在 David 和 Carter 点击的那一刻，点赞数是 100。
Dialogue: 0,2:07:54.56,2:07:58.38,英文,,0,0,0,,But then this last line of code is executed for me, and then maybe Carter.
Dialogue: 0,2:07:54.56,2:07:58.38,中文,,0,0,0,,然后最后一行代码先为我执行，然后可能为 Carter 执行。
Dialogue: 0,2:07:58.38,2:08:10.75,英文,,0,0,0,,Because that answer, the state of the database, was stored in this variable, then both Carter and I will result in this line of code being executed with the same value.
Dialogue: 0,2:07:58.38,2:08:10.75,中文,,0,0,0,,因为数据库的状态存储在这个变量中，所以 Carter 和我都会用相同的值执行这行代码。
Dialogue: 0,2:08:10.75,2:08:17.53,英文,,0,0,0,,Update the posts table, setting the likes equal to 101 for that post's ID.
Dialogue: 0,2:08:10.75,2:08:17.53,中文,,0,0,0,,更新 posts 表，将该帖子 id 的点赞数设置为 101。
Dialogue: 0,2:08:17.53,2:08:18.19,英文,,0,0,0,,Why?
Dialogue: 0,2:08:17.53,2:08:18.19,中文,,0,0,0,,为什么？
Dialogue: 0,2:08:18.19,2:08:22.25,英文,,0,0,0,,Because again, if each of these lines of code running on different servers
Dialogue: 0,2:08:18.19,2:08:22.25,中文,,0,0,0,,因为如果在不同服务器上运行的每一行代码
Dialogue: 0,2:08:22.25,2:08:36.56,英文,,0,0,0,,are checking the value of the current number of likes, but then getting interrupted because Carter clicked the darn thing, too, and then resuming their work on my behalf, we might have a race condition, where the code is sort of racing to finish, but getting interrupted by other users' clicks.
Dialogue: 0,2:08:22.25,2:08:36.56,中文,,0,0,0,,都在检查当前点赞数的值，但由于 Carter 也点击了它而被打断，\N然后继续为我工作，就可能出现竞态条件，代码像是比赛一样要完成，但却被其他用户的点击打断了。
Dialogue: 0,2:08:36.56,2:08:47.13,英文,,0,0,0,,And the problem with that is that if you are inspecting the value of some variable, or in this case, a database cell, and making a decision based on it, like how to update it, you might now lose data.
Dialogue: 0,2:08:36.56,2:08:47.13,中文,,0,0,0,,问题在于，如果你要检查某个变量的值（在本例中是数据库单元格），并根据它做出决定（例如如何更新它），那么你可能会丢失数据。
Dialogue: 0,2:08:47.13,2:08:57.39,英文,,0,0,0,,And Instagram, probably not good for advertising if they're losing likes. And so that's probably a problem, not to retain the value 102 and instead insert the number 101 twice.
Dialogue: 0,2:08:47.13,2:08:57.39,中文,,0,0,0,,如果 Instagram 丢失了点赞数，这对广告来说可不是什么好事。因此，没有保留值 102，而是插入了两次 101，这可能是个问题。
Dialogue: 0,2:08:57.39,2:09:06.15,英文,,0,0,0,,It's actually similar in spirit to a story that was told in a databases course I took myself years ago, whereby
Dialogue: 0,2:08:57.39,2:09:06.15,中文,,0,0,0,,这实际上与我几年前上一门数据库课程时听到的故事类似，故事中
Dialogue: 0,2:09:06.15,2:09:10.04,英文,,0,0,0,,It's somewhat analogous to a contrived scenario involving a refrigerator.
Dialogue: 0,2:09:06.15,2:09:10.04,中文,,0,0,0,,它类似于一个关于冰箱的虚构场景。
Dialogue: 0,2:09:10.04,2:09:12.38,英文,,0,0,0,,And this is the closest thing to a refrigerator we could get on stage.
Dialogue: 0,2:09:10.04,2:09:12.38,中文,,0,0,0,,这是我们在舞台上能找到的最接近冰箱的东西。
Dialogue: 0,2:09:12.38,2:09:16.20,英文,,0,0,0,,But imagine you've got one of these little dorm fridges in your dorm, too, and you're a roommate.
Dialogue: 0,2:09:12.38,2:09:16.20,中文,,0,0,0,,想象一下，你的宿舍里也有一个这样的小冰箱，你和你的室友住在一起。
Dialogue: 0,2:09:16.20,2:09:19.44,英文,,0,0,0,,And maybe both of you, as the story was told to me, really like milk.
Dialogue: 0,2:09:16.20,2:09:19.44,中文,,0,0,0,,也许你们两个，就像故事里告诉我的那样，都非常喜欢牛奶。
Dialogue: 0,2:09:19.44,2:09:23.75,英文,,0,0,0,,And one of you is at class, but the other of you comes home, and you open your dorm fridge, and you're like, ugh.
Dialogue: 0,2:09:19.44,2:09:23.75,中文,,0,0,0,,你和室友一个在上课，一个回家，打开冰箱，却发现……
Dialogue: 0,2:09:23.75,2:09:25.49,英文,,0,0,0,,Darn it, we're out of milk.
Dialogue: 0,2:09:23.75,2:09:25.49,中文,,0,0,0,,糟糕，没牛奶了。
Dialogue: 0,2:09:25.49,2:09:27.09,英文,,0,0,0,,And so you close the fridge.
Dialogue: 0,2:09:25.49,2:09:27.09,中文,,0,0,0,,你关上冰箱，
Dialogue: 0,2:09:27.09,2:09:29.77,英文,,0,0,0,,You walk across the street to CVS or some other store.
Dialogue: 0,2:09:27.09,2:09:29.77,中文,,0,0,0,,穿过街道去CVS或者其他商店。
Dialogue: 0,2:09:29.77,2:09:31.51,英文,,0,0,0,,And you get in line to buy some milk.
Dialogue: 0,2:09:29.77,2:09:31.51,中文,,0,0,0,,然后你排队买牛奶。
Dialogue: 0,2:09:31.51,2:09:32.97,英文,,0,0,0,,Meanwhile, your roommate gets out of class.
Dialogue: 0,2:09:31.51,2:09:32.97,中文,,0,0,0,,与此同时，你室友下课了，
Dialogue: 0,2:09:32.97,2:09:34.22,英文,,0,0,0,,They come back to your dorm room.
Dialogue: 0,2:09:32.97,2:09:34.22,中文,,0,0,0,,回到宿舍，
Dialogue: 0,2:09:34.22,2:09:35.76,英文,,0,0,0,,They're really thirsty for some milk.
Dialogue: 0,2:09:34.22,2:09:35.76,中文,,0,0,0,,想喝牛奶，
Dialogue: 0,2:09:35.76,2:09:37.08,英文,,0,0,0,,They open up the fridge.
Dialogue: 0,2:09:35.76,2:09:37.08,中文,,0,0,0,,打开冰箱，
Dialogue: 0,2:09:37.08,2:09:38.70,英文,,0,0,0,,They say, oh, we're out of milk.
Dialogue: 0,2:09:37.08,2:09:38.70,中文,,0,0,0,,发现没牛奶了，
Dialogue: 0,2:09:38.70,2:09:44.38,英文,,0,0,0,,And then they take a different route, perhaps, to CVS or some other store nearby, get in line to buy some milk.
Dialogue: 0,2:09:38.70,2:09:44.38,中文,,0,0,0,,然后TA可能走了另一条路，去CVS或者附近的其他商店，排队买牛奶。
Dialogue: 0,2:09:44.38,2:09:47.43,英文,,0,0,0,,Fast forward some amount of time in this very contrived story.
Dialogue: 0,2:09:44.38,2:09:47.43,中文,,0,0,0,,快进到这个故事的某个时间点，
Dialogue: 0,2:09:47.43,2:09:50.57,英文,,0,0,0,,And what happens, oh, damn it, we now ended up with like two gallons of milk.
Dialogue: 0,2:09:47.43,2:09:50.57,中文,,0,0,0,,结果就是，糟糕，我们现在有两加仑牛奶了。
Dialogue: 0,2:09:50.57,2:09:51.67,英文,,0,0,0,,And there's no way we can.
Dialogue: 0,2:09:50.57,2:09:51.67,中文,,0,0,0,,我们没法……
Dialogue: 0,2:09:51.67,2:09:54.57,英文,,0,0,0,,fit gallons of milk in there, let alone two of them.
Dialogue: 0,2:09:51.67,2:09:54.57,中文,,0,0,0,,把这么多牛奶放进去，更别说两加仑了。
Dialogue: 0,2:09:54.57,2:09:56.17,英文,,0,0,0,,So that's a problem.
Dialogue: 0,2:09:54.57,2:09:56.17,中文,,0,0,0,,这是个问题，
Dialogue: 0,2:09:56.17,2:10:00.03,英文,,0,0,0,,But what's the relationship to this here?
Dialogue: 0,2:09:56.17,2:10:00.03,中文,,0,0,0,,但这和这个有什么关系呢？
Dialogue: 0,2:10:00.03,2:10:16.78,英文,,0,0,0,,Well, both of us, yeah, did what?
Dialogue: 0,2:10:00.03,2:10:16.78,中文,,0,0,0,,我们俩都做了什么？
Dialogue: 0,2:10:16.78,2:10:18.22,英文,,0,0,0,,Exactly.
Dialogue: 0,2:10:16.78,2:10:18.22,中文,,0,0,0,,没错。
Dialogue: 0,2:10:23.31,2:10:23.85,英文,,0,0,0,,Exactly.
Dialogue: 0,2:10:23.31,2:10:23.85,中文,,0,0,0,,没错。
Dialogue: 0,2:10:23.85,2:10:34.88,英文,,0,0,0,,So to summarize, both of us had a very similar thought process, made a similar decision based on the same information, not realizing that the information, the fridge, was in the process of being updated.
Dialogue: 0,2:10:23.85,2:10:34.88,中文,,0,0,0,,总结一下，我们俩的思路非常相似，都是根据相同的信息做出了相似的决定，只是没有意识到信息，也就是冰箱里的东西，正在更新中。
Dialogue: 0,2:10:34.88,2:10:37.24,英文,,0,0,0,,And of course, in the Instagram world, it happens like this.
Dialogue: 0,2:10:34.88,2:10:37.24,中文,,0,0,0,,当然，在 Instagram 的世界里，事情发生得就像这样。
Dialogue: 0,2:10:37.24,2:10:39.34,英文,,0,0,0,,In the fridge world, it might take a few minutes.
Dialogue: 0,2:10:37.24,2:10:39.34,中文,,0,0,0,,在冰箱的世界里，这可能需要几分钟。
Dialogue: 0,2:10:39.34,2:10:44.84,英文,,0,0,0,,But the problem is ultimately the result of our having made a decision about the state of the world.
Dialogue: 0,2:10:39.34,2:10:44.84,中文,,0,0,0,,但问题最终是由于我们对世界状态做出了决定。
Dialogue: 0,2:10:44.84,2:10:48.48,英文,,0,0,0,,And the state of the world was in the middle of being updated.
Dialogue: 0,2:10:44.84,2:10:48.48,中文,,0,0,0,,而世界状态正处于更新之中。
Dialogue: 0,2:10:48.48,2:10:50.51,英文,,0,0,0,,The queries got commingled with others.
Dialogue: 0,2:10:48.48,2:10:50.51,中文,,0,0,0,,查询与其他查询混合在一起了。
Dialogue: 0,2:10:50.51,2:10:53.17,英文,,0,0,0,,Or in this case, someone was already on their way to the store.
Dialogue: 0,2:10:50.51,2:10:53.17,中文,,0,0,0,,或者在这个例子中，已经有人在去商店的路上了。
Dialogue: 0,2:10:53.17,2:11:04.79,英文,,0,0,0,,So what's the solution in the real world? Well, you could very simply take a Post-it note and put, gone for milk, so as to communicate to your roommate that they should not inspect the value of that variable and make a decision on it.
Dialogue: 0,2:10:53.17,2:11:04.79,中文,,0,0,0,,那么在现实世界中，解决方案是什么呢？很简单，你可以拿一张便利贴，\N写上“去买牛奶了”，这样就可以告诉你的室友，他们不应该查看该变量的值并据此做出决定。
Dialogue: 0,2:11:04.79,2:11:09.30,英文,,0,0,0,,Why? Because it's not yet consistent with the outcome that's about to happen.
Dialogue: 0,2:11:04.79,2:11:09.30,中文,,0,0,0,,为什么？因为它与即将发生的结果不一致。
Dialogue: 0,2:11:09.30,2:11:15.68,英文,,0,0,0,,You could be more dramatic, and you could actually lock the fridge somehow, put a padlock around it or the like, so they can't even get in there.
Dialogue: 0,2:11:09.30,2:11:15.68,中文,,0,0,0,,你可以更夸张一点，你可以把冰箱锁起来，用挂锁或类似的东西锁起来，这样他们就进不去了。
Dialogue: 0,2:11:15.68,2:11:18.60,英文,,0,0,0,,And that would achieve the same effect, too.
Dialogue: 0,2:11:15.68,2:11:18.60,中文,,0,0,0,,这也将达到同样的效果。
Dialogue: 0,2:11:18.60,2:11:22.39,英文,,0,0,0,,And that is actually pretty much the solution to this problem in code, too.
Dialogue: 0,2:11:18.60,2:11:22.39,中文,,0,0,0,,这实际上也是代码中解决这个问题的办法。
Dialogue: 0,2:11:22.39,2:11:23.27,英文,,0,0,0,,It's not safe.
Dialogue: 0,2:11:22.39,2:11:23.27,中文,,0,0,0,,这不安全。
Dialogue: 0,2:11:23.27,2:11:27.31,英文,,0,0,0,,It's not sufficient to only execute three lines of code like this.
Dialogue: 0,2:11:23.27,2:11:27.31,中文,,0,0,0,,仅仅执行三行这样的代码是不够的。
Dialogue: 0,2:11:27.31,2:11:35.26,英文,,0,0,0,,Rather, what you probably want to do is use additional SQL keywords that we won't spend much time on in the class itself, but these.
Dialogue: 0,2:11:27.31,2:11:35.26,中文,,0,0,0,,相反，你可能想要做的是使用其他的 SQL 关键字，我们在课堂上不会花太多时间来讲解，但这些关键字是存在的。
Dialogue: 0,2:11:35.26,2:11:37.14,英文,,0,0,0,,There are solutions to this problem.
Dialogue: 0,2:11:35.26,2:11:37.14,中文,,0,0,0,,这个问题是有解决办法的。
Dialogue: 0,2:11:37.14,2:11:42.15,英文,,0,0,0,,You can begin what's called a transaction, and you can more explicitly commit
Dialogue: 0,2:11:37.14,2:11:42.15,中文,,0,0,0,,你可以开始一个叫做事务的东西，你可以更明确地提交
Dialogue: 0,2:11:42.15,2:11:46.17,英文,,0,0,0,,to making a decision, like updating the database to 101 or 102.
Dialogue: 0,2:11:42.15,2:11:46.17,中文,,0,0,0,,做出决定，比如将数据库更新到 101 或 102。
Dialogue: 0,2:11:46.17,2:11:53.56,英文,,0,0,0,,Or if you realize, wait a minute, Carter's query is interrupting mine, let me roll back to the previous state and just rewind.
Dialogue: 0,2:11:46.17,2:11:53.56,中文,,0,0,0,,或者，如果你意识到，等等，Carter 的查询打断了我的查询，让我回滚到之前的状态，然后重新开始。
Dialogue: 0,2:11:53.56,2:11:56.12,英文,,0,0,0,,Let me undo, Control-Z, if you will.
Dialogue: 0,2:11:53.56,2:11:56.12,中文,,0,0,0,,让我撤销，如果你愿意，可以按 Ctrl+Z。
Dialogue: 0,2:11:56.12,2:11:59.60,英文,,0,0,0,,There's also another keyword that's not so much used anymore in SQL, which is locking.
Dialogue: 0,2:11:56.12,2:11:59.60,中文,,0,0,0,,SQL 中还有一个不太常用的关键词：locking（锁定）。
Dialogue: 0,2:11:59.60,2:12:04.69,英文,,0,0,0,,You could literally, back in the day, lock the entire database table, preventing anyone
Dialogue: 0,2:11:59.60,2:12:04.69,中文,,0,0,0,,在过去，你可以直接锁定整个数据库表，防止任何人在
Dialogue: 0,2:12:04.69,2:12:09.49,英文,,0,0,0,,from updating it or making changes or even reading it while someone else was accessing it.
Dialogue: 0,2:12:04.69,2:12:09.49,中文,,0,0,0,,其他人访问的时候更新、修改，甚至读取它。
Dialogue: 0,2:12:09.49,2:12:12.45,英文,,0,0,0,,That was a very heavy-handed solution because it slowed everything down.
Dialogue: 0,2:12:09.49,2:12:12.45,中文,,0,0,0,,这是一个非常笨拙的解决方案，因为它会降低所有操作的速度。
Dialogue: 0,2:12:12.45,2:12:26.51,英文,,0,0,0,,But in short, transactions are now a feature of SQL that you won't necessarily need to use yourselves that do solve this problem by doing the equivalent of saying, while David's like counter is in the process of being updated, keep Carter at bay.
Dialogue: 0,2:12:12.45,2:12:26.51,中文,,0,0,0,,但简而言之，事务现在是 SQL 的一个功能，你不一定需要自己使用，\N它通过执行类似于“当 David 的计数器正在更新时，让 Carter 等待”的操作来解决这个问题。
Dialogue: 0,2:12:26.51,2:12:29.65,英文,,0,0,0,,Ideally, briefly, and then let his data go through, too.
Dialogue: 0,2:12:26.51,2:12:29.65,中文,,0,0,0,,理想情况下，短暂地等待，然后也让他的数据通过。
Dialogue: 0,2:12:29.65,2:12:32.37,英文,,0,0,0,,It's equivalent, too, to putting a note or a lock on the fridge.
Dialogue: 0,2:12:29.65,2:12:32.37,中文,,0,0,0,,这相当于在冰箱上贴一张纸条或一把锁。
Dialogue: 0,2:12:32.37,2:12:34.23,英文,,0,0,0,,And indeed, I mean lock litter.
Dialogue: 0,2:12:32.37,2:12:34.23,中文,,0,0,0,,我的意思是，锁住垃圾。
Dialogue: 0,2:12:34.23,2:12:40.35,英文,,0,0,0,,They were once upon a time called, and still are in some texts, called locks on databases, too.
Dialogue: 0,2:12:34.23,2:12:40.35,中文,,0,0,0,,它们曾经被称为，现在在一些文章中仍然被称为数据库上的“锁”。
Dialogue: 0,2:12:40.35,2:12:44.63,英文,,0,0,0,,And the code for which you might do this is almost the same.
Dialogue: 0,2:12:40.35,2:12:44.63,中文,,0,0,0,,实现这一点的代码几乎相同。
Dialogue: 0,2:12:44.63,2:12:52.02,英文,,0,0,0,,You simply wrap. the three queries with a transaction statement and a commit.
Dialogue: 0,2:12:44.63,2:12:52.02,中文,,0,0,0,,你只需用 transaction 语句和 commit 将三个查询语句包裹起来。
Dialogue: 0,2:12:52.02,2:12:57.96,英文,,0,0,0,,And the term of art here is that this makes your statements atomic.
Dialogue: 0,2:12:52.02,2:12:57.96,中文,,0,0,0,,这里的专业术语是，这使得你的语句具有“原子性”。
Dialogue: 0,2:12:57.96,2:13:01.11,英文,,0,0,0,,So atomic means they're either all executed or not at all.
Dialogue: 0,2:12:57.96,2:13:01.11,中文,,0,0,0,,“原子性”意味着它们要么全部执行，要么全部不执行。
Dialogue: 0,2:13:01.11,2:13:04.49,英文,,0,0,0,,That is, they're all very tightly coupled together without interruption.
Dialogue: 0,2:13:01.11,2:13:04.49,中文,,0,0,0,,也就是说，它们都紧密地结合在一起，不会中断。
Dialogue: 0,2:13:04.49,2:13:08.73,英文,,0,0,0,,Transactions solves that problem and avoid having two gallons of milk.
Dialogue: 0,2:13:04.49,2:13:08.73,中文,,0,0,0,,事务解决了这个问题，避免了出现两加仑牛奶的情况。
Dialogue: 0,2:13:08.73,2:13:16.36,英文,,0,0,0,,And the last problem that arises that is tragically so darn common in the real world today is what's called a SQL injection attack.
Dialogue: 0,2:13:08.73,2:13:16.36,中文,,0,0,0,,最后一个问题，也是当今现实世界中非常普遍的问题，叫做 SQL 注入攻击。
Dialogue: 0,2:13:16.36,2:13:18.60,英文,,0,0,0,,And it's what I alluded to earlier with the question mark.
Dialogue: 0,2:13:16.36,2:13:18.60,中文,,0,0,0,,这就是我之前提到的问号问题。
Dialogue: 0,2:13:18.60,2:13:25.87,英文,,0,0,0,,So suppose you're in the habit of logging in to Yale websites with your NetID or password, or at Harvard, your Harvard key and password as well.
Dialogue: 0,2:13:18.60,2:13:25.87,中文,,0,0,0,,假设你习惯于使用你的 Netid 和密码登录耶鲁大学网站，或者使用你的 Harvard key 和密码登录哈佛大学网站。
Dialogue: 0,2:13:25.87,2:13:34.03,英文,,0,0,0,,Suppose for the sake of discussion that the people that implemented Harvard key login allow you to type in your email address, of course, and your password.
Dialogue: 0,2:13:25.87,2:13:34.03,中文,,0,0,0,,假设，为了讨论方便，实现 Harvard key 登录的人允许你输入你的电子邮件地址和密码。
Dialogue: 0,2:13:34.03,2:13:43.60,英文,,0,0,0,,Suppose that they are using SQL underneath the hood to check your username and password to make sure that you are David Malan or Carter Zinke or whoever you claim to be.
Dialogue: 0,2:13:34.03,2:13:43.60,中文,,0,0,0,,假设他们在后台使用 SQL 来检查你的用户名和密码，以确保你真的是 David Malan、Carter Zinke 或你声称的任何人。
Dialogue: 0,2:13:43.60,2:13:51.42,英文,,0,0,0,,I haven't shown you the syntax yet, but it turns out that in SQL, dash dash is a special way of indicating a comment.
Dialogue: 0,2:13:43.60,2:13:51.42,中文,,0,0,0,,我还没有讲语法，但在 SQL 中，-- 表示注释。
Dialogue: 0,2:13:51.42,2:13:53.07,英文,,0,0,0,,It means ignore everything to the right.
Dialogue: 0,2:13:51.42,2:13:53.07,中文,,0,0,0,,意味着忽略后面的所有内容。
Dialogue: 0,2:13:53.07,2:13:56.95,英文,,0,0,0,,So it's just like slash slash in C or the hash symbol in Python.
Dialogue: 0,2:13:53.07,2:13:56.95,中文,,0,0,0,,就像 C 中的 // 或 Python 中的 #。
Dialogue: 0,2:13:56.95,2:13:59.45,英文,,0,0,0,,Dash dash just means ignore everything to the right.
Dialogue: 0,2:13:56.95,2:13:59.45,中文,,0,0,0,,-- 表示忽略后面的所有内容。
Dialogue: 0,2:13:59.45,2:14:01.55,英文,,0,0,0,,And we've, of course, seen single quotes.
Dialogue: 0,2:13:59.45,2:14:01.55,中文,,0,0,0,,我们已经见过单引号了。
Dialogue: 0,2:14:01.55,2:14:10.40,英文,,0,0,0,,So one way to wage a SQL injection attack is to try to inject malicious SQL code into someone else's database without them realizing it.
Dialogue: 0,2:14:01.55,2:14:10.40,中文,,0,0,0,,发动 SQL 注入攻击的一种方法是，在别人不知情的情况下，将恶意 SQL 代码注入到他们的数据库中。
Dialogue: 0,2:14:10.40,2:14:11.12,英文,,0,0,0,,How do you do this?
Dialogue: 0,2:14:10.40,2:14:11.12,中文,,0,0,0,,怎么做呢？
Dialogue: 0,2:14:11.12,2:14:16.55,英文,,0,0,0,,Well, suppose I log in as malan at harvard.edu, single quote, dash, dash.
Dialogue: 0,2:14:11.12,2:14:16.55,中文,,0,0,0,,假设我以 malan@harvard.edu'-- 登录。
Dialogue: 0,2:14:16.55,2:14:19.35,英文,,0,0,0,,I'm not double quoting anything clearly.
Dialogue: 0,2:14:16.55,2:14:19.35,中文,,0,0,0,,很明显我没有用双引号。
Dialogue: 0,2:14:19.35,2:14:23.36,英文,,0,0,0,,And there's nothing to the right of the dash dash anyway.
Dialogue: 0,2:14:19.35,2:14:23.36,中文,,0,0,0,,-- 后面也没有任何内容。
Dialogue: 0,2:14:23.36,2:14:25.68,英文,,0,0,0,,But this imbalance is going to be useful.
Dialogue: 0,2:14:23.36,2:14:25.68,中文,,0,0,0,,但这种不平衡将很有用。
Dialogue: 0,2:14:25.68,2:14:40.59,英文,,0,0,0,,Why? Because if I'm a hacker and I'm presuming, you know, someone at Harvard probably is using single quotes to wrap the user's email address and wrap the user's password, what if I try to complete their thought for them and close one of those quotes for them?
Dialogue: 0,2:14:25.68,2:14:40.59,中文,,0,0,0,,为什么？因为如果我是一个黑客，我假设哈佛的人可能使用单引号\N来包裹用户的电子邮件地址和密码，如果我试图帮他们完成代码，并帮他们关闭其中一个引号呢？
Dialogue: 0,2:14:40.59,2:14:43.45,英文,,0,0,0,,What might happen? Well, we could do this.
Dialogue: 0,2:14:40.59,2:14:43.45,中文,,0,0,0,,会发生什么？我们可以这样做。
Dialogue: 0,2:14:43.45,2:14:48.18,英文,,0,0,0,,Here, for instance, let me hypothesize, is the code that Harvard wrote, hopefully not, underneath the hood.
Dialogue: 0,2:14:43.45,2:14:48.18,中文,,0,0,0,,例如，我假设这是哈佛编写的代码，希望不是，在底层。
Dialogue: 0,2:14:48.18,2:14:51.70,英文,,0,0,0,,So they're using CS50's library in Python, and they're using SQL inside.
Dialogue: 0,2:14:48.18,2:14:51.70,中文,,0,0,0,,他们在 Python 中使用 cs50 的库，并在里面使用 SQL。
Dialogue: 0,2:14:51.70,2:14:54.52,英文,,0,0,0,,Suppose that they have a query like this.
Dialogue: 0,2:14:51.70,2:14:54.52,中文,,0,0,0,,假设他们有一个这样的查询语句。
Dialogue: 0,2:14:54.52,2:15:01.54,英文,,0,0,0,,Select star from users where username equals question mark and password equals question mark.
Dialogue: 0,2:14:54.52,2:15:01.54,中文,,0,0,0,,SELECT * FROM users WHERE username = ? and password = ?
Dialogue: 0,2:15:01.54,2:15:05.21,英文,,0,0,0,,And then suppose they just plug in whatever username and password was typed in.
Dialogue: 0,2:15:01.54,2:15:05.21,中文,,0,0,0,,假设他们只是插入输入的用户名和密码。
Dialogue: 0,2:15:05.21,2:15:09.39,英文,,0,0,0,,And then, if they get back some number of rows, dot, dot, dot, they assume I am David.
Dialogue: 0,2:15:05.21,2:15:09.39,中文,,0,0,0,,如果他们返回了一些行...，他们就认为我是 David。
Dialogue: 0,2:15:09.39,2:15:12.99,英文,,0,0,0,,They assume Carter is Carter, if both the username and password are in the database.
Dialogue: 0,2:15:09.39,2:15:12.99,中文,,0,0,0,,如果用户名和密码都在数据库中，他们就认为 Carter 是 Carter。
Dialogue: 0,2:15:12.99,2:15:14.69,英文,,0,0,0,,Just end of story there.
Dialogue: 0,2:15:12.99,2:15:14.69,中文,,0,0,0,,就这样结束了。
Dialogue: 0,2:15:14.69,2:15:15.77,英文,,0,0,0,,This is good.
Dialogue: 0,2:15:14.69,2:15:15.77,中文,,0,0,0,,这很好。
Dialogue: 0,2:15:15.77,2:15:18.81,英文,,0,0,0,,This has the question mark placeholders we discussed earlier.
Dialogue: 0,2:15:15.77,2:15:18.81,中文,,0,0,0,,这里有我们之前讨论过的问号占位符。
Dialogue: 0,2:15:18.81,2:15:21.15,英文,,0,0,0,,But what if you don't quite remember that?
Dialogue: 0,2:15:18.81,2:15:21.15,中文,,0,0,0,,但如果你不记得怎么办？
Dialogue: 0,2:15:21.15,2:15:28.73,英文,,0,0,0,,You don't quite take that to heart, and you use your more familiar last week f strings, whereby we use these curly braces to plug in values.
Dialogue: 0,2:15:21.15,2:15:28.73,中文,,0,0,0,,你没有完全记住，而是使用了上周更熟悉的 f 字符串，我们用花括号来插入值。
Dialogue: 0,2:15:28.73,2:15:32.01,英文,,0,0,0,,What if you do this instead? So it's almost the same idea.
Dialogue: 0,2:15:28.73,2:15:32.01,中文,,0,0,0,,如果你这样做会怎么样？想法几乎相同。
Dialogue: 0,2:15:32.01,2:15:36.26,英文,,0,0,0,,It's still db execute, but now it's select star from users where username equals.
Dialogue: 0,2:15:32.01,2:15:36.26,中文,,0,0,0,,它仍然是 db execute，但现在是 SELECT * FROM users WHERE username equals。
Dialogue: 0,2:15:36.26,2:15:42.20,英文,,0,0,0,,And now notice, I'm doing the single quotes, which is required by SQL, but I'm using f strings with the curly braces.
Dialogue: 0,2:15:36.26,2:15:42.20,中文,,0,0,0,,现在注意，我使用了 SQL 要求的单引号，但我使用了带有花括号的 f 字符串。
Dialogue: 0,2:15:42.20,2:15:46.67,英文,,0,0,0,,And the password equals single quote, password, and then close single quote.
Dialogue: 0,2:15:42.20,2:15:46.67,中文,,0,0,0,,密码等于单引号，密码，然后关闭单引号。
Dialogue: 0,2:15:46.67,2:15:53.35,英文,,0,0,0,,The problem is, if you're just blindly pasting effectively the user's input into that web form,
Dialogue: 0,2:15:46.67,2:15:53.35,中文,,0,0,0,,问题是，如果你只是盲目地将用户的输入粘贴到该网络表单中，
Dialogue: 0,2:15:53.35,2:16:03.14,英文,,0,0,0,,into the username field and the password field, there's nothing stopping a malicious user, student, faculty, staff, from including a single quote in their name.
Dialogue: 0,2:15:53.35,2:16:03.14,中文,,0,0,0,,粘贴到用户名字段和密码字段中，那么没有什么可以阻止恶意用户、学生、教职工在他们的姓名中包含单引号。
Dialogue: 0,2:16:03.14,2:16:10.86,英文,,0,0,0,,Or maybe even benevolently, if their name happens to have a single quote, as some last names in particular do.
Dialogue: 0,2:16:03.14,2:16:10.86,中文,,0,0,0,,或者即使是善意的，如果他们的名字恰好包含单引号，就像某些姓氏那样。
Dialogue: 0,2:16:10.86,2:16:12.61,英文,,0,0,0,,So this is very fragile. Why?
Dialogue: 0,2:16:10.86,2:16:12.61,中文,,0,0,0,,所以这非常脆弱。为什么？
Dialogue: 0,2:16:12.61,2:16:20.55,英文,,0,0,0,,Well, suppose that if we plug in my malicious value, malan at harvard.edu single quote dash dash, notice what happens to username here.
Dialogue: 0,2:16:12.61,2:16:20.55,中文,,0,0,0,,假设如果我们插入我的恶意值，malan at harvard.edu 单引号 - -，注意这里的用户名会发生什么。
Dialogue: 0,2:16:20.55,2:16:26.60,英文,,0,0,0,,The username variable inside of the curly quotes will get replaced with this.
Dialogue: 0,2:16:20.55,2:16:26.60,中文,,0,0,0,,花括号内的 username 变量将被替换成这个。
Dialogue: 0,2:16:26.60,2:16:41.33,英文,,0,0,0,,And notice, single quote, which the Harvard programmer wrote, m-a-l-a-n at harvard.edu, single quote, which I wrote, dash dash, which I wrote, single quote, which Harvard wrote, and whatever else they want after that.
Dialogue: 0,2:16:26.60,2:16:41.33,中文,,0,0,0,,注意，哈佛程序员写的单引号，m-a-l-a-n at harvard.edu，我写的单引号，- -，我写的，哈佛写的单引号，以及他们在那之后想要的任何东西。
Dialogue: 0,2:16:41.33,2:16:46.39,英文,,0,0,0,,What's the implication, though, of the dash dash?
Dialogue: 0,2:16:41.33,2:16:46.39,中文,,0,0,0,,那么，- - 的含义是什么？
Dialogue: 0,2:16:46.39,2:16:48.59,英文,,0,0,0,,Everything to the right is going to be ignored.
Dialogue: 0,2:16:46.39,2:16:48.59,中文,,0,0,0,,右边的一切都将被忽略。
Dialogue: 0,2:16:48.59,2:16:51.79,英文,,0,0,0,,So the password is never even checked in this scenario.
Dialogue: 0,2:16:48.59,2:16:51.79,中文,,0,0,0,,所以在这种情况下，密码甚至都没有被检查。
Dialogue: 0,2:16:51.79,2:16:56.13,英文,,0,0,0,,I'm tricking the server into ignoring everything after the dash dash.
Dialogue: 0,2:16:51.79,2:16:56.13,中文,,0,0,0,,我在欺骗服务器忽略 - - 之后的所有内容。
Dialogue: 0,2:16:56.13,2:17:01.17,英文,,0,0,0,,But I have constructed very cleverly, very maliciously, a syntactically valid query.
Dialogue: 0,2:16:56.13,2:17:01.17,中文,,0,0,0,,但是我已经非常巧妙、非常恶意地构造了一个语法上有效的查询。
Dialogue: 0,2:17:01.17,2:17:01.67,英文,,0,0,0,,Why?
Dialogue: 0,2:17:01.17,2:17:01.67,中文,,0,0,0,,为什么？
Dialogue: 0,2:17:01.67,2:17:06.79,英文,,0,0,0,,Because I provided the single quote that's going to finish the thought of that first single quote.
Dialogue: 0,2:17:01.67,2:17:06.79,中文,,0,0,0,,因为我提供了用来结束第一个单引号的单引号。
Dialogue: 0,2:17:06.79,2:17:13.18,英文,,0,0,0,,And now, I would only know how to do this if I saw the code or if I just randomly try putting apostrophes into web forms and see if things break.
Dialogue: 0,2:17:06.79,2:17:13.18,中文,,0,0,0,,只有在我看到代码或者随机尝试在网页表单中输入单引号并查看是否会出错时，我才知道如何做到这一点。
Dialogue: 0,2:17:13.18,2:17:14.62,英文,,0,0,0,,That's often how adversaries
Dialogue: 0,2:17:13.18,2:17:14.62,中文,,0,0,0,,攻击者通常就是这样
Dialogue: 0,2:17:14.62,2:17:17.70,英文,,0,0,0,,Attack systems, they type in potentially dangerous characters, hit Enter.
Dialogue: 0,2:17:14.62,2:17:17.70,中文,,0,0,0,,攻击系统，他们输入潜在的危险字符，然后按下回车键。
Dialogue: 0,2:17:17.70,2:17:22.73,英文,,0,0,0,,If something breaks, they're not necessarily into the system, but they know that there might be a vulnerability.
Dialogue: 0,2:17:17.70,2:17:22.73,中文,,0,0,0,,如果系统崩溃，他们不一定就能进入系统，但他们知道可能存在漏洞。
Dialogue: 0,2:17:22.73,2:17:25.43,英文,,0,0,0,,And then they start trying more methodically things like this.
Dialogue: 0,2:17:22.73,2:17:25.43,中文,,0,0,0,,然后他们开始更有条理地尝试类似的事情。
Dialogue: 0,2:17:25.43,2:17:29.65,英文,,0,0,0,,So this, then, is going to be bad, because it effectively greys out the rest of the query.
Dialogue: 0,2:17:25.43,2:17:29.65,中文,,0,0,0,,因此，这将会很糟糕，因为它实际上使查询的其余部分失效。
Dialogue: 0,2:17:29.65,2:17:34.58,英文,,0,0,0,,And this query is surely going to return some rows without even knowing my password.
Dialogue: 0,2:17:29.65,2:17:34.58,中文,,0,0,0,,而且这个查询肯定会返回一些行，即使不知道我的密码。
Dialogue: 0,2:17:34.58,2:17:39.46,英文,,0,0,0,,And so this logic here, dot, dot, dot, means, well, if data came back from this query,
Dialogue: 0,2:17:34.58,2:17:39.46,中文,,0,0,0,,所以这里的逻辑，点点点，意味着，如果数据从这个查询中返回，
Dialogue: 0,2:17:39.46,2:17:42.56,英文,,0,0,0,,Harvard is presumably going to assume that Malan logged in.
Dialogue: 0,2:17:39.46,2:17:42.56,中文,,0,0,0,,哈佛大学可能会认为是 Malan 登录了。
Dialogue: 0,2:17:42.56,2:17:47.97,英文,,0,0,0,,Show him his account or whatever is being protected here.
Dialogue: 0,2:17:42.56,2:17:47.97,中文,,0,0,0,,向他展示他的账户或任何正在被保护的东西。
Dialogue: 0,2:17:47.97,2:18:02.12,英文,,0,0,0,,So in short, using f strings bad, using any equivalent, like %s in C, bad when it comes to SQL, using question marks or whatever a third-party library like CS50s prescribes is the way to solve this.
Dialogue: 0,2:17:47.97,2:18:02.12,中文,,0,0,0,,简而言之，在 SQL 中，使用 f 字符串不好，使用任何等效的东西，\N比如 C 语言中的 %s，都不好，使用问号或任何第三方库（如 cs50s）规定的内容才是解决这个问题的方法。
Dialogue: 0,2:18:02.12,2:18:02.76,英文,,0,0,0,,Why?
Dialogue: 0,2:18:02.12,2:18:02.76,中文,,0,0,0,,为什么？
Dialogue: 0,2:18:02.76,2:18:07.78,英文,,0,0,0,,Because libraries like ours are designed to at least be smart and be paranoid.
Dialogue: 0,2:18:02.76,2:18:07.78,中文,,0,0,0,,因为像我们这样的库被设计成至少是智能的和偏执的。
Dialogue: 0,2:18:07.78,2:18:09.84,英文,,0,0,0,,And what we will do is this.
Dialogue: 0,2:18:07.78,2:18:09.84,中文,,0,0,0,,我们要做的是这个。
Dialogue: 0,2:18:09.84,2:18:18.69,英文,,0,0,0,,When you use the question marks and the values are plugged in, we will escape any potentially dangerous characters inside of those placeholders.
Dialogue: 0,2:18:09.84,2:18:18.69,中文,,0,0,0,,当你使用问号并且插入值时，我们会转义这些占位符中任何潜在的危险字符。
Dialogue: 0,2:18:18.69,2:18:23.47,英文,,0,0,0,,And so effectively, the single quote will no longer be considered a grammatical single quote.
Dialogue: 0,2:18:18.69,2:18:23.47,中文,,0,0,0,,因此，单引号将不再被视为语法上的单引号。
Dialogue: 0,2:18:23.47,2:18:28.75,英文,,0,0,0,,It will just be literally a character in the username or password, so the library.
Dialogue: 0,2:18:23.47,2:18:28.75,中文,,0,0,0,,它只是用户名或密码中的一个字符，因此是库。
Dialogue: 0,2:18:28.75,2:18:33.58,英文,,0,0,0,,takes care of this for you because you're plugging in the username and password as separate arguments.
Dialogue: 0,2:18:28.75,2:18:33.58,中文,,0,0,0,,它会帮你处理这个问题，因为你将用户名和密码作为单独的参数传入。
Dialogue: 0,2:18:33.58,2:18:41.61,英文,,0,0,0,,And then we, or the third party you're using, actually sanitize, that is, clean up the data and prevent those bad characters.
Dialogue: 0,2:18:33.58,2:18:41.61,中文,,0,0,0,,然后我们，或者你正在使用的第三方，会对数据进行清理，防止出现这些不良字符。
Dialogue: 0,2:18:41.61,2:18:44.73,英文,,0,0,0,,Now, this is kind of an internet meme that went around for a while.
Dialogue: 0,2:18:41.61,2:18:44.73,中文,,0,0,0,,这有点像是一段时间以来在互联网上传播的迷因。
Dialogue: 0,2:18:44.73,2:18:52.92,英文,,0,0,0,,If you've ever driven a car or been in a car where there's the automatic readers for tolls, this person thought it might be funny to try doing something like this.
Dialogue: 0,2:18:44.73,2:18:52.92,中文,,0,0,0,,如果你曾经开过车，或者坐过带有自动收费读取器的车，这个人可能觉得尝试这样做很有趣。
Dialogue: 0,2:18:52.92,2:18:54.44,英文,,0,0,0,,What are they presumably doing?
Dialogue: 0,2:18:52.92,2:18:54.44,中文,,0,0,0,,他们大概在做什么？
Dialogue: 0,2:18:54.44,2:19:01.58,英文,,0,0,0,,The presumption here is, whether or not it worked is unclear, is that here's the end of an actual license plate number.
Dialogue: 0,2:18:54.44,2:19:01.58,中文,,0,0,0,,这里的假设是，无论它是否有效尚不清楚，这是一个实际车牌号的末尾。
Dialogue: 0,2:19:01.58,2:19:04.26,英文,,0,0,0,,But here's an interesting single quote and a semicolon.
Dialogue: 0,2:19:01.58,2:19:04.26,中文,,0,0,0,,但这里有一个有趣的单引号和一个分号。
Dialogue: 0,2:19:04.26,2:19:08.07,英文,,0,0,0,,That's especially bad because it means you can maybe execute a second query on the database.
Dialogue: 0,2:19:04.26,2:19:08.07,中文,,0,0,0,,这尤其糟糕，因为这意味着你可能可以在数据库上执行第二个查询。
Dialogue: 0,2:19:08.07,2:19:16.93,英文,,0,0,0,,This is someone having fun trying to drop the entire database table for whatever municipality is scanning, through cameras, their license plate code.
Dialogue: 0,2:19:08.07,2:19:16.93,中文,,0,0,0,,这是有人在试图删除通过摄像头扫描车牌代码的任何城市的整个数据库表。
Dialogue: 0,2:19:16.93,2:19:19.19,英文,,0,0,0,,And I would be remiss if we didn't end on this note.
Dialogue: 0,2:19:16.93,2:19:19.19,中文,,0,0,0,,如果我们不以这个话题结尾，我会感到很遗憾。
Dialogue: 0,2:19:19.19,2:19:31.81,英文,,0,0,0,,At least in computer science circles, there is someone named, no relation to the TF name we put in the database earlier, Little Bobby Tables, which ends with this XKCD comic.
Dialogue: 0,2:19:19.19,2:19:31.81,中文,,0,0,0,,至少在计算机科学界，有一个人名叫小鲍比表，与我们之前在数据库中输入的 TF 名字无关，以这个 XKCD 漫画结尾。
Dialogue: 0,2:19:31.81,2:19:39.09,英文,,0,0,0,,And if you chuckle, if you laugh, you're now legit SQL programmers.
Dialogue: 0,2:19:31.81,2:19:39.09,中文,,0,0,0,,如果你笑了，你现在就是一个合格的 SQL 程序员了。
Dialogue: 0,2:19:39.09,2:19:42.08,英文,,0,0,0,,Nice, nice.
Dialogue: 0,2:19:39.09,2:19:42.08,中文,,0,0,0,,好，好。
Dialogue: 0,2:19:42.08,2:19:44.64,英文,,0,0,0,,Every CS student out there knows about Little Bobby Tables.
Dialogue: 0,2:19:42.08,2:19:44.64,中文,,0,0,0,,每个 CS 学生都知道小鲍比表。
Dialogue: 0,2:19:44.64,2:19:47.94,英文,,0,0,0,,So if you name drop Little Bobby Tables now, you're in.
Dialogue: 0,2:19:44.64,2:19:47.94,中文,,0,0,0,,如果你现在说出小鲍比表这个名字，你就入行了。
Dialogue: 0,2:19:47.94,2:19:49.17,英文,,0,0,0,,All right, that's it, though, for today.
Dialogue: 0,2:19:47.94,2:19:49.17,中文,,0,0,0,,好了，今天就到这里。
Dialogue: 0,2:19:49.17,2:19:50.13,英文,,0,0,0,,We will see you next time.
Dialogue: 0,2:19:49.17,2:19:50.13,中文,,0,0,0,,我们下次再见。
