[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: D:/python_code/video_tool/result/CS50x 2023 - Lecture 9 - Flask.mp4
Video File: D:/python_code/video_tool/result/CS50x 2023 - Lecture 9 - Flask.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 3797
Active Line: 3807
Video Position: 201210

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,11,1
Style: 英文,Arial,29,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.33333,1.33333,2,11,11,11,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,45,1
Style: 中文大字幕,Arial,38,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.99999,1.99999,2,11,11,11,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:01:12.22,0:01:19.02,英文,,0,0,0,,All right, this is CS50, and this is already week nine, which is our second to last.
Dialogue: 0,0:01:19.02,0:01:23.46,英文,,0,0,0,,Indeed, this is really the last week where you'll learn in this class how to program.
Dialogue: 0,0:01:23.46,0:01:32.32,英文,,0,0,0,,But indeed, it's this week that's really meant to be the pedagogical climax of all of these various languages we've been looking at, all of these various techniques, all of this syntax.
Dialogue: 0,0:01:32.32,0:01:41.21,英文,,0,0,0,,So that at the end of CS50 in just a few weeks, you indeed feel that you didn't take a class on C, and you didn't take a class on Python, but you really more generally took a class on programming.
Dialogue: 0,0:01:41.21,0:01:46.90,英文,,0,0,0,,Because indeed, we know already about half of you will go on to study computer science further, but half of you will not.
Dialogue: 0,0:01:46.90,0:01:53.79,英文,,0,0,0,,And indeed, all of your programming chops here on out theoretically will have a foundation in what we've been doing. These past many weeks.
Dialogue: 0,0:01:53.79,0:02:05.66,英文,,0,0,0,,But here on out, it's really going to be up to you to learn some new fangled language when it comes out, or to follow some new trend when some language eclipses the ones we've been using as more popular, as more appropriate for problems you want to solve.
Dialogue: 0,0:02:05.66,0:02:16.63,英文,,0,0,0,,And so today really is about synthesizing so many of the past few weeks, but doing it in the context of web programming, which for better or for worse is so very much in vogue nowadays, both on our laptops and phones.
Dialogue: 0,0:02:16.63,0:02:24.16,英文,,0,0,0,,And indeed, the languages we looked at in recent weeks are used not only to make websites, but also full-fledged applications, and app stores, and the like.
Dialogue: 0,0:02:24.16,0:02:27.38,英文,,0,0,0,,So this really will be the culmination of those past several weeks.
Dialogue: 0,0:02:27.38,0:02:34.39,英文,,0,0,0,,And indeed, we'll even talk about some familiar concepts, like shopping carts when you're on Amazon, and these things called cookies when you're visiting websites.
Dialogue: 0,0:02:34.39,0:02:36.51,英文,,0,0,0,,All of those topics, too, will come into play.
Dialogue: 0,0:02:36.51,0:02:39.79,英文,,0,0,0,,And you'll have an understanding of what all that means from the ground up.
Dialogue: 0,0:02:39.79,0:02:41.13,英文,,0,0,0,,So how did we get here?
Dialogue: 0,0:02:41.13,0:02:42.57,英文,,0,0,0,,Well, just last week.
Dialogue: 0,0:02:42.57,0:02:46.94,英文,,0,0,0,,We focused on HTML and CSS primarily, which are not programming languages.
Dialogue: 0,0:02:46.94,0:02:51.84,英文,,0,0,0,,They're just about aesthetics, structuring your data, presenting your data, and so forth.
Dialogue: 0,0:02:51.84,0:02:56.59,英文,,0,0,0,,And we served the web pages we wrote using this program, HTTP Server.
Dialogue: 0,0:02:56.59,0:03:01.99,英文,,0,0,0,,This is just one such program. Program, there's dozens, hundreds of different web servers that you can use out there.
Dialogue: 0,0:03:01.99,0:03:08.28,英文,,0,0,0,,This is just a super simple one we pre-installed in your code space for you in VS Code so that you can just serve up web pages.
Dialogue: 0,0:03:08.28,0:03:13.07,英文,,0,0,0,,At the end of last week, too, though, we teased JavaScript, a full-fledged programming language.
Dialogue: 0,0:03:13.07,0:03:29.76,英文,,0,0,0,,that you can use to manipulate the user's experience for the better, to make things more dynamic and interactive by actually running code in the user's browser on their Mac, their PC, their phone, as opposed to server side, which up until now is where all of our code in C and Python has been written.
Dialogue: 0,0:03:29.76,0:03:31.38,英文,,0,0,0,,So you're writing code on a server.
Dialogue: 0,0:03:31.38,0:03:33.20,英文,,0,0,0,,You're serving code from a server.
Dialogue: 0,0:03:33.20,0:03:37.93,英文,,0,0,0,,But now with HTML, CSS, and JavaScript, it's getting executed in a browser.
Dialogue: 0,0:03:37.93,0:03:42.59,英文,,0,0,0,,But today, we're going to view one final feature of Python, or really languages like it,
Dialogue: 0,0:03:42.59,0:03:51.84,英文,,0,0,0,,that you can also use code on the server to generate automatically, dynamically, the HTML, the JavaScript, the CSS that you actually want the user to receive.
Dialogue: 0,0:03:51.84,0:03:55.90,英文,,0,0,0,,You don't have to hard code everything as you have when making your own home page.
Dialogue: 0,0:03:55.90,0:03:59.04,英文,,0,0,0,,Well, let's consider what some of the building blocks were last week.
Dialogue: 0,0:03:59.04,0:04:00.93,英文,,0,0,0,,So here's a sample URL.
Dialogue: 0,0:04:00.93,0:04:04.93,英文,,0,0,0,,And over here, slash is sort of the default page on any web server.
Dialogue: 0,0:04:04.93,0:04:06.55,英文,,0,0,0,,It might be index.html.
Dialogue: 0,0:04:06.55,0:04:07.41,英文,,0,0,0,,It might be something else.
Dialogue: 0,0:04:07.41,0:04:08.59,英文,,0,0,0,,That's just a convention.
Dialogue: 0,0:04:08.59,0:04:10.97,英文,,0,0,0,,But it refers to whatever the default actually is.
Dialogue: 0,0:04:10.97,0:04:17.23,英文,,0,0,0,,You can visit, of course, with any browser, like a URL that ends in file.html or something else.html.
Dialogue: 0,0:04:17.23,0:04:21.52,英文,,0,0,0,,And that literally means your browser wants this file on this server.
Dialogue: 0,0:04:21.52,0:04:29.24,英文,,0,0,0,,Or, of course, we saw that it can be a folder, and inside of that folder, is presumably some default file name, like, again, index.html.
Dialogue: 0,0:04:29.24,0:04:32.49,英文,,0,0,0,,Or you can be more explicit, like folder slash file.html.
Dialogue: 0,0:04:32.49,0:04:34.49,英文,,0,0,0,,And these, more generally, we just called paths.
Dialogue: 0,0:04:34.49,0:04:40.89,英文,,0,0,0,,And indeed, a path is just a location on your Mac, your PC, or on a server of some piece of information.
Dialogue: 0,0:04:40.89,0:04:44.74,英文,,0,0,0,,But today, we're just going to rename this only to use other common terminology.
Dialogue: 0,0:04:44.74,0:04:45.82,英文,,0,0,0,,But they're really just synonyms.
Dialogue: 0,0:04:45.82,0:04:48.72,英文,,0,0,0,,Today, we're going to refer to those same things as routes.
Dialogue: 0,0:04:48.72,0:04:56.75,英文,,0,0,0,,Because now, today, we're going to ultimately replace HTTP server, which just serves up static content that you all write, with your own web server.
Dialogue: 0,0:04:56.75,0:05:05.77,英文,,0,0,0,,Like, now you will be the ones controlling what it is the server does in response to the user's request so that you can respond interactively and dynamically.
Dialogue: 0,0:05:05.77,0:05:08.24,英文,,0,0,0,,But we're still going to see techniques like this.
Dialogue: 0,0:05:08.24,0:05:11.24,英文,,0,0,0,,These were our so-called HTTP parameters.
Dialogue: 0,0:05:11.24,0:05:13.96,英文,,0,0,0,,They're everything that comes after a question mark in a URL.
Dialogue: 0,0:05:13.96,0:05:15.74,英文,,0,0,0,,And it can be like key equals value.
Dialogue: 0,0:05:15.74,0:05:17.04,英文,,0,0,0,,An example was what?
Dialogue: 0,0:05:17.04,0:05:23.01,英文,,0,0,0,,When we played with Google, what was the key and what was the value that I first tried?
Dialogue: 0,0:05:23.01,0:05:26.65,英文,,0,0,0,,Any recollection?
Dialogue: 0,0:05:26.65,0:05:38.28,英文,,0,0,0,,I was searching for cats, and so the key, I figured out, was Q, because that's what Larry and Sergey, who created Google years ago, decided the name would be of the HTML text box that you type your query into.
Dialogue: 0,0:05:38.28,0:05:44.60,英文,,0,0,0,,And if I type CAT for cat, the value of that would end up in the URL for Google as being question mark cat equals value.
Dialogue: 0,0:05:44.60,0:05:48.64,英文,,0,0,0,,And I mentioned that it's often the case that you want to send two different inputs to a server.
Dialogue: 0,0:05:48.64,0:05:51.20,英文,,0,0,0,,And this is why I propose that you just keep an eye out for ampersands.
Dialogue: 0,0:05:51.20,0:05:53.82,英文,,0,0,0,,And ampersands separate these key value pairs.
Dialogue: 0,0:05:53.82,0:05:56.08,英文,,0,0,0,,But again, this is the same darn paradigm as before.
Dialogue: 0,0:05:56.08,0:06:00.04,英文,,0,0,0,,And we've seen this so many times, right? Key value pairs and dictionaries in Python.
Dialogue: 0,0:06:00.04,0:06:03.68,英文,,0,0,0,,We've seen HTML attributes and their values.
Dialogue: 0,0:06:03.68,0:06:06.48,英文,,0,0,0,,We've seen CSS properties and their values.
Dialogue: 0,0:06:06.48,0:06:14.15,英文,,0,0,0,,It's all the same thing, associating something with something else, even though every language, every person seems to have their own vernacular for it.
Dialogue: 0,0:06:14.15,0:06:18.41,英文,,0,0,0,,It really is just the same idea, this associating of something with something else.
Dialogue: 0,0:06:18.41,0:06:19.63,英文,,0,0,0,,We'll continue to see.
Dialogue: 0,0:06:19.63,0:06:30.79,英文,,0,0,0,,And here, to be concrete, were the HTTP lines of text that were in those virtual envelopes, if you will, if I were indeed trying to search for something like cats on Google.
Dialogue: 0,0:06:30.79,0:06:40.05,英文,,0,0,0,,This, recall, was the message that got sent to the server by my browser in order to tell Google to please search for not dogs, but in this case, cats.
Dialogue: 0,0:06:40.05,0:06:42.35,英文,,0,0,0,,Now, what is HTTP server been doing for us?
Dialogue: 0,0:06:42.35,0:06:47.58,英文,,0,0,0,,Well, it's just been serving up HTML files, CSS files, maybe some JS or JavaScript files.
Dialogue: 0,0:06:47.58,0:06:51.16,英文,,0,0,0,,But it has been ignoring any HTTP parameters.
Dialogue: 0,0:06:51.16,0:06:53.46,英文,,0,0,0,,HTTP server does not take user input.
Dialogue: 0,0:06:53.46,0:06:54.04,英文,,0,0,0,,Why?
Dialogue: 0,0:06:54.04,0:06:55.16,英文,,0,0,0,,Well, what's it going to do with it?
Dialogue: 0,0:06:55.16,0:06:56.79,英文,,0,0,0,,Because you already wrote the HTML.
Dialogue: 0,0:06:56.79,0:06:57.99,英文,,0,0,0,,You already wrote the CSS.
Dialogue: 0,0:06:57.99,0:07:03.09,英文,,0,0,0,,There's no decisions to be made until we introduce a proper programming language on the server.
Dialogue: 0,0:07:03.09,0:07:09.22,英文,,0,0,0,,And so we're going to move away now from this simple HTTP server program and introduce you to your own server.
Dialogue: 0,0:07:09.22,0:07:20.51,英文,,0,0,0,,That's going to handle the parsing, that is, the extraction of these key value pairs so that you and I don't have to write Python code all of a sudden that analyzes this stuff, figures out what pages requested the key value pairs.
Dialogue: 0,0:07:20.51,0:07:24.84,英文,,0,0,0,,All of that we're still going to get for free by just using the right framework.
Dialogue: 0,0:07:24.84,0:07:27.58,英文,,0,0,0,,And so today, we revisit Python.
Dialogue: 0,0:07:27.58,0:07:30.16,英文,,0,0,0,,which we've now used in some form in the past few weeks.
Dialogue: 0,0:07:30.16,0:07:34.28,英文,,0,0,0,,And indeed, it's kind of been the glue that allows us to stitch together some of our own logic.
Dialogue: 0,0:07:34.28,0:07:35.56,英文,,0,0,0,,We saw it with SQL.
Dialogue: 0,0:07:35.56,0:07:39.38,英文,,0,0,0,,We're going to now see it with HTML, CSS, and even JavaScript if we want.
Dialogue: 0,0:07:39.38,0:07:43.12,英文,,0,0,0,,And we're also going to see another language today, not a programming language, called Jinja.
Dialogue: 0,0:07:43.12,0:07:56.19,英文,,0,0,0,,And this is going to be a common paradigm in the real world, whereby different languages, different libraries, different frameworks often borrow from each other, or they use technologies that someone else wrote just so they don't have to reinvent that wheel.
Dialogue: 0,0:07:56.19,0:07:57.87,英文,,0,0,0,,So Flask is just a framework.
Dialogue: 0,0:07:57.87,0:07:59.27,英文,,0,0,0,,That is a third-party library.
Dialogue: 0,0:07:59.27,0:08:00.71,英文,,0,0,0,,It's pretty popular nowadays.
Dialogue: 0,0:08:00.71,0:08:03.57,英文,,0,0,0,,It's relatively simple, which is why we use it in CS50.
Dialogue: 0,0:08:03.57,0:08:09.35,英文,,0,0,0,,If you've programmed before CS50, Django is another popular framework or library in the Python space.
Dialogue: 0,0:08:09.35,0:08:10.53,英文,,0,0,0,,But it's a little more complicated.
Dialogue: 0,0:08:10.53,0:08:11.97,英文,,0,0,0,,So we focus on Flask.
Dialogue: 0,0:08:11.97,0:08:14.63,英文,,0,0,0,,And Jinja, we'll see, is not a programming language.
Dialogue: 0,0:08:14.63,0:08:22.70,英文,,0,0,0,,It's just going to be some syntax, thankfully familiar with curly braces, that allow us to use placeholders in our actual web pages.
Dialogue: 0,0:08:22.70,0:08:27.34,英文,,0,0,0,,Again, you'll wrap your minds all eventually around where the lines are among these various technologies.
Dialogue: 0,0:08:27.34,0:08:28.96,英文,,0,0,0,,But these are not the interesting ideas.
Dialogue: 0,0:08:28.96,0:08:32.24,英文,,0,0,0,,The interesting ideas are the ones we'll focus on in code.
Dialogue: 0,0:08:32.24,0:08:48.39,英文,,0,0,0,,But starting today, instead of running HTTP server to serve up a static website, we'll have you start running literally Flask space run in your terminal window to run your own web server that's implemented in Python using this Flask framework.
Dialogue: 0,0:08:48.39,0:08:54.72,英文,,0,0,0,,So Bootstrap was a library for making your CSS and JavaScript prettier and more interactive.
Dialogue: 0,0:08:54.72,0:09:02.22,英文,,0,0,0,,Flask is a framework or library for just making your Python code more pleasant to use, since you're borrowing features from someone else.
Dialogue: 0,0:09:02.22,0:09:04.06,英文,,0,0,0,,All right, so how can we go about doing this?
Dialogue: 0,0:09:04.06,0:09:11.83,英文,,0,0,0,,Well, if you were to write your very own web application, your own Amazon.com, your own Google.com in Python using Flask,
Dialogue: 0,0:09:11.83,0:09:20.29,英文,,0,0,0,,Minimally, you need to have a file called app.py by convention, which is where all your Python code goes, and then a folder called templates, which is where all of your templates go.
Dialogue: 0,0:09:20.29,0:09:23.13,英文,,0,0,0,,And for now, your templates are just your HTML files.
Dialogue: 0,0:09:23.13,0:09:31.19,英文,,0,0,0,,So if we're going to now start building more interesting interactive things like google.com or amazon.com, we need to be able to execute code on the server.
Dialogue: 0,0:09:31.19,0:09:32.27,英文,,0,0,0,,And so this is the convention.
Dialogue: 0,0:09:32.27,0:09:34.63,英文,,0,0,0,,It's not index.html anymore, necessarily.
Dialogue: 0,0:09:34.63,0:09:36.95,英文,,0,0,0,,It's these two things at the top level.
Dialogue: 0,0:09:36.95,0:09:39.87,英文,,0,0,0,,With that said, we'll quickly see that there's some other conventions.
Dialogue: 0,0:09:39.87,0:09:52.70,英文,,0,0,0,,And in my examples online and in the problem set 9, you'll see another file called requirements.txt, which is just a text file that allows you to enumerate all of the third-party libraries your application might want to use.
Dialogue: 0,0:09:52.70,0:09:57.88,英文,,0,0,0,,It's a convention so that the server can automatically install things for you without you having to do it manually.
Dialogue: 0,0:09:57.88,0:10:01.32,英文,,0,0,0,,And then static is going to be where literally your static content goes.
Dialogue: 0,0:10:01.32,0:10:08.12,英文,,0,0,0,,So if you've got images for your web application, if you've got JavaScript files, CSS files by convention that goes in static.
Dialogue: 0,0:10:08.12,0:10:09.38,英文,,0,0,0,,These are just conventions.
Dialogue: 0,0:10:09.38,0:10:12.71,英文,,0,0,0,,All of this can be changed, but this is the way to do things.
Dialogue: 0,0:10:12.71,0:10:14.93,英文,,0,0,0,,So we'll introduce you to the defaults.
Dialogue: 0,0:10:14.93,0:10:16.71,英文,,0,0,0,,All right, so what does this mean?
Dialogue: 0,0:10:16.71,0:10:25.58,英文,,0,0,0,,How, for instance, could I go about implementing my own web application using Python that somehow spits out a message like, hello, world?
Dialogue: 0,0:10:25.58,0:10:28.32,英文,,0,0,0,,All right, well, turns out just this.
Dialogue: 0,0:10:28.32,0:10:39.06,英文,,0,0,0,,Now, we'll tease this apart in just a moment, but this is the content of a sample app.py file that apparently uses some library stuff, like familiar syntax from something, import something else.
Dialogue: 0,0:10:39.06,0:10:42.30,英文,,0,0,0,,We've seen that before with CSVs and other libraries.
Dialogue: 0,0:10:42.30,0:10:45.49,英文,,0,0,0,,This is somewhat new syntax, but it's kind of copy-paste for now.
Dialogue: 0,0:10:45.49,0:10:50.31,英文,,0,0,0,,This is definitely new syntax and kind of weird with the at sign here, but we'll see this again and again today.
Dialogue: 0,0:10:50.31,0:10:53.89,英文,,0,0,0,,And it's just copy-paste initially until you understand what it's doing for you.
Dialogue: 0,0:10:53.89,0:11:02.95,英文,,0,0,0,,But at least there's some familiar stuff here, like index.html is still going to be with us, but it's going to be up to us when and how to show it to the user.
Dialogue: 0,0:11:02.95,0:11:11.72,英文,,0,0,0,,So let's make this more real. Let me go over to VS Code here, and let me go ahead and create a How about we'll do this in hello.
Dialogue: 0,0:11:11.72,0:11:15.04,英文,,0,0,0,,Let me do mkdir hello to make a new folder called hello.
Dialogue: 0,0:11:15.04,0:11:21.11,英文,,0,0,0,,And I'm going to cd into it just to isolate all of these files to the same directory so that we have different apps today and different folders.
Dialogue: 0,0:11:21.11,0:11:25.13,英文,,0,0,0,,And now I'm going to do code of, let's do this, actually.
Dialogue: 0,0:11:25.13,0:11:28.07,英文,,0,0,0,,Let's do our mkdir templates.html.
Dialogue: 0,0:11:28.07,0:11:29.83,英文,,0,0,0,,Sorry, not templates.html.
Dialogue: 0,0:11:29.83,0:11:32.95,英文,,0,0,0,,Let me rename that to templates using the mv command.
Dialogue: 0,0:11:32.95,0:11:34.39,英文,,0,0,0,,This has nothing to do with web programming.
Dialogue: 0,0:11:34.39,0:11:39.22,英文,,0,0,0,,This is me making typos. So if I type ls now, I've got a folder called templates.
Dialogue: 0,0:11:39.22,0:11:43.52,英文,,0,0,0,,All right, in there, let's create a file called index.html.
Dialogue: 0,0:11:43.52,0:11:47.02,英文,,0,0,0,,That is going to be super simple and pretty much copy-paste from last week.
Dialogue: 0,0:11:47.02,0:11:48.56,英文,,0,0,0,,Let me hide my terminal window.
Dialogue: 0,0:11:48.56,0:11:53.50,英文,,0,0,0,,And let me just very quickly whip up a simple Hello World page using my HTML tag.
Dialogue: 0,0:11:53.50,0:11:59.21,英文,,0,0,0,,Lang will equal English. Then inside of this, I'm going to have a head tag.
Dialogue: 0,0:11:59.21,0:12:01.13,英文,,0,0,0,,Inside of this, I'm going to have a title tag.
Dialogue: 0,0:12:01.13,0:12:03.45,英文,,0,0,0,,And I'm just going to call this thing hello.
Dialogue: 0,0:12:03.45,0:12:04.91,英文,,0,0,0,,I'm going to then have a body.
Dialogue: 0,0:12:04.91,0:12:08.45,英文,,0,0,0,,And in this, I'm only going to say something simple like hello, world.
Dialogue: 0,0:12:08.45,0:12:11.92,英文,,0,0,0,,And just so this is mobile-friendly, recall that we touched on these meta tags.
Dialogue: 0,0:12:11.92,0:12:19.62,英文,,0,0,0,,So just in case you, after class, play with your mobile device instead of your laptop, I'll do name equals quote, unquote, viewport.
Dialogue: 0,0:12:19.62,0:12:23.10,英文,,0,0,0,,Viewport, and then content equals, and I never remember this.
Dialogue: 0,0:12:23.10,0:12:24.98,英文,,0,0,0,,I'm literally reading it off of a cheat sheet.
Dialogue: 0,0:12:24.98,0:12:27.86,英文,,0,0,0,,Initial scale equals 1.
Dialogue: 0,0:12:27.86,0:12:30.11,英文,,0,0,0,,Width equals device width.
Dialogue: 0,0:12:30.11,0:12:36.97,英文,,0,0,0,,And this is just this magical incantation that says to the browser, size things appropriately for the size of the device.
Dialogue: 0,0:12:36.97,0:12:39.05,英文,,0,0,0,,It blows up the font sizes a bit.
Dialogue: 0,0:12:39.05,0:12:41.21,英文,,0,0,0,,All right, so that's what I would have done last week.
Dialogue: 0,0:12:41.21,0:12:45.13,英文,,0,0,0,,And I would have served this web page by running HTTP server in the same directory.
Dialogue: 0,0:12:45.13,0:12:46.85,英文,,0,0,0,,And boom, I would see that HTML.
Dialogue: 0,0:12:46.85,0:12:50.35,英文,,0,0,0,,But let's now start to take some control over the user's experience.
Dialogue: 0,0:12:50.35,0:12:53.77,英文,,0,0,0,,And for now, it's going to be underwhelming. It's just going to always say, hello, world.
Dialogue: 0,0:12:53.77,0:12:59.12,英文,,0,0,0,,But in a moment, version 2 is going to say, hello, David, or hello, Carter, a bit more dynamically.
Dialogue: 0,0:12:59.12,0:13:02.48,英文,,0,0,0,,And we'll quickly escalate from there to just more interesting
Dialogue: 0,0:13:02.48,0:13:06.50,英文,,0,0,0,,Applications as well, culminating with things like cookies and shopping carts and the like.
Dialogue: 0,0:13:06.50,0:13:08.94,英文,,0,0,0,,So let me go back into my terminal window.
Dialogue: 0,0:13:08.94,0:13:13.35,英文,,0,0,0,,And as promised, let me create another file called app.py.
Dialogue: 0,0:13:13.35,0:13:18.95,英文,,0,0,0,,And this is where now I need to implement the web server I'm going to run using this Flask framework.
Dialogue: 0,0:13:18.95,0:13:24.28,英文,,0,0,0,,And for now, I'm just going to kind of do some copy-paste from what we saw on the slide a moment ago.
Dialogue: 0,0:13:24.28,0:13:34.88,英文,,0,0,0,,From the Flask library, which we've pre-installed for you, I'm going to import a function called Flask, capital F. It's subtle, but it's important there.
Dialogue: 0,0:13:34.88,0:13:42.15,英文,,0,0,0,,And I'm also going to import a few other things, a function called renderTemplate and another variable called request.
Dialogue: 0,0:13:42.15,0:13:47.89,英文,,0,0,0,,And the only way I know this is from having taught this before, read the documentation, followed a tutorial.
Dialogue: 0,0:13:47.89,0:13:50.92,英文,,0,0,0,,You wouldn't know this unless someone told you or you read how to do this.
Dialogue: 0,0:13:50.92,0:14:01.06,英文,,0,0,0,,But what this means is that this library called Flask has three things in it, a function called Flask, capital F, a function called render template, and a variable built into it called request.
Dialogue: 0,0:14:01.06,0:14:05.71,英文,,0,0,0,,And this is going to be all the building blocks I need to implement my own web server.
Dialogue: 0,0:14:05.71,0:14:11.67,英文,,0,0,0,,The convention in Flask when you want to create a web app in Python is you create a variable by convention called app.
Dialogue: 0,0:14:11.67,0:14:21.62,英文,,0,0,0,,And then you assign it the return value of that Flask function, capital F, and pass into it underscore, underscore, name, underscore, underscore, which is weird.
Dialogue: 0,0:14:21.62,0:14:22.98,英文,,0,0,0,,But we have seen this before.
Dialogue: 0,0:14:22.98,0:14:28.71,英文,,0,0,0,,A few weeks ago, anyone recall when and why we mentioned underscore, underscore, name, underscore, underscore?
Dialogue: 0,0:14:35.79,0:14:48.61,英文,,0,0,0,,Yeah, if we wanted to check if the name of the file was itself main so that we avoided a situation where if you're writing your own library code, you don't want your code to be executed automatically.
Dialogue: 0,0:14:48.61,0:14:51.32,英文,,0,0,0,,You want to potentially execute the main function.
Dialogue: 0,0:14:51.32,0:14:53.56,英文,,0,0,0,,And that was a solution to that problem here.
Dialogue: 0,0:14:53.56,0:14:55.70,英文,,0,0,0,,For today's purposes, this is just the way you do it.
Dialogue: 0,0:14:55.70,0:14:58.70,英文,,0,0,0,,Underscore, underscore, name, underscore, underscore refers to the current file.
Dialogue: 0,0:14:58.70,0:15:03.10,英文,,0,0,0,,And so this is just a little trick that says, turn this file into a Flask application.
Dialogue: 0,0:15:03.10,0:15:05.64,英文,,0,0,0,,That's all it is, and for now.
Dialogue: 0,0:15:05.64,0:15:07.05,英文,,0,0,0,,That line suffices.
Dialogue: 0,0:15:07.05,0:15:08.73,英文,,0,0,0,,All right, what do I want to do after that?
Dialogue: 0,0:15:08.73,0:15:10.83,英文,,0,0,0,,Well, now I'm in charge of the web server.
Dialogue: 0,0:15:10.83,0:15:19.43,英文,,0,0,0,,I need to write the code that decides, based on the browser's request, what file or files I'm going to send from the server to the browser.
Dialogue: 0,0:15:19.43,0:15:23.00,英文,,0,0,0,,Last week, HTTP server did all of this for us, just based on the file name.
Dialogue: 0,0:15:23.00,0:15:25.90,英文,,0,0,0,,But today, I'm going to take over control over that process.
Dialogue: 0,0:15:25.90,0:15:27.54,英文,,0,0,0,,And the way I do that is as follows.
Dialogue: 0,0:15:27.54,0:15:32.52,英文,,0,0,0,,I say app.route with, weirdly, an at sign in front of it.
Dialogue: 0,0:15:32.52,0:15:34.63,英文,,0,0,0,,This is known in Python as a decorator.
Dialogue: 0,0:15:34.63,0:15:38.93,英文,,0,0,0,,And it's a feature of Python, not a flask that we just didn't introduce in weeks past.
Dialogue: 0,0:15:38.93,0:15:42.93,英文,,0,0,0,,But it's a special, it's a handy trick to do what we're about to do.
Dialogue: 0,0:15:42.93,0:15:45.91,英文,,0,0,0,,The route I want to define is, quote unquote, slash.
Dialogue: 0,0:15:45.91,0:15:54.10,英文,,0,0,0,,So that is, here is code I want the server to execute whenever a user visits forward slash, the default page of the website.
Dialogue: 0,0:15:54.10,0:15:55.92,英文,,0,0,0,,Well, what code do I want them to execute?
Dialogue: 0,0:15:55.92,0:15:57.84,英文,,0,0,0,,Well, I want them to execute a function.
Dialogue: 0,0:15:57.84,0:16:00.18,英文,,0,0,0,,And I can, therefore, define in Python a function.
Dialogue: 0,0:16:00.18,0:16:08.11,英文,,0,0,0,,I can technically call this thing anything I want, x or y or z. But because they're accessing the default page, otherwise known as the index of the site,
Dialogue: 0,0:16:08.11,0:16:10.83,英文,,0,0,0,,I'm going to just more reasonably call this function index.
Dialogue: 0,0:16:10.83,0:16:13.01,英文,,0,0,0,,But just a convention, you could call it anything you want.
Dialogue: 0,0:16:13.01,0:16:16.57,英文,,0,0,0,,But x, y, or z is probably a bad stylistic choice.
Dialogue: 0,0:16:16.57,0:16:18.75,英文,,0,0,0,,It doesn't need to take any arguments in this case.
Dialogue: 0,0:16:18.75,0:16:31.09,英文,,0,0,0,,And the only thing this code, this function, is going to do is, for now, let's go ahead and have it return hello, world, quote, unquote, and that's it.
Dialogue: 0,0:16:31.09,0:16:34.47,英文,,0,0,0,,All right, now let me go into my terminal window.
Dialogue: 0,0:16:34.47,0:16:39.58,英文,,0,0,0,,Let me go ahead and do flask run in the same directory that has app.py and hit Enter.
Dialogue: 0,0:16:39.58,0:16:43.34,英文,,0,0,0,,I'm going to see some cryptic output, but including a URL of my code space.
Dialogue: 0,0:16:43.34,0:16:48.64,英文,,0,0,0,,And if I open that URL after hovering over it, I'll indeed see Hello World, as you might hope.
Dialogue: 0,0:16:48.64,0:16:49.58,英文,,0,0,0,,But let me do this.
Dialogue: 0,0:16:49.58,0:16:53.79,英文,,0,0,0,,Let me go ahead and right-click on the page and click View Page Source.
Dialogue: 0,0:16:53.79,0:16:59.65,英文,,0,0,0,,Which, if you haven't done before, shows you all of the HTML for a page, however pretty or messy it is. And that's it.
Dialogue: 0,0:16:59.65,0:17:01.57,英文,,0,0,0,,There's no HTML that I've spit out.
Dialogue: 0,0:17:01.57,0:17:04.25,英文,,0,0,0,,It's just quote, unquote, hello world.
Dialogue: 0,0:17:04.25,0:17:08.91,英文,,0,0,0,,Well, if I actually want to spit out a full web page, which is not a big deal here, because who cares?
Dialogue: 0,0:17:08.91,0:17:10.48,英文,,0,0,0,,It's just the text anyway.
Dialogue: 0,0:17:10.48,0:17:14.62,英文,,0,0,0,,But if I want to spit out a whole file, let me do this.
Dialogue: 0,0:17:14.62,0:17:21.78,英文,,0,0,0,,I want to return, essentially, the contents of index.html, which have all of the tags I want, the mobile-friendly stuff and all of that.
Dialogue: 0,0:17:21.78,0:17:25.76,英文,,0,0,0,,Well, I can't just return index.html, but I can return this.
Dialogue: 0,0:17:25.76,0:17:30.26,英文,,0,0,0,,Render template, quote, unquote, index.html.
Dialogue: 0,0:17:30.26,0:17:36.83,英文,,0,0,0,,And per the documentation for Flask, this render template function will go find that file for me in my templates folder by convention.
Dialogue: 0,0:17:36.83,0:17:38.03,英文,,0,0,0,,It will open it up.
Dialogue: 0,0:17:38.03,0:17:41.37,英文,,0,0,0,,And then it will spit the whole thing out to the browser for me.
Dialogue: 0,0:17:41.37,0:17:45.98,英文,,0,0,0,,So I can keep all my HTML in one place and all my Python code in this one place.
Dialogue: 0,0:17:45.98,0:17:53.74,英文,,0,0,0,,So now, if I go back to my browser and reload, I don't think I'll really see a difference, because it's the same text ultimately.
Dialogue: 0,0:17:53.74,0:17:56.05,英文,,0,0,0,,But if I view page source now.
Dialogue: 0,0:17:56.05,0:18:01.47,英文,,0,0,0,,Notice that, ah, there is all of the HTML that was just sent to the browser.
Dialogue: 0,0:18:01.47,0:18:16.91,英文,,0,0,0,,So this is only to say we have the building blocks, the puzzle pieces, if you will, via which to now store all of our HTML in one place, and presumably CSS, JavaScript, and so forth, but then serve up whatever we want, even though I'm just blindly spitting out index.html.
Dialogue: 0,0:18:16.91,0:18:19.61,英文,,0,0,0,,So before we proceed, any questions on this?
Dialogue: 0,0:18:19.61,0:18:25.88,英文,,0,0,0,,Which, again, I claim is like my manual version of what HTTP server was doing for us automatically last week.
Dialogue: 0,0:18:25.88,0:18:28.28,英文,,0,0,0,,But this is how you do it yourself.
Dialogue: 0,0:18:28.28,0:18:30.69,英文,,0,0,0,,Any questions?
Dialogue: 0,0:18:30.69,0:18:36.91,英文,,0,0,0,,All right, well, let's make it more interesting, which we could not do with HTTP server and HTML alone.
Dialogue: 0,0:18:36.91,0:18:39.90,英文,,0,0,0,,Why don't we go ahead and do this?
Dialogue: 0,0:18:39.90,0:18:41.48,英文,,0,0,0,,Let me visit the same URL.
Dialogue: 0,0:18:41.48,0:18:42.64,英文,,0,0,0,,And I'm going to zoom in.
Dialogue: 0,0:18:42.64,0:18:44.94,英文,,0,0,0,,And your URL will differ from my code space.
Dialogue: 0,0:18:44.94,0:18:46.56,英文,,0,0,0,,But it's going to end similarly here.
Dialogue: 0,0:18:46.56,0:18:49.04,英文,,0,0,0,,I'm going to do slash question mark.
Dialogue: 0,0:18:49.04,0:18:54.28,英文,,0,0,0,,Name equals David, for instance, or Q equals cats, or name equals Carter.
Dialogue: 0,0:18:54.28,0:19:02.65,英文,,0,0,0,,Any key value pair I want, I'm going to append after a slash and a question mark, thereby providing user input to the server, albeit in a very user-unfriendly way.
Dialogue: 0,0:19:02.65,0:19:04.81,英文,,0,0,0,,No one's going to normally do this in their browser.
Dialogue: 0,0:19:04.81,0:19:06.85,英文,,0,0,0,,Enter. Nothing changes here.
Dialogue: 0,0:19:06.85,0:19:10.11,英文,,0,0,0,,It just says, hello, world. But wouldn't it be nice if it says, hello, David?
Dialogue: 0,0:19:10.11,0:19:17.62,英文,,0,0,0,,Or equivalently, if I zoom in here again and change David to Carter and hit Enter, wouldn't it be nice if it says, hello, Carter, instead?
Dialogue: 0,0:19:17.62,0:19:19.38,英文,,0,0,0,,So we need some dynamism there.
Dialogue: 0,0:19:19.38,0:19:22.38,英文,,0,0,0,,And here's where now Python is going to be our friend.
Dialogue: 0,0:19:22.38,0:19:36.39,英文,,0,0,0,,If I want to access. the HTTP parameters that the user has provided via the URL, be it q equals cats or name equals David, I can use this special variable I already preemptively imported earlier.
Dialogue: 0,0:19:36.39,0:19:37.83,英文,,0,0,0,,And I can do this.
Dialogue: 0,0:19:37.83,0:19:47.53,英文,,0,0,0,,If there is an HTTP parameter called name in what I'm going to call request.args, then I'm going to go ahead and create a variable called name.
Dialogue: 0,0:19:47.53,0:19:51.54,英文,,0,0,0,,And I'm going to set it equal to request.args bracket name.
Dialogue: 0,0:19:51.54,0:20:00.54,英文,,0,0,0,,Else, if there is no quote, unquote, name key in this special variable called request.args, I'm going to just assume that the user's name is world by default.
Dialogue: 0,0:20:00.54,0:20:01.66,英文,,0,0,0,,Now, what's going on here?
Dialogue: 0,0:20:01.66,0:20:06.43,英文,,0,0,0,,Well, it turns out that Flask provides us with this special variable called request.args.
Dialogue: 0,0:20:06.43,0:20:12.67,英文,,0,0,0,,And in there is all of the key value pairs that might have come in via the URL.
Dialogue: 0,0:20:12.67,0:20:19.30,英文,,0,0,0,,So if you had to guess, What data type is request.args?
Dialogue: 0,0:20:19.30,0:20:20.02,英文,,0,0,0,,That's its name.
Dialogue: 0,0:20:20.02,0:20:21.40,英文,,0,0,0,,And here it is in context.
Dialogue: 0,0:20:21.40,0:20:23.92,英文,,0,0,0,,Line 9 might provide a clue.
Dialogue: 0,0:20:23.92,0:20:28.84,英文,,0,0,0,,In Python, what data type might request.args be?
Dialogue: 0,0:20:28.84,0:20:31.04,英文,,0,0,0,,Yeah?
Dialogue: 0,0:20:31.04,0:20:35.94,英文,,0,0,0,,It's not going to be an array or a list, because those are always, in every language we've seen, numerically indexed.
Dialogue: 0,0:20:35.94,0:20:40.48,英文,,0,0,0,,But you're close. Someone else?
Dialogue: 0,0:20:40.48,0:20:41.36,英文,,0,0,0,,It's a dictionary.
Dialogue: 0,0:20:41.36,0:20:50.55,英文,,0,0,0,,So a dictionary is similar syntactically to a list in Python, but instead of numeric indices like 0, 1, 2, you can literally use strings like quote, unquote, name.
Dialogue: 0,0:20:50.55,0:20:55.11,英文,,0,0,0,,Now, that's a bit of a white lie. It is a dictionary, but it's Flask's special fancy version of a dictionary.
Dialogue: 0,0:20:55.11,0:20:58.89,英文,,0,0,0,,But the syntax via which you can access it is exactly the same.
Dialogue: 0,0:20:58.89,0:21:00.12,英文,,0,0,0,,And actually, this is a typo.
Dialogue: 0,0:21:00.12,0:21:01.78,英文,,0,0,0,,I didn't mean to say names there.
Dialogue: 0,0:21:01.78,0:21:03.72,英文,,0,0,0,,I meant to say name singular.
Dialogue: 0,0:21:03.72,0:21:06.10,英文,,0,0,0,,But otherwise, I think the code is correct.
Dialogue: 0,0:21:06.10,0:21:10.93,英文,,0,0,0,,This is going to, on line 8, check if there's a key called name in request.args.
Dialogue: 0,0:21:10.93,0:21:13.89,英文,,0,0,0,,And if so, it's going to set it equal to that value.
Dialogue: 0,0:21:13.89,0:21:16.13,英文,,0,0,0,,Otherwise, it's going to default to world.
Dialogue: 0,0:21:16.13,0:21:18.73,英文,,0,0,0,,I deliberately did not do this.
Dialogue: 0,0:21:18.73,0:21:30.96,英文,,0,0,0,,I added this if else and did not do this y. What error might happen if I just blindly grab name?
Dialogue: 0,0:21:30.96,0:21:38.73,英文,,0,0,0,,Exactly, if there was nothing at the end of the URL that was of the form question mark name equals someone, then there would be no name key.
Dialogue: 0,0:21:38.73,0:21:46.66,英文,,0,0,0,,And this is a couple weeks back, but this would give you one of those annoying key errors when you get a trace back because you screwed up because you used a string that doesn't exist.
Dialogue: 0,0:21:46.66,0:21:51.36,英文,,0,0,0,,That's why I'm just proactively trying to avoid that situation, just like I might have a couple of weeks ago.
Dialogue: 0,0:21:51.36,0:21:55.23,英文,,0,0,0,,So even though it's more verbose, this is just much more defensive
Dialogue: 0,0:21:55.23,0:21:59.09,英文,,0,0,0,,So that I don't accidentally index into a dictionary where there is no key.
Dialogue: 0,0:21:59.09,0:22:02.34,英文,,0,0,0,,But we'll see how we can tighten this up to be not four lines, but one.
Dialogue: 0,0:22:02.34,0:22:04.44,英文,,0,0,0,,But I think now I can do this.
Dialogue: 0,0:22:04.44,0:22:11.07,英文,,0,0,0,,Wouldn't it be nice if now in my index.html file, which recall is in my templates folder,
Dialogue: 0,0:22:11.07,0:22:16.05,英文,,0,0,0,,Wouldn't it be nice if I could do the equivalent in C of a %s here, for instance?
Dialogue: 0,0:22:16.05,0:22:19.17,英文,,0,0,0,,Or in Python, something like this name.
Dialogue: 0,0:22:19.17,0:22:20.55,英文,,0,0,0,,Well, it's close.
Dialogue: 0,0:22:20.55,0:22:25.84,英文,,0,0,0,,And this is just because different humans invent different languages, invent different frameworks.
Dialogue: 0,0:22:25.84,0:22:33.74,英文,,0,0,0,,The syntax for this in Flask is to actually do two curly braces and then name.
Dialogue: 0,0:22:33.74,0:22:48.80,英文,,0,0,0,,Why? It's just probably someone figured, what are the odds that a normal person is ever going to use two curly braces at once versus just one? So this is probably decreasing the probability that people actually want to output literal curly braces like this.I'm going to show you how to do that in a minute.
Dialogue: 0,0:22:48.80,0:22:50.96,英文,,0,0,0,,It's similar in spirit to Python's f strings.
Dialogue: 0,0:22:50.96,0:22:55.22,英文,,0,0,0,,It's similar in spirit to C's percent s. It's similar in spirit to SQL's question marks.
Dialogue: 0,0:22:55.22,0:22:57.40,英文,,0,0,0,,Same idea, slightly different syntax.
Dialogue: 0,0:22:57.40,0:22:59.20,英文,,0,0,0,,And this there is Jinja.
Dialogue: 0,0:22:59.20,0:23:01.62,英文,,0,0,0,,So it's not programming code, per se.
Dialogue: 0,0:23:01.62,0:23:05.50,英文,,0,0,0,,It's just a template. And indeed, that's why this folder is called templates.
Dialogue: 0,0:23:05.50,0:23:09.50,英文,,0,0,0,,It is sort of like a blueprint for what I want to be spit out to the user.
Dialogue: 0,0:23:09.50,0:23:14.13,英文,,0,0,0,,But I've got these placeholders, like this variable, that I want to plug into that value.
Dialogue: 0,0:23:14.13,0:23:16.76,英文,,0,0,0,,Now, this alone is not enough.
Dialogue: 0,0:23:16.76,0:23:22.74,英文,,0,0,0,,Watch what happens if I go back to my other browser and I reload the page after changing up here.
Dialogue: 0,0:23:22.74,0:23:24.40,英文,,0,0,0,,Let's do name equals David again.
Dialogue: 0,0:23:24.40,0:23:25.51,英文,,0,0,0,,Enter.
Dialogue: 0,0:23:25.51,0:23:29.21,英文,,0,0,0,,Nothing outputs after the hello comma.
Dialogue: 0,0:23:29.21,0:23:33.21,英文,,0,0,0,,So it seems that the name variable doesn't exist yet.
Dialogue: 0,0:23:33.21,0:23:37.27,英文,,0,0,0,,And that's why, indeed, if I do viewPageSource, you can see what was sent to the browser.
Dialogue: 0,0:23:37.27,0:23:39.25,英文,,0,0,0,,Something's wrong with my placeholder.
Dialogue: 0,0:23:39.25,0:23:43.03,英文,,0,0,0,,But I just need to be a little more explicit as to what I want to send where.
Dialogue: 0,0:23:43.03,0:23:55.10,英文,,0,0,0,,So it turns out that the renderTemplate function takes not just one argument, the name of the template you want to spit out, but it takes, after that, with commas, all of the placeholders you want to plug in.
Dialogue: 0,0:23:55.10,0:24:11.95,英文,,0,0,0,,So for instance, if you want the placeholder to be this, literally placeholder inside of those curly braces, you can then specify as the second argument to render template a placeholder named argument equals whatever the name is.
Dialogue: 0,0:24:11.95,0:24:14.69,英文,,0,0,0,,So name is the variable in the lines above.
Dialogue: 0,0:24:14.69,0:24:18.65,英文,,0,0,0,,Placeholder is the name of my literal placeholder in the curly braces.
Dialogue: 0,0:24:18.65,0:24:29.66,英文,,0,0,0,,And so now if I go back to my browser and reload this with still question mark name equals David in the URL, now I indeed see hello, David.
Dialogue: 0,0:24:29.66,0:24:37.24,英文,,0,0,0,,And if I zoom in here, and let me move over here, let me type in Carter and hit Enter, now I see hello, Carter instead.
Dialogue: 0,0:24:37.24,0:24:43.42,英文,,0,0,0,,Now, this is a little unnecessary to explicitly call the placeholder placeholder, especially if you want to have two or three of them.
Dialogue: 0,0:24:43.42,0:24:45.20,英文,,0,0,0,,So you can actually call this anything you want.
Dialogue: 0,0:24:45.20,0:24:48.56,英文,,0,0,0,,And I'm going to change it back to name, which is a little more straightforward.
Dialogue: 0,0:24:48.56,0:24:52.93,英文,,0,0,0,,The only weird thing here is that now you'll see that you're writing code like this.
Dialogue: 0,0:24:52.93,0:24:53.79,英文,,0,0,0,,And this is correct.
Dialogue: 0,0:24:53.79,0:24:55.17,英文,,0,0,0,,And this is the norm.
Dialogue: 0,0:24:55.17,0:25:01.57,英文,,0,0,0,,It just looks weird. But the thing on the left of the equal sign is the placeholder you're using in the template.
Dialogue: 0,0:25:01.57,0:25:05.71,英文,,0,0,0,,The thing on the right can be any value you want, including a variable.
Dialogue: 0,0:25:05.71,0:25:15.68,英文,,0,0,0,,So even though I'm naming them exactly the same, which looks stupid, admittedly, this is what people tend to do, just because it's simpler than introducing another word like placeholder.
Dialogue: 0,0:25:15.68,0:25:20.13,英文,,0,0,0,,Any questions now on this?
Dialogue: 0,0:25:20.13,0:25:22.91,英文,,0,0,0,,Any questions on these placeholders?
Dialogue: 0,0:25:22.91,0:25:23.29,英文,,0,0,0,,No?
Dialogue: 0,0:25:23.29,0:25:23.61,英文,,0,0,0,,All right.
Dialogue: 0,0:25:23.61,0:25:29.08,英文,,0,0,0,,Well, let's tighten this up a little bit and see if we can't get things to be more dynamic still.
Dialogue: 0,0:25:29.08,0:25:40.54,英文,,0,0,0,,Let me propose now that instead of outputting, instead of using this condition, which made a very simple idea, like very verbose with four different lines, it turns out there's an easier way to do this.
Dialogue: 0,0:25:40.54,0:25:43.61,英文,,0,0,0,,You can actually still create a variable called name.
Dialogue: 0,0:25:43.61,0:25:46.47,英文,,0,0,0,,And you can set it equal to request.args.
Dialogue: 0,0:25:46.47,0:25:57.34,英文,,0,0,0,,But instead of just blindly indexing into that dictionary, it turns out that request.args comes with a function as well called get.
Dialogue: 0,0:25:57.34,0:26:02.07,英文,,0,0,0,,You can pass it an argument that tells you what value you want to get.
Dialogue: 0,0:26:02.07,0:26:09.47,英文,,0,0,0,,And by default, if there is no key called name in that dictionary, this function will not throw a key error.
Dialogue: 0,0:26:09.47,0:26:13.48,英文,,0,0,0,,It's just going to return none, an O-N-E, the special value in Python.
Dialogue: 0,0:26:13.48,0:26:17.62,英文,,0,0,0,,So it avoids a bug in your code, but it tightens up four lines into one.
Dialogue: 0,0:26:17.62,0:26:23.34,英文,,0,0,0,,But even nicer, if you read the documentation, the get function can also take an explicit default value.
Dialogue: 0,0:26:23.34,0:26:33.51,英文,,0,0,0,,So if you don't want none to be on the screen, like hello, comma, blank, or, I mean, that would be weird too, you can just put in a default value per the documentation of this function, like world.
Dialogue: 0,0:26:33.51,0:26:36.07,英文,,0,0,0,,So now we've gone from four lines to just one.
Dialogue: 0,0:26:36.07,0:26:37.57,英文,,0,0,0,,So arguably, it's better designed.
Dialogue: 0,0:26:37.57,0:26:43.42,英文,,0,0,0,,And if I go back to the browser now, still with Carter in the URL and hit reload, same thing happens.
Dialogue: 0,0:26:43.42,0:26:50.50,英文,,0,0,0,,But we'll notice this. Suppose I get rid of the name parameter altogether and hit Enter.
Dialogue: 0,0:26:50.50,0:26:52.74,英文,,0,0,0,,Now it goes to the default instead, world.
Dialogue: 0,0:26:52.74,0:26:57.42,英文,,0,0,0,,So it's just a little better, a little better designed than doing it the other way instead.
Dialogue: 0,0:26:57.42,0:27:01.74,英文,,0,0,0,,All right, how about we take things up one more notch, and how about
Dialogue: 0,0:27:01.74,0:27:06.34,英文,,0,0,0,,We introduced multiple routes and actually introduced, perhaps, a form to the mix.
Dialogue: 0,0:27:06.34,0:27:12.67,英文,,0,0,0,,Because, again, no normal person is going to visit a URL and add a slash and a question mark in their name.
Dialogue: 0,0:27:12.67,0:27:15.75,英文,,0,0,0,,That's not how browsers work. Well, that's how browsers work.
Dialogue: 0,0:27:15.75,0:27:17.93,英文,,0,0,0,,That's not how humans interact with browsers.
Dialogue: 0,0:27:17.93,0:27:20.43,英文,,0,0,0,,You and I use a form, typically, instead.
Dialogue: 0,0:27:20.43,0:27:27.47,英文,,0,0,0,,So now things can get a little more interesting when making our own web application, because maybe we could do something like this.
Dialogue: 0,0:27:27.47,0:27:29.71,英文,,0,0,0,,Let me go and zoom out again.
Dialogue: 0,0:27:29.71,0:27:31.79,英文,,0,0,0,,Let me go back to my code here.
Dialogue: 0,0:27:31.79,0:27:36.32,英文,,0,0,0,,And let me move this around and focus now on the index.html file.
Dialogue: 0,0:27:36.32,0:27:45.07,英文,,0,0,0,,Instead of just this placeholder, why don't we go ahead and give ourselves a form, like we've played with a little bit in the past, be it for Google or something else.
Dialogue: 0,0:27:45.07,0:27:46.60,英文,,0,0,0,,And let's do this.
Dialogue: 0,0:27:46.60,0:27:50.44,英文,,0,0,0,,Form. And inside of this form, let's have an input.
Dialogue: 0,0:27:50.44,0:27:53.24,英文,,0,0,0,,And the name of this input will be, quote unquote, name.
Dialogue: 0,0:27:53.24,0:27:54.54,英文,,0,0,0,,So that, too, is confusing.
Dialogue: 0,0:27:54.54,0:27:57.23,英文,,0,0,0,,But inputs have name attributes.
Dialogue: 0,0:27:57.23,0:27:58.69,英文,,0,0,0,,But this is a person's name.
Dialogue: 0,0:27:58.69,0:28:00.49,英文,,0,0,0,,So I'm saying name equals name here.
Dialogue: 0,0:28:00.49,0:28:03.51,英文,,0,0,0,,So just a messy world of semantics.
Dialogue: 0,0:28:03.51,0:28:07.20,英文,,0,0,0,,And let me go ahead and make this a text box by default.
Dialogue: 0,0:28:07.20,0:28:11.94,英文,,0,0,0,,And then let me give myself a button whose default type will be Submit.
Dialogue: 0,0:28:11.94,0:28:16.10,英文,,0,0,0,,And the name of this button will be Greet, for instance. So let's see what happens here.
Dialogue: 0,0:28:16.10,0:28:18.72,英文,,0,0,0,,But let me change app.py to just be the original simpler.
Dialogue: 0,0:28:18.72,0:28:20.93,英文,,0,0,0,,I'm not passing in any placeholders now.
Dialogue: 0,0:28:20.93,0:28:22.11,英文,,0,0,0,,And I'm going to even get rid of this.
Dialogue: 0,0:28:22.11,0:28:26.33,英文,,0,0,0,,I'm just going to rewind to the first version of this for simplicity. Let's now.
Dialogue: 0,0:28:26.33,0:28:28.99,英文,,0,0,0,,Change the URL to get rid of Carter and myself.
Dialogue: 0,0:28:28.99,0:28:31.43,英文,,0,0,0,,So we just go to slash and hit Enter.
Dialogue: 0,0:28:31.43,0:28:34.05,英文,,0,0,0,,And now we have a super simple form again.
Dialogue: 0,0:28:34.05,0:28:38.52,英文,,0,0,0,,All right, this is not super user-friendly, but there's some nice enhancements we can make, for instance.
Dialogue: 0,0:28:38.52,0:28:46.54,英文,,0,0,0,,Like we can, for instance, turn off autocomplete, especially if I want to type David and Carter manually and I don't want it finishing my thought during class.
Dialogue: 0,0:28:46.54,0:28:52.87,英文,,0,0,0,,We can do autofocus, which puts the cursor there blinking by default, which is nice because then the human doesn't have to deal with that.
Dialogue: 0,0:28:52.87,0:28:55.35,英文,,0,0,0,,And then we can even have a placeholder attribute.
Dialogue: 0,0:28:55.35,0:28:59.23,英文,,0,0,0,,Placeholder equals name so that it's like built-in instructions for this thing.
Dialogue: 0,0:28:59.23,0:29:05.54,英文,,0,0,0,,And so now if I go back to the other tab, nothing's changed yet because I have to download the HTML again, reload.
Dialogue: 0,0:29:05.54,0:29:06.96,英文,,0,0,0,,OK, now it's a little more user-friendly.
Dialogue: 0,0:29:06.96,0:29:08.66,英文,,0,0,0,,It says name in light gray.
Dialogue: 0,0:29:08.66,0:29:09.92,英文,,0,0,0,,The cursor is blinking.
Dialogue: 0,0:29:09.92,0:29:11.46,英文,,0,0,0,,And I'm sort of ready to go.
Dialogue: 0,0:29:11.46,0:29:15.00,英文,,0,0,0,,But this form hasn't been wired up to go anywhere yet.
Dialogue: 0,0:29:15.00,0:29:16.30,英文,,0,0,0,,And so let's do this.
Dialogue: 0,0:29:16.30,0:29:19.99,英文,,0,0,0,,Let's, for instance, say that the action of this form
Dialogue: 0,0:29:19.99,0:29:23.85,英文,,0,0,0,,It's not going to be something like Google.com, which we did last time with for cats.
Dialogue: 0,0:29:23.85,0:29:28.43,英文,,0,0,0,,I am now going to be both the front end and the back end of this website.
Dialogue: 0,0:29:28.43,0:29:31.87,英文,,0,0,0,,The front end is what the human sees, the web page, the graphics, the forms.
Dialogue: 0,0:29:31.87,0:29:37.65,英文,,0,0,0,,The back end is the stuff the human typically doesn't see, the Python code, the SQL code, the server itself.
Dialogue: 0,0:29:37.65,0:29:43.41,英文,,0,0,0,,But now I'm in control of both sides of the experience, the HTML and also the routes.
Dialogue: 0,0:29:43.41,0:29:46.54,英文,,0,0,0,,So let's just propose that we invent our own route.
Dialogue: 0,0:29:46.54,0:29:51.26,英文,,0,0,0,,And instead of calling it slash search, like Google does, let's call it slash greet.
Dialogue: 0,0:29:51.26,0:29:56.52,英文,,0,0,0,,And let me specify that the method this form will use, which is technically the default, will be get.
Dialogue: 0,0:29:56.52,0:30:02.47,英文,,0,0,0,,And confusingly, it is lowercase get, even though in the envelope we keep talking about virtually, it's actually capitals.
Dialogue: 0,0:30:02.47,0:30:06.26,英文,,0,0,0,,Again, left hand wasn't talking to right hand when these things were decided.
Dialogue: 0,0:30:06.26,0:30:14.67,英文,,0,0,0,,All right, so all I've done is create a web form that's going to submit whatever the text box value is to a route called slash greet.
Dialogue: 0,0:30:14.67,0:30:25.21,英文,,0,0,0,,By default, because there's no HTTP or HTTPS or no domain name, slash greet is going to be assumed to be not at google.com, but whatever my own server's URL is.
Dialogue: 0,0:30:25.21,0:30:29.56,英文,,0,0,0,,So whatever my code space's URL is, that's going to be the implicit prefix.
Dialogue: 0,0:30:29.56,0:30:32.06,英文,,0,0,0,,This slash greet is just the route.
Dialogue: 0,0:30:32.06,0:30:36.50,英文,,0,0,0,,So now let's go back to VS Code's app.py file.
Dialogue: 0,0:30:36.50,0:30:38.98,英文,,0,0,0,,How do I now stitch this together?
Dialogue: 0,0:30:38.98,0:30:41.60,英文,,0,0,0,,Well, I think we're good to go with index.html.
Dialogue: 0,0:30:41.60,0:30:47.41,英文,,0,0,0,,If index.html's purpose in life is just to spit out this form, we're done with one of my routes.
Dialogue: 0,0:30:47.41,0:30:56.35,英文,,0,0,0,,But if I want to have a second route, greet, that actually spits out some greeting to the user, well, let's prepare that template, too.
Dialogue: 0,0:30:56.35,0:30:59.13,英文,,0,0,0,,Let me go ahead and highlight all of this HTML.
Dialogue: 0,0:30:59.13,0:31:07.04,英文,,0,0,0,,Let me go back into my terminal window and into my hello directory, and then into my templates directory.
Dialogue: 0,0:31:07.04,0:31:15.88,英文,,0,0,0,,And let me create another template called greet.html, whose purpose in life will not be to show a form, but to greet the user with hello so-and-so.
Dialogue: 0,0:31:15.88,0:31:27.01,英文,,0,0,0,,So in this file, I'm going to paste all that same HTML, but I'm going to get rid of the form and essentially revert to our previous version, hello, comma, And then using the Jinja syntax, name.
Dialogue: 0,0:31:27.01,0:31:30.30,英文,,0,0,0,,So one template, index.html, is for the form.
Dialogue: 0,0:31:30.30,0:31:34.18,英文,,0,0,0,,The second template now is for the greeting of hello, comma, so and so.
Dialogue: 0,0:31:34.18,0:31:39.75,英文,,0,0,0,,But otherwise, these files, notice, are almost the same, except one has the form.
Dialogue: 0,0:31:39.75,0:31:41.23,英文,,0,0,0,,One has just the hello.
Dialogue: 0,0:31:41.23,0:31:43.59,英文,,0,0,0,,So now let's finish this up in app.py.
Dialogue: 0,0:31:43.59,0:31:47.03,英文,,0,0,0,,Let me go down here after a couple of blank lines stylistically.
Dialogue: 0,0:31:47.03,0:31:51.23,英文,,0,0,0,,Let me do app.route quote unquote slash greet.
Dialogue: 0,0:31:51.23,0:31:52.83,英文,,0,0,0,,But I could call this route anything I want.
Dialogue: 0,0:31:52.83,0:31:54.95,英文,,0,0,0,,I'm just using a reasonable verb.
Dialogue: 0,0:31:54.95,0:31:56.39,英文,,0,0,0,,Then let's define another function.
Dialogue: 0,0:31:56.39,0:32:01.31,英文,,0,0,0,,I could call the function anything I want, x, y, or z. I'm going to call it more reasonably greet.
Dialogue: 0,0:32:01.31,0:32:02.43,英文,,0,0,0,,No arguments.
Dialogue: 0,0:32:02.43,0:32:05.01,英文,,0,0,0,,And then now is the code where I want to render the template.
Dialogue: 0,0:32:05.01,0:32:09.80,英文,,0,0,0,,So I do return, render, template, greet.html.
Dialogue: 0,0:32:09.80,0:32:13.58,英文,,0,0,0,,But I need to do one more thing.
Dialogue: 0,0:32:13.58,0:32:18.86,英文,,0,0,0,,What else do I want to do if I want greet.html to have access to the human's name?
Dialogue: 0,0:32:18.86,0:32:21.26,英文,,0,0,0,,Just to recap.
Dialogue: 0,0:32:21.26,0:32:23.41,英文,,0,0,0,,I think we solved this already, but I deleted it.
Dialogue: 0,0:32:23.41,0:32:28.87,英文,,0,0,0,,But what do I have to add back?
Dialogue: 0,0:32:28.87,0:32:31.55,英文,,0,0,0,,Yeah, so I've got to pass in the placeholder somehow.
Dialogue: 0,0:32:31.55,0:32:33.77,英文,,0,0,0,,So I can do this a couple of different ways.
Dialogue: 0,0:32:33.77,0:32:35.59,英文,,0,0,0,,I'm going to keep it a little more elegant this time.
Dialogue: 0,0:32:35.59,0:32:39.48,英文,,0,0,0,,I'm just going to put my name argument there.
Dialogue: 0,0:32:39.48,0:32:45.64,英文,,0,0,0,,And I'm going to set it equal to request.args.get quote, unquote, name.
Dialogue: 0,0:32:45.64,0:32:47.22,英文,,0,0,0,,Before, I used a separate variable.
Dialogue: 0,0:32:47.22,0:32:48.66,英文,,0,0,0,,But I only used it in one place.
Dialogue: 0,0:32:48.66,0:32:49.98,英文,,0,0,0,,So that's not strictly necessary.
Dialogue: 0,0:32:49.98,0:32:51.24,英文,,0,0,0,,So this is fine, too.
Dialogue: 0,0:32:51.24,0:32:55.64,英文,,0,0,0,,But if this gets a little overwhelming, notice that I can alternatively do this.
Dialogue: 0,0:32:55.64,0:32:58.38,英文,,0,0,0,,I can create an actual variable called name.
Dialogue: 0,0:32:58.38,0:33:04.79,英文,,0,0,0,,And then I can pass in an argument called name with a value that is that variable.
Dialogue: 0,0:33:04.79,0:33:06.75,英文,,0,0,0,,But again, what's really the point here?
Dialogue: 0,0:33:06.75,0:33:08.53,英文,,0,0,0,,It was kind of prettier all on one line.
Dialogue: 0,0:33:08.53,0:33:09.93,英文,,0,0,0,,So these are the exact same things.
Dialogue: 0,0:33:09.93,0:33:12.87,英文,,0,0,0,,I'm just trying to tighten things up. Further here.
Dialogue: 0,0:33:12.87,0:33:14.07,英文,,0,0,0,,All right, so what just happened?
Dialogue: 0,0:33:14.07,0:33:17.47,英文,,0,0,0,,If I go back to my form, this is still index.html.
Dialogue: 0,0:33:17.47,0:33:19.59,英文,,0,0,0,,If I reload it, nothing has changed.
Dialogue: 0,0:33:19.59,0:33:25.74,英文,,0,0,0,,If I type in my name to this form, notice again, the URL I'm currently at, this is Chrome hiding things.
Dialogue: 0,0:33:25.74,0:33:32.00,英文,,0,0,0,,It's technically slash by default, even though many browsers are just hiding unnecessary characters these days.
Dialogue: 0,0:33:32.00,0:33:38.92,英文,,0,0,0,,But watch what happens now if I scroll over here and I click Greet on this new form.
Dialogue: 0,0:33:38.92,0:33:45.80,英文,,0,0,0,,Notice my URL, my route change to slash greet, question mark, name equals David.
Dialogue: 0,0:33:45.80,0:33:49.10,英文,,0,0,0,,And the body of the page at top left says hello, David.
Dialogue: 0,0:33:49.10,0:33:50.94,英文,,0,0,0,,So this is exactly how google.com works.
Dialogue: 0,0:33:50.94,0:33:53.74,英文,,0,0,0,,And it's how we implemented search.html last time.
Dialogue: 0,0:33:53.74,0:34:00.93,英文,,0,0,0,,But instead of submitting the form to Google via the form, I'm submitting it to myself, my very own route.
Dialogue: 0,0:34:00.93,0:34:05.64,英文,,0,0,0,,So I'm implementing my own back end for this same front end.
Dialogue: 0,0:34:05.64,0:34:08.46,英文,,0,0,0,,All right, any questions just yet?
Dialogue: 0,0:34:08.46,0:34:15.57,英文,,0,0,0,,Much less interesting than Google, certainly, but we kind of have all of the wiring now.
Dialogue: 0,0:34:15.57,0:34:18.03,英文,,0,0,0,,Any questions?
Dialogue: 0,0:34:18.03,0:34:19.58,英文,,0,0,0,,No.
Dialogue: 0,0:34:19.58,0:34:25.53,英文,,0,0,0,,All right, so what can we do to further tighten this up and adhere to some conventions?
Dialogue: 0,0:34:25.53,0:34:30.51,英文,,0,0,0,,Well, let me propose that in this version, we solve one problem.
Dialogue: 0,0:34:30.51,0:34:46.32,英文,,0,0,0,,And even if you've never done this sort of thing before, I dare say we have enough weeks of CS50 where if I show you index.html again and greet.html again, odds are, to someone's mind, there's a opportunity for improvement.
Dialogue: 0,0:34:46.32,0:34:54.13,英文,,0,0,0,,Why is this web app, super simple though it is, arguably poorly designed at the moment?
Dialogue: 0,0:34:54.13,0:35:01.99,英文,,0,0,0,,And the answer lies somewhere in these two templates, index.html and greet.html.
Dialogue: 0,0:35:01.99,0:35:05.39,英文,,0,0,0,,Yeah, they're almost the exact same, except for the contents of the body.
Dialogue: 0,0:35:05.39,0:35:06.69,英文,,0,0,0,,And you know, it wasn't a big deal.
Dialogue: 0,0:35:06.69,0:35:09.53,英文,,0,0,0,,There's only two pages. So what? I copy-pasted this once.
Dialogue: 0,0:35:09.53,0:35:14.79,英文,,0,0,0,,But imagine now a normal website, or even your home pages, which had three, four, or more pages.
Dialogue: 0,0:35:14.79,0:35:21.41,英文,,0,0,0,,I mean, at this point, you're just copying and pasting everything, honestly, as you probably did necessarily for your home page.
Dialogue: 0,0:35:21.41,0:35:30.50,英文,,0,0,0,,Why? Because when you have HTML only, maybe CSS, and even JavaScript, that's all you can do is copy-paste, copy-paste, and just make sure That you have the same structure.
Dialogue: 0,0:35:30.50,0:35:34.44,英文,,0,0,0,,Maybe you have the same CSS file, the same JavaScript file, the same third-party libraries.
Dialogue: 0,0:35:34.44,0:35:40.08,英文,,0,0,0,,But it makes it very, very annoying, as you might have realized already, to just make a change that affects everything.
Dialogue: 0,0:35:40.08,0:35:46.21,英文,,0,0,0,,So wouldn't it be nice to factor out all of this and all of this and just let the body change?
Dialogue: 0,0:35:46.21,0:35:51.29,英文,,0,0,0,,So here, too, is something that Flask and really other equivalent frameworks let us do.
Dialogue: 0,0:35:51.29,0:35:55.67,英文,,0,0,0,,It allows us to create what we're going to call conventionally a layout instead.
Dialogue: 0,0:35:55.67,0:35:59.11,英文,,0,0,0,,So I'm going to go ahead and do this. I'm going to copy one last time.
Dialogue: 0,0:35:59.11,0:36:00.76,英文,,0,0,0,,All of the same HTML.
Dialogue: 0,0:36:00.76,0:36:03.48,英文,,0,0,0,,I'm going to go into my terminal window.
Dialogue: 0,0:36:03.48,0:36:07.68,英文,,0,0,0,,And I'm going to create, by convention, a file called layout.html.
Dialogue: 0,0:36:07.68,0:36:10.54,英文,,0,0,0,,This is truly going to be a blueprint of sorts.
Dialogue: 0,0:36:10.54,0:36:14.18,英文,,0,0,0,,And in layout.html, I'm going to paste all of that same code.
Dialogue: 0,0:36:14.18,0:36:22.43,英文,,0,0,0,,But I'm going to use now some Jinja syntax to indicate that I don't want to plug in just a variable like name here.
Dialogue: 0,0:36:22.43,0:36:26.25,英文,,0,0,0,,I want to actually plug the contents of a whole other file.
Dialogue: 0,0:36:26.25,0:36:35.84,英文,,0,0,0,,So instead of just using curly braces, two of them left and right, I have to use slightly different syntax to say, I want a whole block of HTML here from some other file.
Dialogue: 0,0:36:35.84,0:36:42.93,英文,,0,0,0,,And the way to do this, even though the syntax is a little non-obvious, is you use open curly brace, percent sign,
Dialogue: 0,0:36:42.93,0:36:46.31,英文,,0,0,0,,Block, then you can call the next word anything you want.
Dialogue: 0,0:36:46.31,0:36:51.49,英文,,0,0,0,,It just has to be a special type of placeholder for an actual file, not for just a variable.
Dialogue: 0,0:36:51.49,0:36:53.90,英文,,0,0,0,,I'm going to call it body only because I'm in the body.
Dialogue: 0,0:36:53.90,0:36:56.76,英文,,0,0,0,,So I want a placeholder to be the entire body.
Dialogue: 0,0:36:56.76,0:37:01.86,英文,,0,0,0,,And then outside of this, you then say, in one word, no space, end block.
Dialogue: 0,0:37:01.86,0:37:03.62,英文,,0,0,0,,So it looks kind of stupid, honestly.
Dialogue: 0,0:37:03.62,0:37:05.42,英文,,0,0,0,,And why do we have yet more ugly syntax?
Dialogue: 0,0:37:05.42,0:37:10.48,英文,,0,0,0,,Again, just different software developers in the world are all choosing their own syntax for their own libraries.
Dialogue: 0,0:37:10.48,0:37:13.12,英文,,0,0,0,,So they all kind of look different, but are all kind of similar in spirit.
Dialogue: 0,0:37:13.12,0:37:15.64,英文,,0,0,0,,And you just get used to seeing the different syntax.
Dialogue: 0,0:37:15.64,0:37:21.03,英文,,0,0,0,,This now is not nearly as pretty as the pair of curly braces for variables.
Dialogue: 0,0:37:21.03,0:37:25.37,英文,,0,0,0,,But this is how I can say, plug the contents of an entire file here.
Dialogue: 0,0:37:25.37,0:37:27.49,英文,,0,0,0,,And now, what does this let me do?
Dialogue: 0,0:37:27.49,0:37:30.09,英文,,0,0,0,,I can now go back into.
Dialogue: 0,0:37:30.09,0:37:36.88,英文,,0,0,0,,my index.html file, which at the moment still looks like this, but almost all of this is copy-paste.
Dialogue: 0,0:37:36.88,0:37:42.72,英文,,0,0,0,,The only lines that are interesting and different are these four lines here in the body.
Dialogue: 0,0:37:42.72,0:37:46.18,英文,,0,0,0,,So what I can actually do now is I'm going to highlight that and cut it.
Dialogue: 0,0:37:46.18,0:37:49.35,英文,,0,0,0,,And then I'm going to highlight everything else and just delete the entire file.
Dialogue: 0,0:37:49.35,0:37:59.27,英文,,0,0,0,,And I'm going to use some of that same syntax and say curly brace percent sign extends quote, unquote, layout.html.
Dialogue: 0,0:37:59.27,0:38:03.19,英文,,0,0,0,,And then I close my thought with a percent sign and close curly brace.
Dialogue: 0,0:38:03.19,0:38:10.76,英文,,0,0,0,,So this syntax, as you might just be inferring, is now saying, please extend whatever layout.html looks like.
Dialogue: 0,0:38:10.76,0:38:15.22,英文,,0,0,0,,That's the original blueprint, the mold out of which I want to make this web page.
Dialogue: 0,0:38:15.22,0:38:19.70,英文,,0,0,0,,And now here, the syntax is a little weird too, but similar at least from before.
Dialogue: 0,0:38:19.70,0:38:21.28,英文,,0,0,0,,I can now say the.
Dialogue: 0,0:38:21.28,0:38:31.19,英文,,0,0,0,,The body block that I want you to plug into that layout is going to be everything between these two tags, which we already saw earlier.
Dialogue: 0,0:38:31.19,0:38:35.40,英文,,0,0,0,,But in layout.html, they're sort of giving a placeholder.
Dialogue: 0,0:38:35.40,0:38:40.58,英文,,0,0,0,,In index.html, this is what I'm going to plug in to those other placeholders as well.
Dialogue: 0,0:38:40.58,0:38:42.60,英文,,0,0,0,,So I'm just going to give myself some extra white space.
Dialogue: 0,0:38:42.60,0:38:44.02,英文,,0,0,0,,I'm going to paste.
Dialogue: 0,0:38:44.02,0:38:45.28,英文,,0,0,0,,The HTML that was there.
Dialogue: 0,0:38:45.28,0:38:49.59,英文,,0,0,0,,If I want to make clear what's going on, I can indent it, although this has no functional impact.
Dialogue: 0,0:38:49.59,0:38:54.15,英文,,0,0,0,,But it just makes clear that, just like in HTML, you can open a Jinja tag and close it.
Dialogue: 0,0:38:54.15,0:39:00.42,英文,,0,0,0,,But in Jinja here, we have this, hey, Python, here comes the body of this page.
Dialogue: 0,0:39:00.42,0:39:03.38,英文,,0,0,0,,Hey, Python, that's it for the body of this page.
Dialogue: 0,0:39:03.38,0:39:08.16,英文,,0,0,0,,And all of this stuff should be plugged into this main parent.
Dialogue: 0,0:39:08.16,0:39:09.59,英文,,0,0,0,,Layout, if you will.
Dialogue: 0,0:39:09.59,0:39:11.43,英文,,0,0,0,,So super ugly, admittedly.
Dialogue: 0,0:39:11.43,0:39:16.23,英文,,0,0,0,,But now at least things get way less redundant, because I'm going to do the exact same thing over here.
Dialogue: 0,0:39:16.23,0:39:18.85,英文,,0,0,0,,In greet.html, it looks like this.
Dialogue: 0,0:39:18.85,0:39:25.67,英文,,0,0,0,,But now I'm going to do this, extends layout.html also, just as before.
Dialogue: 0,0:39:25.67,0:39:32.09,英文,,0,0,0,,The body that I want to plug in is going to be everything inside of these tags here.
Dialogue: 0,0:39:32.09,0:39:36.38,英文,,0,0,0,,And this body is just going to be hello, comma, name.
Dialogue: 0,0:39:36.38,0:39:38.22,英文,,0,0,0,,in curly braces like that.
Dialogue: 0,0:39:38.22,0:39:40.93,英文,,0,0,0,,So again, ugly syntax got really ugly fast.
Dialogue: 0,0:39:40.93,0:39:43.61,英文,,0,0,0,,But it's really just following these patterns now.
Dialogue: 0,0:39:43.61,0:39:54.85,英文,,0,0,0,,And we have two types of placeholders, two curly braces for variables, and now this kind of syntax with the percent signs and the single curly braces for contents of actual files.
Dialogue: 0,0:39:54.85,0:40:02.04,英文,,0,0,0,,And so now, in this world, or in the world of a home page, if you were using Flask and Python to make your personal home page with all of those various pages,
Dialogue: 0,0:40:02.04,0:40:10.04,英文,,0,0,0,,you would probably design one main layout with all of your pretty logos, and colors, and fonts, and what you want the site to look like.
Dialogue: 0,0:40:10.04,0:40:15.49,英文,,0,0,0,,And then each of your smaller pages would now be distilled into just these smaller fragments.
Dialogue: 0,0:40:15.49,0:40:23.73,英文,,0,0,0,,And whether you're using Python, or Java, or JavaScript, or other languages too, all different programming languages have popular frameworks that do things like this.
Dialogue: 0,0:40:23.73,0:40:26.86,英文,,0,0,0,,The idea is the same across all of them.
Dialogue: 0,0:40:26.86,0:40:29.80,英文,,0,0,0,,All right, let's see if it works. Let's go back into the browser.
Dialogue: 0,0:40:29.80,0:40:32.86,英文,,0,0,0,,Let me go back to my slash route.
Dialogue: 0,0:40:32.86,0:40:34.26,英文,,0,0,0,,There's that same form.
Dialogue: 0,0:40:34.26,0:40:37.56,英文,,0,0,0,,Let me type in David and click Greet.
Dialogue: 0,0:40:37.56,0:40:39.74,英文,,0,0,0,,And indeed, I see hello, David.
Dialogue: 0,0:40:39.74,0:40:46.15,英文,,0,0,0,,I see that Greet was automatically added to the URL by the browser when I submitted the form, followed by the key value pairs.
Dialogue: 0,0:40:46.15,0:40:54.05,英文,,0,0,0,,And if I view the page source, as I did earlier, you'll see that you have the entirety of that layout with hello, David plugged in.
Dialogue: 0,0:40:54.05,0:40:56.13,英文,,0,0,0,,Meanwhile, if I go back to the form,
Dialogue: 0,0:40:56.13,0:41:02.41,英文,,0,0,0,,and view this page source, you'll see the exact same layout, but with the form tag plugged in.
Dialogue: 0,0:41:02.41,0:41:06.41,英文,,0,0,0,,And here's where you can be a little less nitpicky with styling.
Dialogue: 0,0:41:06.41,0:41:11.09,英文,,0,0,0,,OK, yes, this isn't technically indented inside of the body, but it was relative to the original file.
Dialogue: 0,0:41:11.09,0:41:16.29,英文,,0,0,0,,So at this point in the game, you don't need to worry about your outputted HTML looking super pretty.
Dialogue: 0,0:41:16.29,0:41:20.31,英文,,0,0,0,,You want your source code that the humans see to be pretty, not the browser.
Dialogue: 0,0:41:20.31,0:41:23.07,英文,,0,0,0,,This is not a stylistic concern.
Dialogue: 0,0:41:23.07,0:41:25.09,英文,,0,0,0,,OK, questions?
Dialogue: 0,0:41:25.09,0:41:31.97,英文,,0,0,0,,on these capabilities, then, of Flask, or problems that we've just solved and why.
Dialogue: 0,0:41:31.97,0:41:37.96,英文,,0,0,0,,Yeah?
Dialogue: 0,0:41:37.96,0:41:53.53,英文,,0,0,0,,OK, so if the files in question are in different folders, for instance, if I go back into my index page, which has the form, the routes here are entirely dependent on what is in app.py.
Dialogue: 0,0:41:53.53,0:41:58.53,英文,,0,0,0,,There's no notion of a folder when it comes to implementing a web application anymore.
Dialogue: 0,0:41:58.53,0:42:00.29,英文,,0,0,0,,They are more generically routes.
Dialogue: 0,0:42:00.29,0:42:07.88,英文,,0,0,0,,However, and we've not done this yet, you can put your static content, your images, your video files, your CSS files, in a folder called static.
Dialogue: 0,0:42:07.88,0:42:10.06,英文,,0,0,0,,And there can be subfolders therein.
Dialogue: 0,0:42:10.06,0:42:19.13,英文,,0,0,0,,And that would affect what you use as your source attributes for images, or your source tags for video, or any of those kinds of assets.
Dialogue: 0,0:42:19.13,0:42:22.85,英文,,0,0,0,,And we'll see that eventually in the problem set next.
Dialogue: 0,0:42:22.85,0:42:24.91,英文,,0,0,0,,Other questions on what we've just done here?
Dialogue: 0,0:42:24.91,0:42:27.79,英文,,0,0,0,,Yeah.
Dialogue: 0,0:42:27.79,0:42:34.23,英文,,0,0,0,,Good question, how did I ensure that the web app starts on the form and then goes to the Hello page?
Dialogue: 0,0:42:34.23,0:42:45.99,英文,,0,0,0,,So whatever you decide your default index route is, like the implicit slash, that is what is going to be pulled up when a user visits the domain name where your website is hosted.
Dialogue: 0,0:42:45.99,0:42:56.46,英文,,0,0,0,,So if I go back over here to app.py, because my slash route is designed to return index.html, that's exactly why that response came back.
Dialogue: 0,0:42:56.46,0:42:57.79,英文,,0,0,0,,Good question.
Dialogue: 0,0:42:57.79,0:43:01.15,英文,,0,0,0,,All right, so beyond this, let's consider now issues of privacy.
Dialogue: 0,0:43:01.15,0:43:04.40,英文,,0,0,0,,And we'll touch on this, too, as we get to issues like shopping carts and cookies.
Dialogue: 0,0:43:04.40,0:43:18.13,英文,,0,0,0,,If I zoom in on the URL here, even though the URL itself is a little long and ugly and cryptic, but when I type in my name and hit Greet, of course, we keep seeing name equals David in the URL.
Dialogue: 0,0:43:18.13,0:43:22.17,英文,,0,0,0,,In what sense might this be bad design?
Dialogue: 0,0:43:22.17,0:43:27.95,英文,,0,0,0,,Or in what kinds of web apps might you not want the name to show up in the URL like that?
Dialogue: 0,0:43:27.95,0:43:33.85,英文,,0,0,0,,Because this is what Google does, and this is what my app does.
Dialogue: 0,0:43:33.85,0:43:44.51,英文,,0,0,0,,Yeah, so if I'm logging in with a username and password, I could imagine that they show up in the URL after the question mark, where username equals Malin and password equals 1, 2, 3, 4, 5.
Dialogue: 0,0:43:44.51,0:43:51.81,英文,,0,0,0,,But then all my nosy siblings need to do is go through my browser history, and boom, it's right there for them to copy paste.
Dialogue: 0,0:43:51.81,0:43:54.00,英文,,0,0,0,,So that doesn't seem particularly secure.
Dialogue: 0,0:43:54.00,0:44:00.98,英文,,0,0,0,,Or if someone's walking past you in a cafe, they can just look at your URL if it's revealed by the browser, and they see it too.
Dialogue: 0,0:44:00.98,0:44:06.04,英文,,0,0,0,,Get is not necessarily the best verb to use, even though it's the default when submitting forms.
Dialogue: 0,0:44:06.04,0:44:21.77,英文,,0,0,0,,Typically, when you've got anything remotely sensitive or anything large, so be it a password or credit card number or an image or a video that you're uploading to Instagram or to YouTube or any such site like that, you don't want the data going into the URL.
Dialogue: 0,0:44:21.77,0:44:25.42,英文,,0,0,0,,And thankfully, There's actually an easy way to fix this.
Dialogue: 0,0:44:25.42,0:44:34.14,英文,,0,0,0,,I can go into my form, which is currently in index.html, and I can just change the method from get to post, in lowercase here.
Dialogue: 0,0:44:34.14,0:44:39.86,英文,,0,0,0,,But the verb in the virtual envelope we discussed last week would itself be capital P-O-S-T.
Dialogue: 0,0:44:39.86,0:44:43.29,英文,,0,0,0,,Now, unfortunately, watch what happens here.
Dialogue: 0,0:44:43.29,0:44:48.39,英文,,0,0,0,,Let me go over to my original form by going back to the slash route.
Dialogue: 0,0:44:48.39,0:44:51.89,英文,,0,0,0,,And I'm reloading the page to make sure I get the latest, freshest HTML.
Dialogue: 0,0:44:51.89,0:44:58.58,英文,,0,0,0,,And just to confirm here, yep, if I view source, method is now post.
Dialogue: 0,0:44:58.58,0:45:03.43,英文,,0,0,0,,So let me go ahead and type in David now and click Read. And before, we saw Hello, David.
Dialogue: 0,0:45:03.43,0:45:05.55,英文,,0,0,0,,But now I get method not allowed.
Dialogue: 0,0:45:05.55,0:45:06.57,英文,,0,0,0,,And this is somewhat subtle.
Dialogue: 0,0:45:06.57,0:45:12.73,英文,,0,0,0,,But in the title of the tab, notice that it's a 405 error, which is not familiar, probably.
Dialogue: 0,0:45:12.73,0:45:15.59,英文,,0,0,0,,Almost all of us have seen 404, file not found.
Dialogue: 0,0:45:15.59,0:45:19.52,英文,,0,0,0,,Turns out 405, a little more arcane, is the method.
Dialogue: 0,0:45:19.52,0:45:21.46,英文,,0,0,0,,The HTTP verb is not allowed.
Dialogue: 0,0:45:21.46,0:45:22.08,英文,,0,0,0,,Why?
Dialogue: 0,0:45:22.08,0:45:27.46,英文,,0,0,0,,Because by default, my app.py only currently supports get by default.
Dialogue: 0,0:45:27.46,0:45:28.82,英文,,0,0,0,,How do I support post?
Dialogue: 0,0:45:28.82,0:45:31.06,英文,,0,0,0,,Well, I just need a little bit more syntax.
Dialogue: 0,0:45:31.06,0:45:33.49,英文,,0,0,0,,So let me go back into VS Code here.
Dialogue: 0,0:45:33.49,0:45:35.63,英文,,0,0,0,,Let me go into app.py now.
Dialogue: 0,0:45:35.63,0:45:40.03,英文,,0,0,0,,And after changing the form, I just need to inform Flask that, you know what?
Dialogue: 0,0:45:40.03,0:45:45.21,英文,,0,0,0,,The method I want this greet route to use should not be the default, which is only get.
Dialogue: 0,0:45:45.21,0:45:47.29,英文,,0,0,0,,I want it to use these methods.
Dialogue: 0,0:45:47.29,0:45:54.37,英文,,0,0,0,,And it takes a second argument called methods, the value of which is a list, the default of which is quote, unquote, get.
Dialogue: 0,0:45:54.37,0:45:55.29,英文,,0,0,0,,So that's the default.
Dialogue: 0,0:45:55.29,0:45:57.16,英文,,0,0,0,,This has not made any changes.
Dialogue: 0,0:45:57.16,0:46:03.34,英文,,0,0,0,,But if I want to support post instead, I can explicitly pass a list with one string in it.
Dialogue: 0,0:46:03.34,0:46:05.24,英文,,0,0,0,,P-O-S-T instead.
Dialogue: 0,0:46:05.24,0:46:06.64,英文,,0,0,0,,And now, what does this mean?
Dialogue: 0,0:46:06.64,0:46:08.86,英文,,0,0,0,,We didn't talk about this in any detail last week.
Dialogue: 0,0:46:08.86,0:46:17.93,英文,,0,0,0,,But inside of this virtual envelope, typically, is that line like get slash search q equals cat after the question mark.
Dialogue: 0,0:46:17.93,0:46:26.50,英文,,0,0,0,,If you want to hide that kind of information for privacy sake or because you want to upload an image, which just doesn't make sense to put in the URL, essentially, the part of the story would be,
Dialogue: 0,0:46:26.50,0:46:29.84,英文,,0,0,0,,Well, the computer looks deeper inside of that virtual envelope.
Dialogue: 0,0:46:29.84,0:46:35.48,英文,,0,0,0,,And anything submitted by a post goes below the HTTP headers, like deeper in that envelope.
Dialogue: 0,0:46:35.48,0:46:36.50,英文,,0,0,0,,So they're still there.
Dialogue: 0,0:46:36.50,0:46:41.61,英文,,0,0,0,,They're just not obviously visible for prying eyes in the user's own browser.
Dialogue: 0,0:46:41.61,0:46:54.95,英文,,0,0,0,,So just by making that change in the HTML, telling the browser to submit the data via POST, and changing app.py to tell the route to expect the data via POST, I can now go back to my other tab.
Dialogue: 0,0:46:54.95,0:46:56.51,英文,,0,0,0,,Let me go back to the original page.
Dialogue: 0,0:46:56.51,0:46:59.45,英文,,0,0,0,,Let me reload, just so I've got the latest HTML.
Dialogue: 0,0:46:59.45,0:47:03.29,英文,,0,0,0,,And indeed, View Page Source, it's still POST.
Dialogue: 0,0:47:03.29,0:47:08.03,英文,,0,0,0,,But now when I type in D-A-V-I-D and click Greet, Now it works.
Dialogue: 0,0:47:08.03,0:47:12.37,英文,,0,0,0,,But, but, but, notice the privacy implication.
Dialogue: 0,0:47:12.37,0:47:15.66,英文,,0,0,0,,I'm at the slash greet route, but where's my name?
Dialogue: 0,0:47:15.66,0:47:17.32,英文,,0,0,0,,It's not actually there.
Dialogue: 0,0:47:17.32,0:47:22.26,英文,,0,0,0,,It still went to the server, but it's not in your autocomplete or your history now for privacy's sake.
Dialogue: 0,0:47:22.26,0:47:26.78,英文,,0,0,0,,Questions now on post.
Dialogue: 0,0:47:26.78,0:47:27.10,英文,,0,0,0,,Yeah.
Dialogue: 0,0:47:27.10,0:47:28.99,英文,,0,0,0,,Oh, no, just scratching.
Dialogue: 0,0:47:28.99,0:47:31.80,英文,,0,0,0,,All right, can you, the programmer, see this?
Dialogue: 0,0:47:31.80,0:47:38.12,英文,,0,0,0,,Well, let me show you a couple of other features of Chrome and Safari and other browsers as well.
Dialogue: 0,0:47:38.12,0:47:42.41,英文,,0,0,0,,I keep going to View Page Source, which just shows you a read-only version of your HTML.
Dialogue: 0,0:47:42.41,0:47:46.35,英文,,0,0,0,,But recall that last time, I actually right-clicked and went to Inspect.
Dialogue: 0,0:47:46.35,0:47:47.65,英文,,0,0,0,,Or viewed developer tools.
Dialogue: 0,0:47:47.65,0:47:51.22,英文,,0,0,0,,And this brings up a much fancier version of the developer tools.
Dialogue: 0,0:47:51.22,0:47:53.36,英文,,0,0,0,,And under Elements here, you see everything.
Dialogue: 0,0:47:53.36,0:47:55.40,英文,,0,0,0,,And it's nice and pretty printed. It's hierarchical.
Dialogue: 0,0:47:55.40,0:47:57.60,英文,,0,0,0,,It collapses things into these clickable triangles.
Dialogue: 0,0:47:57.60,0:47:59.02,英文,,0,0,0,,But it's the exact same thing.
Dialogue: 0,0:47:59.02,0:48:00.59,英文,,0,0,0,,It's just more interactive.
Dialogue: 0,0:48:00.59,0:48:02.67,英文,,0,0,0,,But notice what I can do today is this.
Dialogue: 0,0:48:02.67,0:48:05.05,英文,,0,0,0,,If I go to the Network tab here,
Dialogue: 0,0:48:05.05,0:48:06.75,英文,,0,0,0,,And let me zoom out a little bit.
Dialogue: 0,0:48:06.75,0:48:15.50,英文,,0,0,0,,Let me go ahead and reload the form here and type in D-A-V-I-D again and click Greet.
Dialogue: 0,0:48:15.50,0:48:23.03,英文,,0,0,0,,Notice now in the Network tab of Chrome's Developer Tools, I see a few things as we saw before.
Dialogue: 0,0:48:23.03,0:48:25.63,英文,,0,0,0,,One, I see that the request method is post.
Dialogue: 0,0:48:25.63,0:48:31.26,英文,,0,0,0,,Two, I see that the server automatically, without me writing any code for this, returns 200 when it's successful.
Dialogue: 0,0:48:31.26,0:48:34.20,英文,,0,0,0,,But I can scroll down, down, down, down, down.
Dialogue: 0,0:48:34.20,0:48:39.64,英文,,0,0,0,,And you'll see that eventually, after all these cookies, more on those later.
Dialogue: 0,0:48:39.64,0:48:47.09,英文,,0,0,0,,If I click on Payload, the second tab next to Headers, you can see, as the developer, what was actually sent to the server.
Dialogue: 0,0:48:47.09,0:48:51.21,英文,,0,0,0,,So indeed, this is going to be super useful, like when doing problem set 9, maybe your final projects.
Dialogue: 0,0:48:51.21,0:48:56.79,英文,,0,0,0,,If you want to see what's going from browser to server, you have complete control over all of that.
Dialogue: 0,0:48:56.79,0:49:02.60,英文,,0,0,0,,Information, even if you're using HTTPS, because your browser and you, the developer, can certainly see all of this.
Dialogue: 0,0:49:02.60,0:49:16.54,英文,,0,0,0,,So again, these developer tools, even though there's a lot of tabs and buttons you probably won't need any time soon, some of them, like elements and network and with JavaScript console, are going to be super useful to start to get familiar with.
Dialogue: 0,0:49:16.54,0:49:25.19,英文,,0,0,0,,All right, any questions now on this implication of post?
Dialogue: 0,0:49:25.19,0:49:28.32,英文,,0,0,0,,Anything at all?
Dialogue: 0,0:49:28.32,0:49:28.98,英文,,0,0,0,,No?
Dialogue: 0,0:49:28.98,0:49:33.87,英文,,0,0,0,,OK, how about one final hello example that ties a few of these things together.
Dialogue: 0,0:49:33.87,0:49:47.04,英文,,0,0,0,,How about now we try to tighten things up further only in anticipation of something like problem set 9 or really more complicated web apps where you might have not 2, but 20, or maybe even more different routes.
Dialogue: 0,0:49:47.04,0:49:53.06,英文,,0,0,0,,It might be ideal to just minimize how many total routes we have so we don't get a little too overwhelmed.
Dialogue: 0,0:49:53.06,0:49:58.85,英文,,0,0,0,,And I dare say that these two routes are so short, maybe I can combine them into one.
Dialogue: 0,0:49:58.85,0:50:03.99,英文,,0,0,0,,And maybe I can keep the user at what seems to be the same URL, but just to kind of tidy things up.
Dialogue: 0,0:50:03.99,0:50:06.53,英文,,0,0,0,,So let me propose that we do this instead.
Dialogue: 0,0:50:06.53,0:50:09.80,英文,,0,0,0,,Let me get rid of my greet route.
Dialogue: 0,0:50:09.80,0:50:13.92,英文,,0,0,0,,And let me go into my form in index.html.
Dialogue: 0,0:50:13.92,0:50:18.36,英文,,0,0,0,,And let me go ahead and just have the action of this form still be slash.
Dialogue: 0,0:50:18.36,0:50:22.47,英文,,0,0,0,,So I want the form to be visible at slash, the index of the site.
Dialogue: 0,0:50:22.47,0:50:34.34,英文,,0,0,0,,But I also want the form to submit to itself, if only because I don't want to introduce another route like slash greet, which eventually, indeed, will be compelling so you don't have one route for everything you want your website to do.
Dialogue: 0,0:50:34.34,0:50:36.20,英文,,0,0,0,,So technically, this is the default, too.
Dialogue: 0,0:50:36.20,0:50:39.06,英文,,0,0,0,,And if I omit action, the exact same thing would happen as well.
Dialogue: 0,0:50:39.06,0:50:40.32,英文,,0,0,0,,But let me rewind.
Dialogue: 0,0:50:40.32,0:50:43.82,英文,,0,0,0,,And let me now go into app.py to see how we can make this happen.
Dialogue: 0,0:50:43.82,0:50:53.06,英文,,0,0,0,,Well, if I want my one and now only route to support both methods, I can say methods equals and then a list with both get and post in any order.
Dialogue: 0,0:50:53.06,0:50:55.02,英文,,0,0,0,,But I'll keep them alphabetical like this.
Dialogue: 0,0:50:55.02,0:51:02.44,英文,,0,0,0,,This now tells Python, hey, this route should handle both get and post requests at the same place.
Dialogue: 0,0:51:02.44,0:51:04.66,英文,,0,0,0,,Let's now go into this function.
Dialogue: 0,0:51:04.66,0:51:07.67,英文,,0,0,0,,I kind of want to say the equivalent of this.
Dialogue: 0,0:51:07.67,0:51:11.43,英文,,0,0,0,,If get, then I want to return the form.
Dialogue: 0,0:51:11.43,0:51:18.90,英文,,0,0,0,,Else if post, I want to then return render template of greet.html with the user's name.
Dialogue: 0,0:51:18.90,0:51:20.84,英文,,0,0,0,,But this is not yet complete code.
Dialogue: 0,0:51:20.84,0:51:22.24,英文,,0,0,0,,But I think I can do this.
Dialogue: 0,0:51:22.24,0:51:24.38,英文,,0,0,0,,I'm going to go ahead and say the following.
Dialogue: 0,0:51:24.38,0:51:26.60,英文,,0,0,0,,I'm going to go ahead and say if.
Dialogue: 0,0:51:26.60,0:51:33.89,英文,,0,0,0,,Request.method equals equals get, then indeed, return index.html.
Dialogue: 0,0:51:33.89,0:51:40.69,英文,,0,0,0,,Elif request.method equals equals post, then go ahead and return greet.html.
Dialogue: 0,0:51:40.69,0:51:44.11,英文,,0,0,0,,This isn't quite enough, though, because I still want to pass in that placeholder.
Dialogue: 0,0:51:44.11,0:51:53.67,英文,,0,0,0,,So let me again add back name equals request.args.get, quote unquote, name, and then a default value of world.
Dialogue: 0,0:51:53.67,0:51:55.94,英文,,0,0,0,,What does this now do for me?
Dialogue: 0,0:51:55.94,0:51:58.72,英文,,0,0,0,,Well, let me go back to my other tab here.
Dialogue: 0,0:51:58.72,0:52:00.14,英文,,0,0,0,,Let me close the developer tools.
Dialogue: 0,0:52:00.14,0:52:01.56,英文,,0,0,0,,Let me go back to the form here.
Dialogue: 0,0:52:01.56,0:52:03.42,英文,,0,0,0,,Let me reload to make sure I have the latest.
Dialogue: 0,0:52:03.42,0:52:05.78,英文,,0,0,0,,Let me view page source just to make sure I have the latest.
Dialogue: 0,0:52:05.78,0:52:10.07,英文,,0,0,0,,And yep, I have the latest because it still says post, but it now says slash.
Dialogue: 0,0:52:10.07,0:52:11.31,英文,,0,0,0,,And let's see what happens now.
Dialogue: 0,0:52:11.31,0:52:17.81,英文,,0,0,0,,If I type in my name, David, previously this submitted by a post, so I didn't see any name or value thereof in the URL.
Dialogue: 0,0:52:17.81,0:52:19.67,英文,,0,0,0,,But I did end up at slash greet.
Dialogue: 0,0:52:19.67,0:52:25.28,英文,,0,0,0,,But if the action is now slash and I click greet, notice that it still kind of works.
Dialogue: 0,0:52:25.28,0:52:28.04,英文,,0,0,0,,I see hello, world, although that didn't quite work.
Dialogue: 0,0:52:28.04,0:52:29.68,英文,,0,0,0,,So we'll come back to that issue in a moment.
Dialogue: 0,0:52:29.68,0:52:32.46,英文,,0,0,0,,But notice the URL ends in just slash.
Dialogue: 0,0:52:32.46,0:52:34.97,英文,,0,0,0,,And again, Chrome is hiding the slash because that's all that's there.
Dialogue: 0,0:52:34.97,0:52:38.59,英文,,0,0,0,,But it does not end in name equals David.
Dialogue: 0,0:52:38.59,0:52:41.27,英文,,0,0,0,,In this case, or name it equals world.
Dialogue: 0,0:52:41.27,0:52:42.66,英文,,0,0,0,,Now notice this, too.
Dialogue: 0,0:52:42.66,0:52:45.34,英文,,0,0,0,,If I reload, I'm going to get this warning.
Dialogue: 0,0:52:45.34,0:52:48.00,英文,,0,0,0,,Do you want to confirm form resubmission?
Dialogue: 0,0:52:48.00,0:52:50.12,英文,,0,0,0,,The page you're looking for used information that you entered.
Dialogue: 0,0:52:50.12,0:52:52.74,英文,,0,0,0,,Returning to that page might cause any action you took to be repeated.
Dialogue: 0,0:52:52.74,0:52:53.79,英文,,0,0,0,,Do you want to continue?
Dialogue: 0,0:52:53.79,0:52:57.41,英文,,0,0,0,,You might have seen this on websites you've actually visited, where you hit reload.
Dialogue: 0,0:52:57.41,0:52:59.33,英文,,0,0,0,,And you're prompted, wait a minute, do you want to do that?
Dialogue: 0,0:52:59.33,0:53:01.87,英文,,0,0,0,,Odds are you've been prompted to reload explicitly.
Dialogue: 0,0:53:01.87,0:53:02.87,英文,,0,0,0,,Because why?
Dialogue: 0,0:53:02.87,0:53:06.67,英文,,0,0,0,,Whatever you just did was POST instead of GET.
Dialogue: 0,0:53:06.67,0:53:20.64,英文,,0,0,0,,And by convention, besides POST being used for privacy to hide your username, your password, your credit card number, or the like, besides being used to upload bigger files like images or videos, POST is also used by convention to make changes to the server.
Dialogue: 0,0:53:20.64,0:53:24.18,英文,,0,0,0,,to add something to your shopping cart, to add something to the database.
Dialogue: 0,0:53:24.18,0:53:30.86,英文,,0,0,0,,Whereas GET, as the name suggests, is all about getting information, not posting or sending information instead.
Dialogue: 0,0:53:30.86,0:53:44.88,英文,,0,0,0,,So this is Chrome being a little careful, because if you just checked out on Amazon and then you hit Reload, you don't want to accidentally buy the same book again, so to speak, even though Amazon and fancy websites have other defenses for this, too, to avoid this issue.
Dialogue: 0,0:53:44.88,0:53:47.26,英文,,0,0,0,,Now, there is a bug, though, here.
Dialogue: 0,0:53:47.26,0:53:50.38,英文,,0,0,0,,It says hello, world instead of hello, David.
Dialogue: 0,0:53:50.38,0:53:56.01,英文,,0,0,0,,And it actually would have said the same a moment ago, and I just didn't retest the code and reveal as much to you.
Dialogue: 0,0:53:56.01,0:53:59.93,英文,,0,0,0,,Or if I did, I didn't even notice it said hello, world instead of hello, David.
Dialogue: 0,0:53:59.93,0:54:05.54,英文,,0,0,0,,It turns out that request.args is only used for get.
Dialogue: 0,0:54:05.54,0:54:10.18,英文,,0,0,0,,When using GET, request.args is a dictionary that contains all of your key value pairs.
Dialogue: 0,0:54:10.18,0:54:15.90,英文,,0,0,0,,But somewhat confusingly, when using POST with Flask, you have to go into request.form.
Dialogue: 0,0:54:15.90,0:54:22.53,英文,,0,0,0,,I have no idea why these are not sort of more obvious opposites, like request.get or request.form.
Dialogue: 0,0:54:22.53,0:54:26.51,英文,,0,0,0,,Sorry, request.get and request.post would be sort of sensible names.
Dialogue: 0,0:54:26.51,0:54:32.21,英文,,0,0,0,,In this case, though, we have request.args for get and request.form for post.
Dialogue: 0,0:54:32.21,0:54:33.41,英文,,0,0,0,,All right, that's an easy fix, though.
Dialogue: 0,0:54:33.41,0:54:38.48,英文,,0,0,0,,If I go back to VS Code here, let's change request.args to request.form.
Dialogue: 0,0:54:38.48,0:54:41.62,英文,,0,0,0,,Let's go back to my other tab. Let me just reload.
Dialogue: 0,0:54:41.62,0:54:42.08,英文,,0,0,0,,And you know what?
Dialogue: 0,0:54:42.08,0:54:46.46,英文,,0,0,0,,I'm going to say OK, continue to resubmit the same form, because the form was OK.
Dialogue: 0,0:54:46.46,0:54:49.74,英文,,0,0,0,,It was my Python code that was buggy, hitting Enter.
Dialogue: 0,0:54:49.74,0:54:52.08,英文,,0,0,0,,Now it's accessing David OK.
Dialogue: 0,0:54:52.08,0:54:53.00,英文,,0,0,0,,But watch this again.
Dialogue: 0,0:54:53.00,0:54:56.85,英文,,0,0,0,,If I hit Reload, Command-R or Control-R, I get the same warning.
Dialogue: 0,0:54:56.85,0:54:58.61,英文,,0,0,0,,Are you sure you want to submit the form?
Dialogue: 0,0:54:58.61,0:54:58.91,英文,,0,0,0,,Yes.
Dialogue: 0,0:54:58.91,0:55:02.95,英文,,0,0,0,,If I do it manually with the Reload icon, I get the same warning as before.
Dialogue: 0,0:55:02.95,0:55:06.59,英文,,0,0,0,,But if I want to manually induce a GET request, well, that's fine.
Dialogue: 0,0:55:06.59,0:55:08.88,英文,,0,0,0,,Don't hit Reload and send the same request.
Dialogue: 0,0:55:08.88,0:55:10.96,英文,,0,0,0,,Instead, go up to your URL.
Dialogue: 0,0:55:10.96,0:55:13.96,英文,,0,0,0,,And just put the cursor up there and hit Enter.
Dialogue: 0,0:55:13.96,0:55:17.16,英文,,0,0,0,,And now notice, same URL is a GET by default.
Dialogue: 0,0:55:17.16,0:55:21.94,英文,,0,0,0,,So anytime you and I have typed URLs into browsers, GET is always the default.
Dialogue: 0,0:55:21.94,0:55:31.13,英文,,0,0,0,,Only when you click on a button, typically, that the programmer has configured to use POST are you actually adding things to your shopping cart or the like.
Dialogue: 0,0:55:31.13,0:55:33.92,英文,,0,0,0,,All right, so we are back.
Dialogue: 0,0:55:33.92,0:55:45.08,英文,,0,0,0,,And if I go way back in time myself, this is actually the first web application I made back in 1997, I believe.
Dialogue: 0,0:55:45.08,0:55:48.76,英文,,0,0,0,,So at the time, this would have been my sophomore or so year.
Dialogue: 0,0:55:48.76,0:55:49.98,英文,,0,0,0,,I had taken CS50.
Dialogue: 0,0:55:49.98,0:55:53.50,英文,,0,0,0,,I took a follow-on class called CS51, which is a different type of programming.
Dialogue: 0,0:55:53.50,0:55:58.39,英文,,0,0,0,,And then I pretty much taught myself a language called Perl, which is somewhat less popular nowadays.
Dialogue: 0,0:55:58.39,0:56:04.21,英文,,0,0,0,,But it's another language, like Python, like Java, like JavaScript, like others, that can be used to make web-based applications.
Dialogue: 0,0:56:04.21,0:56:07.09,英文,,0,0,0,,And the web was very young at the time.
Dialogue: 0,0:56:07.09,0:56:13.14,英文,,0,0,0,,And the process via which students, my classmates, could register For the first-year intramural sports program, a.k.a.
Dialogue: 0,0:56:13.14,0:56:21.98,英文,,0,0,0,,Frosh IMs, was to grab a piece of paper and write your name and email address on it and walk it across the yard to Wigglesworth, I believe, where the proctor lived.
Dialogue: 0,0:56:21.98,0:56:24.04,英文,,0,0,0,,And you'd slide the piece of paper under the door.
Dialogue: 0,0:56:24.04,0:56:26.82,英文,,0,0,0,,And that was how we submitted forms in my day.
Dialogue: 0,0:56:26.82,0:56:31.59,英文,,0,0,0,,So this was an opportunity, even back in 1997-ish, Move things online.
Dialogue: 0,0:56:31.59,0:56:34.67,英文,,0,0,0,,And the website went on to live on until, I think, like 2007.
Dialogue: 0,0:56:34.67,0:56:38.67,英文,,0,0,0,,I found this online. And then it's become something else since.
Dialogue: 0,0:56:38.67,0:56:41.43,英文,,0,0,0,,But this was a website via which people could register for sports.
Dialogue: 0,0:56:41.43,0:56:44.39,英文,,0,0,0,,And people could log in the scores for various games and whatnot.
Dialogue: 0,0:56:44.39,0:56:48.07,英文,,0,0,0,,And so underneath the hood, I didn't even know anything about databases at the time.
Dialogue: 0,0:56:48.07,0:56:51.78,英文,,0,0,0,,It was just like CSV files that I was storing the data in.
Dialogue: 0,0:56:51.78,0:56:53.64,英文,,0,0,0,,But there were HTML forms.
Dialogue: 0,0:56:53.64,0:56:55.18,英文,,0,0,0,,And there was with Perl.
Dialogue: 0,0:56:55.18,0:57:00.32,英文,,0,0,0,,The language at the time, the way to do the exact kind of stuff that we've just been doing already with Flask.
Dialogue: 0,0:57:00.32,0:57:06.12,英文,,0,0,0,,And so what I thought we'd do is implement a slightly less ugly version of this.
Dialogue: 0,0:57:06.12,0:57:11.80,英文,,0,0,0,,Repeating graphical backgrounds were in vogue in, like, 1997, as you can see here.
Dialogue: 0,0:57:11.80,0:57:16.10,英文,,0,0,0,,But these were the aesthetics of the day, including the so-called blink tag.
Dialogue: 0,0:57:16.10,0:57:24.55,英文,,0,0,0,,So let's at least focus on the functionality of this website and not so much the aesthetics and see if we can implement some of the plumbing for actually solving a real-world representative problem,
Dialogue: 0,0:57:24.55,0:57:30.55,英文,,0,0,0,,be it for freshman intramural sports or something else like it where you're getting data from users and processing it somehow.
Dialogue: 0,0:57:30.55,0:57:32.89,英文,,0,0,0,,So let me go over here to VS Code.
Dialogue: 0,0:57:32.89,0:57:38.25,英文,,0,0,0,,Let me create a new directory called froshims just so we can keep all of this code in its own directory.
Dialogue: 0,0:57:38.25,0:57:40.27,英文,,0,0,0,,Let me cd into froshims.
Dialogue: 0,0:57:40.27,0:57:47.34,英文,,0,0,0,,Let me proactively make another directory called templates, in which our templates, our .html files, do need to live.
Dialogue: 0,0:57:47.34,0:57:54.84,英文,,0,0,0,,And eventually, I'm going to go ahead and create two files, minimally, app.py and index.html.
Dialogue: 0,0:57:54.84,0:57:57.29,英文,,0,0,0,,So let's do the first of those, app.py.
Dialogue: 0,0:57:57.29,0:57:59.75,英文,,0,0,0,,will live in my froshims directory.
Dialogue: 0,0:57:59.75,0:58:03.01,英文,,0,0,0,,And I'm just going to recreate something very simple like we have previously.
Dialogue: 0,0:58:03.01,0:58:10.03,英文,,0,0,0,,So from flask, in lowercase, import flask, capitalized, render template, and also request.
Dialogue: 0,0:58:10.03,0:58:11.82,英文,,0,0,0,,So same first line as before.
Dialogue: 0,0:58:11.82,0:58:19.86,英文,,0,0,0,,Let me then give myself a variable called app, set it equal to calling the flask function, capital F, with underscore, underscore, name, underscore, underscore.
Dialogue: 0,0:58:19.86,0:58:23.78,英文,,0,0,0,,And then let me give myself a route.
Dialogue: 0,0:58:23.78,0:58:29.38,英文,,0,0,0,,For slash, as before, with an index function, though, again, I could call that anything I want.
Dialogue: 0,0:58:29.38,0:58:34.66,英文,,0,0,0,,And just for now, let's return render template of, quote unquote, index.html, as though that exists.
Dialogue: 0,0:58:34.66,0:58:41.63,英文,,0,0,0,,So this is not really a web application as much as it is, at the moment, just a recreation of HTTP server for one file.
Dialogue: 0,0:58:41.63,0:58:43.93,英文,,0,0,0,,Let's now, in another tab,
Dialogue: 0,0:58:43.93,0:58:48.57,英文,,0,0,0,,create a templates file called index.html.
Dialogue: 0,0:58:48.57,0:58:54.30,英文,,0,0,0,,And I'm going to save myself a few keystrokes. Let me copy-paste from earlier almost all of the layout from before.
Dialogue: 0,0:58:54.30,0:58:58.04,英文,,0,0,0,,I've changed the title in advance to Frosh IMs instead of hello.
Dialogue: 0,0:58:58.04,0:59:00.14,英文,,0,0,0,,But this is essentially the same template.
Dialogue: 0,0:59:00.14,0:59:06.57,英文,,0,0,0,,And for now, though, because I'm in index.html, I'm not going to use extends or any of that fancy block stuff yet.
Dialogue: 0,0:59:06.57,0:59:14.13,英文,,0,0,0,,I'm just going to go ahead and create a relatively simple form via which, back in the day, my classmates could have registered for intramural sports.
Dialogue: 0,0:59:14.13,0:59:19.79,英文,,0,0,0,,So let's go ahead here, and I'll propose that we do this.
Dialogue: 0,0:59:19.79,0:59:28.04,英文,,0,0,0,,In this page, we'll have a form, the action of which will be a route called slash register, though I could call that anything I want.
Dialogue: 0,0:59:28.04,0:59:36.86,英文,,0,0,0,,It'll be somewhat private, so I'm going to use post instead of get, just so that people don't accidentally maybe register twice by hitting reload without warning.
Dialogue: 0,0:59:36.86,0:59:45.00,英文,,0,0,0,,Inside of this form, let's go ahead and give them an input, where autocomplete will be off, as always, for demonstration's sake.
Dialogue: 0,0:59:45.00,0:59:48.09,英文,,0,0,0,,Autofocus, so the cursor goes there initially.
Dialogue: 0,0:59:48.09,0:59:53.59,英文,,0,0,0,,The name of this field will be literally name, because I want my classmates' name if they want to register for some sport.
Dialogue: 0,0:59:53.59,0:59:58.23,英文,,0,0,0,,The placeholder will again be quote, unquote, name, just so they see some gray instructions.
Dialogue: 0,0:59:58.23,1:00:02.49,英文,,0,0,0,,And the type of this field will indeed be text as before.
Dialogue: 0,1:00:02.49,1:00:05.94,英文,,0,0,0,,And then I need to give them the ability to register for a few sports.
Dialogue: 0,1:00:05.94,1:00:06.96,英文,,0,0,0,,Why don't we keep it simple?
Dialogue: 0,1:00:06.96,1:00:12.04,英文,,0,0,0,,Like, back in the day, basketball, soccer, and ultimate Frisbee were three of the sports that we supported.
Dialogue: 0,1:00:12.04,1:00:13.00,英文,,0,0,0,,And so let me do this.
Dialogue: 0,1:00:13.00,1:00:17.67,英文,,0,0,0,,And you might not have seen this before, unless you dabbled further with forms on your own.
Dialogue: 0,1:00:17.67,1:00:22.77,英文,,0,0,0,,But I can create a Select menu, otherwise known as a dropdown menu, in HTML.
Dialogue: 0,1:00:22.77,1:00:25.17,英文,,0,0,0,,Inside of which are a whole bunch of options.
Dialogue: 0,1:00:25.17,1:00:31.28,英文,,0,0,0,,And each option typically follows this paradigm, the value of the option and then the actual text that the human sees.
Dialogue: 0,1:00:31.28,1:00:37.96,英文,,0,0,0,,So the value of these options will be, how about we do basketball as one?
Dialogue: 0,1:00:37.96,1:00:40.26,英文,,0,0,0,,And I want the human to see literally the same thing.
Dialogue: 0,1:00:40.26,1:00:42.92,英文,,0,0,0,,Just like with a link in HTML, they could be different.
Dialogue: 0,1:00:42.92,1:00:44.46,英文,,0,0,0,,But I'm going to keep them the same.
Dialogue: 0,1:00:44.46,1:00:49.77,英文,,0,0,0,,Another option will be, let's say, soccer.
Dialogue: 0,1:00:49.77,1:00:51.57,英文,,0,0,0,,And whoops, let me fix my quotes.
Dialogue: 0,1:00:51.57,1:00:55.14,英文,,0,0,0,,And the human will see the exact same thing, though it could say something else.
Dialogue: 0,1:00:55.14,1:00:59.58,英文,,0,0,0,,And then lastly, the value will be, quote unquote, ultimate frisbee.
Dialogue: 0,1:00:59.58,1:01:04.20,英文,,0,0,0,,And the humans will see the same thing there, ultimate frisbee.
Dialogue: 0,1:01:04.20,1:01:08.91,英文,,0,0,0,,All right, so this is going to create, as we'll soon see, just a dropdown menu with three separate options.
Dialogue: 0,1:01:08.91,1:01:14.21,英文,,0,0,0,,If I want the students to be able to submit this now, let me give them a button, the type of which is Submit.
Dialogue: 0,1:01:14.21,1:01:17.37,英文,,0,0,0,,And this button will be like the word Register on it.
Dialogue: 0,1:01:17.37,1:01:19.03,英文,,0,0,0,,So I think we're pretty much good to go.
Dialogue: 0,1:01:19.03,1:01:24.86,英文,,0,0,0,,Like, this is all just HTML, no Python, no Flask per se, except for the rendering of this same template.
Dialogue: 0,1:01:24.86,1:01:26.80,英文,,0,0,0,,So let me go into my terminal window.
Dialogue: 0,1:01:26.80,1:01:31.74,英文,,0,0,0,,Let me do Flask run inside of this directory, because I need to serve this app instead.
Dialogue: 0,1:01:31.74,1:01:34.26,英文,,0,0,0,,I'm going to see some ugly output, including my own URL.
Dialogue: 0,1:01:34.26,1:01:39.12,英文,,0,0,0,,And if I hover over that and then open that URL, I should now see a more interesting form.
Dialogue: 0,1:01:39.12,1:01:44.23,英文,,0,0,0,,It's got not only a field for their name, but also this dropdown menu with all three sports.
Dialogue: 0,1:01:44.23,1:01:53.67,英文,,0,0,0,,This isn't maybe the best user experience thus far, because I feel like I'm biasing people to registering for basketball, maybe, because it's checked by default.
Dialogue: 0,1:01:53.67,1:01:57.46,英文,,0,0,0,,I mean, a lot of forms nowadays have a blank placeholder for the form.
Dialogue: 0,1:01:57.46,1:02:06.76,英文,,0,0,0,,So this is just an aesthetic thing. But I can do this. Let me go back to the same form. And let me give myself just a blank option at the top that, in fact, I'm going to disable.
Dialogue: 0,1:02:06.76,1:02:09.52,英文,,0,0,0,,So you technically can't select it proactively.
Dialogue: 0,1:02:09.52,1:02:11.46,英文,,0,0,0,,But I am going to select it by default.
Dialogue: 0,1:02:11.46,1:02:15.02,英文,,0,0,0,,And so we probably haven't seen those HTML attributes before.
Dialogue: 0,1:02:15.02,1:02:27.07,英文,,0,0,0,,But if I want to create the equivalent of a title for this dropdown, I'm going to literally create a disabled option that's automatically selected called Sport so that you can't select it, per se.
Dialogue: 0,1:02:27.07,1:02:31.03,英文,,0,0,0,,But it is there at the top. So if I go back now to my other tab,
Dialogue: 0,1:02:31.03,1:02:34.23,英文,,0,0,0,,Reload, you know, just marginally prettier than before.
Dialogue: 0,1:02:34.23,1:02:37.67,英文,,0,0,0,,And I'm not biasing people toward accidentally registering for basketball alone.
Dialogue: 0,1:02:37.67,1:02:42.28,英文,,0,0,0,,And if I click on this, you'll see that sport is grayed out and therefore not manually selectable.
Dialogue: 0,1:02:42.28,1:02:45.14,英文,,0,0,0,,But I can select any of these other three still.
Dialogue: 0,1:02:45.14,1:02:45.62,英文,,0,0,0,,All right.
Dialogue: 0,1:02:45.62,1:02:54.35,英文,,0,0,0,,Well, unfortunately, if I type in David and I try registering, for instance, for soccer and click Register, I do end up at slash register.
Dialogue: 0,1:02:54.35,1:02:59.33,英文,,0,0,0,,And there's no question mark or name or sport, so it's probably indeed post instead of get.
Dialogue: 0,1:02:59.33,1:03:00.42,英文,,0,0,0,,Those are hints.
Dialogue: 0,1:03:00.42,1:03:01.54,英文,,0,0,0,,But not found.
Dialogue: 0,1:03:01.54,1:03:07.66,英文,,0,0,0,,Notice the tab here very succinctly says 404 not found.
Dialogue: 0,1:03:07.66,1:03:09.16,英文,,0,0,0,,Well, why is that?
Dialogue: 0,1:03:09.16,1:03:16.31,英文,,0,0,0,,Just to be clear, why did slash register give me a 404?
Dialogue: 0,1:03:16.31,1:03:19.17,英文,,0,0,0,,What's the logic here?
Dialogue: 0,1:03:19.17,1:03:23.36,英文,,0,0,0,,Perhaps just state the obvious.
Dialogue: 0,1:03:23.36,1:03:24.26,英文,,0,0,0,,It doesn't exist, right?
Dialogue: 0,1:03:24.26,1:03:25.56,英文,,0,0,0,,We haven't done that step yet.
Dialogue: 0,1:03:25.56,1:03:27.30,英文,,0,0,0,,All right, so something as simple as that.
Dialogue: 0,1:03:27.30,1:03:35.24,英文,,0,0,0,,And so I actually sort of belabor that point, because as you're learning a lot of these conventions and some of this new syntax, honestly, you're just going to make stupid mistakes.
Dialogue: 0,1:03:35.24,1:03:38.46,英文,,0,0,0,,Something's not going to work. But again, go back to first principles.
Dialogue: 0,1:03:38.46,1:03:39.84,英文,,0,0,0,,Well, why is it not found?
Dialogue: 0,1:03:39.84,1:03:43.50,英文,,0,0,0,,All right, slash register should be a template, maybe called register.html.
Dialogue: 0,1:03:43.50,1:03:45.21,英文,,0,0,0,,Oh, I forgot my app.route.
Dialogue: 0,1:03:45.21,1:03:49.35,英文,,0,0,0,,So that should be the kind of thinking as you try to diagnose these problems moving forward.
Dialogue: 0,1:03:49.35,1:03:51.97,英文,,0,0,0,,All right, so let me go into app.py.
Dialogue: 0,1:03:51.97,1:03:54.47,英文,,0,0,0,,And let me give myself a second route here.
Dialogue: 0,1:03:54.47,1:03:58.08,英文,,0,0,0,,So app.route, quote unquote, slash route.
Dialogue: 0,1:03:58.08,1:04:00.40,英文,,0,0,0,,Then let me define a function called anything I want.
Dialogue: 0,1:04:00.40,1:04:04.42,英文,,0,0,0,,But I'm going to call it, sorry, not slash route, slash register.
Dialogue: 0,1:04:04.42,1:04:07.77,英文,,0,0,0,,Let me call the function, just to be consistent, register.
Dialogue: 0,1:04:07.77,1:04:09.75,英文,,0,0,0,,But I could call that anything I want.
Dialogue: 0,1:04:09.75,1:04:12.41,英文,,0,0,0,,And just for now, let's not do anything too interesting.
Dialogue: 0,1:04:12.41,1:04:16.71,英文,,0,0,0,,Let's just return the rendering of a template called success.html.
Dialogue: 0,1:04:16.71,1:04:21.34,英文,,0,0,0,,Let's just pretend for now that registration is successful, no matter who you are or what you do.
Dialogue: 0,1:04:21.34,1:04:22.96,英文,,0,0,0,,Now, I need that template.
Dialogue: 0,1:04:22.96,1:04:25.28,英文,,0,0,0,,And I only have index.html at this point.
Dialogue: 0,1:04:25.28,1:04:27.46,英文,,0,0,0,,So let me actually now do my best practices.
Dialogue: 0,1:04:27.46,1:04:29.24,英文,,0,0,0,,Let me copy all of that.
Dialogue: 0,1:04:29.24,1:04:40.28,英文,,0,0,0,,Let me, in a separate terminal window, let me go into my froshims directory, and let me create a new template called layout.html, just like before.
Dialogue: 0,1:04:40.28,1:04:42.51,英文,,0,0,0,,Let me paste all that same code.
Dialogue: 0,1:04:42.51,1:04:50.79,英文,,0,0,0,,Let me delete the form and just put in that big placeholder, so block body, and then end block.
Dialogue: 0,1:04:50.79,1:04:51.99,英文,,0,0,0,,is all I did earlier.
Dialogue: 0,1:04:51.99,1:04:55.49,英文,,0,0,0,,This is just kind of boilerplate now convention. Everything else I'm going to leave the same.
Dialogue: 0,1:04:55.49,1:04:58.43,英文,,0,0,0,,But if I wanted to make it prettier, I could add my CSS up top.
Dialogue: 0,1:04:58.43,1:05:03.14,英文,,0,0,0,,If I wanted to add like this crazy repeating background, I could probably do that up top too.
Dialogue: 0,1:05:03.14,1:05:06.28,英文,,0,0,0,,So I could make every page look as ugly as it did back in my day.
Dialogue: 0,1:05:06.28,1:05:08.40,英文,,0,0,0,,But we'll focus just today on the text.
Dialogue: 0,1:05:08.40,1:05:13.84,英文,,0,0,0,,All right, so now that I have layout.html, let me clean up index.html.
Dialogue: 0,1:05:13.84,1:05:15.83,英文,,0,0,0,,I don't need all this redundancy.
Dialogue: 0,1:05:15.83,1:05:18.03,英文,,0,0,0,,I don't need all of these tags at the top.
Dialogue: 0,1:05:18.03,1:05:28.15,英文,,0,0,0,,Instead, recall, I think I just need extends, quote unquote, layout.html, with the appropriate percent signs and curly braces.
Dialogue: 0,1:05:28.15,1:05:31.84,英文,,0,0,0,,I then have the appropriate block body, though I could call body anything I want.
Dialogue: 0,1:05:31.84,1:05:34.50,英文,,0,0,0,,But I'm going to stick with my convention earlier.
Dialogue: 0,1:05:34.50,1:05:37.62,英文,,0,0,0,,And I'm going to delete the tags down here that I no longer need.
Dialogue: 0,1:05:37.62,1:05:43.34,英文,,0,0,0,,Why? Because if I go into layout.html, I already have all my open tags, all my closed tags.
Dialogue: 0,1:05:43.34,1:05:48.30,英文,,0,0,0,,The only stuff I want in index.html is going to be what belongs in the body.
Dialogue: 0,1:05:48.30,1:05:50.97,英文,,0,0,0,,So end block down here.
Dialogue: 0,1:05:50.97,1:05:54.09,英文,,0,0,0,,And just to be pedantic, let me go ahead and highlight all that.
Dialogue: 0,1:05:54.09,1:05:59.27,英文,,0,0,0,,Hit Shift-Tab, and that will unindent it just to line things up, just to be tidy.
Dialogue: 0,1:05:59.27,1:06:01.93,英文,,0,0,0,,All right, so better, even though it looks a little cryptic now.
Dialogue: 0,1:06:01.93,1:06:07.54,英文,,0,0,0,,But now I've laid the foundation for making a third page, a fourth page, that don't have all of that same copy-paste.
Dialogue: 0,1:06:07.54,1:06:10.16,英文,,0,0,0,,All right, so now let's go back into app.py.
Dialogue: 0,1:06:10.16,1:06:12.34,英文,,0,0,0,,Success.html is where I left off.
Dialogue: 0,1:06:12.34,1:06:14.66,英文,,0,0,0,,So OK, let me open my terminal window.
Dialogue: 0,1:06:14.66,1:06:25.51,英文,,0,0,0,,Let me code up a template called success.html, whose purpose in life is literally just going to be to say, you are registered, just so that we see some informative message on the screen.
Dialogue: 0,1:06:25.51,1:06:29.45,英文,,0,0,0,,So this part I do still need, extends layout.html.
Dialogue: 0,1:06:29.45,1:06:32.07,英文,,0,0,0,,So there's a little bit of copy-paste still.
Dialogue: 0,1:06:32.07,1:06:34.33,英文,,0,0,0,,Which is a little ugly, but so be it.
Dialogue: 0,1:06:34.33,1:06:36.15,英文,,0,0,0,,Block body for this template.
Dialogue: 0,1:06:36.15,1:06:40.17,英文,,0,0,0,,And I'm just going to say, you are registered, exclamation point.
Dialogue: 0,1:06:40.17,1:06:41.97,英文,,0,0,0,,All right, and then end block.
Dialogue: 0,1:06:41.97,1:06:47.39,英文,,0,0,0,,So super simple. It's just an informative message claiming that the student is registered.
Dialogue: 0,1:06:47.39,1:06:50.38,英文,,0,0,0,,All right, let's go back to the original form, which is this.
Dialogue: 0,1:06:50.38,1:06:53.74,英文,,0,0,0,,Let me reload to make sure my HTML has reloaded.
Dialogue: 0,1:06:53.74,1:06:58.38,英文,,0,0,0,,Type in David. I'm going to register again for soccer and click Register.
Dialogue: 0,1:06:58.38,1:07:01.77,英文,,0,0,0,,And oh, interesting, method not allowed.
Dialogue: 0,1:07:01.77,1:07:03.69,英文,,0,0,0,,So I'm not getting a 404 anymore.
Dialogue: 0,1:07:03.69,1:07:09.15,英文,,0,0,0,,I'm getting 405 at slash register.
Dialogue: 0,1:07:09.15,1:07:10.91,英文,,0,0,0,,What's the deduction here?
Dialogue: 0,1:07:10.91,1:07:12.21,英文,,0,0,0,,How did I screw up this time?
Dialogue: 0,1:07:12.21,1:07:16.40,英文,,0,0,0,,405 is progress.
Dialogue: 0,1:07:16.40,1:07:18.26,英文,,0,0,0,,Yeah?
Dialogue: 0,1:07:18.26,1:07:18.90,英文,,0,0,0,,So it's not.
Dialogue: 0,1:07:18.90,1:07:21.42,英文,,0,0,0,,The placeholder, I think, is OK.
Dialogue: 0,1:07:21.42,1:07:23.48,英文,,0,0,0,,This is now about the underlying HTTP stuff.
Dialogue: 0,1:07:23.48,1:07:31.22,英文,,0,0,0,,The method was not allowed. Say again? So get versus post thing, too.
Dialogue: 0,1:07:31.22,1:07:35.94,英文,,0,0,0,,So by default, all of these routes in Flask just, by default, assume get, because it's safe.
Dialogue: 0,1:07:35.94,1:07:39.43,英文,,0,0,0,,It doesn't allow you to send information to the server in quite the same way.
Dialogue: 0,1:07:39.43,1:07:46.59,英文,,0,0,0,,But if I do want to support post, recall that we changed this to be methods equals and then a list with, quote unquote, post in it.
Dialogue: 0,1:07:46.59,1:07:51.38,英文,,0,0,0,,So I just need to enable support for that method, that is, that HTTP verb.
Dialogue: 0,1:07:51.38,1:07:58.61,英文,,0,0,0,,All right, let's go back to the form, reload just to make sure I haven't screwed up, type in my name, David, select soccer from the dropdown, click Register.
Dialogue: 0,1:07:58.61,1:08:04.59,英文,,0,0,0,,And now I'm not only at slash register in the URL, it claims that I am indeed registered.
Dialogue: 0,1:08:04.59,1:08:06.47,英文,,0,0,0,,Now, of course, I've done nothing interesting.
Dialogue: 0,1:08:06.47,1:08:07.25,英文,,0,0,0,,There's no database.
Dialogue: 0,1:08:07.25,1:08:08.17,英文,,0,0,0,,There's no CSV file.
Dialogue: 0,1:08:08.17,1:08:09.62,英文,,0,0,0,,We'll get to that in a bit.
Dialogue: 0,1:08:09.62,1:08:15.26,英文,,0,0,0,,But at least I now have the plumbing in place to do something dynamic based on that sport.
Dialogue: 0,1:08:15.26,1:08:18.60,英文,,0,0,0,,All right, well, how can I now improve upon this?
Dialogue: 0,1:08:18.60,1:08:24.72,英文,,0,0,0,,How about we go ahead and implement, store the actual registrants in a dictionary in the computer's memory?
Dialogue: 0,1:08:24.72,1:08:28.29,英文,,0,0,0,,So instead of just claiming that they're registered, let's actually make a notation.
Dialogue: 0,1:08:28.29,1:08:36.59,英文,,0,0,0,,And the simplest way, as we did weeks ago in Python, is just store things in a variable in memory, like a list or a dictionary, a set, anything like that.
Dialogue: 0,1:08:36.59,1:08:39.61,英文,,0,0,0,,All right, well, let me go back into VS Code and in app.py.
Dialogue: 0,1:08:39.61,1:08:46.73,英文,,0,0,0,,And I think what I'm going to have to do here is change my register route to actually do some useful information.
Dialogue: 0,1:08:46.73,1:08:51.64,英文,,0,0,0,,But before I register the user, let's consider where I want to actually put them.
Dialogue: 0,1:08:51.64,1:08:53.84,英文,,0,0,0,,And so let me propose that.
Dialogue: 0,1:08:53.84,1:08:57.04,英文,,0,0,0,,How about we do this?
Dialogue: 0,1:08:57.04,1:08:58.58,英文,,0,0,0,,At the top of my file.
Dialogue: 0,1:08:58.58,1:09:06.60,英文,,0,0,0,,Let me go ahead and declare a global variable called registrants and set that equal to an empty dictionary.
Dialogue: 0,1:09:06.60,1:09:11.46,英文,,0,0,0,,So we've done this before when we were playing around previously with using dictionaries to store key value pairs.
Dialogue: 0,1:09:11.46,1:09:13.86,英文,,0,0,0,,And I'm going to propose that we store the registrants as a dictionary.
Dialogue: 0,1:09:13.86,1:09:17.61,英文,,0,0,0,,Why? Because I'm going to keep it simple, like the name
Dialogue: 0,1:09:17.61,1:09:22.57,英文,,0,0,0,,The key is going to be the student's name, and the value is going to be whatever sport they registered for.
Dialogue: 0,1:09:22.57,1:09:25.29,英文,,0,0,0,,So David in soccer, and Carter in basketball.
Dialogue: 0,1:09:25.29,1:09:31.07,英文,,0,0,0,,And so it kind of makes sense for a two-column dictionary, so to speak, as we often depict it on screen.
Dialogue: 0,1:09:31.07,1:09:32.73,英文,,0,0,0,,So how can I use this dictionary?
Dialogue: 0,1:09:32.73,1:09:34.38,英文,,0,0,0,,Well, let me go ahead and do this.
Dialogue: 0,1:09:34.38,1:09:37.18,英文,,0,0,0,,Down here under slash register.
Dialogue: 0,1:09:37.18,1:09:40.22,英文,,0,0,0,,Let me go ahead and initially do this.
Dialogue: 0,1:09:40.22,1:09:47.12,英文,,0,0,0,,How about we get the user's name from request.form.get and set it equal to whatever the value of name is.
Dialogue: 0,1:09:47.12,1:09:52.29,英文,,0,0,0,,And I'm not going to give a default value now because I don't want to call the student world or something strange like that.
Dialogue: 0,1:09:52.29,1:09:54.37,英文,,0,0,0,,I'm just going to assume for now that it's there.
Dialogue: 0,1:09:54.37,1:10:01.98,英文,,0,0,0,,Let's then create another variable called sport and do request.form.get quote unquote sport to get the student's sport.
Dialogue: 0,1:10:01.98,1:10:05.85,英文,,0,0,0,,And then let's go ahead and do this in the registrants
Dialogue: 0,1:10:05.85,1:10:09.55,英文,,0,0,0,,Dictionary, let's index into it using the student's name.
Dialogue: 0,1:10:09.55,1:10:12.78,英文,,0,0,0,,And let's set it equal to whatever the sport is.
Dialogue: 0,1:10:12.78,1:10:15.04,英文,,0,0,0,,So I've got these variables just to keep my code tidy.
Dialogue: 0,1:10:15.04,1:10:20.02,英文,,0,0,0,,And I'm now putting a key value pair in that dictionary.
Dialogue: 0,1:10:20.02,1:10:24.41,英文,,0,0,0,,All right, well, what do I want to now do?
Dialogue: 0,1:10:24.41,1:10:27.63,英文,,0,0,0,,And I'll go ahead and say success.html.
Dialogue: 0,1:10:27.63,1:10:28.81,英文,,0,0,0,,Sure, let's go ahead and do that.
Dialogue: 0,1:10:28.81,1:10:31.27,英文,,0,0,0,,But now I think success.html means that.
Dialogue: 0,1:10:31.27,1:10:33.86,英文,,0,0,0,,So let me go back to the form, reload.
Dialogue: 0,1:10:33.86,1:10:38.65,英文,,0,0,0,,Let me type in David and soccer register.
Dialogue: 0,1:10:38.65,1:10:45.58,英文,,0,0,0,,OK, let me go back and say Carter and basketball registered.
Dialogue: 0,1:10:45.58,1:10:48.58,英文,,0,0,0,,OK, now let's see what I want to do next.
Dialogue: 0,1:10:48.58,1:10:53.73,英文,,0,0,0,,How about I go into, let me give myself another route.
Dialogue: 0,1:10:53.73,1:10:54.91,英文,,0,0,0,,And let's play around here.
Dialogue: 0,1:10:54.91,1:10:58.93,英文,,0,0,0,,So app.route, let's give myself another third.
Dialogue: 0,1:10:58.93,1:11:06.18,英文,,0,0,0,,And I'm going to call this route called registrants, whose purpose in life is just to show me who all of those registrants are, just like you would expect from a website like this.
Dialogue: 0,1:11:06.18,1:11:09.89,英文,,0,0,0,,And then let me define a function called registrants or anything else.
Dialogue: 0,1:11:09.89,1:11:16.59,英文,,0,0,0,,And then let me return the rendering of a template called registrants.html.
Dialogue: 0,1:11:16.59,1:11:19.22,英文,,0,0,0,,And let me pass in, you know, this is kind of neat.
Dialogue: 0,1:11:19.22,1:11:22.68,英文,,0,0,0,,I can do registrants equals registrants, which, again, looks weird.
Dialogue: 0,1:11:22.68,1:11:23.80,英文,,0,0,0,,But what am I doing?
Dialogue: 0,1:11:23.80,1:11:33.07,英文,,0,0,0,,I'm presuming to pass in a placeholder called registrants, the value of which is this dictionary that I've been collecting all of the registrations in.
Dialogue: 0,1:11:33.07,1:11:39.43,英文,,0,0,0,,So similar to the name placeholder before, but it's a little more powerful because now it's a whole dictionary, not just a single string.
Dialogue: 0,1:11:39.43,1:11:42.27,英文,,0,0,0,,So I think now, let me be creative here.
Dialogue: 0,1:11:42.27,1:11:45.38,英文,,0,0,0,,Let me go into my templates.
Dialogue: 0,1:11:45.38,1:11:48.50,英文,,0,0,0,,under my templates folder.
Dialogue: 0,1:11:48.50,1:11:49.96,英文,,0,0,0,,And let's do this.
Dialogue: 0,1:11:49.96,1:11:52.99,英文,,0,0,0,,Let's go into my terminal window.
Dialogue: 0,1:11:52.99,1:12:00.53,英文,,0,0,0,,Let's create another template called registrants.html that's actually going to do this displaying of all of the registrants for us.
Dialogue: 0,1:12:00.53,1:12:06.53,英文,,0,0,0,,So extends layout.html, just so I can borrow all of the same HTML as before.
Dialogue: 0,1:12:06.53,1:12:09.87,英文,,0,0,0,,And let's define block body, just like before.
Dialogue: 0,1:12:09.87,1:12:16.66,英文,,0,0,0,,And inside of this, end block, I want to put, I don't know, like a bulleted list or an ordered list of all of the registrants.
Dialogue: 0,1:12:16.66,1:12:18.08,英文,,0,0,0,,So how can I do this?
Dialogue: 0,1:12:18.08,1:12:21.90,英文,,0,0,0,,Well, let's do an unordered list, ul.
Dialogue: 0,1:12:21.90,1:12:26.72,英文,,0,0,0,,And here's where Jinja and Flask, more generally, get kind of interesting.
Dialogue: 0,1:12:26.72,1:12:41.31,英文,,0,0,0,,I want there to be something like this, an li, and then the student's name, and then an li, yeah, like that, and then maybe sport, something like this.
Dialogue: 0,1:12:41.31,1:12:43.04,英文,,0,0,0,,But I didn't pass in a name.
Dialogue: 0,1:12:43.04,1:12:44.42,英文,,0,0,0,,I didn't pass in a sport.
Dialogue: 0,1:12:44.42,1:12:47.54,英文,,0,0,0,,I passed in the entire dictionary of registrants.
Dialogue: 0,1:12:47.54,1:12:56.02,英文,,0,0,0,,Now, in Python, if we were just doing something in the black and white terminal window and doing a command line program, I'd probably have some kind of for loop in Python.
Dialogue: 0,1:12:56.02,1:12:58.02,英文,,0,0,0,,Jinja does allow you to do this.
Dialogue: 0,1:12:58.02,1:13:06.71,英文,,0,0,0,,So a templating language tends to come with very lightweight mechanisms for doing placeholders, doing simple loops, doing simple conditions, so Python-like syntax.
Dialogue: 0,1:13:06.71,1:13:08.41,英文,,0,0,0,,And it's almost identical.
Dialogue: 0,1:13:08.41,1:13:09.93,英文,,0,0,0,,So watch what I can do.
Dialogue: 0,1:13:09.93,1:13:15.11,英文,,0,0,0,,Inside of this unordered list, let me not start to manually output a single li.
Dialogue: 0,1:13:15.11,1:13:17.13,英文,,0,0,0,,Let me use this syntax.
Dialogue: 0,1:13:17.13,1:13:21.75,英文,,0,0,0,,The same Jinja syntax that I used for block, so curly brace, percent sign.
Dialogue: 0,1:13:21.75,1:13:25.47,英文,,0,0,0,,And I'm going to say this, for name in registrants.
Dialogue: 0,1:13:25.47,1:13:29.53,英文,,0,0,0,,So this is just like Python syntax for iterating over a dictionary.
Dialogue: 0,1:13:29.53,1:13:33.22,英文,,0,0,0,,And now this is going to look stupid, but the opposite of that is end for.
Dialogue: 0,1:13:33.22,1:13:35.00,英文,,0,0,0,,So in HTML, you use the slash.
Dialogue: 0,1:13:35.00,1:13:39.38,英文,,0,0,0,,In Jinja, you literally use the word end, no space, and then the name of the keyword.
Dialogue: 0,1:13:39.38,1:13:41.54,英文,,0,0,0,,So end for is how you close this.
Dialogue: 0,1:13:41.54,1:13:44.20,英文,,0,0,0,,But this is where templating gets really cool.
Dialogue: 0,1:13:44.20,1:13:46.44,英文,,0,0,0,,You can now do li.
Dialogue: 0,1:13:46.44,1:13:50.90,英文,,0,0,0,,And in here, I can do something like that student's name.
Dialogue: 0,1:13:50.90,1:13:51.38,英文,,0,0,0,,And that's it.
Dialogue: 0,1:13:51.38,1:13:53.02,英文,,0,0,0,,I'm going to leave it like that.
Dialogue: 0,1:13:53.02,1:13:58.12,英文,,0,0,0,,And what I'm doing here is using really a template as templates are intended.
Dialogue: 0,1:13:58.12,1:14:02.34,英文,,0,0,0,,I've got the basic building blocks of what I want this output to look like.
Dialogue: 0,1:14:02.34,1:14:11.85,英文,,0,0,0,,But thanks to this little for loop here, thanks to Jinja syntax, the curly brace and the percent sign, I'm going to iterate over every dictionary printing out name, name, name, name.
Dialogue: 0,1:14:11.85,1:14:17.55,英文,,0,0,0,,And so if I've got two kids registered now, I'm going to see two LIs, David and Carter, respectively.
Dialogue: 0,1:14:17.55,1:14:18.39,英文,,0,0,0,,So let's see.
Dialogue: 0,1:14:18.39,1:14:20.61,英文,,0,0,0,,Let me go back to.
Dialogue: 0,1:14:20.61,1:14:24.17,英文,,0,0,0,,My froshims tab here.
Dialogue: 0,1:14:24.17,1:14:25.59,英文,,0,0,0,,And I don't have a link yet.
Dialogue: 0,1:14:25.59,1:14:28.92,英文,,0,0,0,,So I've got to do this manually, like a developer would.
Dialogue: 0,1:14:28.92,1:14:31.70,英文,,0,0,0,,Let me go to slash registrants.
Dialogue: 0,1:14:31.70,1:14:34.80,英文,,0,0,0,,And I'll zoom out and hit Enter.
Dialogue: 0,1:14:34.80,1:14:39.15,英文,,0,0,0,,And you'll see what you'll probably see, too, when making mistakes for the first time in this world.
Dialogue: 0,1:14:39.15,1:14:40.95,英文,,0,0,0,,So where is the error message?
Dialogue: 0,1:14:40.95,1:14:44.41,英文,,0,0,0,,Unfortunately, internal server error is not all that useful.
Dialogue: 0,1:14:44.41,1:14:46.55,英文,,0,0,0,,But we do tell you C terminal window.
Dialogue: 0,1:14:46.55,1:14:50.93,英文,,0,0,0,,So if I go to the Terminal window, I haven't been paying attention to this for quite some time.
Dialogue: 0,1:14:50.93,1:14:55.00,英文,,0,0,0,,And in fact, I have two Terminal windows open so that I can still use commands at the prompt.
Dialogue: 0,1:14:55.00,1:15:05.59,英文,,0,0,0,,But if I go back to my first Terminal window, a.k.a. Bash there, you'll see in your Terminal window, when developing web applications, all of the mistakes you made in the Terminal itself.
Dialogue: 0,1:15:05.59,1:15:08.99,英文,,0,0,0,,This is one of those Python tracebacks that's related to me screwing up here.
Dialogue: 0,1:15:08.99,1:15:12.87,英文,,0,0,0,,Now, let me go ahead here and let's see. Type error.
Dialogue: 0,1:15:12.87,1:15:21.47,英文,,0,0,0,,Function is not iterable. And block for name function is not iterable.
Dialogue: 0,1:15:21.47,1:15:23.75,英文,,0,0,0,,All right, so what mistake did I make?
Dialogue: 0,1:15:23.75,1:15:28.08,英文,,0,0,0,,Well, this is what happens when I don't follow my notes and make changes on the fly.
Dialogue: 0,1:15:28.08,1:15:31.86,英文,,0,0,0,,So I have this variable on line 5 called registrants, in all lowercase.
Dialogue: 0,1:15:31.86,1:15:38.36,英文,,0,0,0,,But what did I then do on the fly here in line 22?
Dialogue: 0,1:15:38.36,1:15:40.52,英文,,0,0,0,,I defined a function called registrant.
Dialogue: 0,1:15:40.52,1:15:41.82,英文,,0,0,0,,So like, newbie mistake.
Dialogue: 0,1:15:41.82,1:15:43.04,英文,,0,0,0,,Like, I shouldn't have done this.
Dialogue: 0,1:15:43.04,1:15:47.08,英文,,0,0,0,,I can't have a variable and a function of the same name because the symbols are literally identical.
Dialogue: 0,1:15:47.08,1:15:53.88,英文,,0,0,0,,So just to make clear that this variable up here is actually global, we'll use our convention like we did in C often.
Dialogue: 0,1:15:53.88,1:15:59.89,英文,,0,0,0,,When we had a global variable, we'll capitalize it all just to make it stand out like a constant value up there.
Dialogue: 0,1:15:59.89,1:16:04.19,英文,,0,0,0,,And so down here, what I'm going to do is pass in Registrants in all caps.
Dialogue: 0,1:16:04.19,1:16:05.25,英文,,0,0,0,,So that was stupid.
Dialogue: 0,1:16:05.25,1:16:06.55,英文,,0,0,0,,Didn't mean to confuse there.
Dialogue: 0,1:16:06.55,1:16:11.38,英文,,0,0,0,,But the reason for that error to be clear is that you can't have a function that's the same name as a variable.
Dialogue: 0,1:16:11.38,1:16:13.00,英文,,0,0,0,,I could just change the variable name altogether.
Dialogue: 0,1:16:13.00,1:16:18.34,英文,,0,0,0,,I'm gonna go ahead and just capitalize it to make it really stand out that this is in fact a global variable up top.
Dialogue: 0,1:16:18.34,1:16:21.11,英文,,0,0,0,,All right, now I'm gonna go back to my browser.
Dialogue: 0,1:16:21.11,1:16:26.70,英文,,0,0,0,,Let's do David and soccer.
Dialogue: 0,1:16:26.70,1:16:29.10,英文,,0,0,0,,All right, but there's going to be some other mistakes here.
Dialogue: 0,1:16:29.10,1:16:40.27,英文,,0,0,0,,So on line 17, let me go ahead and change this variable to be capitalized there, because indeed, I want to put the key and the value in this newly named variable as all capitals registrants.
Dialogue: 0,1:16:40.27,1:16:42.29,英文,,0,0,0,,Let me now go back to VS Code here.
Dialogue: 0,1:16:42.29,1:16:45.97,英文,,0,0,0,,Let me go back to the form, and let me start adding some data fresh.
Dialogue: 0,1:16:45.97,1:16:48.73,英文,,0,0,0,,Let me register David for soccer.
Dialogue: 0,1:16:48.73,1:16:51.51,英文,,0,0,0,,Clicking Register Now, and we should see you are registered.
Dialogue: 0,1:16:51.51,1:16:54.37,英文,,0,0,0,,But hopefully now, it's indeed in the computer's memory.
Dialogue: 0,1:16:54.37,1:17:00.20,英文,,0,0,0,,Let me go back and register now Carter for basketball, clicking Register again.
Dialogue: 0,1:17:00.20,1:17:01.90,英文,,0,0,0,,And hopefully, it's now registered.
Dialogue: 0,1:17:01.90,1:17:10.25,英文,,0,0,0,,If I now change my route manually to b slash registrants, which is this newly added route that I made, and hit Enter, now I see.
Dialogue: 0,1:17:10.25,1:17:10.83,英文,,0,0,0,,Thank god.
Dialogue: 0,1:17:10.83,1:17:11.93,英文,,0,0,0,,Now I see.
Dialogue: 0,1:17:11.93,1:17:15.69,英文,,0,0,0,,The unordered list containing everything in the computer's memory.
Dialogue: 0,1:17:15.69,1:17:20.33,英文,,0,0,0,,So when I say you are registered, I kind of mean it now, because the server is still running.
Dialogue: 0,1:17:20.33,1:17:26.49,英文,,0,0,0,,And in the computer's memory is, in this registrant global variable, a dictionary of key value pairs.
Dialogue: 0,1:17:26.49,1:17:29.15,英文,,0,0,0,,Of course, we're only seeing the keys at the moment.
Dialogue: 0,1:17:29.15,1:17:32.83,英文,,0,0,0,,So it might be nice to actually see the values as well.
Dialogue: 0,1:17:32.83,1:17:35.85,英文,,0,0,0,,So let me go back to VS Code.
Dialogue: 0,1:17:35.85,1:17:38.78,英文,,0,0,0,,And let me go into registrants.html.
Dialogue: 0,1:17:38.78,1:17:40.32,英文,,0,0,0,,And I'll just do something a little messy.
Dialogue: 0,1:17:40.32,1:17:51.81,英文,,0,0,0,,I'll just say, how about, well, just to make it a sentence, is registered. for, and now another placeholder, I'm going to say registrants bracket name.
Dialogue: 0,1:17:51.81,1:18:02.68,英文,,0,0,0,,So just like in Python, if registrants is itself a dictionary, registrants bracket, and then the key you want to index into is perfectly valid syntax as well.
Dialogue: 0,1:18:02.68,1:18:06.00,英文,,0,0,0,,So now let me go back to slash registrants.
Dialogue: 0,1:18:06.00,1:18:08.14,英文,,0,0,0,,Let me click Reload again.
Dialogue: 0,1:18:08.14,1:18:09.92,英文,,0,0,0,,So why isn't it working, everyone?
Dialogue: 0,1:18:09.92,1:18:12.68,英文,,0,0,0,,What's the bug that I introduced earlier?
Dialogue: 0,1:18:12.68,1:18:19.25,英文,,0,0,0,,If David is registered for none and Carter is registered for none, but David and Carter are in the dictionary, that's a good thing.
Dialogue: 0,1:18:19.25,1:18:21.23,英文,,0,0,0,,So some of the data is in there.
Dialogue: 0,1:18:21.23,1:18:23.89,英文,,0,0,0,,So why are there no sports associated?
Dialogue: 0,1:18:23.89,1:18:31.39,英文,,0,0,0,,Well, the first thing I literally just did in front of you all was I went to app.py, and I stared at line 17 thinking, how did I screw this up?
Dialogue: 0,1:18:31.39,1:18:35.66,英文,,0,0,0,,I'm putting sport as the value of the key, which is the student's name.
Dialogue: 0,1:18:35.66,1:18:38.14,英文,,0,0,0,,All right, line 17 looked fine to me a few seconds ago.
Dialogue: 0,1:18:38.14,1:18:40.76,英文,,0,0,0,,So I looked then with my eyes at line 16.
Dialogue: 0,1:18:40.76,1:18:41.96,英文,,0,0,0,,And this, too, looked OK.
Dialogue: 0,1:18:41.96,1:18:46.90,英文,,0,0,0,,My first thought was, oh, did I use request.args instead of request.form instead?
Dialogue: 0,1:18:46.90,1:18:49.23,英文,,0,0,0,,Because that would have assumed get instead of post.
Dialogue: 0,1:18:49.23,1:18:51.49,英文,,0,0,0,,But no, that looks OK, too.
Dialogue: 0,1:18:51.49,1:18:55.61,英文,,0,0,0,,So then my final instinct was, oh, my god, did I screw up the HTML form?
Dialogue: 0,1:18:55.61,1:18:58.29,英文,,0,0,0,,And so that's why I went back over to my tab here.
Dialogue: 0,1:18:58.29,1:19:01.36,英文,,0,0,0,,I went to the original form here.
Dialogue: 0,1:19:01.36,1:19:03.56,英文,,0,0,0,,I then view page source.
Dialogue: 0,1:19:03.56,1:19:07.86,英文,,0,0,0,,And this might not be as obvious to you if you've never seen the Select menu before.
Dialogue: 0,1:19:07.86,1:19:15.19,英文,,0,0,0,,What is apparently missing here that might explain my mistake?
Dialogue: 0,1:19:15.19,1:19:19.01,英文,,0,0,0,,Yeah, I didn't name this form field, quote unquote, sport.
Dialogue: 0,1:19:19.01,1:19:23.47,英文,,0,0,0,,Now, to be fair, you haven't seen me do this as a Select menu before, and it's different from this input.
Dialogue: 0,1:19:23.47,1:19:28.54,英文,,0,0,0,,When you have an input tag, you literally say name equals whatever on the input tag.
Dialogue: 0,1:19:28.54,1:19:31.84,英文,,0,0,0,,It turns out, I don't know why I skipped this earlier. I probably meant to come back to it.
Dialogue: 0,1:19:31.84,1:19:34.96,英文,,0,0,0,,The Select tag also can take a name parameter.
Dialogue: 0,1:19:34.96,1:19:40.46,英文,,0,0,0,,So if I go back to the name parameter, Here, and go back and add the name parameter.
Dialogue: 0,1:19:40.46,1:19:44.13,英文,,0,0,0,,Let me go into that template, which is index.html.
Dialogue: 0,1:19:44.13,1:19:55.59,英文,,0,0,0,,Let me add name equals quote unquote sport in all lowercase, which is different from the visual aesthetic of this temporary disabled option that's just there to make things prettier for the human.
Dialogue: 0,1:19:55.59,1:19:58.05,英文,,0,0,0,,Now, let me go ahead here.
Dialogue: 0,1:19:58.05,1:20:01.79,英文,,0,0,0,,And first, I'm going to go into my terminal window.
Dialogue: 0,1:20:01.79,1:20:11.00,英文,,0,0,0,,And I'm actually going to hit Control-C to stop the server altogether, because I want to throw away the contents of memory and therefore get rid of that dictionary that had David and Carter and those none values.
Dialogue: 0,1:20:11.00,1:20:13.70,英文,,0,0,0,,So this is sort of me clearing the computer's memory.
Dialogue: 0,1:20:13.70,1:20:16.22,英文,,0,0,0,,I'm going to rerun Flask run.
Dialogue: 0,1:20:16.22,1:20:17.95,英文,,0,0,0,,I get that same URL as before.
Dialogue: 0,1:20:17.95,1:20:20.23,英文,,0,0,0,,So I'm going to hover over that and open the new tab.
Dialogue: 0,1:20:20.23,1:20:22.91,英文,,0,0,0,,And just to be sure, I'm going to do View Page Source.
Dialogue: 0,1:20:22.91,1:20:28.33,英文,,0,0,0,,And here, I see now, OK, now the form has both a name and a sport in it.
Dialogue: 0,1:20:28.33,1:20:32.69,英文,,0,0,0,,All right, now I'm really going to cross my fingers, because I intend for this now to work.
Dialogue: 0,1:20:32.69,1:20:35.27,英文,,0,0,0,,David will register again for soccer.
Dialogue: 0,1:20:35.27,1:20:36.31,英文,,0,0,0,,Register.
Dialogue: 0,1:20:36.31,1:20:37.37,英文,,0,0,0,,Claims we are registered.
Dialogue: 0,1:20:37.37,1:20:41.02,英文,,0,0,0,,I'm going to go back and do it again for Carter and basketball.
Dialogue: 0,1:20:41.02,1:20:42.00,英文,,0,0,0,,Register.
Dialogue: 0,1:20:42.00,1:20:51.90,英文,,0,0,0,,We still don't have a link, so I'm going to manually go up to the URL and change slash register to registrants as before, zooming out, and hit Enter.
Dialogue: 0,1:20:51.90,1:20:55.70,英文,,0,0,0,,And thank god, now I'm actually registered properly for this.
Dialogue: 0,1:20:55.70,1:21:01.28,英文,,0,0,0,,So thank you.
Dialogue: 0,1:21:01.28,1:21:04.28,英文,,0,0,0,,So what is it, like 20 years later, I'm still struggling to implement this site?
Dialogue: 0,1:21:04.28,1:21:11.28,英文,,0,0,0,,OK, so here now we have, for the first time in Python and web stuff, now we have a proper web application.
Dialogue: 0,1:21:11.28,1:21:13.94,英文,,0,0,0,,And it's not just echoing back, hello, David, hello, Carter.
Dialogue: 0,1:21:13.94,1:21:15.66,英文,,0,0,0,,This could now work for any of you.
Dialogue: 0,1:21:15.66,1:21:17.18,英文,,0,0,0,,And it's currently served privately.
Dialogue: 0,1:21:17.18,1:21:22.33,英文,,0,0,0,,But if I made this URL public, I could put this on the web now and let anyone in the world register.
Dialogue: 0,1:21:22.33,1:21:24.99,英文,,0,0,0,,But there's kind of some issues here.
Dialogue: 0,1:21:24.99,1:21:27.71,英文,,0,0,0,,There's some security flaws, potentially.
Dialogue: 0,1:21:27.71,1:21:30.81,英文,,0,0,0,,And so, for instance, let me go back to the web form here.
Dialogue: 0,1:21:30.81,1:21:43.50,英文,,0,0,0,,And let me open up the Inspect tab, the Developer Tools, and just remind you that anyone on the internet, not only you, the developer, but an adversary, can see all of your HTML, see all of your CSS, see all of your JavaScript.
Dialogue: 0,1:21:43.50,1:21:52.22,英文,,0,0,0,,But more importantly, because this is all client-side in the browser, there is literally nothing technically stopping them from changing the HTML
Dialogue: 0,1:21:52.22,1:21:56.21,英文,,0,0,0,,Or at least their copy of it. And I did that last week with Yale. I changed their website.
Dialogue: 0,1:21:56.21,1:21:58.45,英文,,0,0,0,,But no, I changed my copy of their website.
Dialogue: 0,1:21:58.45,1:22:02.63,英文,,0,0,0,,But when forms get involved, you could maybe be actually malicious now.
Dialogue: 0,1:22:02.63,1:22:17.64,英文,,0,0,0,,Because even though this dropdown menu only has basketball, soccer, and ultimate frisbee, suppose I really want to register for how about, let's say, name your favorite sport.
Dialogue: 0,1:22:17.64,1:22:22.80,英文,,0,0,0,,Volleyball, we really want to register for volleyball, but this website won't let me.
Dialogue: 0,1:22:22.80,1:22:29.15,英文,,0,0,0,,Well, there's nothing stopping me from going under the Elements tab in my browser, going into this Select menu here.
Dialogue: 0,1:22:29.15,1:22:31.07,英文,,0,0,0,,And you know what?
Dialogue: 0,1:22:31.07,1:22:34.05,英文,,0,0,0,,Ultimate frisbee, let's change this to Volleyball.
Dialogue: 0,1:22:34.05,1:22:37.69,英文,,0,0,0,,And let's change this to Volleyball, Enter.
Dialogue: 0,1:22:37.69,1:22:40.37,英文,,0,0,0,,I'm going to close the inspector now.
Dialogue: 0,1:22:40.37,1:22:45.34,英文,,0,0,0,,And as requested, now we support volleyball in the form.
Dialogue: 0,1:22:45.34,1:22:47.48,英文,,0,0,0,,It's not changed on the server, to be fair.
Dialogue: 0,1:22:47.48,1:22:49.44,英文,,0,0,0,,But think about how HTTP works.
Dialogue: 0,1:22:49.44,1:22:56.09,英文,,0,0,0,,When I fill out this with, say, let's see, Bernie's name, Bernie really wants to register for volleyball as well.
Dialogue: 0,1:22:56.09,1:23:00.55,英文,,0,0,0,,At the moment, my code is just going to trust that what's in request.form
Dialogue: 0,1:23:00.55,1:23:07.37,英文,,0,0,0,,is what was in the original form itself, no matter whether the human adversarially actually changed it.
Dialogue: 0,1:23:07.37,1:23:22.52,英文,,0,0,0,,So if I actually submit this form and click Register for Bernie and Volleyball, even though that's not one of the supported available sports, if I now go to Registrants, my website nonetheless has trusted that Bernie, and perhaps you, are registered for volleyball.
Dialogue: 0,1:23:22.52,1:23:23.90,英文,,0,0,0,,So what's the implication of this?
Dialogue: 0,1:23:23.90,1:23:28.63,英文,,0,0,0,,This has surely happened in the past, when really poorly implemented websites
Dialogue: 0,1:23:28.63,1:23:33.03,英文,,0,0,0,,allow you to specify the price of an item, for instance, in your shopping cart.
Dialogue: 0,1:23:33.03,1:23:39.19,英文,,0,0,0,,And they just trust that when you click Submit or Add to Cart, it adds the price to the back-end server.
Dialogue: 0,1:23:39.19,1:23:48.83,英文,,0,0,0,,If you're not validating the price and making sure, as with a database, that, wait a minute, that price is valid, or, wait a minute, those sports are valid, who knows what people are going to do to your site?
Dialogue: 0,1:23:48.83,1:23:53.13,英文,,0,0,0,,And it's that simple to actually hack a website accordingly.
Dialogue: 0,1:23:53.13,1:23:57.81,英文,,0,0,0,,Now, we can very easily fix this with some Some week six style Python.
Dialogue: 0,1:23:57.81,1:23:59.98,英文,,0,0,0,,We really just need to do a bit of logic here.
Dialogue: 0,1:23:59.98,1:24:01.44,英文,,0,0,0,,And so let me propose this.
Dialogue: 0,1:24:01.44,1:24:03.72,英文,,0,0,0,,Let me go into app.py here.
Dialogue: 0,1:24:03.72,1:24:11.00,英文,,0,0,0,,And at the very top, let me also create, how about, a global variable called SPORTS, in all caps.
Dialogue: 0,1:24:11.00,1:24:16.06,英文,,0,0,0,,And I'm going to set that equal to, in square brackets, the list of sports I actually want to support.
Dialogue: 0,1:24:16.06,1:24:18.04,英文,,0,0,0,,So I'm going to put in basketball here.
Dialogue: 0,1:24:18.04,1:24:19.70,英文,,0,0,0,,I'm going to put in soccer here.
Dialogue: 0,1:24:19.70,1:24:21.68,英文,,0,0,0,,And I'm sorry, no volleyball officially.
Dialogue: 0,1:24:21.68,1:24:23.16,英文,,0,0,0,,I'm going to put in ultimate football.
Dialogue: 0,1:24:23.16,1:24:24.02,英文,,0,0,0,,Frisbee here.
Dialogue: 0,1:24:24.02,1:24:27.01,英文,,0,0,0,,So I've got this global list of supported sports.
Dialogue: 0,1:24:27.01,1:24:29.73,英文,,0,0,0,,Now think about how I made this form a while ago.
Dialogue: 0,1:24:29.73,1:24:31.61,英文,,0,0,0,,I just hard-coded these sports here.
Dialogue: 0,1:24:31.61,1:24:33.09,英文,,0,0,0,,Well, I don't have to do that.
Dialogue: 0,1:24:33.09,1:24:37.15,英文,,0,0,0,,I can sort of draw upon my own official list of sports instead.
Dialogue: 0,1:24:37.15,1:24:41.93,英文,,0,0,0,,So let me scroll down to my index.html rendering template here.
Dialogue: 0,1:24:41.93,1:24:44.54,英文,,0,0,0,,Let me say that the sports I want to support are these.
Dialogue: 0,1:24:44.54,1:24:51.44,英文,,0,0,0,,So just using the same placeholder trick as before, but I'm now telling the template what sports we currently support.
Dialogue: 0,1:24:51.44,1:24:56.39,英文,,0,0,0,,Now, if I go back into index.html, I don't have to manually do any of this.
Dialogue: 0,1:24:56.39,1:25:00.73,英文,,0,0,0,,Let me get rid of all three of those options, which I manually inputted earlier.
Dialogue: 0,1:25:00.73,1:25:06.56,英文,,0,0,0,,Let me use my new trick with Jinja syntax and say for sport in sports.
Dialogue: 0,1:25:06.56,1:25:09.58,英文,,0,0,0,,Let me proactively say end for, just to finish that thought.
Dialogue: 0,1:25:09.58,1:25:15.44,英文,,0,0,0,,And then in here, let me do option, value equals, in curly braces, sports.
Dialogue: 0,1:25:15.44,1:25:19.74,英文,,0,0,0,,And then so that the human also sees the same words, I'm going to say sport out here.
Dialogue: 0,1:25:19.74,1:25:25.99,英文,,0,0,0,,So I've completely changed what was hardcoded, manually typed, to something now that's completely dynamic.
Dialogue: 0,1:25:25.99,1:25:30.07,英文,,0,0,0,,So now it's not going to stop someone adversarially like me from changing the HTML.
Dialogue: 0,1:25:30.07,1:25:33.99,英文,,0,0,0,,But watch this. The behavior on the form, if we go back,
Dialogue: 0,1:25:33.99,1:25:37.20,英文,,0,0,0,,is still now the same dropdown as before.
Dialogue: 0,1:25:37.20,1:25:40.94,英文,,0,0,0,,So aesthetically, it looks the same. But you know what? Why don't we be clever now?
Dialogue: 0,1:25:40.94,1:25:44.46,英文,,0,0,0,,And let's go into app.py and the slash register route.
Dialogue: 0,1:25:44.46,1:25:46.69,英文,,0,0,0,,And why don't we say this?
Dialogue: 0,1:25:46.69,1:25:57.47,英文,,0,0,0,,If, how about sport, not in sports, then let's return render. Template failure.html.
Dialogue: 0,1:25:57.47,1:25:59.10,英文,,0,0,0,,Now, this template doesn't exist yet.
Dialogue: 0,1:25:59.10,1:26:01.00,英文,,0,0,0,,So let me just quickly make this real fast.
Dialogue: 0,1:26:01.00,1:26:03.26,英文,,0,0,0,,I'm going to copy that code from before.
Dialogue: 0,1:26:03.26,1:26:08.51,英文,,0,0,0,,Let me create a code file in failure.html.
Dialogue: 0,1:26:08.51,1:26:11.37,英文,,0,0,0,,I'm just going to paste this here. So we have a super simple error message.
Dialogue: 0,1:26:11.37,1:26:13.41,英文,,0,0,0,,And I'm going to say, you are not registered.
Dialogue: 0,1:26:13.41,1:26:15.89,英文,,0,0,0,,Just that's what we mean by failure.
Dialogue: 0,1:26:15.89,1:26:19.10,英文,,0,0,0,,And now in app.py, consider what logic I've added.
Dialogue: 0,1:26:19.10,1:26:29.33,英文,,0,0,0,,Sports, in all caps on line 22, is that same global list as before by asking, Pythonically, if sport not in sports, well, then you hacked me.
Dialogue: 0,1:26:29.33,1:26:34.55,英文,,0,0,0,,Like, you tried to inject volleyball or some other sport into request.form.
Dialogue: 0,1:26:34.55,1:26:38.18,英文,,0,0,0,,So I'm just going to say, no, failure, not letting you register.
Dialogue: 0,1:26:38.18,1:26:40.98,英文,,0,0,0,,And I can do this a little more.
Dialogue: 0,1:26:40.98,1:26:43.94,英文,,0,0,0,,Verbosely, too, why don't I also say this?
Dialogue: 0,1:26:43.94,1:26:51.20,英文,,0,0,0,,If not name, so if the name is blank, let's similarly return a render template of failure.html.
Dialogue: 0,1:26:51.20,1:26:55.72,英文,,0,0,0,,In other words, if you didn't give me a name, you left it blank, that's not useful for me running the sports program.
Dialogue: 0,1:26:55.72,1:26:58.01,英文,,0,0,0,,Let's also consider that to be a failure.
Dialogue: 0,1:26:58.01,1:27:02.97,英文,,0,0,0,,So if I go back to this tab now, I'm going to reload just to make sure I have the latest client side.
Dialogue: 0,1:27:02.97,1:27:06.21,英文,,0,0,0,,Let me be lazy and just click Register. Enter.
Dialogue: 0,1:27:06.21,1:27:09.01,英文,,0,0,0,,You are not registered, because I didn't give it an actual name.
Dialogue: 0,1:27:09.01,1:27:10.37,英文,,0,0,0,,All right, well, let's go back.
Dialogue: 0,1:27:10.37,1:27:13.53,英文,,0,0,0,,How about I now type David, but I'm not going to choose a sport.
Dialogue: 0,1:27:13.53,1:27:15.64,英文,,0,0,0,,I just want to register myself.
Dialogue: 0,1:27:15.64,1:27:17.64,英文,,0,0,0,,Nope, that did not work now.
Dialogue: 0,1:27:17.64,1:27:20.34,英文,,0,0,0,,Let me go ahead here and choose soccer.
Dialogue: 0,1:27:20.34,1:27:21.84,英文,,0,0,0,,This, I think.
Dialogue: 0,1:27:21.84,1:27:22.94,英文,,0,0,0,,Does work.
Dialogue: 0,1:27:22.94,1:27:28.93,英文,,0,0,0,,Let me go back now and try this hacker trick, whereby I go into the dropdown menu.
Dialogue: 0,1:27:28.93,1:27:31.23,英文,,0,0,0,,I go into the Select menu.
Dialogue: 0,1:27:31.23,1:27:34.85,英文,,0,0,0,,I change, as before, Ultimate Frisbee to Volleyball.
Dialogue: 0,1:27:34.85,1:27:38.20,英文,,0,0,0,,And I'll change this one here to Volleyball.
Dialogue: 0,1:27:38.20,1:27:40.28,英文,,0,0,0,,Let me close the tab now.
Dialogue: 0,1:27:40.28,1:27:42.68,英文,,0,0,0,,This looks like it's available now.
Dialogue: 0,1:27:42.68,1:27:47.11,英文,,0,0,0,,But when I click Register this time, it says you are not registered.
Dialogue: 0,1:27:47.11,1:27:54.65,英文,,0,0,0,,And this is much better than relying on other techniques you might see or have seen online with regard to HTML, because there's also this trick.
Dialogue: 0,1:27:54.65,1:27:56.41,英文,,0,0,0,,Let me go back to the screen here.
Dialogue: 0,1:27:56.41,1:27:58.57,英文,,0,0,0,,Let me go back to index.html.
Dialogue: 0,1:27:58.57,1:28:03.71,英文,,0,0,0,,And you might have seen online, or you might eventually see online, that there's other attributes you can use, like required.
Dialogue: 0,1:28:03.71,1:28:06.69,英文,,0,0,0,,You can literally tell the browser, uh-uh, this field is required.
Dialogue: 0,1:28:06.69,1:28:08.23,英文,,0,0,0,,You cannot leave it blank.
Dialogue: 0,1:28:08.23,1:28:16.52,英文,,0,0,0,,If I go back to the browser now, reload, and I, again, presume to be lazy, and I don't type in any name and click Register, OK, so that's kind of nice.
Dialogue: 0,1:28:16.52,1:28:20.96,英文,,0,0,0,,Now the browser is being a little more helpful for me, saying, no, no, no.
Dialogue: 0,1:28:20.96,1:28:21.81,英文,,0,0,0,,This is required.
Dialogue: 0,1:28:21.81,1:28:23.29,英文,,0,0,0,,You have to fill this out.
Dialogue: 0,1:28:23.29,1:28:28.09,英文,,0,0,0,,But again, if you know what you're doing, OK, well, I disagree with your requiring a name of me.
Dialogue: 0,1:28:28.09,1:28:29.55,英文,,0,0,0,,Let me go in here.
Dialogue: 0,1:28:29.55,1:28:31.37,英文,,0,0,0,,Let me go over to this tag.
Dialogue: 0,1:28:31.37,1:28:35.52,英文,,0,0,0,,Let me delete the required attribute, and now
Dialogue: 0,1:28:35.52,1:28:38.58,英文,,0,0,0,,I slipped through, but I didn't slip through on the server.
Dialogue: 0,1:28:38.58,1:28:40.68,英文,,0,0,0,,And so there's a difference here and an important distinction.
Dialogue: 0,1:28:40.68,1:28:43.36,英文,,0,0,0,,And so many people in the real world still screw this up.
Dialogue: 0,1:28:43.36,1:28:49.10,英文,,0,0,0,,There's client-side validation, like actually checking that the data is, as you expect, on the client side, the browser.
Dialogue: 0,1:28:49.10,1:28:50.75,英文,,0,0,0,,And there's server-side validation.
Dialogue: 0,1:28:50.75,1:28:55.51,英文,,0,0,0,,And even though client-side validation, like adding that required attribute, makes things more user-friendly.
Dialogue: 0,1:28:55.51,1:28:57.89,英文,,0,0,0,,That was a pretty little pop-up. It tells me that it's required.
Dialogue: 0,1:28:57.89,1:29:00.39,英文,,0,0,0,,It just looks better than the previous version.
Dialogue: 0,1:29:00.39,1:29:01.93,英文,,0,0,0,,It is not trustable.
Dialogue: 0,1:29:01.93,1:29:11.68,英文,,0,0,0,,You cannot trust any input that ever comes from the user, because clearly, with an hour or so of CS50, they can learn how to turn all of these defenses off.
Dialogue: 0,1:29:11.68,1:29:18.82,英文,,0,0,0,,So even if you like the user interface better, client-side, you have to, have to, have to do server-side validation always.
Dialogue: 0,1:29:18.82,1:29:20.20,英文,,0,0,0,,Users are not to be trusted.
Dialogue: 0,1:29:20.20,1:29:23.27,英文,,0,0,0,,And as soon as any app or website you make becomes popular,
Dialogue: 0,1:29:23.27,1:29:27.64,英文,,0,0,0,,Unfortunately, then you have to deal with all of the adversarial possibilities as well.
Dialogue: 0,1:29:34.52,1:29:35.10,英文,,0,0,0,,Oh, good question.
Dialogue: 0,1:29:35.10,1:29:39.12,英文,,0,0,0,,Could the adversary potentially access things sensitive, like app.py?
Dialogue: 0,1:29:39.12,1:29:40.50,英文,,0,0,0,,Theoretically, no.
Dialogue: 0,1:29:40.50,1:29:43.15,英文,,0,0,0,,If Flask itself is buggy, then sure, maybe.
Dialogue: 0,1:29:43.15,1:29:47.87,英文,,0,0,0,,If you're running some other software on your server, on your laptop, then sure, it's possible.
Dialogue: 0,1:29:47.87,1:29:52.79,英文,,0,0,0,,However, if your server is properly configured, theoretically, they should not be able to get access to that.
Dialogue: 0,1:29:52.79,1:30:02.14,英文,,0,0,0,,With that said, we'll soon see, or you might with your final project, if you do something web-based, You're never going to want to write, like, usernames and passwords in your actual code.
Dialogue: 0,1:30:02.14,1:30:04.31,英文,,0,0,0,,You can put them in what are called environment variables.
Dialogue: 0,1:30:04.31,1:30:09.21,英文,,0,0,0,,So sort of in the computer's memory, but not in your code, just in case you or someone screws up.
Dialogue: 0,1:30:09.21,1:30:14.74,英文,,0,0,0,,There are still ways to defend against those kinds of possibilities, however slim.
Dialogue: 0,1:30:14.74,1:30:15.88,英文,,0,0,0,,Yeah?
Dialogue: 0,1:30:22.44,1:30:26.08,英文,,0,0,0,,A good question, and this comes back to first principles, just like in C and in Python.
Dialogue: 0,1:30:26.08,1:30:29.18,英文,,0,0,0,,As soon as you return from a function, that's it.
Dialogue: 0,1:30:29.18,1:30:31.70,英文,,0,0,0,,Nothing below that line of code executes.
Dialogue: 0,1:30:31.70,1:30:41.96,英文,,0,0,0,,And so to summarize the question, even though I'm returning this failure.html template, how am I making sure we still don't accidentally put volleyball in that global dictionary?
Dialogue: 0,1:30:41.96,1:30:48.28,英文,,0,0,0,,It's because, for instance, if you don't give me a name on line 22 at the moment, I'm returning the failure template, and that's it.
Dialogue: 0,1:30:48.28,1:30:51.94,英文,,0,0,0,,Lines 23, 24, 25, 26, 27 never execute.
Dialogue: 0,1:30:51.94,1:30:54.46,英文,,0,0,0,,In particular, 26 never executes.
Dialogue: 0,1:30:54.46,1:30:56.89,英文,,0,0,0,,And that's where I would have been saving the name.
Dialogue: 0,1:30:56.89,1:31:07.49,英文,,0,0,0,,Similarly, if we get an invalid sport that is either blank or not in the original authoritative list, we return failure.html as a template in line 25.
Dialogue: 0,1:31:07.49,1:31:09.53,英文,,0,0,0,,We never get to line 26.
Dialogue: 0,1:31:09.53,1:31:13.39,英文,,0,0,0,,So it just boils down to return and what that means in Python 2.
Dialogue: 0,1:31:13.39,1:31:15.02,英文,,0,0,0,,Good question.
Dialogue: 0,1:31:15.02,1:31:18.45,英文,,0,0,0,,Other questions as well.
Dialogue: 0,1:31:18.45,1:31:23.27,英文,,0,0,0,,All right, how about we make one more enhancement here or so?
Dialogue: 0,1:31:23.27,1:31:30.06,英文,,0,0,0,,Because the problem with storing everything in this global dictionary might be what?
Dialogue: 0,1:31:30.06,1:31:32.22,英文,,0,0,0,,We've got it all working, finally.
Dialogue: 0,1:31:32.22,1:31:39.88,英文,,0,0,0,,But why is probably a global dictionary not the place to store Frosh IM's registration data?
Dialogue: 0,1:31:39.88,1:31:43.69,英文,,0,0,0,,What's the implication of this?
Dialogue: 0,1:31:43.69,1:31:46.72,英文,,0,0,0,,OK, it might slow the whole process down, but RAM is actually good.
Dialogue: 0,1:31:46.72,1:31:48.62,英文,,0,0,0,,Memory is actually generally a good thing.
Dialogue: 0,1:31:48.62,1:31:51.26,英文,,0,0,0,,So not going to be a deal breaker here.
Dialogue: 0,1:31:51.26,1:31:57.09,英文,,0,0,0,,Why might I not want to store that data, though, in that variable?
Dialogue: 0,1:31:57.09,1:32:04.52,英文,,0,0,0,,You can perhaps infer how I fixed something earlier. Yeah, in back.
Dialogue: 0,1:32:04.52,1:32:10.36,英文,,0,0,0,,Yeah, the memory gets deleted, garbage collected, if you will, as soon as Flask stops running.
Dialogue: 0,1:32:10.36,1:32:17.55,英文,,0,0,0,,So if you so much as hit Control-C, like you've just lost all of your freshmen who registered for the sport, probably not a good thing.
Dialogue: 0,1:32:17.55,1:32:22.65,英文,,0,0,0,,I did this deliberately a moment ago, and I hit Control-C because I did want to clear the dictionary.
Dialogue: 0,1:32:22.65,1:32:31.64,英文,,0,0,0,,But trusting that your server will never crash, and your code will always work, and the power will never go out, that's not the right way to build any kind of web application with persistent data.
Dialogue: 0,1:32:31.64,1:32:34.03,英文,,0,0,0,,So what we probably want to do is reintroduce CSVs.
Dialogue: 0,1:32:34.03,1:32:36.21,英文,,0,0,0,,And we've played with those in C and in Python.
Dialogue: 0,1:32:36.21,1:32:37.57,英文,,0,0,0,,Could totally use CSVs.
Dialogue: 0,1:32:37.57,1:32:41.11,英文,,0,0,0,,But we also now have SQL at our disposal.
Dialogue: 0,1:32:41.11,1:32:43.89,英文,,0,0,0,,And let me propose that we do this in SQL instead.
Dialogue: 0,1:32:43.89,1:32:47.94,英文,,0,0,0,,And for this, let me go ahead and open up a version of the program that I wrote in advance.
Dialogue: 0,1:32:47.94,1:32:54.32,英文,,0,0,0,,So let me go ahead and close these templates, which will look very similar but a little different from the ones I wrote in advance.
Dialogue: 0,1:32:54.32,1:32:57.02,英文,,0,0,0,,And let me go ahead and open up.
Dialogue: 0,1:32:57.02,1:32:59.40,英文,,0,0,0,,In today's, let me go into Source 9.
Dialogue: 0,1:32:59.40,1:33:05.95,英文,,0,0,0,,Let me go into Frosh IM's, how about, version 4, technically, in the versions online.
Dialogue: 0,1:33:05.95,1:33:08.95,英文,,0,0,0,,And let me go ahead and open up app.py as follows.
Dialogue: 0,1:33:08.95,1:33:12.43,英文,,0,0,0,,So here is an already made version that does just a little something different.
Dialogue: 0,1:33:12.43,1:33:20.06,英文,,0,0,0,,At the very top, I'm importing CS50's SQL library, which you might recall we used a couple of weeks past, just to write Python that talks to a SQL database.
Dialogue: 0,1:33:20.06,1:33:22.82,英文,,0,0,0,,And this feels like an opportune moment to bring that idea back.
Dialogue: 0,1:33:22.82,1:33:30.36,英文,,0,0,0,,Down here on line 8, I'm creating a db variable that opens up a file called froshims.db using syntax that we've seen before.
Dialogue: 0,1:33:30.36,1:33:37.77,英文,,0,0,0,,I did create this froshims.db file in advance of class just so that we have a couple of columns in which to store names and sports and such.
Dialogue: 0,1:33:37.77,1:33:41.29,英文,,0,0,0,,Here's that same global array, a global list called sports.
Dialogue: 0,1:33:41.29,1:33:44.61,英文,,0,0,0,,And let's just see what's going on down below.
Dialogue: 0,1:33:44.61,1:33:50.07,英文,,0,0,0,,If I scroll down to index, this is the same as before, as we wrote together on the fly.
Dialogue: 0,1:33:50.07,1:33:53.20,英文,,0,0,0,,Let's skip deregister for a moment and go now into register.
Dialogue: 0,1:33:53.20,1:33:56.10,英文,,0,0,0,,So this one's a little different, but let's see what I've done.
Dialogue: 0,1:33:56.10,1:33:58.30,英文,,0,0,0,,I've got some comments in here, because I wrote it in advance.
Dialogue: 0,1:33:58.30,1:34:01.20,英文,,0,0,0,,And I think this logic is pretty much the same, though I tightened it up.
Dialogue: 0,1:34:01.20,1:34:10.73,英文,,0,0,0,,And I'm asking two questions at once using on line 38 the or keyword here, just to say if there's not a name or the sport is not in sports, that is what we'll call now a failure.
Dialogue: 0,1:34:10.73,1:34:18.26,英文,,0,0,0,,But what's fun now is that on line 42, I'm using the CS50 SQL library to execute some actual SQL.
Dialogue: 0,1:34:18.26,1:34:23.80,英文,,0,0,0,,And I'm going to insert into a table called registrants two columns, name and sport.
Dialogue: 0,1:34:23.80,1:34:25.04,英文,,0,0,0,,What names in sport?
Dialogue: 0,1:34:25.04,1:34:28.88,英文,,0,0,0,,Well, these two values with placeholders, plugging in name and sport.
Dialogue: 0,1:34:28.88,1:34:30.31,英文,,0,0,0,,Notice I'm using the question marks.
Dialogue: 0,1:34:30.31,1:34:40.93,英文,,0,0,0,,Absolutely necessary so we don't get one of those SQL injection attacks, because that, too, could be possible if someone typed in some dangerous words or keywords like delete or single quotes or semicolons in the form.
Dialogue: 0,1:34:40.93,1:34:43.87,英文,,0,0,0,,Here, I'm letting the library sanitize the data.
Dialogue: 0,1:34:43.87,1:34:48.45,英文,,0,0,0,,And then this is a trick we haven't yet seen, and it's really going to start tying things together.
Dialogue: 0,1:34:48.45,1:34:56.87,英文,,0,0,0,,I can also use a redirect function in Flask that has the effect of doing the, if you will, safetyschool.org trick again.
Dialogue: 0,1:34:56.87,1:35:08.82,英文,,0,0,0,,Whereby, after the user registers, if I want to automatically show them now everyone who is registered at slash registrants, I don't have to manually expect that they'll change the URL like I've been doing for the past few minutes.
Dialogue: 0,1:35:08.82,1:35:12.08,英文,,0,0,0,,I can just redirect them anywhere I want on my app.
Dialogue: 0,1:35:12.08,1:35:16.23,英文,,0,0,0,,Or heck, I could redirect them to any URL on the internet using this function call.
Dialogue: 0,1:35:16.23,1:35:21.77,英文,,0,0,0,,And it's just a nice way to send them to a different route if you want them to see, in this case, those registrants.
Dialogue: 0,1:35:21.77,1:35:22.75,英文,,0,0,0,,So let me do this.
Dialogue: 0,1:35:22.75,1:35:24.35,英文,,0,0,0,,In the same directory.
Dialogue: 0,1:35:24.35,1:35:26.58,英文,,0,0,0,,Let me increase my terminal window size.
Dialogue: 0,1:35:26.58,1:35:30.78,英文,,0,0,0,,Let me do SQLite 3 of froshims.db.
Dialogue: 0,1:35:30.78,1:35:32.60,英文,,0,0,0,,And let me type .schema.
Dialogue: 0,1:35:32.60,1:35:45.13,英文,,0,0,0,,And you can indeed see it wraps onto two lines here that each registrant has an ID, which will be automatically assigned 1, 2, 3, on up, a name, which is not null text, and a sport, which is also the same.
Dialogue: 0,1:35:45.13,1:35:47.79,英文,,0,0,0,,And the primary key is just going to be this unique identifier.
Dialogue: 0,1:35:47.79,1:35:49.40,英文,,0,0,0,,So that I made in advance.
Dialogue: 0,1:35:49.40,1:35:56.32,英文,,0,0,0,,But if I do select star from registrants, semicolon, there's no one currently registered for any sports.
Dialogue: 0,1:35:56.32,1:35:58.16,英文,,0,0,0,,But let's try now running this.
Dialogue: 0,1:35:58.16,1:36:02.38,英文,,0,0,0,,Let me go ahead and close my old version, which we wrote together.
Dialogue: 0,1:36:02.38,1:36:03.66,英文,,0,0,0,,And I'll close that tab.
Dialogue: 0,1:36:03.66,1:36:07.69,英文,,0,0,0,,Let me do flask run in this version 4 here.
Dialogue: 0,1:36:07.69,1:36:09.91,英文,,0,0,0,,All right, I'm going to see some similar output.
Dialogue: 0,1:36:09.91,1:36:11.65,英文,,0,0,0,,I'm going to open the URL now.
Dialogue: 0,1:36:11.65,1:36:14.41,英文,,0,0,0,,And you'll see that I made a couple of changes before.
Dialogue: 0,1:36:14.41,1:36:23.38,英文,,0,0,0,,Instead of using a Select menu, I used what are called radio buttons now, which is a reference to old school radio buttons that were mutually exclusive in cars back in the day.
Dialogue: 0,1:36:23.38,1:36:26.60,英文,,0,0,0,,And we'll see how to do this. But it's just an alternative to a Select menu.
Dialogue: 0,1:36:26.60,1:36:30.12,英文,,0,0,0,,And I'm going to go ahead and type in my name again here.
Dialogue: 0,1:36:30.12,1:36:36.53,英文,,0,0,0,,So I'll do David, I'll do soccer by selecting this radio button, and I'm going to click Register Now.
Dialogue: 0,1:36:36.53,1:36:37.71,英文,,0,0,0,,And notice what happened.
Dialogue: 0,1:36:37.71,1:36:42.25,英文,,0,0,0,,It's a little ugly, the formatting, but so again was this 20 years ago.
Dialogue: 0,1:36:42.25,1:36:46.09,英文,,0,0,0,,Here I have now, at the slash registrants route,
Dialogue: 0,1:36:46.09,1:36:49.46,英文,,0,0,0,,Instead of an unordered list, I'm just using a simple HTML table.
Dialogue: 0,1:36:49.46,1:36:51.96,英文,,0,0,0,,So I'll show you what this looks like in just a moment, too.
Dialogue: 0,1:36:51.96,1:36:56.10,英文,,0,0,0,,And I'll show you this Deregister button, which is sort of unnecessarily large.
Dialogue: 0,1:36:56.10,1:37:01.32,英文,,0,0,0,,I also have functionality we'll soon see for how you can unregister someone from a sport as well.
Dialogue: 0,1:37:01.32,1:37:03.58,英文,,0,0,0,,So take your name out of contention.
Dialogue: 0,1:37:03.58,1:37:06.28,英文,,0,0,0,,Well, let me go back to my terminal window here.
Dialogue: 0,1:37:06.28,1:37:09.63,英文,,0,0,0,,And I'm going to click the plus to give myself a second terminal.
Dialogue: 0,1:37:09.63,1:37:13.05,英文,,0,0,0,,So I can go back into source 9, froshims4.
Dialogue: 0,1:37:13.05,1:37:16.57,英文,,0,0,0,,I'm going to do SQLite of froshims.db.
Dialogue: 0,1:37:16.57,1:37:19.83,英文,,0,0,0,,I'm going to do select star from registrants now.
Dialogue: 0,1:37:19.83,1:37:24.92,英文,,0,0,0,,And now you'll see that, indeed, there's David registered for soccer.
Dialogue: 0,1:37:24.92,1:37:34.40,英文,,0,0,0,,And in fact, if I quit the Flask program with Control-C and rerun it again, no big deal, because that next version of Flask will just use the database as well.
Dialogue: 0,1:37:34.40,1:37:41.91,英文,,0,0,0,,So I'm persisting, keeping the data in SQLite, whereas I'm actually grabbing it using my Python code in Flask.
Dialogue: 0,1:37:41.91,1:37:45.67,英文,,0,0,0,,All right, let's put one more person in here so we can delete one of us, too.
Dialogue: 0,1:37:45.67,1:37:47.64,英文,,0,0,0,,Carter for basketball.
Dialogue: 0,1:37:47.64,1:37:48.44,英文,,0,0,0,,Register.
Dialogue: 0,1:37:48.44,1:37:50.18,英文,,0,0,0,,And now we see both of us here.
Dialogue: 0,1:37:50.18,1:37:53.34,英文,,0,0,0,,All right, so let's see how we did this. Let's go back over to VS Code.
Dialogue: 0,1:37:53.34,1:37:55.43,英文,,0,0,0,,Let me shrink down my terminal window.
Dialogue: 0,1:37:55.43,1:37:58.51,英文,,0,0,0,,Let me go into the
Dialogue: 0,1:37:58.51,1:38:02.31,英文,,0,0,0,,Actually, let's go into the templates directory.
Dialogue: 0,1:38:02.31,1:38:06.14,英文,,0,0,0,,And let's look at, for instance, index.html.
Dialogue: 0,1:38:06.14,1:38:08.76,英文,,0,0,0,,So previously, we were using a Select menu.
Dialogue: 0,1:38:08.76,1:38:11.92,英文,,0,0,0,,Turns out radio buttons use the input tag.
Dialogue: 0,1:38:11.92,1:38:18.79,英文,,0,0,0,,But instead of having an input of type equals text, like for the human's name, you have type equals radio.
Dialogue: 0,1:38:18.79,1:38:25.11,英文,,0,0,0,,And so long as each of your radio buttons has the same name, the same name, the same name, that's what makes them mutually exclusive.
Dialogue: 0,1:38:25.11,1:38:29.53,英文,,0,0,0,,So checking one radio button turns off the others because they have the same name.
Dialogue: 0,1:38:29.53,1:38:34.01,英文,,0,0,0,,The value I want to assign to each of these radio buttons is just the sport placeholder.
Dialogue: 0,1:38:34.01,1:38:35.87,英文,,0,0,0,,This is what the human sees on the screen.
Dialogue: 0,1:38:35.87,1:38:37.49,英文,,0,0,0,,So it's almost the same as the Select menu.
Dialogue: 0,1:38:37.49,1:38:40.73,英文,,0,0,0,,It just looks aesthetically different. But there's my same button.
Dialogue: 0,1:38:40.73,1:38:42.43,英文,,0,0,0,,So that's all the difference I made there.
Dialogue: 0,1:38:42.43,1:38:46.52,英文,,0,0,0,,And I added a heading tag, h1, just to say register to make clear what it is.
Dialogue: 0,1:38:46.52,1:38:55.08,英文,,0,0,0,,But let's take a look at another file, this one now being how about the slash registrants route.
Dialogue: 0,1:38:55.08,1:39:01.49,英文,,0,0,0,,So if I open up registrants.html here now, it's way more verbose than my unordered list.
Dialogue: 0,1:39:01.49,1:39:03.17,英文,,0,0,0,,But this is just kind of boring HTML.
Dialogue: 0,1:39:03.17,1:39:07.41,英文,,0,0,0,,Here's my table tag, table head, table row, table heading.
Dialogue: 0,1:39:07.41,1:39:10.69,英文,,0,0,0,,This makes things bold as the first row of the table.
Dialogue: 0,1:39:10.69,1:39:12.35,英文,,0,0,0,,Name, sport are my two columns.
Dialogue: 0,1:39:12.35,1:39:16.34,英文,,0,0,0,,I've got a third empty column just so I can fit that button, as we'll soon see again.
Dialogue: 0,1:39:16.34,1:39:18.12,英文,,0,0,0,,tbody for table body.
Dialogue: 0,1:39:18.12,1:39:23.88,英文,,0,0,0,,Here's the same for loop trick again so that I can output for every registrant a whole table row.
Dialogue: 0,1:39:23.88,1:39:26.78,英文,,0,0,0,,And there's this weird form in there, but we'll come back to that.
Dialogue: 0,1:39:26.78,1:39:28.46,英文,,0,0,0,,But there's the registrant's name.
Dialogue: 0,1:39:28.46,1:39:31.04,英文,,0,0,0,,There's the registrant's sport.
Dialogue: 0,1:39:31.04,1:39:34.24,英文,,0,0,0,,But notice the slightly different syntax here.
Dialogue: 0,1:39:34.24,1:39:48.05,英文,,0,0,0,,Recall that CS50's select, CS50's execute function, when it returns to you a list of dictionaries, you can then get at the individual columns by way of those keys. So let's go to the slash registrants route.
Dialogue: 0,1:39:48.05,1:39:49.95,英文,,0,0,0,,Let me go back to app.py.
Dialogue: 0,1:39:49.95,1:39:52.57,英文,,0,0,0,,Scroll down here, and it's actually super simple.
Dialogue: 0,1:39:52.57,1:39:58.28,英文,,0,0,0,,Here, I have a slash registrants route that first executes select star from registrants.
Dialogue: 0,1:39:58.28,1:40:01.82,英文,,0,0,0,,So just old SQL stuff. Give me everyone from the registrants table.
Dialogue: 0,1:40:01.82,1:40:08.27,英文,,0,0,0,,Let me then render the template called registrants.html and just pass in this list of dictionaries.
Dialogue: 0,1:40:08.27,1:40:16.31,英文,,0,0,0,,And we haven't quite done this yet, but if you go back to registrants.html, how do you iterate over each dictionary in that list?
Dialogue: 0,1:40:16.31,1:40:19.41,英文,,0,0,0,,Well, the syntax is just for registrant in registrants.
Dialogue: 0,1:40:19.41,1:40:24.75,英文,,0,0,0,,That makes this a dictionary, one at a time in the list, just like in Python.
Dialogue: 0,1:40:24.75,1:40:31.60,英文,,0,0,0,,So registrant.name and registrant.sport is just another syntax for using the square bracket notation.
Dialogue: 0,1:40:31.60,1:40:37.28,英文,,0,0,0,,It's just a little cleaner and slightly more succinct than having quotes and square brackets everywhere.
Dialogue: 0,1:40:37.28,1:40:40.53,英文,,0,0,0,,And then the rest of this is just HTML.
Dialogue: 0,1:40:40.53,1:40:46.37,英文,,0,0,0,,So what happens now if I want to, like Carter has been cut from the basketball team, if you will.
Dialogue: 0,1:40:46.37,1:40:48.03,英文,,0,0,0,,So how do we do that?
Dialogue: 0,1:40:48.03,1:40:52.05,英文,,0,0,0,,Well, we want to click this button, Deregister, next to Carter's name.
Dialogue: 0,1:40:52.05,1:40:53.37,英文,,0,0,0,,But how does this work?
Dialogue: 0,1:40:53.37,1:41:04.74,英文,,0,0,0,,And think about now any website you visited that has something like a shopping cart where you can remove things from your cart, or update quantities, or add more quantities to your shopping cart on Amazon or anything else.
Dialogue: 0,1:41:04.74,1:41:08.54,英文,,0,0,0,,Well, let's actually look at the HTML that my app has spit out.
Dialogue: 0,1:41:08.54,1:41:12.16,英文,,0,0,0,,Let's actually look at this here, and we'll see the following.
Dialogue: 0,1:41:12.16,1:41:20.26,英文,,0,0,0,,We'll see that we have here, in the HTML that reached the user, not only is David in the first column, soccer in the second.
Dialogue: 0,1:41:20.26,1:41:26.70,英文,,0,0,0,,Notice that my registrants.html form is also spitting out a tiny little web form of its own.
Dialogue: 0,1:41:26.70,1:41:30.32,英文,,0,0,0,,It's ugly, but I only care about its functionality for now.
Dialogue: 0,1:41:30.32,1:41:32.28,英文,,0,0,0,,And notice what I'm doing here.
Dialogue: 0,1:41:32.28,1:41:37.22,英文,,0,0,0,,Every registrant in this database gets their very own deregister button.
Dialogue: 0,1:41:37.22,1:41:40.41,英文,,0,0,0,,And that form has a button that says deregister.
Dialogue: 0,1:41:40.41,1:41:42.69,英文,,0,0,0,,But notice what else each of those forms have.
Dialogue: 0,1:41:42.69,1:41:43.67,英文,,0,0,0,,There's no text box.
Dialogue: 0,1:41:43.67,1:41:44.73,英文,,0,0,0,,There's no dropdown menu.
Dialogue: 0,1:41:44.73,1:41:46.31,英文,,0,0,0,,There's no radio buttons.
Dialogue: 0,1:41:46.31,1:41:51.50,英文,,0,0,0,,Rather, you have a hidden input field here.
Dialogue: 0,1:41:51.50,1:41:53.94,英文,,0,0,0,,So there is a way with HTML.
Dialogue: 0,1:41:53.94,1:42:00.50,英文,,0,0,0,,to have a form that will submit information, but you don't have to give the user the ability to change that information.
Dialogue: 0,1:42:00.50,1:42:06.16,英文,,0,0,0,,You can just go ahead and tuck it inside of the form invisibly, if you will, hidden in fashion.
Dialogue: 0,1:42:06.16,1:42:13.21,英文,,0,0,0,,And so what's going to happen is if I click the Deregister button next to Carter, his primary key is 2.
Dialogue: 0,1:42:13.21,1:42:15.43,英文,,0,0,0,,Mine is instead 1.
Dialogue: 0,1:42:15.43,1:42:23.52,英文,,0,0,0,,So what's going to happen if I click his Deregister button, it submits a form with a ID
Dialogue: 0,1:42:23.52,1:42:29.01,英文,,0,0,0,,parameter whose value is 2, and it submits it to the deregister route. So what does that mean?
Dialogue: 0,1:42:29.01,1:42:35.58,英文,,0,0,0,,Well, if I go to VS Code and I go to app.py, let's look at the deregister route that I skipped over.
Dialogue: 0,1:42:35.58,1:42:41.07,英文,,0,0,0,,So if you access the deregister route via POST, this code gets called.
Dialogue: 0,1:42:41.07,1:42:46.25,英文,,0,0,0,,I grab from request.form the ID that was submitted in hidden fashion.
Dialogue: 0,1:42:46.25,1:42:58.89,英文,,0,0,0,,If there's indeed an ID, that is, it's not blank, it's not 0, it's an actual number like 1, 2, 3, or more, I execute delete from registrants where ID equals that value with a question mark placeholder.
Dialogue: 0,1:42:58.89,1:43:02.34,英文,,0,0,0,,And then I redirect the user back to registrants.
Dialogue: 0,1:43:02.34,1:43:07.42,英文,,0,0,0,,Now, if I go back to this form here, I click Deregister, we'll see that in action.
Dialogue: 0,1:43:07.42,1:43:08.96,英文,,0,0,0,,Gone is now Carter.
Dialogue: 0,1:43:08.96,1:43:20.15,英文,,0,0,0,,And in fact, if I go back to my terminal window here, I open up SQLite 3 of froshims.db and rerun select star from registrants, Carter is now gone.
Dialogue: 0,1:43:20.15,1:43:28.73,英文,,0,0,0,,So again, using very simple HTML forms, you can get buttons and links and other such UI mechanisms to do things on the server that you want.
Dialogue: 0,1:43:28.73,1:43:30.81,英文,,0,0,0,,But there is a danger here.
Dialogue: 0,1:43:30.81,1:43:39.92,英文,,0,0,0,,This now has really meant this example is like an administrative website, like it was some 20 years ago, just for us internal staff to be doing things.
Dialogue: 0,1:43:39.92,1:43:57.61,英文,,0,0,0,,Technically, this is dangerous, what I've just done, too. Even though Carter's ID is 2 and hidden, and mine is 1 and hidden, what could this allow an adversary to do if they had admin access to the same site?
Dialogue: 0,1:43:57.61,1:44:00.27,英文,,0,0,0,,Any thoughts?
Dialogue: 0,1:44:00.27,1:44:04.69,英文,,0,0,0,,Yeah.
Dialogue: 0,1:44:04.69,1:44:10.20,英文,,0,0,0,,They could change the value of that hidden attribute by opening up Chrome's developer tools, change the number in the HTML.
Dialogue: 0,1:44:10.20,1:44:13.44,英文,,0,0,0,,They could delete anyone, deregister anyone they want from the database.
Dialogue: 0,1:44:13.44,1:44:19.81,英文,,0,0,0,,Now, in this case, I claim this is fine, because this is only meant for a staff who were running sports back in the day.
Dialogue: 0,1:44:19.81,1:44:21.27,英文,,0,0,0,,But it's indeed a risk.
Dialogue: 0,1:44:21.27,1:44:29.60,英文,,0,0,0,,So wouldn't it be nice if we could actually ensure that But only those users who are authorized are allowed to execute certain actions.
Dialogue: 0,1:44:29.60,1:44:35.34,英文,,0,0,0,,I think for this capability, we're actually going to need to introduce something a bit more.
Dialogue: 0,1:44:35.34,1:44:41.02,英文,,0,0,0,,And so here, of course, is an opportunity to talk briefly about really what you and I do all day long, every day.
Dialogue: 0,1:44:41.02,1:44:47.19,英文,,0,0,0,,We log into one or more websites or apps, or at least until you're logged out automatically and you have to do it again.
Dialogue: 0,1:44:47.19,1:44:49.41,英文,,0,0,0,,So here, for instance, is a screenshot of Gmail.
Dialogue: 0,1:44:49.41,1:44:56.02,英文,,0,0,0,,When you type in your username, you type in your password, maybe your two-factor code that gets texted or sent to your phone, then you're logged in.
Dialogue: 0,1:44:56.02,1:45:02.90,英文,,0,0,0,,And thankfully, you're not prompted to log in again, typically, for a number of hours or days or weeks, depending on the website.
Dialogue: 0,1:45:02.90,1:45:08.71,英文,,0,0,0,,Like, Gmail keeps you logged in for ages. Your bank probably logs you out within an hour or so for safety's sake.
Dialogue: 0,1:45:08.71,1:45:11.41,英文,,0,0,0,,So that is completely configurable on the server.
Dialogue: 0,1:45:11.41,1:45:21.12,英文,,0,0,0,,But how does Gmail know, how does Google know, that even as you're checking different mails again and again and again, how do they know that you're still the same person who logged in?
Dialogue: 0,1:45:21.12,1:45:27.12,英文,,0,0,0,,Well, it turns out that using these same building blocks as today, HTTP and HTML and more,
Dialogue: 0,1:45:27.12,1:45:35.04,英文,,0,0,0,,You can actually implement the notion of a login feature by doing the equivalent of something with something called cookies.
Dialogue: 0,1:45:35.04,1:45:43.27,英文,,0,0,0,,Essentially, what happens when you first log into a website for the very first time successfully with your username and password, a cookie, so to speak, is planted on your computer.
Dialogue: 0,1:45:43.27,1:45:56.81,英文,,0,0,0,,And metaphorically, this is kind of like taking a hand stamp, and your hand is now stamped, in this case, a smiley face, so that every other time you click on a link on that same website, google.com, gmail.com, whatever, unbeknownst to you, your browser
Dialogue: 0,1:45:56.81,1:46:03.62,英文,,0,0,0,,is constantly presenting that hand stamp, just like going into a club or an amusement park or something like that, where they don't want to check your ID again.
Dialogue: 0,1:46:03.62,1:46:07.60,英文,,0,0,0,,They don't want to check your ticket again. They just want to quickly see the same hand stamp.
Dialogue: 0,1:46:07.60,1:46:12.07,英文,,0,0,0,,And so that is one of the things that a browser is always doing for you once you're logged in.
Dialogue: 0,1:46:12.07,1:46:16.47,英文,,0,0,0,,Any cookies that have been planted, so to speak, in your Mac or PC or phone
Dialogue: 0,1:46:16.47,1:46:22.82,英文,,0,0,0,,are constantly represented to the site every time you click a link or make another request to that website.
Dialogue: 0,1:46:22.82,1:46:27.86,英文,,0,0,0,,And mechanically how this works, not just metaphorically in Ink, essentially this is what happens.
Dialogue: 0,1:46:27.86,1:46:32.29,英文,,0,0,0,,Here is a example of an HTTP request to something like Gmail.
Dialogue: 0,1:46:32.29,1:46:34.69,英文,,0,0,0,,And suppose, for instance, that you've logged in.
Dialogue: 0,1:46:34.69,1:46:46.65,英文,,0,0,0,,Typically, as of last week, we said that coming back from the server would be another virtual envelope containing a 200 OK message and then the actual web page or the picture of a cat or whatever it may be.
Dialogue: 0,1:46:46.65,1:46:54.74,英文,,0,0,0,,But Google can also, if they verify that you have some username and password correctly inputted, they can do the equivalent of stamping your hand.
Dialogue: 0,1:46:54.74,1:47:09.60,英文,,0,0,0,,And the way they do this is they send an additional line of text in that virtual envelope from the server to your browser, literally using another HTTP header, not content type, which just mundanely tells you what kind of content has come back.
Dialogue: 0,1:47:09.60,1:47:14.86,英文,,0,0,0,,They literally send an HTTP header called set-cookie.
Dialogue: 0,1:47:14.86,1:47:18.57,英文,,0,0,0,,And then they set a key value pair on your Mac or PC.
Dialogue: 0,1:47:18.57,1:47:22.09,英文,,0,0,0,,This is the technical equivalent of the smiley face hand stamp.
Dialogue: 0,1:47:22.09,1:47:36.75,英文,,0,0,0,,And what your computer is designed to do, because your computer and, in turn, browser are supposed to implement HTTP, any time you click another link on Gmail or click on another mail or the like, your browser, unbeknownst to you, presents that hand stamp.
Dialogue: 0,1:47:36.75,1:47:42.17,英文,,0,0,0,,And how it does it technically is, in the envelope, it sends to Google from your browser.
Dialogue: 0,1:47:42.17,1:47:47.93,英文,,0,0,0,,It doesn't send set cookie. It just sends cookie, colon, and the exact same thing.
Dialogue: 0,1:47:47.93,1:47:58.98,英文,,0,0,0,,And so long as Google is smart and they have a database or something of all of the session values, session is the technical term for this maintenance of information across HTTP.
Dialogue: 0,1:47:58.98,1:48:13.42,英文,,0,0,0,,So long as Google has a big database that knows that my cookie value is 1, 2, 3, and your cookie value is 4, 5, 6, they can infer from this virtual hand stamp whose emails they should be showing, mine or yours or the like.
Dialogue: 0,1:48:13.42,1:48:14.88,英文,,0,0,0,,So this is just scratching the surface.
Dialogue: 0,1:48:14.88,1:48:24.20,英文,,0,0,0,,But if I really wanted to enable only Carter to deregister himself, I just have to make sure that I log him in somehow, username, password, and all of that.
Dialogue: 0,1:48:24.20,1:48:27.62,英文,,0,0,0,,I stamp his hand or really put a cookie on his computer.
Dialogue: 0,1:48:27.62,1:48:36.16,英文,,0,0,0,,And only if his cookie lines up with the user ID he's trying to deregister should he be allowed to, in fact, do so.
Dialogue: 0,1:48:36.16,1:48:37.81,英文,,0,0,0,,So all of this is quite possible.
Dialogue: 0,1:48:37.81,1:48:40.31,英文,,0,0,0,,And indeed, the technical term for this is session.
Dialogue: 0,1:48:40.31,1:48:55.30,英文,,0,0,0,,And what we thought we'd do in our remaining time today is show you some examples of exactly how some of the most familiar web functionality is implemented today, some of which you'll use in your own problem set 9, which itself will be a web app, or perhaps even your final project.
Dialogue: 0,1:48:55.30,1:48:56.94,英文,,0,0,0,,So let me go ahead and do this.
Dialogue: 0,1:48:56.94,1:49:00.36,英文,,0,0,0,,Let me close my previous tabs and all things Frosh IMs.
Dialogue: 0,1:49:00.36,1:49:03.84,英文,,0,0,0,,And let's move on to implementing some notion of login.
Dialogue: 0,1:49:03.84,1:49:06.92,英文,,0,0,0,,So in just a moment, I'll switch over here to VS Code.
Dialogue: 0,1:49:06.92,1:49:12.75,英文,,0,0,0,,And what I'm going to do is, indeed, in my source 9 directory, I'm going to go into a login directory.
Dialogue: 0,1:49:12.75,1:49:22.17,英文,,0,0,0,,And if I type ls here, you'll see app.py, requirements.txt, which just refers to libraries I want to automatically install, and a templates folder as well.
Dialogue: 0,1:49:22.17,1:49:25.53,英文,,0,0,0,,I'm going to go ahead and stop the previous server and close that terminal window.
Dialogue: 0,1:49:25.53,1:49:28.71,英文,,0,0,0,,And I'm going to open up this version of app.py.
Dialogue: 0,1:49:28.71,1:49:30.57,英文,,0,0,0,,So there's a few new lines here.
Dialogue: 0,1:49:30.57,1:49:33.15,英文,,0,0,0,,And we'll give you these lines for problems at 9.
Dialogue: 0,1:49:33.15,1:49:37.90,英文,,0,0,0,,But I've got some of the familiar stuff up here, including this new redirect function we just used.
Dialogue: 0,1:49:37.90,1:49:45.18,英文,,0,0,0,,And I have a session variable that comes with Flask, too. So what's nice, again, about Flask is that it deals with all of this cookie stuff for you.
Dialogue: 0,1:49:45.18,1:49:46.49,英文,,0,0,0,,It sets the cookie.
Dialogue: 0,1:49:46.49,1:49:47.63,英文,,0,0,0,,It checks the cookie.
Dialogue: 0,1:49:47.63,1:49:53.31,英文,,0,0,0,,And what Flask does for you is it gives you the abstraction of a variable called session.
Dialogue: 0,1:49:53.31,1:50:02.08,英文,,0,0,0,,So that anything you put in the session variable, which itself is a dictionary, will be there again and again and again whenever that same user comes back.
Dialogue: 0,1:50:02.08,1:50:07.40,英文,,0,0,0,,A session is how you implement, essentially, like the proverbial shopping cart.
Dialogue: 0,1:50:07.40,1:50:13.89,英文,,0,0,0,,If I'm logged into Amazon, you're logged into Amazon, Amazon knows which of us is which by way of that cookie.
Dialogue: 0,1:50:13.89,1:50:19.23,英文,,0,0,0,,And Amazon, if they're using Flask, provides the programmer with a dictionary called session.
Dialogue: 0,1:50:19.23,1:50:24.49,英文,,0,0,0,,And Flasks makes sure that when Carter's visiting the site, The code uses his session object.
Dialogue: 0,1:50:24.49,1:50:27.65,英文,,0,0,0,,When I'm visiting the site, it uses my session object.
Dialogue: 0,1:50:27.65,1:50:29.90,英文,,0,0,0,,But it's all implemented with those same cookies.
Dialogue: 0,1:50:29.90,1:50:31.72,英文,,0,0,0,,This is the same as before.
Dialogue: 0,1:50:31.72,1:50:32.60,英文,,0,0,0,,These lines are new.
Dialogue: 0,1:50:32.60,1:50:34.38,英文,,0,0,0,,And you'll see these in problem set 9.
Dialogue: 0,1:50:34.38,1:50:37.76,英文,,0,0,0,,This is how we enable sessions in a web application.
Dialogue: 0,1:50:37.76,1:50:39.78,英文,,0,0,0,,And I'll just wave my hands at the detail.
Dialogue: 0,1:50:39.78,1:50:45.74,英文,,0,0,0,,There's different ways to implement sessions, whether you use cookies on the server, cookies on the browser, or other things.
Dialogue: 0,1:50:45.74,1:50:52.19,英文,,0,0,0,,These just ensure that we're storing the session information, the shopping cart, on the server itself.
Dialogue: 0,1:50:52.19,1:50:54.71,英文,,0,0,0,,Now, down here, let's go ahead and do this.
Dialogue: 0,1:50:54.71,1:51:00.17,英文,,0,0,0,,Let's go ahead and run flask run so I can see what this app does.
Dialogue: 0,1:51:00.17,1:51:05.87,英文,,0,0,0,,If I do this and visit the URL that gets outputted, you'll see a very simple web page here.
Dialogue: 0,1:51:05.87,1:51:13.34,英文,,0,0,0,,And if I type in, for instance, my name, I'm not going to bother with a password, and click Log In, you'll see that you are logged in as David.
Dialogue: 0,1:51:13.34,1:51:14.82,英文,,0,0,0,,And now I can log out.
Dialogue: 0,1:51:14.82,1:51:17.14,英文,,0,0,0,,So I'm going to go ahead and click Log Out.
Dialogue: 0,1:51:17.14,1:51:20.14,英文,,0,0,0,,And now it seems to know that I'm not logged in again.
Dialogue: 0,1:51:20.14,1:51:25.86,英文,,0,0,0,,I can log in as Carter because I didn't bother implementing passwords for simplicity. But now the site knows I'm logged in as Carter.
Dialogue: 0,1:51:25.86,1:51:36.61,英文,,0,0,0,,Better yet, if I reload, reload, reload, or click this button again and again, notice it still knows that I'm Carter until such time as I log out.
Dialogue: 0,1:51:36.61,1:51:38.03,英文,,0,0,0,,All right, well, how is this working?
Dialogue: 0,1:51:38.03,1:51:40.15,英文,,0,0,0,,Well, let's go back to VS Code here.
Dialogue: 0,1:51:40.15,1:51:43.11,英文,,0,0,0,,And let me scroll down to, first, this route.
Dialogue: 0,1:51:43.11,1:51:48.30,英文,,0,0,0,,This is a very common paradigm here, whereby I'm checking for the index route.
Dialogue: 0,1:51:48.30,1:51:54.06,英文,,0,0,0,,If there is not a name in the session, redirect the user to slash login.
Dialogue: 0,1:51:54.06,1:51:57.28,英文,,0,0,0,,Now, what does that mean? Well, let me go back to VS Code here.
Dialogue: 0,1:51:57.28,1:51:59.82,英文,,0,0,0,,Let me go to the slash route.
Dialogue: 0,1:51:59.82,1:52:01.32,英文,,0,0,0,,So again, your URL will be different.
Dialogue: 0,1:52:01.32,1:52:03.60,英文,,0,0,0,,But I'm just going to go to slash and hit Enter.
Dialogue: 0,1:52:03.60,1:52:06.47,英文,,0,0,0,,Notice that I got automatically redirected to login.
Dialogue: 0,1:52:06.47,1:52:08.03,英文,,0,0,0,,And so many websites do this.
Dialogue: 0,1:52:08.03,1:52:15.47,英文,,0,0,0,,If you go to a website and you're not logged in, you're very often redirected to slash login or slash account or something like that where you're prompted.
Dialogue: 0,1:52:15.47,1:52:17.93,英文,,0,0,0,,The code for doing that is right here.
Dialogue: 0,1:52:17.93,1:52:22.15,英文,,0,0,0,,If there's no name in the session, if there's no name in the shopping cart, if you will,
Dialogue: 0,1:52:22.15,1:52:25.76,英文,,0,0,0,,Go ahead and return the user to log in that route.
Dialogue: 0,1:52:25.76,1:52:29.94,英文,,0,0,0,,Otherwise, implicitly, if they are logged in, show them index.html.
Dialogue: 0,1:52:29.94,1:52:31.36,英文,,0,0,0,,So let's go down that rabbit hole.
Dialogue: 0,1:52:31.36,1:52:34.83,英文,,0,0,0,,Let me open up in VS Code a second terminal window.
Dialogue: 0,1:52:34.83,1:52:39.89,英文,,0,0,0,,Let me go into source 9 and go into this same login demonstration.
Dialogue: 0,1:52:39.89,1:52:44.17,英文,,0,0,0,,And let me open up the template called index.html.
Dialogue: 0,1:52:44.17,1:52:45.33,英文,,0,0,0,,And here's all this is.
Dialogue: 0,1:52:45.33,1:52:47.23,英文,,0,0,0,,There's some layout, but who cares at this point.
Dialogue: 0,1:52:47.23,1:52:49.85,英文,,0,0,0,,It's just the boilerplate generic HTML.
Dialogue: 0,1:52:49.85,1:52:51.47,英文,,0,0,0,,Here's the body block.
Dialogue: 0,1:52:51.47,1:52:52.43,英文,,0,0,0,,I have this.
Dialogue: 0,1:52:52.43,1:52:57.72,英文,,0,0,0,,And this, too, is Jinja because of the curly brace and the percent sign.
Dialogue: 0,1:52:57.72,1:53:02.71,英文,,0,0,0,,If there's a name in the session, this is just Python syntax, then say this sentence.
Dialogue: 0,1:53:02.71,1:53:07.47,英文,,0,0,0,,You are logged in as whatever name is in the session, in the shopping cart, if you will.
Dialogue: 0,1:53:07.47,1:53:11.17,英文,,0,0,0,,And then I just have this HTML link for logging the user out.
Dialogue: 0,1:53:11.17,1:53:18.56,英文,,0,0,0,,Else, if there is no name in the session, logically, just say you are not logged in and give them a manual link. for logging in instead.
Dialogue: 0,1:53:18.56,1:53:21.30,英文,,0,0,0,,So that's all this particular template does.
Dialogue: 0,1:53:21.30,1:53:23.70,英文,,0,0,0,,But how does the slash login work?
Dialogue: 0,1:53:23.70,1:53:28.97,英文,,0,0,0,,Well, let's go into this other template, code of login.html, to which I'm redirected.
Dialogue: 0,1:53:28.97,1:53:29.93,英文,,0,0,0,,Super simple.
Dialogue: 0,1:53:29.93,1:53:32.13,英文,,0,0,0,,This is just copy-paste from HTML before.
Dialogue: 0,1:53:32.13,1:53:35.69,英文,,0,0,0,,I've got a login form that's going to have an action of slash login.
Dialogue: 0,1:53:35.69,1:53:38.77,英文,,0,0,0,,Submits for privacy's sake just via post.
Dialogue: 0,1:53:38.77,1:53:44.68,英文,,0,0,0,,And then the rest of this is just a simple form. And I'm using an input type equals submit instead of button equals type equals submit.
Dialogue: 0,1:53:44.68,1:53:50.10,英文,,0,0,0,,But same idea here, too. And if I go back to app.py, well, let's see how login works.
Dialogue: 0,1:53:50.10,1:53:50.84,英文,,0,0,0,,All right?
Dialogue: 0,1:53:50.84,1:53:55.25,英文,,0,0,0,,It's a lot all at once, but they're relatively simple re-applications of the same idea.
Dialogue: 0,1:53:55.25,1:54:01.93,英文,,0,0,0,,So if the user visits slash login via get or post, call this function login.
Dialogue: 0,1:54:01.93,1:54:08.38,英文,,0,0,0,,If the user has submitted via post, and we saw this technique before, go ahead and do this on line 23.
Dialogue: 0,1:54:08.38,1:54:17.97,英文,,0,0,0,,Store in this special session variable that comes with Flask a name key, and store in it the user's own name.
Dialogue: 0,1:54:17.97,1:54:21.61,英文,,0,0,0,,So quote, unquote, name will have a value of David or Carter or the like.
Dialogue: 0,1:54:21.61,1:54:26.92,英文,,0,0,0,,And as soon as you do that, redirect the user back to slash, just so they see the home page again.
Dialogue: 0,1:54:26.92,1:54:29.94,英文,,0,0,0,,And this is how Amazon and all these other websites work, too.
Dialogue: 0,1:54:29.94,1:54:37.37,英文,,0,0,0,,Otherwise, if they visit this page implicitly via GET, and even though I didn't say equals equals GET anywhere, that's sort of the implication.
Dialogue: 0,1:54:37.37,1:54:46.12,英文,,0,0,0,,Because if you can only get here via GET or POST, and we already handled POST, logically, all that remains is GET, well, then just show them the login screen instead.
Dialogue: 0,1:54:46.12,1:54:49.72,英文,,0,0,0,,But there's a half a dozen ways we could express that same logic.
Dialogue: 0,1:54:49.72,1:54:52.31,英文,,0,0,0,,And then for logout, this is kind of straightforward.
Dialogue: 0,1:54:52.31,1:55:02.10,英文,,0,0,0,,If the user clicks that logout link and ends up at slash logout, this route, well, just change the value of that key in the session to be none.
Dialogue: 0,1:55:02.10,1:55:04.34,英文,,0,0,0,,Effectively, no. Carter is gone. David's gone.
Dialogue: 0,1:55:04.34,1:55:06.72,英文,,0,0,0,,There's no one logged in.
Dialogue: 0,1:55:06.72,1:55:15.81,英文,,0,0,0,,So that is all that's required to actually implement the notion of logging in and logging out of a website, plus the password thing, which should probably involve a database, but one thing at a time.
Dialogue: 0,1:55:15.81,1:55:23.23,英文,,0,0,0,,And really, session is sort of like the code version of a shopping cart, whereby if I visit the same code, I get my own session object.
Dialogue: 0,1:55:23.23,1:55:25.89,英文,,0,0,0,,If Carter visits the website, he gets his own session object.
Dialogue: 0,1:55:25.89,1:55:34.71,英文,,0,0,0,,And the way Flask keeps us straight is they put one cookie on my computer, a different cookie on his computer, and uses those to line up with,
Dialogue: 0,1:55:34.71,1:55:40.24,英文,,0,0,0,,Making sure the right session gets shown to the right actual user.
Dialogue: 0,1:55:40.24,1:55:47.02,英文,,0,0,0,,Questions on this notion of sessions?
Dialogue: 0,1:55:47.02,1:55:47.62,英文,,0,0,0,,No?
Dialogue: 0,1:55:47.62,1:55:51.28,英文,,0,0,0,,All right, how about a couple final examples just to tie this all together?
Dialogue: 0,1:55:51.28,1:55:53.84,英文,,0,0,0,,Let me go back into VS Code here.
Dialogue: 0,1:55:53.84,1:55:56.63,英文,,0,0,0,,Let me quit my previous version of Flask.
Dialogue: 0,1:55:56.63,1:56:00.99,英文,,0,0,0,,Let's go into Source 9 and go into Store, which is a separate app altogether.
Dialogue: 0,1:56:00.99,1:56:03.79,英文,,0,0,0,,And let's start by just running Flask to see what it does.
Dialogue: 0,1:56:03.79,1:56:06.94,英文,,0,0,0,,Let's hover over the URL and open it in another tab.
Dialogue: 0,1:56:06.94,1:56:09.86,英文,,0,0,0,,And this is pretty ugly, too. Let me zoom in.
Dialogue: 0,1:56:09.86,1:56:20.04,英文,,0,0,0,,But it's a very simple bookstore, like an early Amazon.com for each of these seven books here, each of which seems to be like, maybe this is H1, this is H2, H2, H2, H2.
Dialogue: 0,1:56:20.04,1:56:22.52,英文,,0,0,0,,And then there's a button underneath each.
Dialogue: 0,1:56:22.52,1:56:27.64,英文,,0,0,0,,Well, now let's use this as an opportunity to kind of infer, like for any website, how this thing works.
Dialogue: 0,1:56:27.64,1:56:30.01,英文,,0,0,0,,Let me go ahead and do view page source.
Dialogue: 0,1:56:30.01,1:56:32.67,英文,,0,0,0,,And you can do this for any website on the internet.
Dialogue: 0,1:56:32.67,1:56:36.85,英文,,0,0,0,,Let's try to figure out how this bookstore adds things to a cart.
Dialogue: 0,1:56:36.85,1:56:40.39,英文,,0,0,0,,Well, here's the h1 tag, uninteresting, h2, h2, h2.
Dialogue: 0,1:56:40.39,1:56:42.73,英文,,0,0,0,,So the juicy part is in these forms.
Dialogue: 0,1:56:42.73,1:56:46.43,英文,,0,0,0,,Each of these forms has an action of slash cart.
Dialogue: 0,1:56:46.43,1:56:48.89,英文,,0,0,0,,So that's the route that's going to be interesting in a moment.
Dialogue: 0,1:56:48.89,1:56:51.47,英文,,0,0,0,,And it uses POST for privacy's sake.
Dialogue: 0,1:56:51.47,1:56:58.53,英文,,0,0,0,,Each of these forms, like the deregister feature for Carter, has an ID parameter.
Dialogue: 0,1:56:58.53,1:57:03.10,英文,,0,0,0,,That's hidden, visually, that has a value of 1, or 2, or 3.
Dialogue: 0,1:57:03.10,1:57:09.16,英文,,0,0,0,,So like the unique barcodes for the books, if you will, but super small numbers in our case.
Dialogue: 0,1:57:09.16,1:57:15.86,英文,,0,0,0,,And then each of these other books has an identical form, except for the value of this here.
Dialogue: 0,1:57:15.86,1:57:23.65,英文,,0,0,0,,Now, in this case, this isn't such a big deal that a user could technically hack the HTML of this bookstore, amazon.com, and change the IDs.
Dialogue: 0,1:57:23.65,1:57:29.01,英文,,0,0,0,,Because, whoa, what's the worst they're going to do, like buy more books by adding more IDs to their shopping cart?
Dialogue: 0,1:57:29.01,1:57:30.27,英文,,0,0,0,,Like, that's not a problem.
Dialogue: 0,1:57:30.27,1:57:31.61,英文,,0,0,0,,There's no prices here.
Dialogue: 0,1:57:31.61,1:57:33.25,英文,,0,0,0,,It's just the unique ideas of books.
Dialogue: 0,1:57:33.25,1:57:44.12,英文,,0,0,0,,So whereas the deregister was maybe worrisome because you're changing the server, I think it's OK because the user can only, at worst, buy more books than they might via the buttons alone.
Dialogue: 0,1:57:44.12,1:57:45.80,英文,,0,0,0,,So how does this now work?
Dialogue: 0,1:57:45.80,1:57:49.35,英文,,0,0,0,,Well, let's go into VS Code again here.
Dialogue: 0,1:57:49.35,1:57:51.09,英文,,0,0,0,,Let me give myself another terminal window.
Dialogue: 0,1:57:51.09,1:57:57.04,英文,,0,0,0,,And in source 9 slash store, let me open up app.py, which is where all the logic is.
Dialogue: 0,1:57:57.04,1:57:59.80,英文,,0,0,0,,So I'll flip through most of this quickly, because we've seen this before.
Dialogue: 0,1:57:59.80,1:58:02.50,英文,,0,0,0,,These imports are pretty much the same as before.
Dialogue: 0,1:58:02.50,1:58:03.70,英文,,0,0,0,,This line is the same.
Dialogue: 0,1:58:03.70,1:58:04.90,英文,,0,0,0,,This line is almost the same.
Dialogue: 0,1:58:04.90,1:58:09.78,英文,,0,0,0,,But the database now is called store.db instead of froshims.db.
Dialogue: 0,1:58:09.78,1:58:14.49,英文,,0,0,0,,This is the boilerplate code for just enabling sessions, this notion of a shopping cart.
Dialogue: 0,1:58:14.49,1:58:16.45,英文,,0,0,0,,And so let's see how the index works.
Dialogue: 0,1:58:16.45,1:58:18.91,英文,,0,0,0,,How is it I'm seeing all seven books at once?
Dialogue: 0,1:58:18.91,1:58:25.39,英文,,0,0,0,,Well, in this index function, I'm using, on line 19, select star from books to get all the books from the database.
Dialogue: 0,1:58:25.39,1:58:30.97,英文,,0,0,0,,And then I'm rendering a template called books.html, passing in as a placeholder all of those books.
Dialogue: 0,1:58:30.97,1:58:33.19,英文,,0,0,0,,All right, let's go down that rabbit hole for a second.
Dialogue: 0,1:58:33.19,1:58:36.98,英文,,0,0,0,,Let me open up books.html in my templates directory.
Dialogue: 0,1:58:36.98,1:58:42.64,英文,,0,0,0,,And here again, even though it's new today, it's probably increasingly familiar syntactically.
Dialogue: 0,1:58:42.64,1:58:44.24,英文,,0,0,0,,Here's the h1.
Dialogue: 0,1:58:44.24,1:58:45.54,英文,,0,0,0,,Here is my loop.
Dialogue: 0,1:58:45.54,1:58:49.94,英文,,0,0,0,,Here's the h2, which is going to output the current book's title in that loop.
Dialogue: 0,1:58:49.94,1:58:51.18,英文,,0,0,0,,Here's the form.
Dialogue: 0,1:58:51.18,1:58:54.01,英文,,0,0,0,,Here's the ID of that book that's going to be outputted in the form.
Dialogue: 0,1:58:54.01,1:58:56.95,英文,,0,0,0,,So I didn't manually type out seven long forms.
Dialogue: 0,1:58:56.95,1:59:08.36,英文,,0,0,0,,I just did one in this template so that it gets generated automatically, literally what a website like Amazon would do to show you 10 books at a time or 10 search results or more at a time.
Dialogue: 0,1:59:08.36,1:59:12.12,英文,,0,0,0,,All right, well, let's go to slash cart, which was the juicy one.
Dialogue: 0,1:59:12.12,1:59:15.62,英文,,0,0,0,,And this one's longer, but let's see if we can reason through it.
Dialogue: 0,1:59:15.62,1:59:20.80,英文,,0,0,0,,If the user submits via GET or POST to slash cart, well, we first do this.
Dialogue: 0,1:59:20.80,1:59:23.97,英文,,0,0,0,,And this is just necessary and some boilerplate rewrote.
Dialogue: 0,1:59:23.97,1:59:29.83,英文,,0,0,0,,We're going to use the session object to store a variable called cart that, in this case, is going to be a list.
Dialogue: 0,1:59:29.83,1:59:31.83,英文,,0,0,0,,So session, again, is just a dictionary.
Dialogue: 0,1:59:31.83,1:59:33.81,英文,,0,0,0,,You can put anything in it you want.
Dialogue: 0,1:59:33.81,1:59:36.69,英文,,0,0,0,,Previously, we put students' names and sports.
Dialogue: 0,1:59:36.69,1:59:38.47,英文,,0,0,0,,Now,
Dialogue: 0,1:59:38.47,1:59:45.82,英文,,0,0,0,,What I want to do is actually, sorry, previously we put the student's name, the user's name in it.
Dialogue: 0,1:59:45.82,1:59:51.11,英文,,0,0,0,,Now I'm going to actually store a cart key whose value is a list.
Dialogue: 0,1:59:51.11,1:59:54.46,英文,,0,0,0,,Why? Because I want to aggregate more and more books in this list.
Dialogue: 0,1:59:54.46,2:00:00.28,英文,,0,0,0,,All right, so that just makes sure that I have at least an empty shopping cart the very first time the user does this.
Dialogue: 0,2:00:00.28,2:00:05.22,英文,,0,0,0,,If they visit this form via post, let's go ahead and get the ID of the book that they posted.
Dialogue: 0,2:00:05.22,2:00:14.27,英文,,0,0,0,,If it is not empty, if there is a number like 1 or 2 or 3, let's go ahead and go into the shopping cart, which is a list per this line.
Dialogue: 0,2:00:14.27,2:00:16.25,英文,,0,0,0,,And just append that ID.
Dialogue: 0,2:00:16.25,2:00:23.42,英文,,0,0,0,,So this list of books in your shopping cart is going to contain like 1, 2, 4, 6, whatever books you're actually buying.
Dialogue: 0,2:00:23.42,2:00:26.10,英文,,0,0,0,,And then the user gets redirected to cart.
Dialogue: 0,2:00:26.10,2:00:31.18,英文,,0,0,0,,What if, though, the user got here via get and not post? Well, this one's relatively straightforward.
Dialogue: 0,2:00:31.18,2:00:37.25,英文,,0,0,0,,If you just visit slash cart, we select star from books where ID is in.
Dialogue: 0,2:00:37.25,2:00:39.81,英文,,0,0,0,,OK, so this is interesting.
Dialogue: 0,2:00:39.81,2:00:42.75,英文,,0,0,0,,This list, and this is syntax you might not have seen before.
Dialogue: 0,2:00:42.75,2:00:53.01,英文,,0,0,0,,But if you read the documentation for CS50's library, if you select something and use a question mark placeholder, and the placeholder itself is a list,
Dialogue: 0,2:00:53.01,2:01:01.43,英文,,0,0,0,, we output a comma-separated list of values, just like you would use maybe in problem set 7 for doing SQL queries on your own.
Dialogue: 0,2:01:01.43,2:01:07.86,英文,,0,0,0,,So this just means show me only those books in my shopping cart, not Carter's, not someone else's, not in the whole database.
Dialogue: 0,2:01:07.86,2:01:13.04,英文,,0,0,0,,Only show me the books in my shopping cart, and then render it as such.
Dialogue: 0,2:01:13.04,2:01:17.48,英文,,0,0,0,,So we only saw what the catalog here looks like at slash books.
Dialogue: 0,2:01:17.48,2:01:19.44,英文,,0,0,0,,Let's go ahead and slash.
Dialogue: 0,2:01:19.44,2:01:22.36,英文,,0,0,0,,Let's go ahead and add maybe the first book to my cart.
Dialogue: 0,2:01:22.36,2:01:25.25,英文,,0,0,0,,And now I see at slash cart.
Dialogue: 0,2:01:25.25,2:01:28.03,英文,,0,0,0,,Only that first book, whose ID is 1.
Dialogue: 0,2:01:28.03,2:01:33.68,英文,,0,0,0,,Let me now go back to the bookstore here, scroll down to maybe the seventh book, and add that to my cart.
Dialogue: 0,2:01:33.68,2:01:36.46,英文,,0,0,0,,And now I see this here, too.
Dialogue: 0,2:01:36.46,2:01:40.26,英文,,0,0,0,,Meanwhile, all of this information is stored in my session.
Dialogue: 0,2:01:40.26,2:01:49.15,英文,,0,0,0,,And so when I reload this cart again and again, the reason I'm only seeing my two is because we're checking only the list in my session.
Dialogue: 0,2:01:49.15,2:01:55.33,英文,,0,0,0,,And Flasks makes sure, again, that my session is different from your session, is different from Carter's session as well.
Dialogue: 0,2:01:55.33,2:02:02.12,英文,,0,0,0,,But you write the code once, and it works for thousands, millions of people in parallel.
Dialogue: 0,2:02:02.12,2:02:06.84,英文,,0,0,0,,Any questions on this?
Dialogue: 0,2:02:06.84,2:02:09.34,英文,,0,0,0,,Yes, in the back.
Dialogue: 0,2:02:09.34,2:02:15.33,英文,,0,0,0,,Sorry, say it a little louder.
Dialogue: 0,2:02:15.33,2:02:19.75,英文,,0,0,0,,So to recap, so users will never have the same session values.
Dialogue: 0,2:02:19.75,2:02:23.58,英文,,0,0,0,,Theoretically, the cookie that gets planted does not look like a smiley face for everyone.
Dialogue: 0,2:02:23.58,2:02:26.76,英文,,0,0,0,,Each of us gets a big random number that's assigned to us.
Dialogue: 0,2:02:26.76,2:02:30.88,英文,,0,0,0,,So it would be like each of us gets a completely unique hand stamp that no one else can see.
Dialogue: 0,2:02:30.88,2:02:40.31,英文,,0,0,0,,The reason no one else can see it is because if the website's using HTTPS, every time this hand stamp is shown, every time this cookie is sent back and forth, it's all encrypted as well.
Dialogue: 0,2:02:40.31,2:02:49.80,英文,,0,0,0,,So each of us can, even if we have the same contents by coincidence, because we like the same books, they will be separate cookies, separate memory, separate sessions.
Dialogue: 0,2:02:49.80,2:02:54.62,英文,,0,0,0,,Behind you, yeah.
Dialogue: 0,2:02:54.62,2:02:57.64,英文,,0,0,0,,Really good question, when does the session end? Totally configurable.
Dialogue: 0,2:02:57.64,2:03:01.44,英文,,0,0,0,,Typically, it ends when you close the tab or when you quit the browser.
Dialogue: 0,2:03:01.44,2:03:06.97,英文,,0,0,0,,Or you can also configure cookies to themselves be persistent for a day, for a week, for a longer.
Dialogue: 0,2:03:06.97,2:03:16.13,英文,,0,0,0,,So for instance, when you log into, um, Say, Gmail, they plant a cookie on your computer probably for a week, a month, a year, something like that.
Dialogue: 0,2:03:16.13,2:03:22.10,英文,,0,0,0,,Because it would be annoying and probably drive you to Outlook or something else if you kept having to log into your account.
Dialogue: 0,2:03:22.10,2:03:25.28,英文,,0,0,0,,Whereas your bank account might actually wait for you to just close the tab.
Dialogue: 0,2:03:25.28,2:03:29.48,英文,,0,0,0,,And then for your own financial safety, they just automatically delete the session far sooner.
Dialogue: 0,2:03:29.48,2:03:30.88,英文,,0,0,0,,But totally configurable.
Dialogue: 0,2:03:30.88,2:03:35.22,英文,,0,0,0,,By default, as I'm using it, it will typically be thrown away when the browser itself quits.
Dialogue: 0,2:03:35.22,2:03:39.58,英文,,0,0,0,,And here, too, is another reason to develop websites using incognito mode.
Dialogue: 0,2:03:39.58,2:03:46.35,英文,,0,0,0,,Because if you want to just throw away all of your cookies, you close the incognito window mode, open a new one, and now you're starting from scratch.
Dialogue: 0,2:03:46.35,2:03:50.57,英文,,0,0,0,,You don't have to manually delete all your cookies, which could log you out of websites.
Dialogue: 0,2:03:50.57,2:03:52.33,英文,,0,0,0,,You actually care about.
Dialogue: 0,2:03:52.33,2:03:56.81,英文,,0,0,0,,Yeah.
Dialogue: 0,2:03:56.81,2:03:57.31,英文,,0,0,0,,Good question.
Dialogue: 0,2:03:57.31,2:04:02.06,英文,,0,0,0,,When using sessions, if someone maliciously changes the values of forms, could it affect other people?
Dialogue: 0,2:04:02.06,2:04:08.14,英文,,0,0,0,,Theoretically, no, because the worst you can do is, like, add books to your own shopping cart that you don't want there.
Dialogue: 0,2:04:08.14,2:04:22.23,英文,,0,0,0,,So at that point, even though it's on the server, it doesn't affect you or Carter or anyone else unless there is something more globally happening, like registering or deregistering for a sport or removing books from the Amazon database.
Dialogue: 0,2:04:22.23,2:04:27.09,英文,,0,0,0,,That would be problematic. But in this case, we're removing things only from my own
Dialogue: 0,2:04:27.09,2:04:38.68,英文,,0,0,0,,session that the website is giving me. All right, the last topic for today is this thing here, which is sort of everywhere nowadays, these things called APIs, or Application Programming Interfaces.
Dialogue: 0,2:04:38.68,2:04:49.49,英文,,0,0,0,,And this is a very generic term, in fact, because any function you've used in C, in Scratch, in Python, in SQL, are all APIs, like there is a standard way
Dialogue: 0,2:04:49.49,2:04:51.61,英文,,0,0,0,,of interfacing with those functions.
Dialogue: 0,2:04:51.61,2:04:52.63,英文,,0,0,0,,They all have names.
Dialogue: 0,2:04:52.63,2:04:54.17,英文,,0,0,0,,They sometimes have return values.
Dialogue: 0,2:04:54.17,2:04:55.89,英文,,0,0,0,,They sometimes have arguments.
Dialogue: 0,2:04:55.89,2:04:59.34,英文,,0,0,0,,And an API is just how you use a function.
Dialogue: 0,2:04:59.34,2:05:03.90,英文,,0,0,0,,Or more generally, an API just specifies how you interact with some service.
Dialogue: 0,2:05:03.90,2:05:13.80,英文,,0,0,0,,And so nowadays, there's a lot of web-based services that you can use to get back data, like the weather, or the current time, or the database of Amazon Books, for instance.
Dialogue: 0,2:05:13.80,2:05:16.75,英文,,0,0,0,,All might have APIs, often web-based.
Dialogue: 0,2:05:16.75,2:05:24.09,英文,,0,0,0,,That allow you, using URLs or some other technology, to just get data from someone else, as though it's a function you're calling remotely.
Dialogue: 0,2:05:24.09,2:05:29.63,英文,,0,0,0,,But HTTP is very often the mechanism that's used to actually get data from servers.
Dialogue: 0,2:05:29.63,2:05:32.48,英文,,0,0,0,,And the way the data can come back can be as follows.
Dialogue: 0,2:05:32.48,2:05:38.66,英文,,0,0,0,,Let me end with one final example using some of our familiar shows from weeks past.
Dialogue: 0,2:05:38.66,2:05:41.40,英文,,0,0,0,,Let me go ahead and close the old Flask version.
Dialogue: 0,2:05:41.40,2:05:48.03,英文,,0,0,0,,Go back into source 9 and go into how about an example called shows.
Dialogue: 0,2:05:48.03,2:05:52.31,英文,,0,0,0,,And the first version of this 0, I'm just going to go ahead and run with flask run.
Dialogue: 0,2:05:52.31,2:05:54.87,英文,,0,0,0,,I'll hover over my URL and open it here.
Dialogue: 0,2:05:54.87,2:05:58.92,英文,,0,0,0,,And you'll see now that I have a very simple form, as we keep doing today.
Dialogue: 0,2:05:58.92,2:06:04.52,英文,,0,0,0,,I'm going to type in like O-F-F-I-C-E, office, into this search box and click Search.
Dialogue: 0,2:06:04.52,2:06:11.56,英文,,0,0,0,,And you'll see now that I ended up at a URL ending in slash search, question mark, q equals office.
Dialogue: 0,2:06:11.56,2:06:16.15,英文,,0,0,0,,So this is like my own baby version of google.com, but I implemented it myself.
Dialogue: 0,2:06:16.15,2:06:25.27,英文,,0,0,0,,And for any title of a TV show from a couple of weeks past that matches O-F-F-I-C-E, I spit it out into an unordered list.
Dialogue: 0,2:06:25.27,2:06:26.53,英文,,0,0,0,,How is this working?
Dialogue: 0,2:06:26.53,2:06:33.32,英文,,0,0,0,,You can maybe imagine, even if you might not be able to program this off the top of your head certainly so soon, let me go into source 9.
Dialogue: 0,2:06:33.32,2:06:36.18,英文,,0,0,0,,Let me go into show 0.
Dialogue: 0,2:06:36.18,2:06:38.80,英文,,0,0,0,,Let me open up app.py.
Dialogue: 0,2:06:38.80,2:06:47.27,英文,,0,0,0,,And in this file, you'll see that I'm grabbing a file called shows.db, which is like a simpler version of the one from a couple of weeks past.
Dialogue: 0,2:06:47.27,2:06:48.89,英文,,0,0,0,,Here is why I see the web form.
Dialogue: 0,2:06:48.89,2:06:51.13,英文,,0,0,0,,My first route, my index is super simple.
Dialogue: 0,2:06:51.13,2:06:52.77,英文,,0,0,0,,It just spits out that form.
Dialogue: 0,2:06:52.77,2:06:55.93,英文,,0,0,0,,And my search route, you can think of this as google.com.
Dialogue: 0,2:06:55.93,2:06:58.13,英文,,0,0,0,,It's only like four lines of code.
Dialogue: 0,2:06:58.13,2:07:03.34,英文,,0,0,0,,So if the user sends data to slash search, this function called search is called.
Dialogue: 0,2:07:03.34,2:07:11.92,英文,,0,0,0,,I declare a variable called shows. I execute a SQL command that is select star from shows where title like question mark.
Dialogue: 0,2:07:11.92,2:07:29.13,英文,,0,0,0,,And the syntax here is a little crazy, but I want to prefix to the user's input percent sign and suffix it with a percent sign as well, putting in between those two values the actual input y. In SQL, what does it mean if you have a percent sign to the left and to the right?
Dialogue: 0,2:07:29.13,2:07:32.13,英文,,0,0,0,,Nothing to do with Jinja today.
Dialogue: 0,2:07:32.13,2:07:33.01,英文,,0,0,0,,It's a wild card.
Dialogue: 0,2:07:33.01,2:07:38.51,英文,,0,0,0,,So it means match zero or more characters on the left or match zero or more characters on the right.
Dialogue: 0,2:07:38.51,2:07:42.79,英文,,0,0,0,,You have to do the concatenation as the second argument to this function.
Dialogue: 0,2:07:42.79,2:07:46.18,英文,,0,0,0,,You can't do something clever like put it here around the question mark.
Dialogue: 0,2:07:46.18,2:07:49.64,英文,,0,0,0,,The question mark is the placeholder that you plug these values into.
Dialogue: 0,2:07:49.64,2:07:55.32,英文,,0,0,0,,But this just means, hey, SQL, show me all of the titles that have O-F-F-I-C-E somewhere in them.
Dialogue: 0,2:07:55.32,2:07:58.08,英文,,0,0,0,,That gives me back a list of dictionaries.
Dialogue: 0,2:07:58.08,2:08:05.01,英文,,0,0,0,,I pass that in as a placeholder for a variable called shows. And if we look at search.html, let's look at that.
Dialogue: 0,2:08:05.01,2:08:08.09,英文,,0,0,0,,In my templates directory, there's something called search.html.
Dialogue: 0,2:08:08.09,2:08:09.03,英文,,0,0,0,,Super simple.
Dialogue: 0,2:08:09.03,2:08:12.79,英文,,0,0,0,,I mean, this is like the essence of google.com search results.
Dialogue: 0,2:08:12.79,2:08:15.29,英文,,0,0,0,,I'm using an unordered list to keep things simple.
Dialogue: 0,2:08:15.29,2:08:18.70,英文,,0,0,0,,But I iterate over every show in the show's list that came back.
Dialogue: 0,2:08:18.70,2:08:21.40,英文,,0,0,0,,And I output an li with each of those shows' titles.
Dialogue: 0,2:08:21.40,2:08:21.86,英文,,0,0,0,,And that's it.
Dialogue: 0,2:08:21.86,2:08:26.80,英文,,0,0,0,,Now, Google has blue links, and little previews, and other text, the first sentence or so from each page.
Dialogue: 0,2:08:26.80,2:08:28.34,英文,,0,0,0,,But that's the idea.
Dialogue: 0,2:08:28.34,2:08:33.71,英文,,0,0,0,,This is really similar in spirit to what google.com slash search does for you.
Dialogue: 0,2:08:33.71,2:08:35.21,英文,,0,0,0,,Now, how is this working?
Dialogue: 0,2:08:35.21,2:08:37.13,英文,,0,0,0,,There's no API involved here yet.
Dialogue: 0,2:08:37.13,2:08:39.58,英文,,0,0,0,,This is just very basic HTTP.
Dialogue: 0,2:08:39.58,2:08:43.10,英文,,0,0,0,,I submit the form, I go to another route, and I get back the results.
Dialogue: 0,2:08:43.10,2:08:44.30,英文,,0,0,0,,But check out this version.
Dialogue: 0,2:08:44.30,2:08:46.37,英文,,0,0,0,,Let me close these tabs here.
Dialogue: 0,2:08:46.37,2:08:48.65,英文,,0,0,0,,and open my first terminal window.
Dialogue: 0,2:08:48.65,2:08:54.65,英文,,0,0,0,,Let me go into shows 1 from today's source 9 directory and do flask run this time.
Dialogue: 0,2:08:54.65,2:08:57.38,英文,,0,0,0,,Let me go ahead and hover over that URL and open it here.
Dialogue: 0,2:08:57.38,2:08:59.72,英文,,0,0,0,,And gone now is the Submit button.
Dialogue: 0,2:08:59.72,2:09:11.19,英文,,0,0,0,,Now I'm going to make a user interface that uses a technique called AJAX for asynchronous JavaScript and XML, which is somewhat of a dated term because we're not using something called XML anymore.
Dialogue: 0,2:09:11.19,2:09:17.83,英文,,0,0,0,,But AJAX is a technique. whereby you don't have to submit forms anymore to get more data from the server.
Dialogue: 0,2:09:17.83,2:09:25.61,英文,,0,0,0,,You can use JavaScript per last week, listen for an event like the key press coming down or up, and as soon as you hear such an event,
Dialogue: 0,2:09:25.61,2:09:35.61,英文,,0,0,0,,you can secretly, in JavaScript code, send a request to the server to get back more data, and then plug it into the DOM, the tree in the computer's memory.
Dialogue: 0,2:09:35.61,2:09:39.89,英文,,0,0,0,,And this just makes for more seamless experiences, like autocomplete on any website.
Dialogue: 0,2:09:39.89,2:09:44.24,英文,,0,0,0,,So now let me try typing o. OK, we got autocomplete super fast.
Dialogue: 0,2:09:44.24,2:09:55.42,英文,,0,0,0,,F, F, I, C, E. And you'll see every time I add more keys to my input, I'm doing another search, another search, another search, and the data is changing.
Dialogue: 0,2:09:55.42,2:10:02.83,英文,,0,0,0,,Now, how is this working? Well, let me go back to VS Code here. And in my other terminal window, let me open up app.py.
Dialogue: 0,2:10:02.83,2:10:07.66,英文,,0,0,0,,And in app.py, you'll see that there's still a search
Dialogue: 0,2:10:07.66,2:10:11.95,英文,,0,0,0,,route down below that returns a search template.
Dialogue: 0,2:10:11.95,2:10:13.05,英文,,0,0,0,,But watch this.
Dialogue: 0,2:10:13.05,2:10:17.19,英文,,0,0,0,,Let me go into templates slash search dot html.
Dialogue: 0,2:10:17.19,2:10:27.00,英文,,0,0,0,,And notice here that we're indeed getting back an unordered list of shows again and again and again.
Dialogue: 0,2:10:27.00,2:10:32.75,英文,,0,0,0,,And this html that's coming back, let me go here.
Dialogue: 0,2:10:32.75,2:10:33.79,英文,,0,0,0,,Let me open my terminal.
Dialogue: 0,2:10:33.79,2:10:36.42,英文,,0,0,0,,Oh, sorry, this is the wrong version.
Dialogue: 0,2:10:36.42,2:10:37.80,英文,,0,0,0,,Sorry, I was in the wrong folder.
Dialogue: 0,2:10:37.80,2:10:39.38,英文,,0,0,0,,Let's fix this.
Dialogue: 0,2:10:39.38,2:10:43.08,英文,,0,0,0,,In shows1, code of app.py, it's almost the same thing.
Dialogue: 0,2:10:43.08,2:10:49.06,英文,,0,0,0,,In search here, OK, well, I changed this slightly. Let me show you this version of search.
Dialogue: 0,2:10:49.06,2:10:52.30,英文,,0,0,0,,If I open up app.py, here's my search route.
Dialogue: 0,2:10:52.30,2:10:59.38,英文,,0,0,0,,I'm getting a variable called q, giving it the value of whatever request.args has from the user, like q equals office.
Dialogue: 0,2:10:59.38,2:11:03.28,英文,,0,0,0,,And then I'm checking, if the user actually typed something in, execute this SQL query.
Dialogue: 0,2:11:03.28,2:11:06.55,英文,,0,0,0,,Select star from shows where title is like that, using the same.
Dialogue: 0,2:11:06.55,2:11:12.33,英文,,0,0,0,,And this time, just to keep things efficient, I limited the total results to 50 instead of an infinite number.
Dialogue: 0,2:11:12.33,2:11:18.19,英文,,0,0,0,,Otherwise, if the user typed nothing, just to be super safe here, I'm setting shows equal to an empty list.
Dialogue: 0,2:11:18.19,2:11:24.66,英文,,0,0,0,,So if you don't type anything, there's nothing to show. And no matter what, I render this template called search.html.
Dialogue: 0,2:11:24.66,2:11:31.13,英文,,0,0,0,,Well, let's look at that. If I open up templates slash search dot html, this time there's no layout.
Dialogue: 0,2:11:31.13,2:11:34.03,英文,,0,0,0,,There's no inheritance of that layout.html.
Dialogue: 0,2:11:34.03,2:11:38.49,英文,,0,0,0,,I am literally generating just a whole bunch of li fragments.
Dialogue: 0,2:11:38.49,2:11:40.88,英文,,0,0,0,,Why? Well, let's see what's happening in the browser.
Dialogue: 0,2:11:40.88,2:11:43.04,英文,,0,0,0,,And this is the beginning of an API.
Dialogue: 0,2:11:43.04,2:11:55.97,英文,,0,0,0,,If I wanted to make this API available, this application programming interface, I could tell the world that if you want to search for TV shows in my database, go to URL, that's something, something, slash, search,
Dialogue: 0,2:11:55.97,2:12:01.65,英文,,0,0,0,,Question mark q equals office, or cat, or dog, or anything else.
Dialogue: 0,2:12:01.65,2:12:03.99,英文,,0,0,0,,And what I will return to you is this.
Dialogue: 0,2:12:03.99,2:12:04.83,英文,,0,0,0,,Enter.
Dialogue: 0,2:12:04.83,2:12:08.21,英文,,0,0,0,,I will just give you a whole bunch of li tags, which almost looks the same.
Dialogue: 0,2:12:08.21,2:12:10.44,英文,,0,0,0,,But let me view the page source.
Dialogue: 0,2:12:10.44,2:12:16.76,英文,,0,0,0,,Only am I going to hand you back a fragment of HTML. I'm not giving you an HTML tag, a body tag, a title tag, a head tag.
Dialogue: 0,2:12:16.76,2:12:18.18,英文,,0,0,0,,I'm not giving you a web page.
Dialogue: 0,2:12:18.18,2:12:27.30,英文,,0,0,0,,I'm giving you a fragment of HTML that you can now do whatever you want, including insert this into your own Unordered list.
Dialogue: 0,2:12:27.30,2:12:29.88,英文,,0,0,0,,So notice what happens in this actual app.
Dialogue: 0,2:12:29.88,2:12:44.55,英文,,0,0,0,,If I go back to VS Code here, let me open up my index template here, and you'll see some JavaScript magic. So in JavaScript here, in my form that only had the text box and no button, what am I doing?
Dialogue: 0,2:12:44.55,2:12:46.79,英文,,0,0,0,,In a script tag here.
Dialogue: 0,2:12:46.79,2:12:48.81,英文,,0,0,0,,I am creating a variable called input.
Dialogue: 0,2:12:48.81,2:12:56.56,英文,,0,0,0,,And I'm using this function called querySelector that just gets me a reference to the input text box on the form.
Dialogue: 0,2:12:56.56,2:12:58.34,英文,,0,0,0,,So I can see what the human typed.
Dialogue: 0,2:12:58.34,2:13:00.02,英文,,0,0,0,,This is a little different today.
Dialogue: 0,2:13:00.02,2:13:09.64,英文,,0,0,0,,But I'm using input.atEventListener, which is a way in JavaScript to tell it, just like in Scratch, listen for something to happen, like the green flag being clicked.
Dialogue: 0,2:13:09.64,2:13:13.38,英文,,0,0,0,,But in this case, listen for an event. that involves input.
Dialogue: 0,2:13:13.38,2:13:19.73,英文,,0,0,0,,That is like typing on the keyboard, whether it's by a copy-paste, manual input, or anything else.
Dialogue: 0,2:13:19.73,2:13:22.41,英文,,0,0,0,,Then, whenever that happens, call this function.
Dialogue: 0,2:13:22.41,2:13:24.13,英文,,0,0,0,,An async stands for asynchronous.
Dialogue: 0,2:13:24.13,2:13:30.83,英文,,0,0,0,,This is a term of art, which means that this function might take like a split second, maybe even a second or two to execute.
Dialogue: 0,2:13:30.83,2:13:34.73,英文,,0,0,0,,So it's going to do it behind the scenes, like in the background, so to speak.
Dialogue: 0,2:13:34.73,2:13:36.33,英文,,0,0,0,,And what is it going to do?
Dialogue: 0,2:13:36.33,2:13:46.21,英文,,0,0,0,,Well, it's going to call a JavaScript function that all browsers now support called fetch, which is a function that uses HTTP to go fetch more data from the server.
Dialogue: 0,2:13:46.21,2:13:53.82,英文,,0,0,0,,It's going to fetch data from a route called slash search, question mark, q equals, and whatever the value is that the user typed in.
Dialogue: 0,2:13:53.82,2:13:59.42,英文,,0,0,0,,So I'm just sort of manually creating my own mini URL and telling JavaScript, go fetch me that HTML.
Dialogue: 0,2:13:59.42,2:14:05.38,英文,,0,0,0,,When it comes back via this line of text here called response.txt, and let me wave my hand at await.
Dialogue: 0,2:14:05.38,2:14:07.80,英文,,0,0,0,,Await just means this might not come back immediately.
Dialogue: 0,2:14:07.80,2:14:08.94,英文,,0,0,0,,Let's await the response.
Dialogue: 0,2:14:08.94,2:14:11.63,英文,,0,0,0,,And when it does come in, then let's execute this code.
Dialogue: 0,2:14:11.63,2:14:12.83,英文,,0,0,0,,I'm going to do this.
Dialogue: 0,2:14:12.83,2:14:26.95,英文,,0,0,0,,I'm going to search the document, the whole web page, for this ul tag, which is somewhere in this page that we'll see in a moment, change its inner HTML to be that fragment of li, li, li of all of those matching shows.
Dialogue: 0,2:14:26.95,2:14:28.27,英文,,0,0,0,,And where does this all go?
Dialogue: 0,2:14:28.27,2:14:33.07,英文,,0,0,0,,Well, if we scroll up here, you'll notice that there's my usual HTML up at the top.
Dialogue: 0,2:14:33.07,2:14:35.47,英文,,0,0,0,,Head tag, body tag, and all of that.
Dialogue: 0,2:14:35.47,2:14:38.36,英文,,0,0,0,,There's the text box that we've talked about already.
Dialogue: 0,2:14:38.36,2:14:41.90,英文,,0,0,0,,There's no button for submitting, because it all happens automatically.
Dialogue: 0,2:14:41.90,2:14:48.90,英文,,0,0,0,,But there is, by default, this empty UL that has nothing by default until we start using that API.
Dialogue: 0,2:14:48.90,2:14:51.40,英文,,0,0,0,,And the final flourish here is this.
Dialogue: 0,2:14:51.40,2:14:58.88,英文,,0,0,0,,This is kind of an ugly, sloppy way to get data from a server, to just get back like a fragment of HTML.
Dialogue: 0,2:14:58.88,2:15:00.61,英文,,0,0,0,,Like, what if I'm not using HTML?
Dialogue: 0,2:15:00.61,2:15:06.81,英文,,0,0,0,,I want to store these TV shows in a PDF, or in some other web tag, in a table, or something like that.
Dialogue: 0,2:15:06.81,2:15:12.71,英文,,0,0,0,,It doesn't really make sense for the server to be presuming that I want li tags surrounding each of my data.
Dialogue: 0,2:15:12.71,2:15:15.69,英文,,0,0,0,,Better would be to get a more generic format back,
Dialogue: 0,2:15:15.69,2:15:23.52,英文,,0,0,0,,And that format is almost always nowadays called this, our final acronym, JSON, JavaScript Object Notation.
Dialogue: 0,2:15:23.52,2:15:24.36,英文,,0,0,0,,And let me do this.
Dialogue: 0,2:15:24.36,2:15:33.62,英文,,0,0,0,,Let me close these two tabs here and open my terminal window and cancel the previous version of Flask that was running.
Dialogue: 0,2:15:33.62,2:15:39.45,英文,,0,0,0,,Let me close this version and look at our final version called shows2 and do Flask run.
Dialogue: 0,2:15:39.45,2:15:42.77,英文,,0,0,0,,I'm going to hover over that URL and open it in a browser.
Dialogue: 0,2:15:42.77,2:15:53.24,英文,,0,0,0,,And I'm going to manually visit, after zooming in, let's do again, slash, search, question mark, q equals office, Enter.
Dialogue: 0,2:15:53.24,2:15:55.60,英文,,0,0,0,,And this is what JSON looks like.
Dialogue: 0,2:15:55.60,2:15:57.84,英文,,0,0,0,,Now, at a glance, this does not seem like an improvement.
Dialogue: 0,2:15:57.84,2:16:00.78,英文,,0,0,0,,Like, this looks crazy, that it's just this big blob of text.
Dialogue: 0,2:16:00.78,2:16:05.18,英文,,0,0,0,,But it's just enough text for the computer to be able to process it reliably.
Dialogue: 0,2:16:05.18,2:16:08.16,英文,,0,0,0,,Notice that there's a square bracket here.
Dialogue: 0,2:16:08.16,2:16:12.47,英文,,0,0,0,,And if I actually scroll to the bottom, there'd be a closed square bracket, like way down there.
Dialogue: 0,2:16:12.47,2:16:23.59,英文,,0,0,0,,Inside of that square bracket is a curly brace, then ID, colon, and then a number, then a title, quote, unquote, colon, and then the title, and then the closed curly brace.
Dialogue: 0,2:16:23.59,2:16:36.54,英文,,0,0,0,,So what you're seeing in JavaScript object notation is a very standard, super popular format that's just text, that still uses square brackets for lists, a.k.a. arrays, that still uses curly braces for dictionaries, key value pairs.
Dialogue: 0,2:16:36.54,2:16:42.60,英文,,0,0,0,,So what you see here is a massive list, up to 50, I think, shows that came back from this API.
Dialogue: 0,2:16:42.60,2:16:47.74,英文,,0,0,0,,Each of which has a dictionary, if you will, an object of key value pairs.
Dialogue: 0,2:16:47.74,2:16:49.22,英文,,0,0,0,,What keys and values?
Dialogue: 0,2:16:49.22,2:16:53.47,英文,,0,0,0,,An ID key and a title key, each of which has a value, respectively.
Dialogue: 0,2:16:53.47,2:16:58.41,英文,,0,0,0,,And this is the same data from IMDB, some of which you might be recalling visually.
Dialogue: 0,2:16:58.41,2:17:03.96,英文,,0,0,0,,This is just a very raw, computer-friendly way of returning a whole bunch of data that we humans don't need to see.
Dialogue: 0,2:17:03.96,2:17:06.74,英文,,0,0,0,,But I can use this data.
Dialogue: 0,2:17:06.74,2:17:14.40,英文,,0,0,0,,By going back into VS Code, let me open another terminal window and go into source 9 slash shows 2.
Dialogue: 0,2:17:14.40,2:17:23.57,英文,,0,0,0,,And in here, let me go ahead and open up how about templates index.html, which previously
Dialogue: 0,2:17:23.57,2:17:29.31,英文,,0,0,0,,Just use that inner HTML trick, and you're not going to be pleased with this syntax.
Dialogue: 0,2:17:29.31,2:17:32.53,英文,,0,0,0,,But let me just at least explain what we're doing.
Dialogue: 0,2:17:32.53,2:17:42.68,英文,,0,0,0,,It turns out that JSON is just the better way in general, the more generic, multi-purpose, user-agnostic, language-agnostic way of returning data from a server, because it's just text.
Dialogue: 0,2:17:42.68,2:17:51.56,英文,,0,0,0,,So it doesn't matter if you're using Python or C or C++ or JavaScript or Ruby or PHP or something else, all of those languages can process JSON information.
Dialogue: 0,2:17:51.56,2:17:54.51,英文,,0,0,0,,And indeed, here is some JavaScript that does just that.
Dialogue: 0,2:17:54.51,2:17:56.39,英文,,0,0,0,,Same code as before, initially.
Dialogue: 0,2:17:56.39,2:18:00.37,英文,,0,0,0,,I declare a variable called input that gives me access to the user's text box.
Dialogue: 0,2:18:00.37,2:18:04.24,英文,,0,0,0,,I listen for input, like keystrokes going up and down.
Dialogue: 0,2:18:04.24,2:18:07.94,英文,,0,0,0,,And when they happen, I call this anonymous function.
Dialogue: 0,2:18:07.94,2:18:15.79,英文,,0,0,0,,I fetch data from the server using the exact same code as before, search question mark q equals office or anything else.
Dialogue: 0,2:18:15.79,2:18:27.67,英文,,0,0,0,,And then this is just now new code that I use to convert that JSON data into my own HTML format, be it an unordered list, an ordered list, a table, or anything else.
Dialogue: 0,2:18:27.67,2:18:28.75,英文,,0,0,0,,What am I doing?
Dialogue: 0,2:18:28.75,2:18:31.19,英文,,0,0,0,,I've got a variable called HTML initialized to nothing.
Dialogue: 0,2:18:31.19,2:18:33.62,英文,,0,0,0,,So I've got no HTML initially.
Dialogue: 0,2:18:33.62,2:18:37.12,英文,,0,0,0,,I then iterate over every ID in those shows.
Dialogue: 0,2:18:37.12,2:18:41.54,英文,,0,0,0,,So every one of IMDB's unique identifier, I iterate over them one at a time.
Dialogue: 0,2:18:41.54,2:18:47.51,英文,,0,0,0,,And then I go into the show, add its ID location, and I grab its title.
Dialogue: 0,2:18:47.51,2:18:51.36,英文,,0,0,0,,And this is...
Dialogue: 0,2:18:51.36,2:18:52.96,英文,,0,0,0,,Forget this for just a moment.
Dialogue: 0,2:18:52.96,2:19:03.44,英文,,0,0,0,,I then take this HTML variable, concatenate or join onto it my own li tag plus the title plus the close li tag.
Dialogue: 0,2:19:03.44,2:19:05.38,英文,,0,0,0,,And I skipped this because it got scary pretty fast.
Dialogue: 0,2:19:05.38,2:19:09.65,英文,,0,0,0,,But it turns out that if some TV shows have actually angled brackets in them,
Dialogue: 0,2:19:09.65,2:19:12.49,英文,,0,0,0,,That could break my HTML entirely.
Dialogue: 0,2:19:12.49,2:19:22.19,英文,,0,0,0,,So it turns out, you might recall super briefly last week, we had the copyright symbol using an HTML entity using the ampersand and the hash symbol and 169 semicolon.
Dialogue: 0,2:19:22.19,2:19:33.99,英文,,0,0,0,,It turns out there are other such cryptic sequences of characters that represent otherwise dangerous or untypable characters like this, which could confuse the computer into thinking it's at the beginning of a tag.
Dialogue: 0,2:19:33.99,2:19:39.32,英文,,0,0,0,,And an ampersand, which could similarly trick the computer into thinking that it's a entity, which it isn't.
Dialogue: 0,2:19:39.32,2:19:43.72,英文,,0,0,0,,But long story short, there are libraries, thankfully, that handle much of this for you.
Dialogue: 0,2:19:43.72,2:19:59.16,英文,,0,0,0,,For our purposes, the takeaway is that now that you understand a bit of HTTP, now that you understand a bit of HTML, CSS, and JavaScript, all of which have their roles, you can use them, ultimately, to start assembling your own web applications, as you will for problem set 9.
Dialogue: 0,2:19:59.16,2:20:05.83,英文,,0,0,0,,Stitching together all of those languages and building full-fledged web applications, mobile applications, or anything more.
Dialogue: 0,2:20:05.83,2:20:08.59,英文,,0,0,0,,And for that, I think we are all set.
Dialogue: 0,2:20:08.59,2:20:11.83,英文,,0,0,0,,And the first one up here can have these cookies as well.
Dialogue: 0,2:20:11.83,2:20:15.69,英文,,0,0,0,,We'll see you next time for our very last CS50 lecture.
Dialogue: 0,0:01:12.22,0:01:19.02,中文,,0,0,0,,好了，这里是 CS50，现在已经是第九周了，也是倒数第二周。
Dialogue: 0,0:01:19.02,0:01:23.46,中文,,0,0,0,,实际上，这真的是这门课上你要学习如何编程的最后一周了。
Dialogue: 0,0:01:23.46,0:01:32.32,中文,,0,0,0,,但是，本周确实是这门课的教学高潮，我们将回顾之前学习过的各种语言、各种技术和所有语法。
Dialogue: 0,0:01:32.32,0:01:41.21,中文,,0,0,0,,这样一来，在几周后 CS50 结束时，你不会觉得自己只上了一门关于 C 语言的课，或者只上了一门关于 Python 的课，而是一门关于编程的课。
Dialogue: 0,0:01:41.21,0:01:46.90,中文,,0,0,0,,因为我们知道，你们中大约有一半的人会继续深入学习计算机科学，但另一半人不会。
Dialogue: 0,0:01:46.90,0:01:53.79,中文,,0,0,0,,实际上，从理论上讲，你们以后所有的编程技能都将建立在我们过去几周所做的事情的基础之上。
Dialogue: 0,0:01:53.79,0:02:05.66,中文,,0,0,0,,但从今往后，当你需要学习一门新兴的语言，或者需要跟随潮流\N学习一种比我们一直在使用的语言更流行、更适合解决你想解决的问题的语言时，就真的要靠你自己了。
Dialogue: 0,0:02:05.66,0:02:16.63,中文,,0,0,0,,今天我们要做的是将过去几周学习的知识综合起来，\N并将其应用于网页编程，无论好坏，网页编程在当今时代都非常流行，无论是在笔记本电脑还是手机上。
Dialogue: 0,0:02:16.63,0:02:24.16,中文,,0,0,0,,事实上，我们最近几周学习的语言不仅可以用来制作网站，还可以用来制作完整的应用程序、应用程序商店等等。
Dialogue: 0,0:02:24.16,0:02:27.38,中文,,0,0,0,,因此，这将是过去几周学习内容的顶峰。
Dialogue: 0,0:02:27.38,0:02:34.39,中文,,0,0,0,,事实上，我们甚至还会讨论一些熟悉的概念，比如你在亚马逊购物时的购物车，以及你在访问网站时出现的 cookie。
Dialogue: 0,0:02:34.39,0:02:36.51,中文,,0,0,0,,所有这些主题也会在课程中出现。
Dialogue: 0,0:02:36.51,0:02:39.79,中文,,0,0,0,,你将从头开始理解所有这些内容的含义。
Dialogue: 0,0:02:39.79,0:02:41.13,中文,,0,0,0,,那么，我们是怎么走到这一步的呢？
Dialogue: 0,0:02:41.13,0:02:42.57,中文,,0,0,0,,就在上周。
Dialogue: 0,0:02:42.57,0:02:46.94,中文,,0,0,0,,我们主要关注 HTML 和 CSS，它们不是编程语言。
Dialogue: 0,0:02:46.94,0:02:51.84,中文,,0,0,0,,它们只与美观、数据结构、数据呈现等有关。
Dialogue: 0,0:02:51.84,0:02:56.59,中文,,0,0,0,,我们使用 HTTP Server 程序来提供我们编写的网页。
Dialogue: 0,0:02:56.59,0:03:01.99,中文,,0,0,0,,这只是一个程序示例。实际上，你可以使用数十种、数百种不同的网络服务器程序。
Dialogue: 0,0:03:01.99,0:03:08.28,中文,,0,0,0,,这只是一个超级简单的服务器，我们已经预先安装在你的 VS Code 代码空间里了，这样你就可以直接提供网页服务。
Dialogue: 0,0:03:08.28,0:03:13.07,中文,,0,0,0,,上周末结束时，我们还简单介绍了 JavaScript，一种功能齐全的编程语言。
Dialogue: 0,0:03:13.07,0:03:29.76,中文,,0,0,0,,你可以用它来改善用户体验，通过在用户的 Mac、PC、手机浏览器上实际运行代码，\N使网页更具动态性和交互性，这与服务器端形成对比，到目前为止，我们所有的 C 和 Python 代码都是在服务器端编写的。
Dialogue: 0,0:03:29.76,0:03:31.38,中文,,0,0,0,,你在服务器上写代码。
Dialogue: 0,0:03:31.38,0:03:33.20,中文,,0,0,0,,你从服务器上提供代码。
Dialogue: 0,0:03:33.20,0:03:37.93,中文,,0,0,0,,但现在有了 HTML、CSS 和 JavaScript，代码在浏览器中执行。
Dialogue: 0,0:03:37.93,0:03:42.59,中文,,0,0,0,,但今天，我们将看到 Python 或类似语言的最后一个特性，
Dialogue: 0,0:03:42.59,0:03:51.84,中文,,0,0,0,,你可以使用服务器上的代码自动动态地生成你希望用户接收的 HTML、JavaScript、CSS。
Dialogue: 0,0:03:51.84,0:03:55.90,中文,,0,0,0,,你不必像制作自己的主页那样对所有内容进行硬编码。
Dialogue: 0,0:03:55.90,0:03:59.04,中文,,0,0,0,,让我们回顾一下上周的一些构建模块。
Dialogue: 0,0:03:59.04,0:04:00.93,中文,,0,0,0,,这是一个 URL 示例。
Dialogue: 0,0:04:00.93,0:04:04.93,中文,,0,0,0,,这里的斜杠是任何 Web 服务器上的默认页面。
Dialogue: 0,0:04:04.93,0:04:06.55,中文,,0,0,0,,它可能是 index.html。
Dialogue: 0,0:04:06.55,0:04:07.41,中文,,0,0,0,,也可能是其他东西。
Dialogue: 0,0:04:07.41,0:04:08.59,中文,,0,0,0,,这只是一个惯例。
Dialogue: 0,0:04:08.59,0:04:10.97,中文,,0,0,0,,但它指的是实际上的默认值。
Dialogue: 0,0:04:10.97,0:04:17.23,中文,,0,0,0,,当然，你可以使用任何浏览器访问以 file.html 或其他 .html 结尾的 URL。
Dialogue: 0,0:04:17.23,0:04:21.52,中文,,0,0,0,,这实际上意味着你的浏览器想要这个服务器上的这个文件。
Dialogue: 0,0:04:21.52,0:04:29.24,中文,,0,0,0,,或者，我们也看到它可以是一个文件夹，在这个文件夹里面，可能有一些默认的文件名，比如，还是 index.html。
Dialogue: 0,0:04:29.24,0:04:32.49,中文,,0,0,0,,或者你可以更明确地指定，比如 folder/file.html。
Dialogue: 0,0:04:32.49,0:04:34.49,中文,,0,0,0,,更通俗地说，我们把这些称为路径。
Dialogue: 0,0:04:34.49,0:04:40.89,中文,,0,0,0,,实际上，路径就是你的 Mac、PC 或服务器上某个信息的位置。
Dialogue: 0,0:04:40.89,0:04:44.74,中文,,0,0,0,,但今天，我们将使用其他常用术语来重命名它。
Dialogue: 0,0:04:44.74,0:04:45.82,中文,,0,0,0,,但它们实际上只是同义词。
Dialogue: 0,0:04:45.82,0:04:48.72,中文,,0,0,0,,今天，我们将把这些相同的东西称为路由。
Dialogue: 0,0:04:48.72,0:04:56.75,中文,,0,0,0,,因为今天，我们将最终用你自己的 Web 服务器来取代 HTTP 服务器，它只提供你所写的静态内容。
Dialogue: 0,0:04:56.75,0:05:05.77,中文,,0,0,0,,就像，现在你将控制服务器响应用户请求的操作，以便你可以进行交互式和动态地响应。
Dialogue: 0,0:05:05.77,0:05:08.24,中文,,0,0,0,,但我们仍然会看到像这样的技术。
Dialogue: 0,0:05:08.24,0:05:11.24,中文,,0,0,0,,这些是我们所谓的 HTTP 参数。
Dialogue: 0,0:05:11.24,0:05:13.96,中文,,0,0,0,,它们是 URL 中问号后面的所有内容。
Dialogue: 0,0:05:13.96,0:05:15.74,中文,,0,0,0,,可以是键值对的形式。
Dialogue: 0,0:05:15.74,0:05:17.04,中文,,0,0,0,,举个例子？
Dialogue: 0,0:05:17.04,0:05:23.01,中文,,0,0,0,,当我们使用 Google 时，我第一次尝试的键和值是什么？
Dialogue: 0,0:05:23.01,0:05:26.65,中文,,0,0,0,,还记得吗？
Dialogue: 0,0:05:26.65,0:05:38.28,中文,,0,0,0,,我在搜索猫，我发现键是 q，因为那是多年前创建 Google 的 Larry 和 Sergey 决定将你输入查询的 HTML 文本框命名为 q。
Dialogue: 0,0:05:38.28,0:05:44.60,中文,,0,0,0,,如果我输入 CAT 来搜索猫，它的值最终会出现在 Google 的 URL 中，即问号 cat=value。
Dialogue: 0,0:05:44.60,0:05:48.64,中文,,0,0,0,,我之前提到过，通常情况下，你需要向服务器发送两个不同的输入。
Dialogue: 0,0:05:48.64,0:05:51.20,中文,,0,0,0,,这就是为什么我建议你留意一下“&”符号。
Dialogue: 0,0:05:51.20,0:05:53.82,中文,,0,0,0,,“&”符号分隔这些键值对。
Dialogue: 0,0:05:53.82,0:05:56.08,中文,,0,0,0,,但这仍然是和之前一样的模式。
Dialogue: 0,0:05:56.08,0:06:00.04,中文,,0,0,0,,这我们已经见过很多次了，对吧？Python 中的键值对和字典。
Dialogue: 0,0:06:00.04,0:06:03.68,中文,,0,0,0,,我们见过 HTML 属性及其值。
Dialogue: 0,0:06:03.68,0:06:06.48,中文,,0,0,0,,我们还见过 CSS 属性及其值。
Dialogue: 0,0:06:06.48,0:06:14.15,中文,,0,0,0,,它们都是同一件事，即将一个东西与另一个东西关联起来，尽管每种语言、每个人似乎都有自己的表达方式。
Dialogue: 0,0:06:14.15,0:06:18.41,中文,,0,0,0,,但这实际上是同一个概念，即将一个东西与另一个东西关联起来。
Dialogue: 0,0:06:18.41,0:06:19.63,中文,,0,0,0,,我们还会看到。
Dialogue: 0,0:06:19.63,0:06:30.79,中文,,0,0,0,,具体来说，如果我确实想在 Google 上搜索 “cats” 之类的内容，那么这些虚拟信封中包含的就是这些 HTTP 文本行。
Dialogue: 0,0:06:30.79,0:06:40.05,中文,,0,0,0,,回想一下，这是我的浏览器发送给服务器的消息，目的是告诉 Google 搜索的不是 “dogs”，而是在这个例子中是 “cats”。
Dialogue: 0,0:06:40.05,0:06:42.35,中文,,0,0,0,,那么，HTTP 服务器为我们做了什么呢？
Dialogue: 0,0:06:42.35,0:06:47.58,中文,,0,0,0,,它只是提供 HTML 文件、CSS 文件，也许还有一些 JS 或 JavaScript 文件。
Dialogue: 0,0:06:47.58,0:06:51.16,中文,,0,0,0,,但它一直忽略任何 HTTP 参数。
Dialogue: 0,0:06:51.16,0:06:53.46,中文,,0,0,0,,HTTP 服务器不接受用户输入。
Dialogue: 0,0:06:53.46,0:06:54.04,中文,,0,0,0,,为什么？
Dialogue: 0,0:06:54.04,0:06:55.16,中文,,0,0,0,,它要怎么处理用户输入呢？
Dialogue: 0,0:06:55.16,0:06:56.79,中文,,0,0,0,,因为你已经写好了 HTML。
Dialogue: 0,0:06:56.79,0:06:57.99,中文,,0,0,0,,你也已经写好了 CSS。
Dialogue: 0,0:06:57.99,0:07:03.09,中文,,0,0,0,,在我们引入一种合适的服务器端编程语言之前，没有任何决策需要做出。
Dialogue: 0,0:07:03.09,0:07:09.22,中文,,0,0,0,,因此，我们现在要放弃这个简单的 HTTP 服务器程序，向大家介绍你自己的服务器。
Dialogue: 0,0:07:09.22,0:07:20.51,中文,,0,0,0,,它将处理解析工作，即提取这些键值对，这样你和我就不用突然编写 Python 代码来分析这些东西，找出请求页面、键和值对。
Dialogue: 0,0:07:20.51,0:07:24.84,中文,,0,0,0,,通过使用正确的框架，我们仍然可以免费获得所有这些功能。
Dialogue: 0,0:07:24.84,0:07:27.58,中文,,0,0,0,,今天，我们来回顾一下 Python。
Dialogue: 0,0:07:27.58,0:07:30.16,中文,,0,0,0,,在过去几周里，我们已经以某种形式使用过它。
Dialogue: 0,0:07:30.16,0:07:34.28,中文,,0,0,0,,实际上，它就像胶水一样，把我们自己的一些逻辑连接在一起。
Dialogue: 0,0:07:34.28,0:07:35.56,中文,,0,0,0,,我们在 SQL 中见过它。
Dialogue: 0,0:07:35.56,0:07:39.38,中文,,0,0,0,,我们现在将在 HTML、CSS 甚至 JavaScript 中看到它。
Dialogue: 0,0:07:39.38,0:07:43.12,中文,,0,0,0,,今天我们还会看到另一种语言，不是编程语言，叫做 Jinja。
Dialogue: 0,0:07:43.12,0:07:56.19,中文,,0,0,0,,这将是现实世界中一种常见的范例，不同的语言、不同的库、不同的框架经常互相借鉴，或者使用别人写好的技术，这样就不用重复造轮子了。
Dialogue: 0,0:07:56.19,0:07:57.87,中文,,0,0,0,,Flask 就是这样一个框架。
Dialogue: 0,0:07:57.87,0:07:59.27,中文,,0,0,0,,它是一个第三方库。
Dialogue: 0,0:07:59.27,0:08:00.71,中文,,0,0,0,,现在它很流行。
Dialogue: 0,0:08:00.71,0:08:03.57,中文,,0,0,0,,它相对简单，这就是我们在 CS50 中使用它的原因。
Dialogue: 0,0:08:03.57,0:08:09.35,中文,,0,0,0,,如果你在学习 CS50 之前就接触过编程，Django 是 Python 领域中另一个流行的框架或库。
Dialogue: 0,0:08:09.35,0:08:10.53,中文,,0,0,0,,但它稍微复杂一些。
Dialogue: 0,0:08:10.53,0:08:11.97,中文,,0,0,0,,所以我们主要讲 Flask。
Dialogue: 0,0:08:11.97,0:08:14.63,中文,,0,0,0,,我们将会看到，Jinja 不是一种编程语言。
Dialogue: 0,0:08:14.63,0:08:22.70,中文,,0,0,0,,它只是一种语法，幸运的是它用的是我们熟悉的 curly braces，让我们可以在网页中使用占位符。
Dialogue: 0,0:08:22.70,0:08:27.34,中文,,0,0,0,,最终，你会慢慢理解这些不同技术之间的界限。
Dialogue: 0,0:08:27.34,0:08:28.96,中文,,0,0,0,,但这些都不是重点。
Dialogue: 0,0:08:28.96,0:08:32.24,中文,,0,0,0,,重点是我们将在代码中关注的内容。
Dialogue: 0,0:08:32.24,0:08:48.39,中文,,0,0,0,,从今天开始，我们将不再运行 HTTP server 来提供静态网站，\N而是让大家在终端窗口中运行  Flask  run 来运行自己的网络服务器，这个服务器是用 Python 语言基于 Flask 框架实现的。
Dialogue: 0,0:08:48.39,0:08:54.72,中文,,0,0,0,,Bootstrap 是一个库，可以让你的 CSS 和 JavaScript 更美观，更具交互性。
Dialogue: 0,0:08:54.72,0:09:02.22,中文,,0,0,0,,Flask 是一个框架或库，可以让你的 Python 代码更易于使用，因为你借用了别人的功能。
Dialogue: 0,0:09:02.22,0:09:04.06,中文,,0,0,0,,好，那我们该怎么做呢？
Dialogue: 0,0:09:04.06,0:09:11.83,中文,,0,0,0,,如果你要使用 Python 和 Flask 编写自己的 Web 应用程序，比如你自己的 Amazon.com 或 Google.com，
Dialogue: 0,0:09:11.83,0:09:20.29,中文,,0,0,0,,至少，你需要按照惯例创建一个名为 app.py 的文件，\N用来存放你所有的 Python 代码，然后创建一个名为 templates 的文件夹，用来存放你所有的模板。
Dialogue: 0,0:09:20.29,0:09:23.13,中文,,0,0,0,,目前，你的模板只是 HTML 文件。
Dialogue: 0,0:09:23.13,0:09:31.19,中文,,0,0,0,,因此，如果我们现在要开始构建像 google.com 或 amazon.com 这样更有趣的交互式应用，我们需要能够在服务器上执行代码。
Dialogue: 0,0:09:31.19,0:09:32.27,中文,,0,0,0,,这就是惯例。
Dialogue: 0,0:09:32.27,0:09:34.63,中文,,0,0,0,,它不再一定是 index.html 了。
Dialogue: 0,0:09:34.63,0:09:36.95,中文,,0,0,0,,在顶层是这两个东西。
Dialogue: 0,0:09:36.95,0:09:39.87,中文,,0,0,0,,也就是说，我们会很快看到其他一些惯例。
Dialogue: 0,0:09:39.87,0:09:52.70,中文,,0,0,0,,在我在线的示例和习题集 9 中，你会看到另一个名为 requirements.txt 的文件，\N它只是一个文本文件，允许你列出应用程序可能想要使用的所有第三方库。
Dialogue: 0,0:09:52.70,0:09:57.88,中文,,0,0,0,,这是一个惯例，以便服务器可以自动为你安装东西，而无需你手动操作。
Dialogue: 0,0:09:57.88,0:10:01.32,中文,,0,0,0,,static 文件夹将存放你的静态内容。
Dialogue: 0,0:10:01.32,0:10:08.12,中文,,0,0,0,,因此，如果你有 Web 应用程序的图像、JavaScript 文件、CSS 文件，按照惯例，它们会放在 static 文件夹中。
Dialogue: 0,0:10:08.12,0:10:09.38,中文,,0,0,0,,这些只是惯例。
Dialogue: 0,0:10:09.38,0:10:12.71,中文,,0,0,0,,所有这些都可以更改，但这是做事的方式。
Dialogue: 0,0:10:12.71,0:10:14.93,中文,,0,0,0,,所以我们将向你介绍默认值。
Dialogue: 0,0:10:14.93,0:10:16.71,中文,,0,0,0,,好，这意味着什么呢？
Dialogue: 0,0:10:16.71,0:10:25.58,中文,,0,0,0,,例如，如何使用 Python 实现我自己的 Web 应用程序，并以某种方式输出“hello, world”这样的消息？
Dialogue: 0,0:10:25.58,0:10:28.32,中文,,0,0,0,,结果就是这样。
Dialogue: 0,0:10:28.32,0:10:39.06,中文,,0,0,0,,我们马上就会详细解释，但这是一个示例 app.py 文件的内容，它显然使用了一些库，语法很熟悉，像从什么地方导入什么东西。
Dialogue: 0,0:10:39.06,0:10:42.30,中文,,0,0,0,,我们在处理 CSV 和其他库时见过这种语法。
Dialogue: 0,0:10:42.30,0:10:45.49,中文,,0,0,0,,这是一种比较新的语法，但现在可以先复制粘贴。
Dialogue: 0,0:10:45.49,0:10:50.31,中文,,0,0,0,,这绝对是新的语法，@ 符号看起来有点奇怪，但我们今天会反复看到它。
Dialogue: 0,0:10:50.31,0:10:53.89,中文,,0,0,0,,在了解它的作用之前，可以先复制粘贴。
Dialogue: 0,0:10:53.89,0:11:02.95,中文,,0,0,0,,但至少这里还有一些熟悉的东西，比如 index.html 仍然存在，但什么时候以及如何向用户展示它将由我们决定。
Dialogue: 0,0:11:02.95,0:11:11.72,中文,,0,0,0,,我们来实际操作一下。我打开 VS Code，在 hello 文件夹中创建一个新文件。
Dialogue: 0,0:11:11.72,0:11:15.04,中文,,0,0,0,,我输入 mkdir hello 创建一个名为 hello 的新文件夹。
Dialogue: 0,0:11:15.04,0:11:21.11,中文,,0,0,0,,我用 cd 命令进入这个文件夹，把所有文件都放在同一个目录下，这样我们今天就可以在不同的文件夹中创建不同的应用程序。
Dialogue: 0,0:11:21.11,0:11:25.13,中文,,0,0,0,,现在我输入 code... 实际上。
Dialogue: 0,0:11:25.13,0:11:28.07,中文,,0,0,0,,我们先创建 templates.html 文件夹。
Dialogue: 0,0:11:28.07,0:11:29.83,中文,,0,0,0,,抱歉，不是 templates.html。
Dialogue: 0,0:11:29.83,0:11:32.95,中文,,0,0,0,,我用 mv 命令把它重命名为 templates。
Dialogue: 0,0:11:32.95,0:11:34.39,中文,,0,0,0,,这和网页编程没关系。
Dialogue: 0,0:11:34.39,0:11:39.22,中文,,0,0,0,,是我打错了。如果我现在输入 ls，就能看到一个名为 templates 的文件夹。
Dialogue: 0,0:11:39.22,0:11:43.52,中文,,0,0,0,,在 templates 文件夹中，我们创建一个名为 index.html 的文件。
Dialogue: 0,0:11:43.52,0:11:47.02,中文,,0,0,0,,这个文件非常简单，几乎和上周的一样，可以直接复制粘贴。
Dialogue: 0,0:11:47.02,0:11:48.56,中文,,0,0,0,,我先隐藏终端窗口。
Dialogue: 0,0:11:48.56,0:11:53.50,中文,,0,0,0,,然后我用 HTML 标签快速创建一个简单的“Hello World”页面。
Dialogue: 0,0:11:53.50,0:11:59.21,中文,,0,0,0,,Lang 会设置为英语。然后在里面，我要放一个 head 标签。
Dialogue: 0,0:11:59.21,0:12:01.13,中文,,0,0,0,,在它里面，我会放一个 title 标签。
Dialogue: 0,0:12:01.13,0:12:03.45,中文,,0,0,0,,我只打算把它叫做 hello。
Dialogue: 0,0:12:03.45,0:12:04.91,中文,,0,0,0,,然后我会有一个 body。
Dialogue: 0,0:12:04.91,0:12:08.45,中文,,0,0,0,,在这里面，我只想说一些简单的话，比如 hello, world。
Dialogue: 0,0:12:08.45,0:12:11.92,中文,,0,0,0,,为了让它对移动设备友好，回想一下我们之前提到过的 meta 标签。
Dialogue: 0,0:12:11.92,0:12:19.62,中文,,0,0,0,,所以以防你下课后用手机而不是笔记本电脑打开，我会写 name 等于引号，viewport。
Dialogue: 0,0:12:19.62,0:12:23.10,中文,,0,0,0,,viewport，然后 content 等于，我从来不记得这个。
Dialogue: 0,0:12:23.10,0:12:24.98,中文,,0,0,0,,我实际上是在小抄上看到的。
Dialogue: 0,0:12:24.98,0:12:27.86,中文,,0,0,0,,initial-scale=1。
Dialogue: 0,0:12:27.86,0:12:30.11,中文,,0,0,0,,width=device-width。
Dialogue: 0,0:12:30.11,0:12:36.97,中文,,0,0,0,,这是一个神奇的咒语，它告诉浏览器根据设备的大小调整内容的大小。
Dialogue: 0,0:12:36.97,0:12:39.05,中文,,0,0,0,,它会稍微放大字体。
Dialogue: 0,0:12:39.05,0:12:41.21,中文,,0,0,0,,好了，这就是我上周要做的事情。
Dialogue: 0,0:12:41.21,0:12:45.13,中文,,0,0,0,,我会在同一个目录下运行 HTTP server 来提供这个网页。
Dialogue: 0,0:12:45.13,0:12:46.85,中文,,0,0,0,,我就会看到 HTML。
Dialogue: 0,0:12:46.85,0:12:50.35,中文,,0,0,0,,但是现在让我们开始控制用户体验。
Dialogue: 0,0:12:50.35,0:12:53.77,中文,,0,0,0,,目前，它看起来会很普通。它只会显示 hello, world。
Dialogue: 0,0:12:53.77,0:12:59.12,中文,,0,0,0,,但稍后，版本 2 会显示 hello, David 或 hello, Carter，会更动态一些。
Dialogue: 0,0:12:59.12,0:13:02.48,中文,,0,0,0,,我们会很快升级到更有趣的内容
Dialogue: 0,0:13:02.48,0:13:06.50,中文,,0,0,0,,以及应用，最终会实现像 cookie、购物车之类的功能。
Dialogue: 0,0:13:06.50,0:13:08.94,中文,,0,0,0,,回到我的终端窗口。
Dialogue: 0,0:13:08.94,0:13:13.35,中文,,0,0,0,,正如我承诺的，我创建一个名为 app.py 的文件。
Dialogue: 0,0:13:13.35,0:13:18.95,中文,,0,0,0,,现在我需要使用 Flask 框架来实现我要运行的网络服务器。
Dialogue: 0,0:13:18.95,0:13:24.28,中文,,0,0,0,,现在，我只是从刚才的幻灯片中复制粘贴一些代码。
Dialogue: 0,0:13:24.28,0:13:34.88,中文,,0,0,0,,从我们已经预先安装好的 Flask 库中，我要导入一个名为 Flask 的函数，注意是大写字母 F。这很微妙，但很重要。
Dialogue: 0,0:13:34.88,0:13:42.15,中文,,0,0,0,,我还将导入其他一些东西，一个名为 renderTemplate 的函数和另一个名为 request 的变量。
Dialogue: 0,0:13:42.15,0:13:47.89,中文,,0,0,0,,我之所以知道这一点，是因为我以前教过这门课，阅读过文档，并学习过教程。
Dialogue: 0,0:13:47.89,0:13:50.92,中文,,0,0,0,,除非有人告诉你或你阅读过如何操作，否则你不会知道这些。
Dialogue: 0,0:13:50.92,0:14:01.06,中文,,0,0,0,,这意味着这个名为 Flask 的库中有三个东西：一个名为 Flask 的函数（注意是大写字母 F），\N一个名为 render template 的函数，以及一个内置的变量 request。
Dialogue: 0,0:14:01.06,0:14:05.71,中文,,0,0,0,,这些就是我实现自己的网络服务器所需的所有构建块。
Dialogue: 0,0:14:05.71,0:14:11.67,中文,,0,0,0,,在 Flask 中，当你想用 Python 创建一个网络应用程序时，你需要创建一个名为 app 的变量（按照惯例）。
Dialogue: 0,0:14:11.67,0:14:21.62,中文,,0,0,0,,你将 Flask 函数（注意是大写字母 F）的返回值赋给它，并传入 __name__，这看起来很奇怪。
Dialogue: 0,0:14:21.62,0:14:22.98,中文,,0,0,0,,但我们以前见过这个。
Dialogue: 0,0:14:22.98,0:14:28.71,中文,,0,0,0,,几周前，有人记得我们是什么时候以及为什么提到 __name__ 的吗？
Dialogue: 0,0:14:35.79,0:14:48.61,中文,,0,0,0,,是的，如果我们想检查文件名是否为 main，这样就可以避免一种情况：如果你正在编写自己的库代码，你不希望你的代码被自动执行。
Dialogue: 0,0:14:48.61,0:14:51.32,中文,,0,0,0,,你可能希望执行 main 函数。
Dialogue: 0,0:14:51.32,0:14:53.56,中文,,0,0,0,,这就是解决这个问题的办法。
Dialogue: 0,0:14:53.56,0:14:55.70,中文,,0,0,0,,就今天的目的而言，这就是你的做法。
Dialogue: 0,0:14:55.70,0:14:58.70,中文,,0,0,0,,__name__ 指的是当前文件。
Dialogue: 0,0:14:58.70,0:15:03.10,中文,,0,0,0,,这行代码的作用就是把这个文件变成一个 Flask 应用。
Dialogue: 0,0:15:03.10,0:15:05.64,中文,,0,0,0,,目前来说，这就是它的全部功能。
Dialogue: 0,0:15:05.64,0:15:07.05,中文,,0,0,0,,这一行代码就足够了。
Dialogue: 0,0:15:07.05,0:15:08.73,中文,,0,0,0,,好，在那之后我想要做什么？
Dialogue: 0,0:15:08.73,0:15:10.83,中文,,0,0,0,,现在我接管了网络服务器。
Dialogue: 0,0:15:10.83,0:15:19.43,中文,,0,0,0,,我需要编写代码，根据浏览器的请求，决定从服务器发送哪些文件到浏览器。
Dialogue: 0,0:15:19.43,0:15:23.00,中文,,0,0,0,,上周，HTTP 服务器根据文件名帮我们完成了所有这些工作。
Dialogue: 0,0:15:23.00,0:15:25.90,中文,,0,0,0,,但今天，我要接管这个过程的控制权。
Dialogue: 0,0:15:25.90,0:15:27.54,中文,,0,0,0,,我采用的方法如下。
Dialogue: 0,0:15:27.54,0:15:32.52,中文,,0,0,0,,我使用 app.route，并在前面加一个奇怪的 @ 符号。
Dialogue: 0,0:15:32.52,0:15:34.63,中文,,0,0,0,,这在 Python 中被称为装饰器。
Dialogue: 0,0:15:34.63,0:15:38.93,中文,,0,0,0,,它是 Python 的一个特性，而不是 Flask 的特性，我们过去几周没有介绍过。
Dialogue: 0,0:15:38.93,0:15:42.93,中文,,0,0,0,,但它是一个特殊的，方便的技巧，可以用来完成我们接下来要做的事情。
Dialogue: 0,0:15:42.93,0:15:45.91,中文,,0,0,0,,我想要定义的路由是“/”。
Dialogue: 0,0:15:45.91,0:15:54.10,中文,,0,0,0,,也就是说，每当用户访问网站的默认页面，也就是“/”时，我希望服务器执行这段代码。
Dialogue: 0,0:15:54.10,0:15:55.92,中文,,0,0,0,,那么，我希望他们执行什么代码呢？
Dialogue: 0,0:15:55.92,0:15:57.84,中文,,0,0,0,,我希望他们执行一个函数。
Dialogue: 0,0:15:57.84,0:16:00.18,中文,,0,0,0,,因此，我可以在 Python 中定义一个函数。
Dialogue: 0,0:16:00.18,0:16:08.11,中文,,0,0,0,,从技术上讲，我可以随便给这个函数起名字，比如 x、y 或 z。但因为用户正在访问默认页面，也就是网站的索引页，
Dialogue: 0,0:16:08.11,0:16:10.83,中文,,0,0,0,,所以我更倾向于将这个函数命名为 index。
Dialogue: 0,0:16:10.83,0:16:13.01,中文,,0,0,0,,这只是一个惯例，你可以随意命名。
Dialogue: 0,0:16:13.01,0:16:16.57,中文,,0,0,0,,但用 x、y 或 z 作为参数名可能不是一个好的代码风格。
Dialogue: 0,0:16:16.57,0:16:18.75,中文,,0,0,0,,在这种情况下，它不需要任何参数。
Dialogue: 0,0:16:18.75,0:16:31.09,中文,,0,0,0,,这段代码，这个函数，现在要做的唯一事情就是返回 “hello, world”。
Dialogue: 0,0:16:31.09,0:16:34.47,中文,,0,0,0,,好了，现在让我进入终端窗口。
Dialogue: 0,0:16:34.47,0:16:39.58,中文,,0,0,0,,让我在包含 app.py 的目录中运行 flask run 并按下回车键。
Dialogue: 0,0:16:39.58,0:16:43.34,中文,,0,0,0,,我会看到一些代码输出，包括我的代码空间的 URL。
Dialogue: 0,0:16:43.34,0:16:48.64,中文,,0,0,0,,如果我将鼠标悬停在 URL 上并打开它，我确实会看到 Hello World，如你所愿。
Dialogue: 0,0:16:48.64,0:16:49.58,中文,,0,0,0,,但是让我这样做。
Dialogue: 0,0:16:49.58,0:16:53.79,中文,,0,0,0,,让我右键单击页面，然后单击“查看页面源代码”。
Dialogue: 0,0:16:53.79,0:16:59.65,中文,,0,0,0,,如果你以前从未这样做过，它会向你显示页面的所有 HTML 代码，无论其美观与否。就是这样。
Dialogue: 0,0:16:59.65,0:17:01.57,中文,,0,0,0,,我没有输出任何 HTML 代码。
Dialogue: 0,0:17:01.57,0:17:04.25,中文,,0,0,0,,它仅仅是“hello world”。
Dialogue: 0,0:17:04.25,0:17:08.91,中文,,0,0,0,,好吧，如果我真的想输出一个完整的网页，这并不难，因为谁在乎呢？
Dialogue: 0,0:17:08.91,0:17:10.48,中文,,0,0,0,,反正它只是一段文本。
Dialogue: 0,0:17:10.48,0:17:14.62,中文,,0,0,0,,但如果我想输出整个文件，让我这样做。
Dialogue: 0,0:17:14.62,0:17:21.78,中文,,0,0,0,,我想要返回 index.html 的内容，它包含了我想要的所有标签、移动设备友好的内容等等。
Dialogue: 0,0:17:21.78,0:17:25.76,中文,,0,0,0,,好吧，我不能直接返回 index.html，但我可以返回这个。
Dialogue: 0,0:17:25.76,0:17:30.26,中文,,0,0,0,,“render_template('index.html')”。
Dialogue: 0,0:17:30.26,0:17:36.83,中文,,0,0,0,,根据 Flask 的文档，这个 render_template 函数会按照惯例在我的 templates 文件夹中找到那个文件。
Dialogue: 0,0:17:36.83,0:17:38.03,中文,,0,0,0,,它会打开文件。
Dialogue: 0,0:17:38.03,0:17:41.37,中文,,0,0,0,,然后它会将整个内容输出到浏览器。
Dialogue: 0,0:17:41.37,0:17:45.98,中文,,0,0,0,,这样我就可以把所有的 HTML 代码放在一个地方，所有的 Python 代码放在另一个地方。
Dialogue: 0,0:17:45.98,0:17:53.74,中文,,0,0,0,,现在，如果我回到浏览器并重新加载，我应该看不出什么区别，因为最终显示的文本是相同的。
Dialogue: 0,0:17:53.74,0:17:56.05,中文,,0,0,0,,但如果我现在查看页面源代码。
Dialogue: 0,0:17:56.05,0:18:01.47,中文,,0,0,0,,请注意，这里有刚刚发送到浏览器的所有 HTML 代码。
Dialogue: 0,0:18:01.47,0:18:16.91,中文,,0,0,0,,所以这只是说，我们有了构建模块，或者说是拼图碎片，可以通过它将所有 HTML 代码存储在一个地方，\N以及 CSS、JavaScript 等等，然后提供我们想要的内容，即使我现在只是盲目地输出 index.html。
Dialogue: 0,0:18:16.91,0:18:19.61,中文,,0,0,0,,在我们继续之前，有什么问题吗？
Dialogue: 0,0:18:19.61,0:18:25.88,中文,,0,0,0,,我再次说明，这就像我手动实现了上周 HTTP 服务器自动为我们做的事情。
Dialogue: 0,0:18:25.88,0:18:28.28,中文,,0,0,0,,但这就是你自己如何实现它的方法。
Dialogue: 0,0:18:28.28,0:18:30.69,中文,,0,0,0,,有什么问题吗？
Dialogue: 0,0:18:30.69,0:18:36.91,中文,,0,0,0,,让我们来做一些更有趣的事情，这是仅凭 HTTP 服务器和 HTML 无法做到的。
Dialogue: 0,0:18:36.91,0:18:39.90,中文,,0,0,0,,我们来试试这个吧。
Dialogue: 0,0:18:39.90,0:18:41.48,中文,,0,0,0,,让我访问相同的 URL。
Dialogue: 0,0:18:41.48,0:18:42.64,中文,,0,0,0,,我要放大一下。
Dialogue: 0,0:18:42.64,0:18:44.94,中文,,0,0,0,,你的 URL 会和我的代码空间不同。
Dialogue: 0,0:18:44.94,0:18:46.56,中文,,0,0,0,,但结尾会和这里类似。
Dialogue: 0,0:18:46.56,0:18:49.04,中文,,0,0,0,,我要输入斜杠问号。
Dialogue: 0,0:18:49.04,0:18:54.28,中文,,0,0,0,,例如，name=David，或者 q=cats，或者 name=Carter。
Dialogue: 0,0:18:54.28,0:19:02.65,中文,,0,0,0,,任何我想要的键值对，我都会在斜杠和问号后面添加，从而向服务器提供用户输入，尽管这是一种对用户很不友好的方式。
Dialogue: 0,0:19:02.65,0:19:04.81,中文,,0,0,0,,一般没人会在浏览器里这样做。
Dialogue: 0,0:19:04.81,0:19:06.85,中文,,0,0,0,,回车，这里没变化。
Dialogue: 0,0:19:06.85,0:19:10.11,中文,,0,0,0,,它只显示“Hello, world”。但如果显示“Hello, David”是不是更好？
Dialogue: 0,0:19:10.11,0:19:17.62,中文,,0,0,0,,或者，我再放大一点，把 David 改成 Carter，然后按回车，如果它显示“Hello, Carter”是不是更好？
Dialogue: 0,0:19:17.62,0:19:19.38,中文,,0,0,0,,所以我们需要一些动态的东西。
Dialogue: 0,0:19:19.38,0:19:22.38,中文,,0,0,0,,现在 Python 可以帮到我们了。
Dialogue: 0,0:19:22.38,0:19:36.39,中文,,0,0,0,,如果我想访问用户通过 URL 提供的 HTTP 参数，无论是 q=cats 还是 name=David，我都可以使用这个我已经预先导入的特殊变量。
Dialogue: 0,0:19:36.39,0:19:37.83,中文,,0,0,0,,我可以这样做。
Dialogue: 0,0:19:37.83,0:19:47.53,中文,,0,0,0,,如果我将要调用的 request.args 中有一个名为 name 的 HTTP 参数，那么我将创建一个名为 name 的变量。
Dialogue: 0,0:19:47.53,0:19:51.54,中文,,0,0,0,,我将把它设置为等于 request.args 中括号内的 name。
Dialogue: 0,0:19:51.54,0:20:00.54,中文,,0,0,0,,否则，如果在这个名为 request.args 的特殊变量中没有“name”键，我将默认用户的名称为 world。
Dialogue: 0,0:20:00.54,0:20:01.66,中文,,0,0,0,,现在，发生了什么？
Dialogue: 0,0:20:01.66,0:20:06.43,中文,,0,0,0,,事实证明，Flask 为我们提供了这个名为 request.args 的特殊变量。
Dialogue: 0,0:20:06.43,0:20:12.67,中文,,0,0,0,,它包含了所有可能通过 URL 传入的键值对。
Dialogue: 0,0:20:12.67,0:20:19.30,中文,,0,0,0,,你猜猜看，request.args 的数据类型是什么？
Dialogue: 0,0:20:19.30,0:20:20.02,中文,,0,0,0,,那是它的名字。
Dialogue: 0,0:20:20.02,0:20:21.40,中文,,0,0,0,,这是它的上下文。
Dialogue: 0,0:20:21.40,0:20:23.92,中文,,0,0,0,,第 9 行可能提供了一些线索。
Dialogue: 0,0:20:23.92,0:20:28.84,中文,,0,0,0,,在 Python 中，request.args 可能是什么数据类型？
Dialogue: 0,0:20:28.84,0:20:31.04,中文,,0,0,0,,是吗？
Dialogue: 0,0:20:31.04,0:20:35.94,中文,,0,0,0,,它不可能是数组或列表，因为在我们见过的每种语言中，它们总是按数字索引的。
Dialogue: 0,0:20:35.94,0:20:40.48,中文,,0,0,0,,但你很接近了，其他人呢？
Dialogue: 0,0:20:40.48,0:20:41.36,中文,,0,0,0,,是字典。
Dialogue: 0,0:20:41.36,0:20:50.55,中文,,0,0,0,,所以字典在语法上类似于 Python 中的列表，但它不是使用 0、1、2 这样的数字索引，而是可以使用像“name”这样的字符串。
Dialogue: 0,0:20:50.55,0:20:55.11,中文,,0,0,0,,这有一点小误导，它确实是一个字典，但它是 Flask 特有的加强版字典。
Dialogue: 0,0:20:55.11,0:20:58.89,中文,,0,0,0,,但是你可以通过完全相同的语法来访问它。
Dialogue: 0,0:20:58.89,0:21:00.12,中文,,0,0,0,,实际上，这是一个拼写错误。
Dialogue: 0,0:21:00.12,0:21:01.78,中文,,0,0,0,,我不是想在那里写 names。
Dialogue: 0,0:21:01.78,0:21:03.72,中文,,0,0,0,,我的意思是单数的 name。
Dialogue: 0,0:21:03.72,0:21:06.10,中文,,0,0,0,,但除此之外，我认为代码是正确的。
Dialogue: 0,0:21:06.10,0:21:10.93,中文,,0,0,0,,这将在第 8 行检查 request.args 中是否有一个名为 name 的键。
Dialogue: 0,0:21:10.93,0:21:13.89,中文,,0,0,0,,如果是，它会将其设置为该值。
Dialogue: 0,0:21:13.89,0:21:16.13,中文,,0,0,0,,否则，它将默认为 world。
Dialogue: 0,0:21:16.13,0:21:18.73,中文,,0,0,0,,我故意没有这样做。
Dialogue: 0,0:21:18.73,0:21:30.96,中文,,0,0,0,,我添加了这个 if else 语句，并且没有直接使用 name，如果我只是简单地获取 name，可能会发生什么错误？
Dialogue: 0,0:21:30.96,0:21:38.73,中文,,0,0,0,,没错，如果 URL 末尾没有任何类似于问号 name 等于某个人的形式，那么就不会有名为 name 的键。
Dialogue: 0,0:21:38.73,0:21:46.66,中文,,0,0,0,,这已经是几周前的事情了，但这会给你一个恼人的键错误，当你得到一个回溯信息，因为你搞砸了，因为你使用了一个不存在的字符串。
Dialogue: 0,0:21:46.66,0:21:51.36,中文,,0,0,0,,这就是为什么我要主动尝试避免这种情况，就像几周前那样。
Dialogue: 0,0:21:51.36,0:21:55.23,中文,,0,0,0,,所以尽管它更冗长，但这更加安全。
Dialogue: 0,0:21:55.23,0:21:59.09,中文,,0,0,0,,这样我就不会意外地访问字典中不存在的键。
Dialogue: 0,0:21:59.09,0:22:02.34,中文,,0,0,0,,但我们会看到如何把这四行代码压缩成一行。
Dialogue: 0,0:22:02.34,0:22:04.44,中文,,0,0,0,,但我想现在我可以做到了。
Dialogue: 0,0:22:04.44,0:22:11.07,中文,,0,0,0,,如果现在在我的 index.html 文件中，也就是在 templates 文件夹中，
Dialogue: 0,0:22:11.07,0:22:16.05,中文,,0,0,0,,如果我可以像在 C 语言中使用 %s 一样，做一些等效的操作，那不是很好吗？
Dialogue: 0,0:22:16.05,0:22:19.17,中文,,0,0,0,,或者用 Python 写成这样 name。
Dialogue: 0,0:22:19.17,0:22:20.55,中文,,0,0,0,,差不多了。
Dialogue: 0,0:22:20.55,0:22:25.84,中文,,0,0,0,,这只是因为不同的人发明了不同的语言，不同的框架。
Dialogue: 0,0:22:25.84,0:22:33.74,中文,,0,0,0,,Flask 中的语法实际上是用两个花括号，然后是 name。
Dialogue: 0,0:22:33.74,0:22:48.80,中文,,0,0,0,,为什么？可能有人认为，普通人同时使用两个花括号的几率有多大，而不是只用一个？\N所以这样可能会减少人们实际想输出像这样的字面花括号的概率。我稍后会展示如何做到这一点。
Dialogue: 0,0:22:48.80,0:22:50.96,中文,,0,0,0,,这在本质上类似于 Python 的 f 字符串。
Dialogue: 0,0:22:50.96,0:22:55.22,中文,,0,0,0,,它在本质上类似于 C 语言的 %s，也类似于 SQL 中的问号。
Dialogue: 0,0:22:55.22,0:22:57.40,中文,,0,0,0,,同样的想法，略微不同的语法。
Dialogue: 0,0:22:57.40,0:22:59.20,中文,,0,0,0,,这就是 Jinja。
Dialogue: 0,0:22:59.20,0:23:01.62,中文,,0,0,0,,所以它本身不是编程代码。
Dialogue: 0,0:23:01.62,0:23:05.50,中文,,0,0,0,,它只是一个模板，事实上，这就是为什么这个文件夹叫做 templates 的原因。
Dialogue: 0,0:23:05.50,0:23:09.50,中文,,0,0,0,,它就像是我想要输出给用户的蓝图。
Dialogue: 0,0:23:09.50,0:23:14.13,中文,,0,0,0,,但是我有一些占位符，比如这个变量，我想把它插入到那个值中。
Dialogue: 0,0:23:14.13,0:23:16.76,中文,,0,0,0,,现在，仅仅这样做是不够的。
Dialogue: 0,0:23:16.76,0:23:22.74,中文,,0,0,0,,看看会发生什么，如果我回到我的另一个浏览器，在我修改完这里后刷新页面。
Dialogue: 0,0:23:22.74,0:23:24.40,中文,,0,0,0,,我们再试一下 name=David。
Dialogue: 0,0:23:24.40,0:23:25.51,中文,,0,0,0,,回车。
Dialogue: 0,0:23:25.51,0:23:29.21,中文,,0,0,0,,“hello” 逗号后面没有输出。
Dialogue: 0,0:23:29.21,0:23:33.21,中文,,0,0,0,,看来 name 变量还不存在。
Dialogue: 0,0:23:33.21,0:23:37.27,中文,,0,0,0,,这就是为什么，如果我查看页面源代码，你可以看到发送到浏览器的内容。
Dialogue: 0,0:23:37.27,0:23:39.25,中文,,0,0,0,,我的占位符出了点问题。
Dialogue: 0,0:23:39.25,0:23:43.03,中文,,0,0,0,,但我需要更明确地说明我想把什么内容发送到哪里。
Dialogue: 0,0:23:43.03,0:23:55.10,中文,,0,0,0,,事实证明，renderTemplate 函数不仅接受一个参数，即要输出的模板名称，而且在它之后，还可以用逗号分隔，接受所有要插入的占位符。
Dialogue: 0,0:23:55.10,0:24:11.95,中文,,0,0,0,,例如，如果你希望占位符是这个，也就是花括号内的 placeholder，\N那么你可以将名为 argument 的占位符指定为 renderTemplate 的第二个参数，其值等于 name 的值。
Dialogue: 0,0:24:11.95,0:24:14.69,中文,,0,0,0,,所以 name 是上面几行代码中的变量。
Dialogue: 0,0:24:14.69,0:24:18.65,中文,,0,0,0,,placeholder 是我在花括号中使用的占位符的名称。
Dialogue: 0,0:24:18.65,0:24:29.66,中文,,0,0,0,,所以现在，如果我回到浏览器，并在 URL 中仍然使用 ?name=David 重新加载，现在我确实看到了“hello, David”。
Dialogue: 0,0:24:29.66,0:24:37.24,中文,,0,0,0,,如果我在这里放大，让我移到这里，让我输入 Carter 并按回车键，现在我看到了“hello, Carter”。
Dialogue: 0,0:24:37.24,0:24:43.42,中文,,0,0,0,,现在，显式地将占位符称为 placeholder 有点多余，特别是当你想使用两三个占位符时。
Dialogue: 0,0:24:43.42,0:24:45.20,中文,,0,0,0,,所以你实际上可以随意调用它。
Dialogue: 0,0:24:45.20,0:24:48.56,中文,,0,0,0,,我要把它改回 name，这样更直接一些。
Dialogue: 0,0:24:48.56,0:24:52.93,中文,,0,0,0,,这里唯一奇怪的是，现在你会看到你在这样写代码。
Dialogue: 0,0:24:52.93,0:24:53.79,中文,,0,0,0,,这是正确的。
Dialogue: 0,0:24:53.79,0:24:55.17,中文,,0,0,0,,这也是常态。
Dialogue: 0,0:24:55.17,0:25:01.57,中文,,0,0,0,,它看起来很奇怪，但是等号左边的内容是你在模板中使用的占位符。
Dialogue: 0,0:25:01.57,0:25:05.71,中文,,0,0,0,,右边可以是你想要的任何值，包括变量。
Dialogue: 0,0:25:05.71,0:25:15.68,中文,,0,0,0,,所以即使我把它们命名成一样的，看起来很愚蠢，但我承认，这是人们倾向于做的，因为它比引入像 placeholder 这样的新词更简单。
Dialogue: 0,0:25:15.68,0:25:20.13,中文,,0,0,0,,现在对这个有什么问题吗？
Dialogue: 0,0:25:20.13,0:25:22.91,中文,,0,0,0,,对这些占位符有什么问题吗？
Dialogue: 0,0:25:22.91,0:25:23.29,中文,,0,0,0,,没有？
Dialogue: 0,0:25:23.29,0:25:23.61,中文,,0,0,0,,好的。
Dialogue: 0,0:25:23.61,0:25:29.08,中文,,0,0,0,,让我们来稍微优化一下，看看是否能让它变得更动态。
Dialogue: 0,0:25:29.08,0:25:40.54,中文,,0,0,0,,我现在建议，与其输出，与其使用这个条件，它用四行代码实现了一个非常简单的想法，结果证明有一种更简单的方法可以做到这一点。
Dialogue: 0,0:25:40.54,0:25:43.61,中文,,0,0,0,,你实际上仍然可以创建一个名为 name 的变量。
Dialogue: 0,0:25:43.61,0:25:46.47,中文,,0,0,0,,你可以把它设置为等于 request.args。
Dialogue: 0,0:25:46.47,0:25:57.34,中文,,0,0,0,,但是，与其盲目地索引到字典中，事实证明 request.args 还带有一个名为 get 的函数。
Dialogue: 0,0:25:57.34,0:26:02.07,中文,,0,0,0,,你可以给它传递一个参数，告诉你想要获取什么值。
Dialogue: 0,0:26:02.07,0:26:09.47,中文,,0,0,0,,默认情况下，如果字典中没有名为 name 的键，则此函数不会抛出键错误。
Dialogue: 0,0:26:09.47,0:26:13.48,中文,,0,0,0,,它只会返回 none，一个 O-N-E，Python 中的特殊值。
Dialogue: 0,0:26:13.48,0:26:17.62,中文,,0,0,0,,所以它避免了代码中的错误，而且它将四行代码压缩成了一行。
Dialogue: 0,0:26:17.62,0:26:23.34,中文,,0,0,0,,但更好的是，如果你阅读了文档，get 函数还可以接受一个显式的默认值。
Dialogue: 0,0:26:23.34,0:26:33.51,中文,,0,0,0,,所以如果你不希望 none 出现在屏幕上，比如 hello，逗号，空格，或者，\N我的意思是，那也会很奇怪，你可以根据这个函数的文档，输入一个默认值，比如 world。
Dialogue: 0,0:26:33.51,0:26:36.07,中文,,0,0,0,,所以现在我们已经从四行代码变成了一行。
Dialogue: 0,0:26:36.07,0:26:37.57,中文,,0,0,0,,所以可以说，它的设计更好了。
Dialogue: 0,0:26:37.57,0:26:43.42,中文,,0,0,0,,如果我现在回到浏览器，URL 里仍然是 Carter，然后点击刷新，还是会发生同样的事情。
Dialogue: 0,0:26:43.42,0:26:50.50,中文,,0,0,0,,但我们会注意到这一点。假设我把 name 参数完全删除，然后按回车键。
Dialogue: 0,0:26:50.50,0:26:52.74,中文,,0,0,0,,现在它会转到默认值 world。
Dialogue: 0,0:26:52.74,0:26:57.42,中文,,0,0,0,,所以这只是比另一种方式好一点，设计得好一点。
Dialogue: 0,0:26:57.42,0:27:01.74,中文,,0,0,0,,好吧，让我们更进一步，
Dialogue: 0,0:27:01.74,0:27:06.34,中文,,0,0,0,,引入多条路由，并且可能引入一个表单。
Dialogue: 0,0:27:06.34,0:27:12.67,中文,,0,0,0,,因为，同样，没有哪个普通人会访问一个 URL，然后在他们的名字后面加上斜杠和问号。
Dialogue: 0,0:27:12.67,0:27:15.75,中文,,0,0,0,,浏览器不是这样工作的。好吧，浏览器是这样工作的，
Dialogue: 0,0:27:15.75,0:27:17.93,中文,,0,0,0,,但人类不是这样与浏览器交互的。
Dialogue: 0,0:27:17.93,0:27:20.43,中文,,0,0,0,,我们通常使用表单。
Dialogue: 0,0:27:20.43,0:27:27.47,中文,,0,0,0,,所以现在，在我们制作自己的网络应用程序时，事情会变得更有趣一些，因为也许我们可以这样做。
Dialogue: 0,0:27:27.47,0:27:29.71,中文,,0,0,0,,让我缩小一点。
Dialogue: 0,0:27:29.71,0:27:31.79,中文,,0,0,0,,让我回到代码这里。
Dialogue: 0,0:27:31.79,0:27:36.32,中文,,0,0,0,,让我把它移到这边，现在关注 index.html 文件。
Dialogue: 0,0:27:36.32,0:27:45.07,中文,,0,0,0,,与其只用这个占位符，不如我们继续，给自己一个表单，就像我们过去玩过的一样，无论是 Google 还是其他什么。
Dialogue: 0,0:27:45.07,0:27:46.60,中文,,0,0,0,,我们来这样做。
Dialogue: 0,0:27:46.60,0:27:50.44,中文,,0,0,0,,form。 在这个表单里面，我们放一个输入框。
Dialogue: 0,0:27:50.44,0:27:53.24,中文,,0,0,0,,这个输入框的名字是 "name"。
Dialogue: 0,0:27:53.24,0:27:54.54,中文,,0,0,0,,这也很容易混淆。
Dialogue: 0,0:27:54.54,0:27:57.23,中文,,0,0,0,,但输入框有 name 属性。
Dialogue: 0,0:27:57.23,0:27:58.69,中文,,0,0,0,,但这是一个人的名字。
Dialogue: 0,0:27:58.69,0:28:00.49,中文,,0,0,0,,所以这里我写的是 name=name。
Dialogue: 0,0:28:00.49,0:28:03.51,中文,,0,0,0,,语义上的混乱情况。
Dialogue: 0,0:28:03.51,0:28:07.20,中文,,0,0,0,,让我继续，默认情况下把它变成一个文本框。
Dialogue: 0,0:28:07.20,0:28:11.94,中文,,0,0,0,,然后让我给自己一个按钮，它的默认类型是 Submit。
Dialogue: 0,0:28:11.94,0:28:16.10,中文,,0,0,0,,这个按钮的名字是 Greet，例如。让我们看看会发生什么。
Dialogue: 0,0:28:16.10,0:28:18.72,中文,,0,0,0,,让我把 app.py 改回最初简单的版本。
Dialogue: 0,0:28:18.72,0:28:20.93,中文,,0,0,0,,我现在没有传入任何占位符。
Dialogue: 0,0:28:20.93,0:28:22.11,中文,,0,0,0,,我要把它也删掉。
Dialogue: 0,0:28:22.11,0:28:26.33,中文,,0,0,0,,为了简单起见，我要把它倒回到第一个版本。现在开始。
Dialogue: 0,0:28:26.33,0:28:28.99,中文,,0,0,0,,更改 URL 以删除 Carter 和我的名字。
Dialogue: 0,0:28:28.99,0:28:31.43,中文,,0,0,0,,所以我们只用输入 / 并回车。
Dialogue: 0,0:28:31.43,0:28:34.05,中文,,0,0,0,,现在我们又得到了一个超级简单的表单。
Dialogue: 0,0:28:34.05,0:28:38.52,中文,,0,0,0,,这不是很友好，但我们可以做一些很好的改进，例如。
Dialogue: 0,0:28:38.52,0:28:46.54,中文,,0,0,0,,例如，我们可以关闭自动完成功能，尤其是我想手动输入 David 和 Carter 时，我不希望它在上课时帮我完成输入。
Dialogue: 0,0:28:46.54,0:28:52.87,中文,,0,0,0,,我们可以使用自动对焦，它会默认将光标放在那里闪烁，这很好，因为这样用户就不必处理这个问题了。
Dialogue: 0,0:28:52.87,0:28:55.35,中文,,0,0,0,,然后我们甚至可以有一个 placeholder 属性。
Dialogue: 0,0:28:55.35,0:28:59.23,中文,,0,0,0,,Placeholder=name，这样它就像这个东西的内置指令。
Dialogue: 0,0:28:59.23,0:29:05.54,中文,,0,0,0,,所以现在，如果我回到另一个标签页，什么都没有改变，因为我必须再次下载 HTML，重新加载。
Dialogue: 0,0:29:05.54,0:29:06.96,中文,,0,0,0,,现在看起来更人性化了。
Dialogue: 0,0:29:06.96,0:29:08.66,中文,,0,0,0,,浅灰色的 “name”。
Dialogue: 0,0:29:08.66,0:29:09.92,中文,,0,0,0,,光标在闪烁。
Dialogue: 0,0:29:09.92,0:29:11.46,中文,,0,0,0,,我差不多可以开始了。
Dialogue: 0,0:29:11.46,0:29:15.00,中文,,0,0,0,,但是这个表单还没有连接到任何地方。
Dialogue: 0,0:29:15.00,0:29:16.30,中文,,0,0,0,,我们来设置一下。
Dialogue: 0,0:29:16.30,0:29:19.99,中文,,0,0,0,,比方说，我们假设这个表单的操作
Dialogue: 0,0:29:19.99,0:29:23.85,中文,,0,0,0,,它不会像上次搜索猫咪那样跳转到 Google.com。
Dialogue: 0,0:29:23.85,0:29:28.43,中文,,0,0,0,,我现在将同时扮演这个网站的前端和后端。
Dialogue: 0,0:29:28.43,0:29:31.87,中文,,0,0,0,,前端是用户看到的内容，网页、图形、表单。
Dialogue: 0,0:29:31.87,0:29:37.65,中文,,0,0,0,,后端是用户通常看不到的内容，Python 代码、SQL 代码、服务器本身。
Dialogue: 0,0:29:37.65,0:29:43.41,中文,,0,0,0,,但现在我可以控制体验的双方，HTML 和路由。
Dialogue: 0,0:29:43.41,0:29:46.54,中文,,0,0,0,,我们来创建自己的路由。
Dialogue: 0,0:29:46.54,0:29:51.26,中文,,0,0,0,,我们不叫它 /search，像 Google 那样，我们叫它 /greet。
Dialogue: 0,0:29:51.26,0:29:56.52,中文,,0,0,0,,我来指定这个表单将使用的方法，技术上是默认的，get。
Dialogue: 0,0:29:56.52,0:30:02.47,中文,,0,0,0,,令人困惑的是，它是小写的 get，尽管我们在信封里一直在说，它实际上是大写的。
Dialogue: 0,0:30:02.47,0:30:06.26,中文,,0,0,0,,同样，当初决定这些事情的时候，左手没有和右手商量。
Dialogue: 0,0:30:06.26,0:30:14.67,中文,,0,0,0,,我所做的就是创建一个 Web 表单，它会将文本框中的内容提交到一个名为 /greet 的路由。
Dialogue: 0,0:30:14.67,0:30:25.21,中文,,0,0,0,,默认情况下，因为没有 HTTP 或 HTTPS 或域名，/greet 将被认为不是在 google.com，而是我的服务器的 URL。
Dialogue: 0,0:30:25.21,0:30:29.56,中文,,0,0,0,,所以无论我的代码空间的 URL 是什么，这都将是隐含的前缀。
Dialogue: 0,0:30:29.56,0:30:32.06,中文,,0,0,0,,这个 /greet 只是一个路由。
Dialogue: 0,0:30:32.06,0:30:36.50,中文,,0,0,0,,现在让我们回到 VS Code 的 app.py 文件。
Dialogue: 0,0:30:36.50,0:30:38.98,中文,,0,0,0,,如何将它们连接在一起？
Dialogue: 0,0:30:38.98,0:30:41.60,中文,,0,0,0,,我认为 index.html 文件已经准备好了。
Dialogue: 0,0:30:41.60,0:30:47.41,中文,,0,0,0,,如果 index.html 的作用仅仅是输出这个表单，那么我的一个路由就完成了。
Dialogue: 0,0:30:47.41,0:30:56.35,中文,,0,0,0,,但如果我想有第二个路由 greet，它实际上会向用户输出一些问候语，那么我们也来准备一下这个模板。
Dialogue: 0,0:30:56.35,0:30:59.13,中文,,0,0,0,,让我继续并选中所有这些 HTML 代码。
Dialogue: 0,0:30:59.13,0:31:07.04,中文,,0,0,0,,让我回到终端窗口，进入 hello 目录，然后进入 templates 目录。
Dialogue: 0,0:31:07.04,0:31:15.88,中文,,0,0,0,,让我创建另一个名为 greet.html 的模板，它的作用不是显示表单，而是用“hello，xxx”来问候用户。
Dialogue: 0,0:31:15.88,0:31:27.01,中文,,0,0,0,,所以在这个文件中，我将粘贴所有相同的 HTML 代码，\N但我将删除表单并基本上恢复到我们以前的版本，hello，逗号， 然后使用 Jinja 语法，name。
Dialogue: 0,0:31:27.01,0:31:30.30,中文,,0,0,0,,一个模板 index.html 用于表单。
Dialogue: 0,0:31:30.30,0:31:34.18,中文,,0,0,0,,第二个模板现在用于问候“hello，xxx”。
Dialogue: 0,0:31:34.18,0:31:39.75,中文,,0,0,0,,但除此之外，请注意，这些文件几乎相同，除了一个有表单。
Dialogue: 0,0:31:39.75,0:31:41.23,中文,,0,0,0,,一个只有“你好”。
Dialogue: 0,0:31:41.23,0:31:43.59,中文,,0,0,0,,现在让我们在 app.py 中完成它。
Dialogue: 0,0:31:43.59,0:31:47.03,中文,,0,0,0,,让我在几行空白行之后往下走。
Dialogue: 0,0:31:47.03,0:31:51.23,中文,,0,0,0,,让我输入 app.route “/greet”。
Dialogue: 0,0:31:51.23,0:31:52.83,中文,,0,0,0,,但我可以随意命名这条路线。
Dialogue: 0,0:31:52.83,0:31:54.95,中文,,0,0,0,,我只是用了一个合理的动词。
Dialogue: 0,0:31:54.95,0:31:56.39,中文,,0,0,0,,然后我们再定义一个函数。
Dialogue: 0,0:31:56.39,0:32:01.31,中文,,0,0,0,,我可以给这个函数起任何名字，x、y 或 z 都可以，但我打算给它起一个更合理的名字：greet。
Dialogue: 0,0:32:01.31,0:32:02.43,中文,,0,0,0,,没有参数。
Dialogue: 0,0:32:02.43,0:32:05.01,中文,,0,0,0,,现在是渲染模板的代码部分。
Dialogue: 0,0:32:05.01,0:32:09.80,中文,,0,0,0,,我写的是 return、render、template 和 greet.html。
Dialogue: 0,0:32:09.80,0:32:13.58,中文,,0,0,0,,但我还需要做一件事。
Dialogue: 0,0:32:13.58,0:32:18.86,中文,,0,0,0,,如果我想让 greet.html 访问人的姓名，我还需要做什么？
Dialogue: 0,0:32:18.86,0:32:21.26,中文,,0,0,0,,回顾一下。
Dialogue: 0,0:32:21.26,0:32:23.41,中文,,0,0,0,,我想我们已经解决了这个问题，但我把它删除了。
Dialogue: 0,0:32:23.41,0:32:28.87,中文,,0,0,0,,但我需要把什么加回来？
Dialogue: 0,0:32:28.87,0:32:31.55,中文,,0,0,0,,是的，我得想办法把占位符传进去。
Dialogue: 0,0:32:31.55,0:32:33.77,中文,,0,0,0,,我可以通过几种不同的方式来实现。
Dialogue: 0,0:32:33.77,0:32:35.59,中文,,0,0,0,,这次我要用更简洁的方式。
Dialogue: 0,0:32:35.59,0:32:39.48,中文,,0,0,0,,我把我的 name 参数放在这里。
Dialogue: 0,0:32:39.48,0:32:45.64,中文,,0,0,0,,然后把它设置为等于 request.args.get，引号，name，引号。
Dialogue: 0,0:32:45.64,0:32:47.22,中文,,0,0,0,,之前我用了一个单独的变量。
Dialogue: 0,0:32:47.22,0:32:48.66,中文,,0,0,0,,但我只在一个地方使用了它。
Dialogue: 0,0:32:48.66,0:32:49.98,中文,,0,0,0,,所以这不是严格必要的。
Dialogue: 0,0:32:49.98,0:32:51.24,中文,,0,0,0,,所以这样也可以。
Dialogue: 0,0:32:51.24,0:32:55.64,中文,,0,0,0,,但如果这看起来有点让人不知所措，请注意我也可以这样做。
Dialogue: 0,0:32:55.64,0:32:58.38,中文,,0,0,0,,我可以创建一个叫做 name 的变量。
Dialogue: 0,0:32:58.38,0:33:04.79,中文,,0,0,0,,然后我可以传入一个叫做 name 的参数，它的值就是那个变量。
Dialogue: 0,0:33:04.79,0:33:06.75,中文,,0,0,0,,但这到底有什么意义呢？
Dialogue: 0,0:33:06.75,0:33:08.53,中文,,0,0,0,,全部写在一行代码里看起来更简洁。
Dialogue: 0,0:33:08.53,0:33:09.93,中文,,0,0,0,,所以这两段代码的功能完全一样。
Dialogue: 0,0:33:09.93,0:33:12.87,中文,,0,0,0,,我只是想把代码精简一下。
Dialogue: 0,0:33:12.87,0:33:14.07,中文,,0,0,0,,好了，刚才发生了什么？
Dialogue: 0,0:33:14.07,0:33:17.47,中文,,0,0,0,,回到我的表单，它仍然是 index.html。
Dialogue: 0,0:33:17.47,0:33:19.59,中文,,0,0,0,,如果我重新加载它，什么都没有改变。
Dialogue: 0,0:33:19.59,0:33:25.74,中文,,0,0,0,,如果我往表单里输入我的名字，注意看，我当前的 URL，这是 Chrome 隐藏了一些内容。
Dialogue: 0,0:33:25.74,0:33:32.00,中文,,0,0,0,,从技术上讲，默认情况下它是 /，尽管现在很多浏览器都隐藏了这些不必要的字符。
Dialogue: 0,0:33:32.00,0:33:38.92,中文,,0,0,0,,但现在，如果我把鼠标移到这边，点击这个新表单上的“Greet”，看看会发生什么。
Dialogue: 0,0:33:38.92,0:33:45.80,中文,,0,0,0,,注意我的 URL，我的路由变成了 /greet，问号，name=David。
Dialogue: 0,0:33:45.80,0:33:49.10,中文,,0,0,0,,页面左上角显示“hello, David”。
Dialogue: 0,0:33:49.10,0:33:50.94,中文,,0,0,0,,google.com 就是这样运作的。
Dialogue: 0,0:33:50.94,0:33:53.74,中文,,0,0,0,,这也是我们上次实现 search.html 的方式。
Dialogue: 0,0:33:53.74,0:34:00.93,中文,,0,0,0,,但不是通过表单将表单提交给 Google，而是将其提交给我自己，我自己的路由。
Dialogue: 0,0:34:00.93,0:34:05.64,中文,,0,0,0,,所以我正在为同一个前端实现我自己的后端。
Dialogue: 0,0:34:05.64,0:34:08.46,中文,,0,0,0,,好了，有什么问题吗？
Dialogue: 0,0:34:08.46,0:34:15.57,中文,,0,0,0,,当然，这比 Google 差远了，但我们现在已经完成了所有的连接工作。
Dialogue: 0,0:34:15.57,0:34:18.03,中文,,0,0,0,,有问题吗？
Dialogue: 0,0:34:18.03,0:34:19.58,中文,,0,0,0,,没有。
Dialogue: 0,0:34:19.58,0:34:25.53,中文,,0,0,0,,好，那么我们可以做些什么来进一步优化代码并遵循一些惯例呢？
Dialogue: 0,0:34:25.53,0:34:30.51,中文,,0,0,0,,我来提出一个建议，在这个版本中，我们解决一个问题。
Dialogue: 0,0:34:30.51,0:34:46.32,中文,,0,0,0,,即使你以前从未做过这种事情，但我敢说，我们在 CS50 的几周时间里，\N如果我再次向你展示 index.html 和 greet.html，很可能在某些人看来，这里还有改进的空间。
Dialogue: 0,0:34:46.32,0:34:54.13,中文,,0,0,0,,为什么这个 Web 应用程序，虽然超级简单，但目前的设计可以说很糟糕呢？
Dialogue: 0,0:34:54.13,0:35:01.99,中文,,0,0,0,,答案就藏在这两个模板中，index.html 和 greet.html。
Dialogue: 0,0:35:01.99,0:35:05.39,中文,,0,0,0,,是的，它们几乎完全相同，除了 body 的内容。
Dialogue: 0,0:35:05.39,0:35:06.69,中文,,0,0,0,,而且，这没什么大不了的。
Dialogue: 0,0:35:06.69,0:35:09.53,中文,,0,0,0,,只有两个页面。那又怎样？我只复制粘贴了一次。
Dialogue: 0,0:35:09.53,0:35:14.79,中文,,0,0,0,,但是现在想象一下，一个普通的网站，甚至是你的主页，有三个、四个或更多页面。
Dialogue: 0,0:35:14.79,0:35:21.41,中文,,0,0,0,,我的意思是，在这一点上，你只是在复制和粘贴所有内容，就像你可能为你的主页所做的那样。
Dialogue: 0,0:35:21.41,0:35:30.50,中文,,0,0,0,,为什么？因为当你只有 HTML，也许还有 CSS，甚至是 JavaScript 时，你所能做的就是复制粘贴，复制粘贴，并确保它们具有相同的结构。
Dialogue: 0,0:35:30.50,0:35:34.44,中文,,0,0,0,,也许你有相同的 CSS 文件，相同的 JavaScript 文件，相同的第三方库。
Dialogue: 0,0:35:34.44,0:35:40.08,中文,,0,0,0,,但你会发现，仅仅做出一项影响全局的改变，就会变得非常非常烦人，你可能已经意识到了这一点。
Dialogue: 0,0:35:40.08,0:35:46.21,中文,,0,0,0,,那么，如果能把所有这些都提取出来，只让 body 改变，这不是很好吗？
Dialogue: 0,0:35:46.21,0:35:51.29,中文,,0,0,0,,这也是 Flask 和其他类似框架让我们能够做到的事情。
Dialogue: 0,0:35:51.29,0:35:55.67,中文,,0,0,0,,它允许我们创建我们通常所说的布局。
Dialogue: 0,0:35:55.67,0:35:59.11,中文,,0,0,0,,我要开始做了，我要再复制一次。
Dialogue: 0,0:35:59.11,0:36:00.76,中文,,0,0,0,,所有相同的 HTML。
Dialogue: 0,0:36:00.76,0:36:03.48,中文,,0,0,0,,我要打开终端窗口。
Dialogue: 0,0:36:03.48,0:36:07.68,中文,,0,0,0,,按照惯例，我创建一个名为 layout.html 的文件。
Dialogue: 0,0:36:07.68,0:36:10.54,中文,,0,0,0,,这将成为某种蓝图。
Dialogue: 0,0:36:10.54,0:36:14.18,中文,,0,0,0,,在 layout.html 中，我要粘贴所有相同的代码。
Dialogue: 0,0:36:14.18,0:36:22.43,中文,,0,0,0,,但现在我要使用一些 Jinja 语法来表明我不想只插入像 name 这样的变量。
Dialogue: 0,0:36:22.43,0:36:26.25,中文,,0,0,0,,我想插入整个其他文件的内容。
Dialogue: 0,0:36:26.25,0:36:35.84,中文,,0,0,0,,因此，我不能仅仅使用左右两边的花括号，而必须使用稍微不同的语法来说明，我想要来自其他文件的整个 HTML 代码块。
Dialogue: 0,0:36:35.84,0:36:42.93,中文,,0,0,0,,实现这一点的方法，虽然语法有点不直观，但你需要使用左花括号、百分号、
Dialogue: 0,0:36:42.93,0:36:46.31,中文,,0,0,0,,Block，然后你可以随意命名下一个单词。
Dialogue: 0,0:36:46.31,0:36:51.49,中文,,0,0,0,,它必须是一种特殊类型的占位符，用于表示实际文件，而不仅仅是变量。
Dialogue: 0,0:36:51.49,0:36:53.90,中文,,0,0,0,,我将其称为 body，因为我位于 body 中。
Dialogue: 0,0:36:53.90,0:36:56.76,中文,,0,0,0,,所以我想用一个占位符来表示整个 body。
Dialogue: 0,0:36:56.76,0:37:01.86,中文,,0,0,0,,在它的外面，你写上 end block，中间没有空格。
Dialogue: 0,0:37:01.86,0:37:03.62,中文,,0,0,0,,说实话，这看起来有点蠢。
Dialogue: 0,0:37:03.62,0:37:05.42,中文,,0,0,0,,为什么我们还有更丑陋的语法？
Dialogue: 0,0:37:05.42,0:37:10.48,中文,,0,0,0,,同样，世界各地的不同软件开发人员都在为自己的库选择自己的语法。
Dialogue: 0,0:37:10.48,0:37:13.12,中文,,0,0,0,,所以它们看起来都有些不同，但在精神上都是相似的。
Dialogue: 0,0:37:13.12,0:37:15.64,中文,,0,0,0,,你只需要习惯看到不同的语法。
Dialogue: 0,0:37:15.64,0:37:21.03,中文,,0,0,0,,这现在不像变量的花括号那样漂亮了。
Dialogue: 0,0:37:21.03,0:37:25.37,中文,,0,0,0,,但这就是我可以说，将整个文件的内容插入到这里的方法。
Dialogue: 0,0:37:25.37,0:37:27.49,中文,,0,0,0,,这能让我做什么？
Dialogue: 0,0:37:27.49,0:37:30.09,中文,,0,0,0,,现在我可以回到
Dialogue: 0,0:37:30.09,0:37:36.88,中文,,0,0,0,,我的 index.html 文件，现在它看起来还是这样，但几乎所有内容都是复制粘贴的。
Dialogue: 0,0:37:36.88,0:37:42.72,中文,,0,0,0,,唯一有趣且不同的几行是 body 中的这四行。
Dialogue: 0,0:37:42.72,0:37:46.18,中文,,0,0,0,,所以我现在可以做的是选中它并剪切。
Dialogue: 0,0:37:46.18,0:37:49.35,中文,,0,0,0,,然后我会选中其他所有内容并删除整个文件。
Dialogue: 0,0:37:49.35,0:37:59.27,中文,,0,0,0,,我会使用一些相同的语法，输入左花括号、百分号、extends、引号、layout.html、引号。
Dialogue: 0,0:37:59.27,0:38:03.19,中文,,0,0,0,,然后用百分号和右花括号结束。
Dialogue: 0,0:38:03.19,0:38:10.76,中文,,0,0,0,,你可能已经猜到了，这种语法表示请扩展 layout.html 的内容。
Dialogue: 0,0:38:10.76,0:38:15.22,中文,,0,0,0,,那是原始的蓝图，我想要用来制作这个网页的模具。
Dialogue: 0,0:38:15.22,0:38:19.70,中文,,0,0,0,,现在这里的语法也有点奇怪，但至少和以前类似。
Dialogue: 0,0:38:19.70,0:38:21.28,中文,,0,0,0,,我现在可以输入
Dialogue: 0,0:38:21.28,0:38:31.19,中文,,0,0,0,,我希望你插入到该布局中的 body 块，将是这两个标签之间的所有内容，我们之前已经见过。
Dialogue: 0,0:38:31.19,0:38:35.40,中文,,0,0,0,,但在 layout.html 中，它们是一种占位符。
Dialogue: 0,0:38:35.40,0:38:40.58,中文,,0,0,0,,在 index.html 中，这就是我要插入到那些占位符中的内容。
Dialogue: 0,0:38:40.58,0:38:42.60,中文,,0,0,0,,所以我要给自己一些额外的空白。
Dialogue: 0,0:38:42.60,0:38:44.02,中文,,0,0,0,,我要粘贴
Dialogue: 0,0:38:44.02,0:38:45.28,中文,,0,0,0,,那里的 HTML 代码。
Dialogue: 0,0:38:45.28,0:38:49.59,中文,,0,0,0,,如果我想说清楚是怎么回事，我可以缩进它，尽管这对功能没有影响。
Dialogue: 0,0:38:49.59,0:38:54.15,中文,,0,0,0,,但这只是为了说明，就像在 HTML 中一样，你可以打开和关闭一个 Jinja 标签。
Dialogue: 0,0:38:54.15,0:39:00.42,中文,,0,0,0,,但是这里，在 Jinja 中，我们用这种方式告诉 Python：“嘿，Python，这是页面的主体部分。”
Dialogue: 0,0:39:00.42,0:39:03.38,中文,,0,0,0,,“嘿，Python，这就是页面的主体内容。”
Dialogue: 0,0:39:03.38,0:39:08.16,中文,,0,0,0,,所有这些内容都应该插入到这个主要的父级布局中。
Dialogue: 0,0:39:08.16,0:39:09.59,中文,,0,0,0,,你可以称之为布局。
Dialogue: 0,0:39:09.59,0:39:11.43,中文,,0,0,0,,不得不承认，这看起来非常丑陋。
Dialogue: 0,0:39:11.43,0:39:16.23,中文,,0,0,0,,但现在至少代码的冗余度降低了很多，因为我要在这里做同样的事情。
Dialogue: 0,0:39:16.23,0:39:18.85,中文,,0,0,0,,在 greet.html 中，它看起来像这样。
Dialogue: 0,0:39:18.85,0:39:25.67,中文,,0,0,0,,但现在我要这样做，extends layout.html，就像之前一样。
Dialogue: 0,0:39:25.67,0:39:32.09,中文,,0,0,0,,我要插入的主体内容将是这些标签内的所有内容。
Dialogue: 0,0:39:32.09,0:39:36.38,中文,,0,0,0,,这个主体内容只是 “hello,”
Dialogue: 0,0:39:36.38,0:39:38.22,中文,,0,0,0,,后面跟着花括号中的 name。
Dialogue: 0,0:39:38.22,0:39:40.93,中文,,0,0,0,,再次强调，丑陋的语法很快就变得非常丑陋。
Dialogue: 0,0:39:40.93,0:39:43.61,中文,,0,0,0,,但它实际上只是在遵循这些模式。
Dialogue: 0,0:39:43.61,0:39:54.85,中文,,0,0,0,,我们有两种类型的占位符：两个花括号用于变量，现在这种带有百分号和单个花括号的语法用于实际文件的内容。
Dialogue: 0,0:39:54.85,0:40:02.04,中文,,0,0,0,,所以现在，在这个世界中，或者说在创建个人主页的世界中，如果你使用 Flask 和 Python 来制作你的个人主页，
Dialogue: 0,0:40:02.04,0:40:10.04,中文,,0,0,0,,其中包含所有不同的页面，你可能会设计一个包含所有漂亮徽标、颜色、字体以及你想要的网站外观的主布局。
Dialogue: 0,0:40:10.04,0:40:15.49,中文,,0,0,0,,你的每个较小页面现在都会被提炼成这些较小的片段。
Dialogue: 0,0:40:15.49,0:40:23.73,中文,,0,0,0,,无论你使用的是 Python、Java、JavaScript 还是其他语言，所有不同的编程语言都有流行的框架来实现这样的功能。
Dialogue: 0,0:40:23.73,0:40:26.86,中文,,0,0,0,,所有这些框架的想法都是一样的。
Dialogue: 0,0:40:26.86,0:40:29.80,中文,,0,0,0,,好了，让我们看看它是否有效。让我们回到浏览器中。
Dialogue: 0,0:40:29.80,0:40:32.86,中文,,0,0,0,,让我回到我的 / 路径。
Dialogue: 0,0:40:32.86,0:40:34.26,中文,,0,0,0,,还是同样的形式。
Dialogue: 0,0:40:34.26,0:40:37.56,中文,,0,0,0,,我输入 David，然后点击 Greet。
Dialogue: 0,0:40:37.56,0:40:39.74,中文,,0,0,0,,可以看到，这里显示了 hello, David。
Dialogue: 0,0:40:39.74,0:40:46.15,中文,,0,0,0,,提交表单后，浏览器自动将 Greet 添加到 URL 中，后面跟着键值对。
Dialogue: 0,0:40:46.15,0:40:54.05,中文,,0,0,0,,如果像之前一样查看页面源代码，会看到整个布局，其中嵌入了 hello, David。
Dialogue: 0,0:40:54.05,0:40:56.13,中文,,0,0,0,,同时，如果回到表单，
Dialogue: 0,0:40:56.13,0:41:02.41,中文,,0,0,0,,查看这个页面的源代码，会看到完全相同的布局，但是嵌入了表单标签。
Dialogue: 0,0:41:02.41,0:41:06.41,中文,,0,0,0,,这里可以不用太在意样式。
Dialogue: 0,0:41:06.41,0:41:11.09,中文,,0,0,0,,虽然从技术上讲，它没有缩进到 body 内部，但它是相对于原始文件的。
Dialogue: 0,0:41:11.09,0:41:16.29,中文,,0,0,0,,所以在现阶段，不需要担心输出的 HTML 看起来是否漂亮。
Dialogue: 0,0:41:16.29,0:41:20.31,中文,,0,0,0,,你希望人类看到的源代码是漂亮的，而不是浏览器看到的。
Dialogue: 0,0:41:20.31,0:41:23.07,中文,,0,0,0,,这不是样式问题。
Dialogue: 0,0:41:23.07,0:41:25.09,中文,,0,0,0,,有问题吗？
Dialogue: 0,0:41:25.09,0:41:31.97,中文,,0,0,0,,关于 Flask 的这些功能，或者我们刚刚解决的问题以及原因。
Dialogue: 0,0:41:31.97,0:41:37.96,中文,,0,0,0,,有吗？
Dialogue: 0,0:41:37.96,0:41:53.53,中文,,0,0,0,,如果相关文件位于不同的文件夹中，例如，回到包含表单的索引页面，这里的路由完全取决于 app.py 中的内容。
Dialogue: 0,0:41:53.53,0:41:58.53,中文,,0,0,0,,在实现 Web 应用程序时，不再有文件夹的概念。
Dialogue: 0,0:41:58.53,0:42:00.29,中文,,0,0,0,,它们更通用的叫法是路由。
Dialogue: 0,0:42:00.29,0:42:07.88,中文,,0,0,0,,但是，我们还没有这样做过，你可以将静态内容，包括图像、视频文件、CSS 文件，放在名为 static 的文件夹中。
Dialogue: 0,0:42:07.88,0:42:10.06,中文,,0,0,0,,并且其中可以有子文件夹。
Dialogue: 0,0:42:10.06,0:42:19.13,中文,,0,0,0,,这会影响到将要使用的图像源属性、视频源标签或任何类似资源的属性和标签。
Dialogue: 0,0:42:19.13,0:42:22.85,中文,,0,0,0,,我们会在下一组习题中看到这一点。
Dialogue: 0,0:42:22.85,0:42:24.91,中文,,0,0,0,,对于我们刚才所做的，还有其他问题吗？
Dialogue: 0,0:42:24.91,0:42:27.79,中文,,0,0,0,,有。
Dialogue: 0,0:42:27.79,0:42:34.23,中文,,0,0,0,,问得好，我是如何确保网络应用从表单开始，然后转到 Hello 页面的？
Dialogue: 0,0:42:34.23,0:42:45.99,中文,,0,0,0,,无论将哪个路由设置为默认索引路由，比如隐式的斜杠，当用户访问托管网站的域名时，都会加载该路由。
Dialogue: 0,0:42:45.99,0:42:56.46,中文,,0,0,0,,所以如果回到 app.py，因为我的斜杠路由被设计为返回 index.html，所以浏览器才会返回该响应。
Dialogue: 0,0:42:56.46,0:42:57.79,中文,,0,0,0,,问得好。
Dialogue: 0,0:42:57.79,0:43:01.15,中文,,0,0,0,,除此之外，让我们现在来考虑一下隐私问题。
Dialogue: 0,0:43:01.15,0:43:04.40,中文,,0,0,0,,当我们讨论到购物车和 Cookie 等问题时，也会谈到这一点。
Dialogue: 0,0:43:04.40,0:43:18.13,中文,,0,0,0,,如果放大看这个 URL，即使它本身有点长、有点乱、有点难懂，但当我输入我的名字并点击 Greet 时，我们仍然会在 URL 中看到 name=David。
Dialogue: 0,0:43:18.13,0:43:22.17,中文,,0,0,0,,在某种意义上，这可能是个糟糕的设计吗？
Dialogue: 0,0:43:22.17,0:43:27.95,中文,,0,0,0,,或者在哪些网络应用中，你可能不希望名字出现在 URL 中？
Dialogue: 0,0:43:27.95,0:43:33.85,中文,,0,0,0,,因为 Google 是这样做的，我的应用程序也是这样做的。
Dialogue: 0,0:43:33.85,0:43:44.51,中文,,0,0,0,,是的，如果我用用户名和密码登录，我可以想象它们会出现在问号后面的 URL 中，其中 username=Malin，password=12345。
Dialogue: 0,0:43:44.51,0:43:51.81,中文,,0,0,0,,但那样一来，我那些爱管闲事的兄弟姐妹们只需要查看我的浏览器历史记录，就能复制粘贴我的用户名和密码了。
Dialogue: 0,0:43:51.81,0:43:54.00,中文,,0,0,0,,所以这看起来不是特别安全。
Dialogue: 0,0:43:54.00,0:44:00.98,中文,,0,0,0,,或者，如果有人在咖啡馆里从你身边经过，如果浏览器显示了你的 URL，他们也能看到。
Dialogue: 0,0:44:00.98,0:44:06.04,中文,,0,0,0,,Get 不一定是最好的动词，尽管它是提交表单时的默认动词。
Dialogue: 0,0:44:06.04,0:44:21.77,中文,,0,0,0,,通常情况下，当你需要传输任何稍微敏感或容量大的数据时，比如密码、信用卡号，\N或者要上传到 Instagram、YouTube 或任何类似网站的图像或视频，你都不会希望数据出现在 URL 中。
Dialogue: 0,0:44:21.77,0:44:25.42,中文,,0,0,0,,幸运的是，有一个简单的方法可以解决这个问题。
Dialogue: 0,0:44:25.42,0:44:34.14,中文,,0,0,0,,我可以进入我的表单，它当前在 index.html 中，我可以将 method 从 get 更改为 post，这里是小写。
Dialogue: 0,0:44:34.14,0:44:39.86,中文,,0,0,0,,但我们在上周讨论过的虚拟信封中的动词本身是大写的 P-O-S-T。
Dialogue: 0,0:44:39.86,0:44:43.29,中文,,0,0,0,,现在，不幸的是，看看会发生什么。
Dialogue: 0,0:44:43.29,0:44:48.39,中文,,0,0,0,,让我通过返回斜杠路由回到我的原始表单。
Dialogue: 0,0:44:48.39,0:44:51.89,中文,,0,0,0,,我正在重新加载页面以确保我获得最新、最干净的 HTML。
Dialogue: 0,0:44:51.89,0:44:58.58,中文,,0,0,0,,为了确认一下，是的，如果我查看源代码，method 现在是 post。
Dialogue: 0,0:44:58.58,0:45:03.43,中文,,0,0,0,,现在让我继续输入 David 并单击“读取”。之前，我们看到了“hello，David”。
Dialogue: 0,0:45:03.43,0:45:05.55,中文,,0,0,0,,但现在我得到 method not allowed（方法不允许）。
Dialogue: 0,0:45:05.55,0:45:06.57,中文,,0,0,0,,这有点微妙。
Dialogue: 0,0:45:06.57,0:45:12.73,中文,,0,0,0,,但请注意，选项卡的标题中显示的是 405 错误，这可能不太常见。
Dialogue: 0,0:45:12.73,0:45:15.59,中文,,0,0,0,,我们几乎所有人都见过 404，文件未找到。
Dialogue: 0,0:45:15.59,0:45:19.52,中文,,0,0,0,,事实证明，更神秘一点的 405 是指方法。
Dialogue: 0,0:45:19.52,0:45:21.46,中文,,0,0,0,,HTTP 动词不允许。
Dialogue: 0,0:45:21.46,0:45:22.08,中文,,0,0,0,,为什么？
Dialogue: 0,0:45:22.08,0:45:27.46,中文,,0,0,0,,因为默认情况下，我的 app.py 目前只默认支持 get。
Dialogue: 0,0:45:27.46,0:45:28.82,中文,,0,0,0,,如何支持 post？
Dialogue: 0,0:45:28.82,0:45:31.06,中文,,0,0,0,,好吧，我只需要再多一点语法。
Dialogue: 0,0:45:31.06,0:45:33.49,中文,,0,0,0,,让我回到 VS Code 中。
Dialogue: 0,0:45:33.49,0:45:35.63,中文,,0,0,0,,让我现在进入 app.py。
Dialogue: 0,0:45:35.63,0:45:40.03,中文,,0,0,0,,更改形式之后，我只需要通知 Flask，
Dialogue: 0,0:45:40.03,0:45:45.21,中文,,0,0,0,,我希望这个 greet 路由使用的方法不应该是默认的 get 方法。
Dialogue: 0,0:45:45.21,0:45:47.29,中文,,0,0,0,,我希望它使用这些方法。
Dialogue: 0,0:45:47.29,0:45:54.37,中文,,0,0,0,,它接受第二个参数 methods，它是一个列表，默认值为 "get"。
Dialogue: 0,0:45:54.37,0:45:55.29,中文,,0,0,0,,这就是默认值。
Dialogue: 0,0:45:55.29,0:45:57.16,中文,,0,0,0,,这还没有做任何改变。
Dialogue: 0,0:45:57.16,0:46:03.34,中文,,0,0,0,,但如果我想支持 POST，我可以显式地传递一个包含一个字符串的列表。
Dialogue: 0,0:46:03.34,0:46:05.24,中文,,0,0,0,,改为 "POST"。
Dialogue: 0,0:46:05.24,0:46:06.64,中文,,0,0,0,,现在，这意味着什么？
Dialogue: 0,0:46:06.64,0:46:08.86,中文,,0,0,0,,上周我们没有详细讨论过这个。
Dialogue: 0,0:46:08.86,0:46:17.93,中文,,0,0,0,,但在这种虚拟信封中，通常是像 get /search?q=cat 这样的行，问号后面跟着参数。
Dialogue: 0,0:46:17.93,0:46:26.50,中文,,0,0,0,,如果出于隐私考虑，或者因为你想上传一张图片，而把它放在 URL 中没有意义，那么你想要隐藏这类信息，本质上就是，
Dialogue: 0,0:46:26.50,0:46:29.84,中文,,0,0,0,,计算机需要查看虚拟信封的内部。
Dialogue: 0,0:46:29.84,0:46:35.48,中文,,0,0,0,,通过 POST 提交的任何内容都会放在 HTTP 标头的下方，就像在信封的更深处。
Dialogue: 0,0:46:35.48,0:46:36.50,中文,,0,0,0,,所以它们仍然在那里。
Dialogue: 0,0:46:36.50,0:46:41.61,中文,,0,0,0,,只是在用户自己的浏览器中，它们不会被窥探的眼睛轻易看到。
Dialogue: 0,0:46:41.61,0:46:54.95,中文,,0,0,0,,所以在 HTML 中做了这个改变，告诉浏览器通过 POST 提交数据，\N并在 app.py 中改变路由以期望通过 POST 接收数据，我现在可以回到我的另一个标签页了。
Dialogue: 0,0:46:54.95,0:46:56.51,中文,,0,0,0,,让我回到原来的页面。
Dialogue: 0,0:46:56.51,0:46:59.45,中文,,0,0,0,,让我重新加载一下，这样我就有了最新的 HTML。
Dialogue: 0,0:46:59.45,0:47:03.29,中文,,0,0,0,,的确，“查看页面源代码”，它仍然是 POST。
Dialogue: 0,0:47:03.29,0:47:08.03,中文,,0,0,0,,但是现在我输入 D-A-V-I-D 然后点击 Greet， 现在可以了。
Dialogue: 0,0:47:08.03,0:47:12.37,中文,,0,0,0,,但是，但是，但是，注意隐私问题。
Dialogue: 0,0:47:12.37,0:47:15.66,中文,,0,0,0,,我在 /greet 路径下，但我的名字在哪里？
Dialogue: 0,0:47:15.66,0:47:17.32,中文,,0,0,0,,它实际上不在那里。
Dialogue: 0,0:47:17.32,0:47:22.26,中文,,0,0,0,,为了隐私，它仍然发送到服务器，但它不在你的自动完成或历史记录中。
Dialogue: 0,0:47:22.26,0:47:26.78,中文,,0,0,0,,关于 POST 的问题。
Dialogue: 0,0:47:26.78,0:47:27.10,中文,,0,0,0,,是的。
Dialogue: 0,0:47:27.10,0:47:28.99,中文,,0,0,0,,不，只是挠痒痒。
Dialogue: 0,0:47:28.99,0:47:31.80,中文,,0,0,0,,作为程序员，你能看到这个吗？
Dialogue: 0,0:47:31.80,0:47:38.12,中文,,0,0,0,,让我给你展示一下 Chrome、Safari 和其他浏览器的一些其他功能。
Dialogue: 0,0:47:38.12,0:47:42.41,中文,,0,0,0,,我一直在使用“查看页面源代码”，它只显示 HTML 的只读版本。
Dialogue: 0,0:47:42.41,0:47:46.35,中文,,0,0,0,,但回想一下上次，我实际上右键单击并选择了“检查”。
Dialogue: 0,0:47:46.35,0:47:47.65,中文,,0,0,0,,或查看开发者工具。
Dialogue: 0,0:47:47.65,0:47:51.22,中文,,0,0,0,,这会打开一个更高级的开发者工具版本。
Dialogue: 0,0:47:51.22,0:47:53.36,中文,,0,0,0,,在“元素”下，你可以看到所有内容。
Dialogue: 0,0:47:53.36,0:47:55.40,中文,,0,0,0,,它以漂亮的格式打印出来，并且是分层的。
Dialogue: 0,0:47:55.40,0:47:57.60,中文,,0,0,0,,它将内容折叠成这些可点击的三角形。
Dialogue: 0,0:47:57.60,0:47:59.02,中文,,0,0,0,,但它本质上是相同的。
Dialogue: 0,0:47:59.02,0:48:00.59,中文,,0,0,0,,只是更具交互性。
Dialogue: 0,0:48:00.59,0:48:02.67,中文,,0,0,0,,但注意我现在可以这样。
Dialogue: 0,0:48:02.67,0:48:05.05,中文,,0,0,0,,如果我进入“网络”选项卡，
Dialogue: 0,0:48:05.05,0:48:06.75,中文,,0,0,0,,让我缩小一点。
Dialogue: 0,0:48:06.75,0:48:15.50,中文,,0,0,0,,让我继续并重新加载此表单，然后再次输入 D-A-V-I-D 并单击“greet”。
Dialogue: 0,0:48:15.50,0:48:23.03,中文,,0,0,0,,现在请注意，在 Chrome 开发者工具的“网络”选项卡中，我看到了一些我们之前看到的内容。
Dialogue: 0,0:48:23.03,0:48:25.63,中文,,0,0,0,,第一，我看到请求方法是 post。
Dialogue: 0,0:48:25.63,0:48:31.26,中文,,0,0,0,,第二，我看到服务器自动返回 200 表示成功，而我没有为此编写任何代码。
Dialogue: 0,0:48:31.26,0:48:34.20,中文,,0,0,0,,但我可以向下、向下、向下、向下、向下滚动。
Dialogue: 0,0:48:34.20,0:48:39.64,中文,,0,0,0,,你会看到最终，在所有这些 cookie 之后，稍后会详细介绍。
Dialogue: 0,0:48:39.64,0:48:47.09,中文,,0,0,0,,如果我单击“负载”（“标头”旁边的第二个选项卡），你就可以像开发人员一样看到实际发送到服务器的内容。
Dialogue: 0,0:48:47.09,0:48:51.21,中文,,0,0,0,,因此，这将非常有用，例如在做习题集 9 或真正更复杂的网络应用程序时，你可能没有 2 条，而是 20 条，甚至更多不同的路由。
Dialogue: 0,0:48:51.21,0:48:56.79,中文,,0,0,0,,如果你想查看从浏览器到服务器的内容，你可以完全控制所有这些内容。
Dialogue: 0,0:48:56.79,0:49:02.60,中文,,0,0,0,,信息，即使你使用的是 HTTPS，因为你的浏览器和你（开发人员）当然可以看到所有这些信息。
Dialogue: 0,0:49:02.60,0:49:16.54,中文,,0,0,0,,因此，再次强调，这些开发者工具，即使有很多选项卡和按钮你可能很快都不会用到，\N但其中一些，如“元素”、“网络”和“JavaScript 控制台”，对于开始熟悉这些工具非常有用。
Dialogue: 0,0:49:16.54,0:49:25.19,中文,,0,0,0,,好了，关于 post 的这种含义，现在有任何问题吗？
Dialogue: 0,0:49:25.19,0:49:28.32,中文,,0,0,0,,有什么问题吗？
Dialogue: 0,0:49:28.32,0:49:28.98,中文,,0,0,0,,没有？
Dialogue: 0,0:49:28.98,0:49:33.87,中文,,0,0,0,,最后一个将这些内容联系在一起的“你好”示例怎么样？
Dialogue: 0,0:49:33.87,0:49:47.04,中文,,0,0,0,,现在，我们如何尝试进一步收紧内容，以应对像习题集 9 这样的情况，\N或者真正更复杂的网络应用程序，在这些应用程序中，你可能没有 2 条路由，而是 20 条，甚至更多不同的路由。
Dialogue: 0,0:49:47.04,0:49:53.06,中文,,0,0,0,,最好尽量减少我们拥有的路由总数，这样我们就不会感到不知所措。
Dialogue: 0,0:49:53.06,0:49:58.85,中文,,0,0,0,,我敢说这两条路径都非常短，也许我可以把它们合并成一条。
Dialogue: 0,0:49:58.85,0:50:03.99,中文,,0,0,0,,也许我可以让用户感觉像是在同一个 URL 下，只是为了让代码更简洁。
Dialogue: 0,0:50:03.99,0:50:06.53,中文,,0,0,0,,我建议我们这样做。
Dialogue: 0,0:50:06.53,0:50:09.80,中文,,0,0,0,,让我删除 greet 路径。
Dialogue: 0,0:50:09.80,0:50:13.92,中文,,0,0,0,,然后进入 index.html 文件中的表单。
Dialogue: 0,0:50:13.92,0:50:18.36,中文,,0,0,0,,让我们继续，让这个表单的 action 仍然是斜杠。
Dialogue: 0,0:50:18.36,0:50:22.47,中文,,0,0,0,,我希望表单在网站的根目录，也就是斜杠处可见。
Dialogue: 0,0:50:22.47,0:50:34.34,中文,,0,0,0,,但我也希望表单提交给自己，因为我不想引入另一个像 /greet 这样的路径，\N最终，这确实很有说服力，这样你就不会为网站的每个功能都设置一个路径。
Dialogue: 0,0:50:34.34,0:50:36.20,中文,,0,0,0,,所以从技术上讲，这也是默认值。
Dialogue: 0,0:50:36.20,0:50:39.06,中文,,0,0,0,,如果我省略 action，也会发生同样的事情。
Dialogue: 0,0:50:39.06,0:50:40.32,中文,,0,0,0,,但让我倒回去。
Dialogue: 0,0:50:40.32,0:50:43.82,中文,,0,0,0,,现在让我们进入 app.py，看看如何实现这一点。
Dialogue: 0,0:50:43.82,0:50:53.06,中文,,0,0,0,,如果我想让我的唯一路径同时支持这两种方法，我可以说 methods 等于一个包含 get 和 post 的列表，顺序任意。
Dialogue: 0,0:50:53.06,0:50:55.02,中文,,0,0,0,,但我将按字母顺序排列。
Dialogue: 0,0:50:55.02,0:51:02.44,中文,,0,0,0,,这告诉 Python，这个路径应该在同一个地方处理 get 和 post 请求。
Dialogue: 0,0:51:02.44,0:51:04.66,中文,,0,0,0,,让我们进入这个函数。
Dialogue: 0,0:51:04.66,0:51:07.67,中文,,0,0,0,,我想表达类似的意思。
Dialogue: 0,0:51:07.67,0:51:11.43,中文,,0,0,0,,如果是 get 请求，我想返回表单。
Dialogue: 0,0:51:11.43,0:51:18.90,中文,,0,0,0,,否则，如果是 post 请求，我想返回渲染后的 greet.html 模板，其中包含用户名。
Dialogue: 0,0:51:18.90,0:51:20.84,中文,,0,0,0,,但这还不是完整的代码。
Dialogue: 0,0:51:20.84,0:51:22.24,中文,,0,0,0,,但我认为我能做到。
Dialogue: 0,0:51:22.24,0:51:24.38,中文,,0,0,0,,我要继续说下面的话。
Dialogue: 0,0:51:24.38,0:51:26.60,中文,,0,0,0,,我要继续说如果。
Dialogue: 0,0:51:26.60,0:51:33.89,中文,,0,0,0,,request.method == GET，那么确实返回 index.html。
Dialogue: 0,0:51:33.89,0:51:40.69,中文,,0,0,0,,否则，如果 request.method == POST，那么继续并返回 greet.html。
Dialogue: 0,0:51:40.69,0:51:44.11,中文,,0,0,0,,但这还不够，因为我仍然想传入那个占位符。
Dialogue: 0,0:51:44.11,0:51:53.67,中文,,0,0,0,,所以让我再次添加 name = request.args.get，“name”，然后是默认值 world。
Dialogue: 0,0:51:53.67,0:51:55.94,中文,,0,0,0,,这对我有什么用呢？
Dialogue: 0,0:51:55.94,0:51:58.72,中文,,0,0,0,,让我回到我的另一个标签页。
Dialogue: 0,0:51:58.72,0:52:00.14,中文,,0,0,0,,让我关闭开发者工具。
Dialogue: 0,0:52:00.14,0:52:01.56,中文,,0,0,0,,让我回到表单这里。
Dialogue: 0,0:52:01.56,0:52:03.42,中文,,0,0,0,,让我重新加载以确保我拥有最新版本。
Dialogue: 0,0:52:03.42,0:52:05.78,中文,,0,0,0,,让我查看页面源代码，以确保我拥有最新版本。
Dialogue: 0,0:52:05.78,0:52:10.07,中文,,0,0,0,,是的，我拥有最新版本，因为它仍然显示 post，但现在显示斜杠。
Dialogue: 0,0:52:10.07,0:52:11.31,中文,,0,0,0,,让我们看看现在会发生什么。
Dialogue: 0,0:52:11.31,0:52:17.81,中文,,0,0,0,,如果我输入我的名字 David，之前这是通过 post 提交的，所以我没有在 URL 中看到任何名字或其值。
Dialogue: 0,0:52:17.81,0:52:19.67,中文,,0,0,0,,但我最终到达了 /greet。
Dialogue: 0,0:52:19.67,0:52:25.28,中文,,0,0,0,,但如果操作现在是斜杠，我点击 greet，注意 它仍然可以工作。
Dialogue: 0,0:52:25.28,0:52:28.04,中文,,0,0,0,,我看到了 hello, world，虽然这并不完全正确。
Dialogue: 0,0:52:28.04,0:52:29.68,中文,,0,0,0,,我们稍后再回来讨论这个问题。
Dialogue: 0,0:52:29.68,0:52:32.46,中文,,0,0,0,,注意 URL 以斜杠结尾。
Dialogue: 0,0:52:32.46,0:52:34.97,中文,,0,0,0,,Chrome 隐藏了斜杠，因为它后面什么也没有。
Dialogue: 0,0:52:34.97,0:52:38.59,中文,,0,0,0,,但它不以 name equals David 结尾。
Dialogue: 0,0:52:38.59,0:52:41.27,中文,,0,0,0,,在本例中，它也不以 name equals world 结尾。
Dialogue: 0,0:52:41.27,0:52:42.66,中文,,0,0,0,,现在请注意这一点。
Dialogue: 0,0:52:42.66,0:52:45.34,中文,,0,0,0,,如果我刷新页面，我会收到这个警告。
Dialogue: 0,0:52:45.34,0:52:48.00,中文,,0,0,0,,你要确认重新提交表单吗？
Dialogue: 0,0:52:48.00,0:52:50.12,中文,,0,0,0,,你要查找的页面使用了你输入的信息。
Dialogue: 0,0:52:50.12,0:52:52.74,中文,,0,0,0,,返回该页面可能会导致你所做的任何操作被重复。
Dialogue: 0,0:52:52.74,0:52:53.79,中文,,0,0,0,,你要继续吗？
Dialogue: 0,0:52:53.79,0:52:57.41,中文,,0,0,0,,你可能在访问过的网站上看到过这种情况，当你点击刷新时。
Dialogue: 0,0:52:57.41,0:52:59.33,中文,,0,0,0,,系统会提示你，等一下，你确定要这样做吗？
Dialogue: 0,0:52:59.33,0:53:01.87,中文,,0,0,0,,你很可能是被明确提示要重新加载。
Dialogue: 0,0:53:01.87,0:53:02.87,中文,,0,0,0,,为什么？
Dialogue: 0,0:53:02.87,0:53:06.67,中文,,0,0,0,,你刚才执行的是 POST 请求，而不是 GET 请求。
Dialogue: 0,0:53:06.67,0:53:20.64,中文,,0,0,0,,按照惯例，除了 POST 用于保护隐私，隐藏你的用户名、密码、信用卡号等信息，\N以及用于上传图片或视频等更大的文件外，POST 还用于对服务器进行更改。
Dialogue: 0,0:53:20.64,0:53:24.18,中文,,0,0,0,,例如，将商品添加到购物车，将数据添加到数据库。
Dialogue: 0,0:53:24.18,0:53:30.86,中文,,0,0,0,,顾名思义，GET 用于获取信息，而不是发布或发送信息。
Dialogue: 0,0:53:30.86,0:53:44.88,中文,,0,0,0,,所以这是 Chrome 浏览器的一种谨慎行为，因为如果你刚刚在亚马逊上下单，\N然后点击了刷新，你不想意外地再次购买同一本书，尽管亚马逊和其他高级网站也有其他的防御措施来避免这个问题。
Dialogue: 0,0:53:44.88,0:53:47.26,中文,,0,0,0,,不过，这里有个 bug。
Dialogue: 0,0:53:47.26,0:53:50.38,中文,,0,0,0,,它显示的是“hello, world”，而不是“hello, David”。
Dialogue: 0,0:53:50.38,0:53:56.01,中文,,0,0,0,,实际上，它刚才也是这样显示的，只是我没有重新测试代码并向你展示。
Dialogue: 0,0:53:56.01,0:53:59.93,中文,,0,0,0,,或者，即使我测试了，我也没有注意到它显示的是“hello, world”而不是“hello, David”。
Dialogue: 0,0:53:59.93,0:54:05.54,中文,,0,0,0,,事实证明，request.args 只适用于 GET 请求。
Dialogue: 0,0:54:05.54,0:54:10.18,中文,,0,0,0,,使用 GET 请求时，request.args 是一个包含所有键值对的字典。
Dialogue: 0,0:54:10.18,0:54:15.90,中文,,0,0,0,,但有点令人困惑的是，在 Flask 中使用 POST 请求时，必须使用 request.form。
Dialogue: 0,0:54:15.90,0:54:22.53,中文,,0,0,0,,我不知道为什么它们不像 request.get 或 request.form 这样更明显的对应关系。
Dialogue: 0,0:54:22.53,0:54:26.51,中文,,0,0,0,,抱歉，request.get 和 request.post 应该是更合理的名字。
Dialogue: 0,0:54:26.51,0:54:32.21,中文,,0,0,0,,但在这种情况下，我们使用 request.args 处理 GET 请求，使用 request.form 处理 POST 请求。
Dialogue: 0,0:54:32.21,0:54:33.41,中文,,0,0,0,,好吧，这很容易修复。
Dialogue: 0,0:54:33.41,0:54:38.48,中文,,0,0,0,,如果我回到 VS Code，把 request.args 改成 request.form。
Dialogue: 0,0:54:38.48,0:54:41.62,中文,,0,0,0,,回到另一个标签页，重新加载一下。
Dialogue: 0,0:54:41.62,0:54:42.08,中文,,0,0,0,,你知道吗？
Dialogue: 0,0:54:42.08,0:54:46.46,中文,,0,0,0,,我要点击“确定”，继续提交相同的表单，因为表单没有问题。
Dialogue: 0,0:54:46.46,0:54:49.74,中文,,0,0,0,,是我的 Python 代码有问题，按下回车键。
Dialogue: 0,0:54:49.74,0:54:52.08,中文,,0,0,0,,现在它可以正确访问“David”了。
Dialogue: 0,0:54:52.08,0:54:53.00,中文,,0,0,0,,但是再看一遍。
Dialogue: 0,0:54:53.00,0:54:56.85,中文,,0,0,0,,如果我点击重新加载，Command-R 或 Control-R，就会出现相同的警告。
Dialogue: 0,0:54:56.85,0:54:58.61,中文,,0,0,0,,确定要提交表单吗？
Dialogue: 0,0:54:58.61,0:54:58.91,中文,,0,0,0,,是的。
Dialogue: 0,0:54:58.91,0:55:02.95,中文,,0,0,0,,如果我手动点击“重新加载”图标，会收到和之前一样的警告。
Dialogue: 0,0:55:02.95,0:55:06.59,中文,,0,0,0,,但是如果我想手动发起一个 GET 请求，没问题。
Dialogue: 0,0:55:06.59,0:55:08.88,中文,,0,0,0,,不要点击“重新加载”发送相同的请求。
Dialogue: 0,0:55:08.88,0:55:10.96,中文,,0,0,0,,而是，把光标移到 URL 地址栏。
Dialogue: 0,0:55:10.96,0:55:13.96,中文,,0,0,0,,把光标放在那里，然后按回车键。
Dialogue: 0,0:55:13.96,0:55:17.16,中文,,0,0,0,,现在注意，相同的 URL 默认情况下是一个 GET 请求。
Dialogue: 0,0:55:17.16,0:55:21.94,中文,,0,0,0,,所以每当我们在浏览器中输入 URL 时，GET 始终是默认的请求方法。
Dialogue: 0,0:55:21.94,0:55:31.13,中文,,0,0,0,,只有当你点击程序员配置为使用 POST 方法的按钮时，你才会真正地将商品添加到购物车或进行类似的操作。
Dialogue: 0,0:55:31.13,0:55:33.92,中文,,0,0,0,,我们回来了。
Dialogue: 0,0:55:33.92,0:55:45.08,中文,,0,0,0,,如果我回溯到很久以前，这实际上是我在 1997 年制作的第一个网络应用程序。
Dialogue: 0,0:55:45.08,0:55:48.76,中文,,0,0,0,,那时候我应该才大二。
Dialogue: 0,0:55:48.76,0:55:49.98,中文,,0,0,0,,我当时已经学完了 CS50。
Dialogue: 0,0:55:49.98,0:55:53.50,中文,,0,0,0,,我还选修了一门叫做 CS51 的进阶课程，学习的是另一种编程。
Dialogue: 0,0:55:53.50,0:55:58.39,中文,,0,0,0,,然后我自学了一种叫做 Perl 的语言，现在这种语言已经不太流行了。
Dialogue: 0,0:55:58.39,0:56:04.21,中文,,0,0,0,,但它和 Python、Java、JavaScript 等一样，是另一种可以用来制作网络应用程序的语言。
Dialogue: 0,0:56:04.21,0:56:07.09,中文,,0,0,0,,当时网络还处于起步阶段。
Dialogue: 0,0:56:07.09,0:56:13.14,中文,,0,0,0,,而当时我的同学们报名参加大一新生 intramural 体育项目（也就是 Frosh IMs）的方式是拿一张纸，
Dialogue: 0,0:56:13.14,0:56:21.98,中文,,0,0,0,,写上你的名字和电子邮件地址，然后穿过院子走到 Wigglesworth 宿舍楼（如果我没记错的话），那是宿舍管理员住的地方。
Dialogue: 0,0:56:21.98,0:56:24.04,中文,,0,0,0,,然后把纸条从门缝塞进去。
Dialogue: 0,0:56:24.04,0:56:26.82,中文,,0,0,0,,这就是我那个年代提交表单的方式。
Dialogue: 0,0:56:26.82,0:56:31.59,中文,,0,0,0,,所以这是一个机会，即使是在 1997 年左右，也能把事情搬到网上。
Dialogue: 0,0:56:31.59,0:56:34.67,中文,,0,0,0,,而且这个网站一直运营到，我想，大概是 2007 年。
Dialogue: 0,0:56:34.67,0:56:38.67,中文,,0,0,0,,我在网上找到了这个。后来它就变成了别的东西。
Dialogue: 0,0:56:38.67,0:56:41.43,中文,,0,0,0,,但这是一个网站，人们可以通过它注册参加体育运动。
Dialogue: 0,0:56:41.43,0:56:44.39,中文,,0,0,0,,人们可以登录查看各种比赛的比分等等。
Dialogue: 0,0:56:44.39,0:56:48.07,中文,,0,0,0,,所以在底层，我当时甚至对数据库一无所知。
Dialogue: 0,0:56:48.07,0:56:51.78,中文,,0,0,0,,我只是用 CSV 文件来存储数据。
Dialogue: 0,0:56:51.78,0:56:53.64,中文,,0,0,0,,但有 HTML 表单。
Dialogue: 0,0:56:53.64,0:56:55.18,中文,,0,0,0,,还有 Perl。
Dialogue: 0,0:56:55.18,0:57:00.32,中文,,0,0,0,,当时的语言，用它来做我们刚才用 Flask 做的那种事情。
Dialogue: 0,0:57:00.32,0:57:06.12,中文,,0,0,0,,所以我想我们可以做一个稍微不那么丑陋的版本。
Dialogue: 0,0:57:06.12,0:57:11.80,中文,,0,0,0,,重复的图形背景在 1997 年很流行，就像你在这里看到的这样。
Dialogue: 0,0:57:11.80,0:57:16.10,中文,,0,0,0,,但这就是当时的审美，包括所谓的 blink 标签。
Dialogue: 0,0:57:16.10,0:57:24.55,中文,,0,0,0,,所以我们至少要关注这个网站的功能，而不是它的外观，看看我们是否可以实现一些底层结构，来解决一个现实世界中的代表性问题，
Dialogue: 0,0:57:24.55,0:57:30.55,中文,,0,0,0,,无论是新生校内体育，还是其他类似的问题，你需要从用户那里获取数据并以某种方式处理它。
Dialogue: 0,0:57:30.55,0:57:32.89,中文,,0,0,0,,让我到 VS Code 这里来。
Dialogue: 0,0:57:32.89,0:57:38.25,中文,,0,0,0,,让我创建一个名为 froshims 的新目录，这样我们就可以把所有代码都放在它自己的目录里。
Dialogue: 0,0:57:38.25,0:57:40.27,中文,,0,0,0,,让我 cd 进入 froshims。
Dialogue: 0,0:57:40.27,0:57:47.34,中文,,0,0,0,,让我先发制人地创建另一个名为 templates 的目录，我们的模板，我们的 .html 文件，需要放在里面。
Dialogue: 0,0:57:47.34,0:57:54.84,中文,,0,0,0,,最终，我要继续创建两个文件，至少是 app.py 和 index.html。
Dialogue: 0,0:57:54.84,0:57:57.29,中文,,0,0,0,,我们先来创建第一个文件 app.py。
Dialogue: 0,0:57:57.29,0:57:59.75,中文,,0,0,0,,它会放在我的 froshims 目录下。
Dialogue: 0,0:57:59.75,0:58:03.01,中文,,0,0,0,,我会重新创建一个非常简单的程序，就像我们之前做的那样。
Dialogue: 0,0:58:03.01,0:58:10.03,中文,,0,0,0,,从小写的 flask 中导入大写的 Flask、render_template 以及 request。
Dialogue: 0,0:58:10.03,0:58:11.82,中文,,0,0,0,,第一行代码和之前一样。
Dialogue: 0,0:58:11.82,0:58:19.86,中文,,0,0,0,,然后我创建一个名为 app 的变量，将它设置为调用 Flask 函数（大写 F）的结果，参数为 __name__。
Dialogue: 0,0:58:19.86,0:58:23.78,中文,,0,0,0,,然后我再创建一个路由。
Dialogue: 0,0:58:23.78,0:58:29.38,中文,,0,0,0,,像之前一样，使用 / 路径和 index 函数，当然，我可以随意命名这个函数。
Dialogue: 0,0:58:29.38,0:58:34.66,中文,,0,0,0,,现在，我们先返回 render_template 函数的结果，参数为 "index.html"，假设这个文件存在。
Dialogue: 0,0:58:34.66,0:58:41.63,中文,,0,0,0,,与其说这是一个 Web 应用程序，不如说它目前只是一个用于处理单个文件的 HTTP 服务器。
Dialogue: 0,0:58:41.63,0:58:43.93,中文,,0,0,0,,现在，我们打开另一个标签页，
Dialogue: 0,0:58:43.93,0:58:48.57,中文,,0,0,0,,创建一个名为 index.html 的模板文件。
Dialogue: 0,0:58:48.57,0:58:54.30,中文,,0,0,0,,为了节省时间， 我将从之前的代码中复制粘贴大部分布局。
Dialogue: 0,0:58:54.30,0:58:58.04,中文,,0,0,0,,我已经提前将标题从 hello 改为 Frosh IMs。
Dialogue: 0,0:58:58.04,0:59:00.14,中文,,0,0,0,,但这本质上是同一个模板。
Dialogue: 0,0:59:00.14,0:59:06.57,中文,,0,0,0,,现在，由于我正在编辑 index.html，所以还不会使用 extends 或任何其他花哨的块级元素。
Dialogue: 0,0:59:06.57,0:59:14.13,中文,,0,0,0,,我将直接创建一个相对简单的表单，以前我的同学们可以通过这个表单注册参加校内运动会。
Dialogue: 0,0:59:14.13,0:59:19.79,中文,,0,0,0,,我们来继续吧，我建议这样做。
Dialogue: 0,0:59:19.79,0:59:28.04,中文,,0,0,0,,在这个页面中，我们将放置一个表单，它的 action 将是一个名为 /register 的路由，当然我可以随意命名它。
Dialogue: 0,0:59:28.04,0:59:36.86,中文,,0,0,0,,会稍微涉及一点隐私，所以我打算用 POST 而不是 GET，这样人们就不会不小心点刷新按钮，在没有提示的情况下注册两次。
Dialogue: 0,0:59:36.86,0:59:45.00,中文,,0,0,0,,在这个表单里面，我们继续，给他们一个输入框，为了演示，autocomplete 属性将像往常一样设为 off。
Dialogue: 0,0:59:45.00,0:59:48.09,中文,,0,0,0,,autofocus，这样光标一开始就会在那里。
Dialogue: 0,0:59:48.09,0:59:53.59,中文,,0,0,0,,这个字段的 name 就叫做 name，因为如果我的同学想注册某个运动项目，我需要知道他们的名字。
Dialogue: 0,0:59:53.59,0:59:58.23,中文,,0,0,0,,placeholder 还是用引号引起来的 “name”，这样他们就能看到一些灰色的说明文字。
Dialogue: 0,0:59:58.23,1:00:02.49,中文,,0,0,0,,这个字段的 type 仍然是 text。
Dialogue: 0,1:00:02.49,1:00:05.94,中文,,0,0,0,,然后我需要让他们能够注册一些运动项目。
Dialogue: 0,1:00:05.94,1:00:06.96,中文,,0,0,0,,我们来简单一点？
Dialogue: 0,1:00:06.96,1:00:12.04,中文,,0,0,0,,比如说，过去我们支持的三个运动项目是篮球、足球和极限飞盘。
Dialogue: 0,1:00:12.04,1:00:13.00,中文,,0,0,0,,我来试试。
Dialogue: 0,1:00:13.00,1:00:17.67,中文,,0,0,0,,除非你自己研究过表单，否则你可能以前没见过这个。
Dialogue: 0,1:00:17.67,1:00:22.77,中文,,0,0,0,,但我可以在 HTML 中创建一个 Select 菜单，也就是大家所知的下拉菜单。
Dialogue: 0,1:00:22.77,1:00:25.17,中文,,0,0,0,,里面有一堆选项。
Dialogue: 0,1:00:25.17,1:00:31.28,中文,,0,0,0,,每个 option 通常都遵循这样的模式：选项的值，以及用户实际看到的文本。
Dialogue: 0,1:00:31.28,1:00:37.96,中文,,0,0,0,,所以这些选项的值将是，我们把 basketball 作为第一个怎么样？
Dialogue: 0,1:00:37.96,1:00:40.26,中文,,0,0,0,,我希望用户看到的文字也是一样的。
Dialogue: 0,1:00:40.26,1:00:42.92,中文,,0,0,0,,就像 HTML 中的链接一样，它们可以是不同的。
Dialogue: 0,1:00:42.92,1:00:44.46,中文,,0,0,0,,但我打算让它们保持一致。
Dialogue: 0,1:00:44.46,1:00:49.77,中文,,0,0,0,,另一个选项是，比如，soccer。
Dialogue: 0,1:00:49.77,1:00:51.57,中文,,0,0,0,,等等，让我修正一下我的引号。
Dialogue: 0,1:00:51.57,1:00:55.14,中文,,0,0,0,,用户将会看到完全相同的内容，尽管它可以显示其他的东西。
Dialogue: 0,1:00:55.14,1:00:59.58,中文,,0,0,0,,最后，这个值将是“终极飞盘”。
Dialogue: 0,1:00:59.58,1:01:04.20,中文,,0,0,0,,用户也会在那里看到同样的内容，“终极飞盘”。
Dialogue: 0,1:01:04.20,1:01:08.91,中文,,0,0,0,,正如我们很快就会看到的，这将创建一个包含三个独立选项的下拉菜单。
Dialogue: 0,1:01:08.91,1:01:14.21,中文,,0,0,0,,如果我想让学生现在就能提交，我需要给他们一个按钮，类型是 Submit。
Dialogue: 0,1:01:14.21,1:01:17.37,中文,,0,0,0,,这个按钮上将显示“Register”的字样。
Dialogue: 0,1:01:17.37,1:01:19.03,中文,,0,0,0,,我认为我们已经准备好了。
Dialogue: 0,1:01:19.03,1:01:24.86,中文,,0,0,0,,就像，这仅仅是 HTML，没有 Python，本身也没有 Flask，除了渲染相同的模板。
Dialogue: 0,1:01:24.86,1:01:26.80,中文,,0,0,0,,让我进入我的终端窗口。
Dialogue: 0,1:01:26.80,1:01:31.74,中文,,0,0,0,,让我在这个目录下运行 Flask run，因为我需要启动这个应用程序。
Dialogue: 0,1:01:31.74,1:01:34.26,中文,,0,0,0,,我会看到一些不太美观的输出，包括我自己的 URL。
Dialogue: 0,1:01:34.26,1:01:39.12,中文,,0,0,0,,如果我把鼠标悬停在上面，然后打开这个 URL，我现在应该能看到一个更有趣的表单。
Dialogue: 0,1:01:39.12,1:01:44.23,中文,,0,0,0,,它不仅有一个填写姓名的字段，还有一个包含所有三项运动的下拉菜单。
Dialogue: 0,1:01:44.23,1:01:53.67,中文,,0,0,0,,这可能不是最佳的用户体验，因为我觉得我可能在引导人们注册篮球，也许是因为它默认被选中了。
Dialogue: 0,1:01:53.67,1:01:57.46,中文,,0,0,0,,我的意思是，现在很多表单都有一个空白的占位符。
Dialogue: 0,1:01:57.46,1:02:06.76,中文,,0,0,0,,所以这只是一个美观问题。但我可以做到。让我回到同一个表单。让我在顶部给自己一个空白选项，实际上，我要禁用它。
Dialogue: 0,1:02:06.76,1:02:09.52,中文,,0,0,0,,所以从技术上讲，你不能主动选择它。
Dialogue: 0,1:02:09.52,1:02:11.46,中文,,0,0,0,,但我会默认选择它。
Dialogue: 0,1:02:11.46,1:02:15.02,中文,,0,0,0,,我们之前可能没有见过这些 HTML 属性。
Dialogue: 0,1:02:15.02,1:02:27.07,中文,,0,0,0,,但是如果我想为这个下拉菜单创建一个等效的标题，我要创建一个被禁用的选项，它被自动选中，叫做“Sport”，这样你就不能选择它了。
Dialogue: 0,1:02:27.07,1:02:31.03,中文,,0,0,0,,但在最上面。如果我现在回到另一个标签页，
Dialogue: 0,1:02:31.03,1:02:34.23,中文,,0,0,0,,刷新一下，它只是比之前稍微好看了一点。
Dialogue: 0,1:02:34.23,1:02:37.67,中文,,0,0,0,,而且我不会让人们意外地只注册篮球。
Dialogue: 0,1:02:37.67,1:02:42.28,中文,,0,0,0,,如果我点击这个，你会看到运动项目是灰色的，因此不能手动选择。
Dialogue: 0,1:02:42.28,1:02:45.14,中文,,0,0,0,,但我仍然可以选择其他三个中的任何一个。
Dialogue: 0,1:02:45.14,1:02:45.62,中文,,0,0,0,,好的。
Dialogue: 0,1:02:45.62,1:02:54.35,中文,,0,0,0,,不幸的是，如果我输入 David 并尝试注册，例如，注册足球并点击注册，我最终会到达 /register。
Dialogue: 0,1:02:54.35,1:02:59.33,中文,,0,0,0,,并且没有问号、姓名或运动项目，所以它可能确实是 POST 而不是 GET。
Dialogue: 0,1:02:59.33,1:03:00.42,中文,,0,0,0,,这些都是提示。
Dialogue: 0,1:03:00.42,1:03:01.54,中文,,0,0,0,,但未找到。
Dialogue: 0,1:03:01.54,1:03:07.66,中文,,0,0,0,,请注意，这里的标签页非常简洁地显示 404 Not Found。
Dialogue: 0,1:03:07.66,1:03:09.16,中文,,0,0,0,,这是为什么呢？
Dialogue: 0,1:03:09.16,1:03:16.31,中文,,0,0,0,,需要说明的是，为什么 /register 会给我一个 404？
Dialogue: 0,1:03:16.31,1:03:19.17,中文,,0,0,0,,这里的逻辑是什么？
Dialogue: 0,1:03:19.17,1:03:23.36,中文,,0,0,0,,也许只是说出了显而易见的事实。
Dialogue: 0,1:03:23.36,1:03:24.26,中文,,0,0,0,,它不存在，对吧？
Dialogue: 0,1:03:24.26,1:03:25.56,中文,,0,0,0,,我们还没有做那一步。
Dialogue: 0,1:03:25.56,1:03:27.30,中文,,0,0,0,,就这么简单。
Dialogue: 0,1:03:27.30,1:03:35.24,中文,,0,0,0,,我确实是在强调这一点，因为当你学习很多这些约定和一些新的语法时，说实话，你只会犯一些愚蠢的错误。
Dialogue: 0,1:03:35.24,1:03:38.46,中文,,0,0,0,,有些东西会行不通。但要记住，回归到基本原理。
Dialogue: 0,1:03:38.46,1:03:39.84,中文,,0,0,0,,为什么找不到呢？
Dialogue: 0,1:03:39.84,1:03:43.50,中文,,0,0,0,,/register 应该是一个模板，也许叫做 register.html。
Dialogue: 0,1:03:43.50,1:03:45.21,中文,,0,0,0,,我忘了我的 app.route。
Dialogue: 0,1:03:45.21,1:03:49.35,中文,,0,0,0,,以后你诊断这类问题时，应该这样思考。
Dialogue: 0,1:03:49.35,1:03:51.97,中文,,0,0,0,,让我进入 app.py。
Dialogue: 0,1:03:51.97,1:03:54.47,中文,,0,0,0,,让我再给自己定义一个路径。
Dialogue: 0,1:03:54.47,1:03:58.08,中文,,0,0,0,,app.route，引号，/route。
Dialogue: 0,1:03:58.08,1:04:00.40,中文,,0,0,0,,然后让我定义一个函数，可以随便叫什么名字。
Dialogue: 0,1:04:00.40,1:04:04.42,中文,,0,0,0,,但我准备把它叫做，抱歉，不是 /route，是 /register。
Dialogue: 0,1:04:04.42,1:04:07.77,中文,,0,0,0,,为了保持一致，我将函数命名为 register。
Dialogue: 0,1:04:07.77,1:04:09.75,中文,,0,0,0,,但我可以随便给它起个名字。
Dialogue: 0,1:04:09.75,1:04:12.41,中文,,0,0,0,,现在，我们先不做任何太复杂的事情。
Dialogue: 0,1:04:12.41,1:04:16.71,中文,,0,0,0,,我们只是返回渲染一个名为 success.html 的模板。
Dialogue: 0,1:04:16.71,1:04:21.34,中文,,0,0,0,,我们先假设注册成功，不管你是谁，做什么。
Dialogue: 0,1:04:21.34,1:04:22.96,中文,,0,0,0,,现在，我需要那个模板。
Dialogue: 0,1:04:22.96,1:04:25.28,中文,,0,0,0,,目前我只有 index.html。
Dialogue: 0,1:04:25.28,1:04:27.46,中文,,0,0,0,,所以我现在要按照最佳实践来做。
Dialogue: 0,1:04:27.46,1:04:29.24,中文,,0,0,0,,让我复制所有这些内容。
Dialogue: 0,1:04:29.24,1:04:40.28,中文,,0,0,0,,让我在另一个终端窗口中，进入我的 froshims 目录，然后创建一个名为 layout.html 的新模板，就像之前一样。
Dialogue: 0,1:04:40.28,1:04:42.51,中文,,0,0,0,,让我粘贴所有相同的代码。
Dialogue: 0,1:04:42.51,1:04:50.79,中文,,0,0,0,,让我删除表单，然后放一个大的占位符，也就是 block body 和 end block。
Dialogue: 0,1:04:50.79,1:04:51.99,中文,,0,0,0,,这就是我之前做过的。
Dialogue: 0,1:04:51.99,1:04:55.49,中文,,0,0,0,,这只是现在的一种约定俗成的样板代码。其他的内容我都会保持不变。
Dialogue: 0,1:04:55.49,1:04:58.43,中文,,0,0,0,,但如果我想让它更漂亮，我可以把我的 CSS 添加到顶部。
Dialogue: 0,1:04:58.43,1:05:03.14,中文,,0,0,0,,如果我想添加像这样疯狂重复的背景，我也可以在顶部完成。
Dialogue: 0,1:05:03.14,1:05:06.28,中文,,0,0,0,,这样我就可以让每个页面看起来都像以前一样丑陋。
Dialogue: 0,1:05:06.28,1:05:08.40,中文,,0,0,0,,但今天我们只关注文本。
Dialogue: 0,1:05:08.40,1:05:13.84,中文,,0,0,0,,好了，现在我已经有了 layout.html，让我来清理一下 index.html。
Dialogue: 0,1:05:13.84,1:05:15.83,中文,,0,0,0,,我不需要所有这些冗余的内容。
Dialogue: 0,1:05:15.83,1:05:18.03,中文,,0,0,0,,我不需要顶部的所有这些标签。
Dialogue: 0,1:05:18.03,1:05:28.15,中文,,0,0,0,,回想一下，我认为只需要 extends 加上引号 layout.html，以及相应的百分号和花括号。
Dialogue: 0,1:05:28.15,1:05:31.84,中文,,0,0,0,,然后是相应的 block body，虽然我可以随意命名。
Dialogue: 0,1:05:31.84,1:05:34.50,中文,,0,0,0,,但我还是坚持我之前的约定。
Dialogue: 0,1:05:34.50,1:05:37.62,中文,,0,0,0,,我要删除下面不再需要的标签。
Dialogue: 0,1:05:37.62,1:05:43.34,中文,,0,0,0,,为什么？因为如果我进入 layout.html，我已经有了所有的开始标签和结束标签。
Dialogue: 0,1:05:43.34,1:05:48.30,中文,,0,0,0,,我希望在 index.html 中唯一的内容就是属于 body 的内容。
Dialogue: 0,1:05:48.30,1:05:50.97,中文,,0,0,0,,所以在下面加上 end block。
Dialogue: 0,1:05:50.97,1:05:54.09,中文,,0,0,0,,为了严谨起见，让我继续并突出显示所有内容。
Dialogue: 0,1:05:54.09,1:05:59.27,中文,,0,0,0,,按 Shift-Tab，这将取消缩进，使它们对齐，只是为了整洁。
Dialogue: 0,1:05:59.27,1:06:01.93,中文,,0,0,0,,好了，这样更好，即使它现在看起来有点神秘。
Dialogue: 0,1:06:01.93,1:06:07.54,中文,,0,0,0,,但是现在我打好了基础，可以创建第三个页面、第四个页面，而不需要所有这些复制粘贴。
Dialogue: 0,1:06:07.54,1:06:10.16,中文,,0,0,0,,好，现在让我们回到 app.py。
Dialogue: 0,1:06:10.16,1:06:12.34,中文,,0,0,0,,我最后修改的是 success.html。
Dialogue: 0,1:06:12.34,1:06:14.66,中文,,0,0,0,,好，让我打开终端窗口。
Dialogue: 0,1:06:14.66,1:06:25.51,中文,,0,0,0,,让我编写一个名为 success.html 的模板，它的作用仅仅是显示“您已注册”，以便我们在屏幕上看到一些信息。
Dialogue: 0,1:06:25.51,1:06:29.45,中文,,0,0,0,,这部分我还是需要的，extends layout.html。
Dialogue: 0,1:06:29.45,1:06:32.07,中文,,0,0,0,,所以还是有一点复制粘贴。
Dialogue: 0,1:06:32.07,1:06:34.33,中文,,0,0,0,,这有点难看，但就这样吧。
Dialogue: 0,1:06:34.33,1:06:36.15,中文,,0,0,0,,这个模板的 block body。
Dialogue: 0,1:06:36.15,1:06:40.17,中文,,0,0,0,,我要说的是，您已注册！
Dialogue: 0,1:06:40.17,1:06:41.97,中文,,0,0,0,,好了，然后是 end block。
Dialogue: 0,1:06:41.97,1:06:47.39,中文,,0,0,0,,超级简单。这只是一个信息，说明学生已注册。
Dialogue: 0,1:06:47.39,1:06:50.38,中文,,0,0,0,,好了，让我们回到原始表单，就是这个。
Dialogue: 0,1:06:50.38,1:06:53.74,中文,,0,0,0,,让我刷新一下，确保我的 HTML 已经重新加载。
Dialogue: 0,1:06:53.74,1:06:58.38,中文,,0,0,0,,输入 David。我要再次注册足球，然后点击注册。
Dialogue: 0,1:06:58.38,1:07:01.77,中文,,0,0,0,,有意思，方法不允许。
Dialogue: 0,1:07:01.77,1:07:03.69,中文,,0,0,0,,所以我不再收到 404 错误了。
Dialogue: 0,1:07:03.69,1:07:09.15,中文,,0,0,0,,我在 /register 收到 405 错误。
Dialogue: 0,1:07:09.15,1:07:10.91,中文,,0,0,0,,这是什么意思？
Dialogue: 0,1:07:10.91,1:07:12.21,中文,,0,0,0,,我这次是怎么搞砸的？
Dialogue: 0,1:07:12.21,1:07:16.40,中文,,0,0,0,,405 是指请求方法不被允许。
Dialogue: 0,1:07:16.40,1:07:18.26,中文,,0,0,0,,是吗？
Dialogue: 0,1:07:18.26,1:07:18.90,中文,,0,0,0,,所以它不是。
Dialogue: 0,1:07:18.90,1:07:21.42,中文,,0,0,0,,我觉得占位符没问题。
Dialogue: 0,1:07:21.42,1:07:23.48,中文,,0,0,0,,现在是关于底层 HTTP 的东西。
Dialogue: 0,1:07:23.48,1:07:31.22,中文,,0,0,0,,方法不允许。再说一遍？ 所以是 get 和 post 的问题。
Dialogue: 0,1:07:31.22,1:07:35.94,中文,,0,0,0,,默认情况下，Flask 中所有这些路由都默认假设使用 get，因为它是安全的。
Dialogue: 0,1:07:35.94,1:07:39.43,中文,,0,0,0,,它不允许你以完全相同的方式向服务器发送信息。
Dialogue: 0,1:07:39.43,1:07:46.59,中文,,0,0,0,,但是如果我确实想支持 post，回想一下，我们将它改成了 methods 等于一个列表，列表中用引号引着 post。
Dialogue: 0,1:07:46.59,1:07:51.38,中文,,0,0,0,,所以我只需要启用对该方法的支持，即 HTTP 动词。
Dialogue: 0,1:07:51.38,1:07:58.61,中文,,0,0,0,,让我们回到表单，重新加载以确保我没有搞砸，输入我的名字 David，从下拉列表中选择足球，点击注册。
Dialogue: 0,1:07:58.61,1:08:04.59,中文,,0,0,0,,现在我不仅在 URL 中的 /register 路径下，它还声称我确实已经注册了。
Dialogue: 0,1:08:04.59,1:08:06.47,中文,,0,0,0,,当然，我还没做什么有趣的事。
Dialogue: 0,1:08:06.47,1:08:07.25,中文,,0,0,0,,没有数据库。
Dialogue: 0,1:08:07.25,1:08:08.17,中文,,0,0,0,,没有 CSV 文件。
Dialogue: 0,1:08:08.17,1:08:09.62,中文,,0,0,0,,我们稍后会讲到。
Dialogue: 0,1:08:09.62,1:08:15.26,中文,,0,0,0,,但至少我现在有了根据该运动进行动态操作的管道。
Dialogue: 0,1:08:15.26,1:08:18.60,中文,,0,0,0,,那么，我现在该如何改进呢？
Dialogue: 0,1:08:18.60,1:08:24.72,中文,,0,0,0,,我们来实现一下，将实际的注册者存储在计算机内存中的字典中，如何？
Dialogue: 0,1:08:24.72,1:08:28.29,中文,,0,0,0,,因此，我们不只是声称他们已注册，而是实际做一个标记。
Dialogue: 0,1:08:28.29,1:08:36.59,中文,,0,0,0,,最简单的方法，就像我们几周前在 Python 中做的那样，就是将数据存储在内存中的变量中，比如列表、字典、集合等等。
Dialogue: 0,1:08:36.59,1:08:39.61,中文,,0,0,0,,让我回到 VS Code 中的 app.py 文件。
Dialogue: 0,1:08:39.61,1:08:46.73,中文,,0,0,0,,我认为我这里要做的是修改我的 register 路由，让它实际做一些有用的事情。
Dialogue: 0,1:08:46.73,1:08:51.64,中文,,0,0,0,,不过，在我注册用户之前，我们先考虑一下要把他们放在哪里。
Dialogue: 0,1:08:51.64,1:08:53.84,中文,,0,0,0,,让我来提个建议。
Dialogue: 0,1:08:53.84,1:08:57.04,中文,,0,0,0,,我们这样做怎么样？
Dialogue: 0,1:08:57.04,1:08:58.58,中文,,0,0,0,,在我的文件顶部。
Dialogue: 0,1:08:58.58,1:09:06.60,中文,,0,0,0,,让我来声明一个名为 registrants 的全局变量，并将其设置为一个空字典。
Dialogue: 0,1:09:06.60,1:09:11.46,中文,,0,0,0,,我们以前在使用字典存储键值对的时候做过这个。
Dialogue: 0,1:09:11.46,1:09:13.86,中文,,0,0,0,,我建议我们用字典来存储注册者信息。
Dialogue: 0,1:09:13.86,1:09:17.61,中文,,0,0,0,,为什么？因为我要保持简单，就像名字一样
Dialogue: 0,1:09:17.61,1:09:22.57,中文,,0,0,0,,键值是学生的名字，值是他们注册的运动项目。
Dialogue: 0,1:09:22.57,1:09:25.29,中文,,0,0,0,,比如 David 注册了足球，Carter 注册了篮球。
Dialogue: 0,1:09:25.29,1:09:31.07,中文,,0,0,0,,所以用一个两列的字典来表示是合理的，就像我们经常在屏幕上看到的那样。
Dialogue: 0,1:09:31.07,1:09:32.73,中文,,0,0,0,,那么如何使用这个字典呢？
Dialogue: 0,1:09:32.73,1:09:34.38,中文,,0,0,0,,让我来演示一下。
Dialogue: 0,1:09:34.38,1:09:37.18,中文,,0,0,0,,在 /register 路径下。
Dialogue: 0,1:09:37.18,1:09:40.22,中文,,0,0,0,,让我先这样做。
Dialogue: 0,1:09:40.22,1:09:47.12,中文,,0,0,0,,我们使用 request.form.get 获取用户的姓名，并将其赋值给 name 变量。
Dialogue: 0,1:09:47.12,1:09:52.29,中文,,0,0,0,,这次我不设置默认值，因为我不想把学生叫做“world”或者其他奇怪的名字。
Dialogue: 0,1:09:52.29,1:09:54.37,中文,,0,0,0,,我先假设它就在那里。
Dialogue: 0,1:09:54.37,1:10:01.98,中文,,0,0,0,,我们再创建一个名为 sport 的变量，使用 request.form.get("sport") 来获取学生的运动项目。
Dialogue: 0,1:10:01.98,1:10:05.85,中文,,0,0,0,,然后我们在 registrants
Dialogue: 0,1:10:05.85,1:10:09.55,中文,,0,0,0,,字典中，使用学生姓名作为索引。
Dialogue: 0,1:10:09.55,1:10:12.78,中文,,0,0,0,,然后将它设置为 sport 的值。
Dialogue: 0,1:10:12.78,1:10:15.04,中文,,0,0,0,,我创建了这些变量只是为了保持代码整洁。
Dialogue: 0,1:10:15.04,1:10:20.02,中文,,0,0,0,,现在我在字典中放入了一个键值对。
Dialogue: 0,1:10:20.02,1:10:24.41,中文,,0,0,0,,好了，我现在想做什么呢？
Dialogue: 0,1:10:24.41,1:10:27.63,中文,,0,0,0,,我会使用 success.html。
Dialogue: 0,1:10:27.63,1:10:28.81,中文,,0,0,0,,我们来试试。
Dialogue: 0,1:10:28.81,1:10:31.27,中文,,0,0,0,,但现在我认为 success.html 指的是那个。
Dialogue: 0,1:10:31.27,1:10:33.86,中文,,0,0,0,,让我回到表单，重新加载。
Dialogue: 0,1:10:33.86,1:10:38.65,中文,,0,0,0,,我输入 David 和 soccer，然后注册。
Dialogue: 0,1:10:38.65,1:10:45.58,中文,,0,0,0,,我回到表单，输入 Carter 和 basketball，然后注册。
Dialogue: 0,1:10:45.58,1:10:48.58,中文,,0,0,0,,现在我们来看看接下来要做什么。
Dialogue: 0,1:10:48.58,1:10:53.73,中文,,0,0,0,,不如我进入，让我给自己添加另一个路由。
Dialogue: 0,1:10:53.73,1:10:54.91,中文,,0,0,0,,我们来试试。
Dialogue: 0,1:10:54.91,1:10:58.93,中文,,0,0,0,,使用 app.route，我们来创建第三个路由。
Dialogue: 0,1:10:58.93,1:11:06.18,中文,,0,0,0,,我将这个路由命名为 registrants，它的作用是显示所有注册人员，就像你在这种网站上期望的那样。
Dialogue: 0,1:11:06.18,1:11:09.89,中文,,0,0,0,,然后我定义一个名为 registrants 的函数，也可以是其他任何名字。
Dialogue: 0,1:11:09.89,1:11:16.59,中文,,0,0,0,,然后我返回一个名为 registrants.html 的模板渲染结果。
Dialogue: 0,1:11:16.59,1:11:19.22,中文,,0,0,0,,然后我传入，这有点巧妙。
Dialogue: 0,1:11:19.22,1:11:22.68,中文,,0,0,0,,我可以写 registrants=registrants，这看起来很奇怪。
Dialogue: 0,1:11:22.68,1:11:23.80,中文,,0,0,0,,但我做了什么？
Dialogue: 0,1:11:23.80,1:11:33.07,中文,,0,0,0,,我假设传入一个名为 registrants 的占位符，它的值是我收集所有注册信息的字典。
Dialogue: 0,1:11:33.07,1:11:39.43,中文,,0,0,0,,所以它类似于之前的 name 占位符，但它更强大，因为它现在是一个完整的字典，而不仅仅是一个字符串。
Dialogue: 0,1:11:39.43,1:11:42.27,中文,,0,0,0,,所以我想现在，让我发挥一下创意。
Dialogue: 0,1:11:42.27,1:11:45.38,中文,,0,0,0,,让我进入我的模板文件夹。
Dialogue: 0,1:11:45.38,1:11:48.50,中文,,0,0,0,,在我的 templates 文件夹下。
Dialogue: 0,1:11:48.50,1:11:49.96,中文,,0,0,0,,我们来这样做。
Dialogue: 0,1:11:49.96,1:11:52.99,中文,,0,0,0,,让我们进入终端窗口。
Dialogue: 0,1:11:52.99,1:12:00.53,中文,,0,0,0,,我们创建另一个名为 registrants.html 的模板，它将为我们显示所有注册者。
Dialogue: 0,1:12:00.53,1:12:06.53,中文,,0,0,0,,所以 extends layout.html，这样我就可以像以前一样借用所有相同的 HTML 代码。
Dialogue: 0,1:12:06.53,1:12:09.87,中文,,0,0,0,,然后像之前一样定义 block body。
Dialogue: 0,1:12:09.87,1:12:16.66,中文,,0,0,0,,在这个 end block 里面，我想放一个所有注册者的无序列表或有序列表。
Dialogue: 0,1:12:16.66,1:12:18.08,中文,,0,0,0,,那么我该怎么做呢？
Dialogue: 0,1:12:18.08,1:12:21.90,中文,,0,0,0,,好吧，我们创建一个无序列表，ul。
Dialogue: 0,1:12:21.90,1:12:26.72,中文,,0,0,0,,而这就是 Jinja 和 Flask 更有趣的地方。
Dialogue: 0,1:12:26.72,1:12:41.31,中文,,0,0,0,,我希望有这样的东西，一个 li，然后是学生的名字，然后是一个 li，是的，像这样，然后可能是运动项目，像这样。
Dialogue: 0,1:12:41.31,1:12:43.04,中文,,0,0,0,,但我没有传入名字。
Dialogue: 0,1:12:43.04,1:12:44.42,中文,,0,0,0,,我没有传入一项运动。
Dialogue: 0,1:12:44.42,1:12:47.54,中文,,0,0,0,,我传入了整个报名者字典。
Dialogue: 0,1:12:47.54,1:12:56.02,中文,,0,0,0,,现在，在 Python 中，如果我们只是在黑白终端窗口中进行操作并运行命令行程序，我可能会在 Python 中使用某种 for 循环。
Dialogue: 0,1:12:56.02,1:12:58.02,中文,,0,0,0,,Jinja 确实允许你这样做。
Dialogue: 0,1:12:58.02,1:13:06.71,中文,,0,0,0,,因此，模板语言往往带有非常轻量级的机制来处理占位符、执行简单的循环、简单的条件，所以语法类似于 Python。
Dialogue: 0,1:13:06.71,1:13:08.41,中文,,0,0,0,,而且它几乎完全相同。
Dialogue: 0,1:13:08.41,1:13:09.93,中文,,0,0,0,,看看我能做什么。
Dialogue: 0,1:13:09.93,1:13:15.11,中文,,0,0,0,,在这个无序列表中，让我不要手动输出单个 li。
Dialogue: 0,1:13:15.11,1:13:17.13,中文,,0,0,0,,让我使用这种语法。
Dialogue: 0,1:13:17.13,1:13:21.75,中文,,0,0,0,,我用于 block 的相同 Jinja 语法，所以是花括号、百分号。
Dialogue: 0,1:13:21.75,1:13:25.47,中文,,0,0,0,,我要说的是，对于 registrants 中的 name。
Dialogue: 0,1:13:25.47,1:13:29.53,中文,,0,0,0,,所以这就像 Python 语法中迭代字典一样。
Dialogue: 0,1:13:29.53,1:13:33.22,中文,,0,0,0,,现在这看起来很傻，但反过来是 end for。
Dialogue: 0,1:13:33.22,1:13:35.00,中文,,0,0,0,,所以在 HTML 中，使用斜杠。
Dialogue: 0,1:13:35.00,1:13:39.38,中文,,0,0,0,,在 Jinja 中，你直接使用单词 end，没有空格，然后是关键字的名称。
Dialogue: 0,1:13:39.38,1:13:41.54,中文,,0,0,0,,所以 end for 是你关闭它的方式。
Dialogue: 0,1:13:41.54,1:13:44.20,中文,,0,0,0,,但这就是模板真正酷的地方。
Dialogue: 0,1:13:44.20,1:13:46.44,中文,,0,0,0,,你现在可以做 li 了。
Dialogue: 0,1:13:46.44,1:13:50.90,中文,,0,0,0,,在这里，我可以做一些像那个学生的名字的事情。
Dialogue: 0,1:13:50.90,1:13:51.38,中文,,0,0,0,,就是这样。
Dialogue: 0,1:13:51.38,1:13:53.02,中文,,0,0,0,,我就先把它这样放着。
Dialogue: 0,1:13:53.02,1:13:58.12,中文,,0,0,0,,我在这里实际上是在使用模板，就像模板的用途一样。
Dialogue: 0,1:13:58.12,1:14:02.34,中文,,0,0,0,,我已经有了我希望输出的基本结构。
Dialogue: 0,1:14:02.34,1:14:11.85,中文,,0,0,0,,但是由于这里的小循环，由于 Jinja 语法，大括号和百分号，我要迭代每个字典，打印出姓名、姓名、姓名、姓名。
Dialogue: 0,1:14:11.85,1:14:17.55,中文,,0,0,0,,所以如果我现在有两个孩子注册了，我会看到两个 LI，分别是 David 和 Carter。
Dialogue: 0,1:14:17.55,1:14:18.39,中文,,0,0,0,,让我们看看。
Dialogue: 0,1:14:18.39,1:14:20.61,中文,,0,0,0,,让我回到。
Dialogue: 0,1:14:20.61,1:14:24.17,中文,,0,0,0,,我的新生标签页。
Dialogue: 0,1:14:24.17,1:14:25.59,中文,,0,0,0,,我还没有链接。
Dialogue: 0,1:14:25.59,1:14:28.92,中文,,0,0,0,,所以我必须像开发人员一样手动执行此操作。
Dialogue: 0,1:14:28.92,1:14:31.70,中文,,0,0,0,,让我转到 /registrants。
Dialogue: 0,1:14:31.70,1:14:34.80,中文,,0,0,0,,我会缩小并按 Enter。
Dialogue: 0,1:14:34.80,1:14:39.15,中文,,0,0,0,,你会看到，在这个领域第一次犯错时，你可能也会看到什么。
Dialogue: 0,1:14:39.15,1:14:40.95,中文,,0,0,0,,那么错误信息在哪里？
Dialogue: 0,1:14:40.95,1:14:44.41,中文,,0,0,0,,不幸的是，内部服务器错误并不是那么有用。
Dialogue: 0,1:14:44.41,1:14:46.55,中文,,0,0,0,,但我们确实告诉了你 C 终端窗口。
Dialogue: 0,1:14:46.55,1:14:50.93,中文,,0,0,0,,所以如果我去终端窗口，我已经很久没有注意到这个了。
Dialogue: 0,1:14:50.93,1:14:55.00,中文,,0,0,0,,事实上，我打开了两个终端窗口，这样我仍然可以在提示符下使用命令。
Dialogue: 0,1:14:55.00,1:15:05.59,中文,,0,0,0,,但是如果我回到我的第一个终端窗口，也就是那里的 Bash，你会在你的终端窗口中看到，在开发 Web 应用程序时，你在终端本身犯的所有错误。
Dialogue: 0,1:15:05.59,1:15:08.99,中文,,0,0,0,,这是与我在这里搞砸相关的 Python 回溯之一。
Dialogue: 0,1:15:08.99,1:15:12.87,中文,,0,0,0,,我们继续，来看一下。类型错误。
Dialogue: 0,1:15:12.87,1:15:21.47,中文,,0,0,0,,函数不可迭代。“名称为函数的块”不可迭代。
Dialogue: 0,1:15:21.47,1:15:23.75,中文,,0,0,0,,好，我犯了什么错误？
Dialogue: 0,1:15:23.75,1:15:28.08,中文,,0,0,0,,这就是我不按照笔记操作，而是临时修改代码的结果。
Dialogue: 0,1:15:28.08,1:15:31.86,中文,,0,0,0,,我在第 5 行有一个名为 registrants 的变量，全部小写。
Dialogue: 0,1:15:31.86,1:15:38.36,中文,,0,0,0,,但是我在第 22 行临时做了什么？
Dialogue: 0,1:15:38.36,1:15:40.52,中文,,0,0,0,,我定义了一个名为 registrant 的函数。
Dialogue: 0,1:15:40.52,1:15:41.82,中文,,0,0,0,,这是新手常犯的错误。
Dialogue: 0,1:15:41.82,1:15:43.04,中文,,0,0,0,,我不应该这样做。
Dialogue: 0,1:15:43.04,1:15:47.08,中文,,0,0,0,,我不能使用相同的名称来命名变量和函数，因为它们的符号完全相同。
Dialogue: 0,1:15:47.08,1:15:53.88,中文,,0,0,0,,为了明确说明上面的变量实际上是全局变量，我们将使用像 C 语言中常用的约定。
Dialogue: 0,1:15:53.88,1:15:59.89,中文,,0,0,0,,当我们有一个全局变量时，我们会将其全部大写，使其像常量值一样突出显示。
Dialogue: 0,1:15:59.89,1:16:04.19,中文,,0,0,0,,因此，在这里，我要做的是传入全部大写的 Registrants。
Dialogue: 0,1:16:04.19,1:16:05.25,中文,,0,0,0,,我那样做很愚蠢。
Dialogue: 0,1:16:05.25,1:16:06.55,中文,,0,0,0,,我并不是故意要混淆。
Dialogue: 0,1:16:06.55,1:16:11.38,中文,,0,0,0,,但需要明确的是，之所以会出现这个错误，是因为函数不能与变量同名。
Dialogue: 0,1:16:11.38,1:16:13.00,中文,,0,0,0,,我可以直接更改变量名。
Dialogue: 0,1:16:13.00,1:16:18.34,中文,,0,0,0,,我打算把它全部大写，以便清楚地表明它实际上是一个全局变量。
Dialogue: 0,1:16:18.34,1:16:21.11,中文,,0,0,0,,好了，现在我回到浏览器。
Dialogue: 0,1:16:21.11,1:16:26.70,中文,,0,0,0,,我们输入 David 和 soccer。
Dialogue: 0,1:16:26.70,1:16:29.10,中文,,0,0,0,,不过这里还有一些其他的错误。
Dialogue: 0,1:16:29.10,1:16:40.27,中文,,0,0,0,,在第 17 行，我要把这个变量改成大写，因为我确实想把键和值都放在这个新命名的大写变量 REGISTRANTS 中。
Dialogue: 0,1:16:40.27,1:16:42.29,中文,,0,0,0,,让我回到 VS Code。
Dialogue: 0,1:16:42.29,1:16:45.97,中文,,0,0,0,,回到表单，重新添加一些数据。
Dialogue: 0,1:16:45.97,1:16:48.73,中文,,0,0,0,,我帮 David 注册足球。
Dialogue: 0,1:16:48.73,1:16:51.51,中文,,0,0,0,,点击“立即注册”，应该就能看到注册成功的消息。
Dialogue: 0,1:16:51.51,1:16:54.37,中文,,0,0,0,,但愿现在数据已经保存到计算机内存中了。
Dialogue: 0,1:16:54.37,1:17:00.20,中文,,0,0,0,,我再帮 Carter 注册篮球，再次点击注册。
Dialogue: 0,1:17:00.20,1:17:01.90,中文,,0,0,0,,希望也注册成功了。
Dialogue: 0,1:17:01.90,1:17:10.25,中文,,0,0,0,,如果我现在手动将路由更改为 /registrants，这是我新添加的路由，然后按回车键，就能看到。
Dialogue: 0,1:17:10.25,1:17:10.83,中文,,0,0,0,,谢天谢地。
Dialogue: 0,1:17:10.83,1:17:11.93,中文,,0,0,0,,现在看到了。
Dialogue: 0,1:17:11.93,1:17:15.69,中文,,0,0,0,,包含计算机内存中所有内容的无序列表。
Dialogue: 0,1:17:15.69,1:17:20.33,中文,,0,0,0,,所以我说注册成功是有道理的，因为服务器还在运行。
Dialogue: 0,1:17:20.33,1:17:26.49,中文,,0,0,0,,在这个全局变量 registrants 的计算机内存中，有一个键值对字典。
Dialogue: 0,1:17:26.49,1:17:29.15,中文,,0,0,0,,当然，我们目前只看到了键。
Dialogue: 0,1:17:29.15,1:17:32.83,中文,,0,0,0,,如果也能看到值就好了。
Dialogue: 0,1:17:32.83,1:17:35.85,中文,,0,0,0,,让我们回到 VS Code。
Dialogue: 0,1:17:35.85,1:17:38.78,中文,,0,0,0,,进入 registrants.html。
Dialogue: 0,1:17:38.78,1:17:40.32,中文,,0,0,0,,我要做一些比较粗糙的处理。
Dialogue: 0,1:17:40.32,1:17:51.81,中文,,0,0,0,,我接下来要说的，为了凑成一句话，就是 is registered，后面跟上一个占位符，registrants 中括号，再跟上 name。
Dialogue: 0,1:17:51.81,1:18:02.68,中文,,0,0,0,,就像 Python 中那样，如果 registrants 本身就是一个字典，那么 registrants 中括号，然后在里面加上你想访问的键，这也是完全有效的语法。
Dialogue: 0,1:18:02.68,1:18:06.00,中文,,0,0,0,,现在让我回到 /registrants 页面。
Dialogue: 0,1:18:06.00,1:18:08.14,中文,,0,0,0,,我再点击一次重新加载。
Dialogue: 0,1:18:08.14,1:18:09.92,中文,,0,0,0,,为什么还是不行呢？
Dialogue: 0,1:18:09.92,1:18:12.68,中文,,0,0,0,,我之前引入的错误是什么？
Dialogue: 0,1:18:12.68,1:18:19.25,中文,,0,0,0,,David 注册了 none，Carter 也注册了 none，但 David 和 Carter 都在字典中，这说明数据没问题。
Dialogue: 0,1:18:19.25,1:18:21.23,中文,,0,0,0,,所以部分数据是存在的。
Dialogue: 0,1:18:21.23,1:18:23.89,中文,,0,0,0,,那为什么没有显示运动项目呢？
Dialogue: 0,1:18:23.89,1:18:31.39,中文,,0,0,0,,我刚才当着大家的面做的第一件事就是打开 app.py，盯着第 17 行，心想我到底是怎么搞砸的？
Dialogue: 0,1:18:31.39,1:18:35.66,中文,,0,0,0,,我把 sport 作为键的值，而键是学生的名字。
Dialogue: 0,1:18:35.66,1:18:38.14,中文,,0,0,0,,几秒钟前，第 17 行在我看来还很正常。
Dialogue: 0,1:18:38.14,1:18:40.76,中文,,0,0,0,,然后我又看了看第 16 行。
Dialogue: 0,1:18:40.76,1:18:41.96,中文,,0,0,0,,看起来也没问题。
Dialogue: 0,1:18:41.96,1:18:46.90,中文,,0,0,0,,我第一个想法是，我是不是把 request.form 写成了 request.args？
Dialogue: 0,1:18:46.90,1:18:49.23,中文,,0,0,0,,因为那样的话就会认为是 GET 请求而不是 POST 请求。
Dialogue: 0,1:18:49.23,1:18:51.49,中文,,0,0,0,,但看起来也没错。
Dialogue: 0,1:18:51.49,1:18:55.61,中文,,0,0,0,,所以最后我只能想到，是不是 HTML 表单写错了？
Dialogue: 0,1:18:55.61,1:18:58.29,中文,,0,0,0,,所以我又回到了这个标签页。
Dialogue: 0,1:18:58.29,1:19:01.36,中文,,0,0,0,,回到了最初的表单这里。
Dialogue: 0,1:19:01.36,1:19:03.56,中文,,0,0,0,,然后我查看页面源代码。
Dialogue: 0,1:19:03.56,1:19:07.86,中文,,0,0,0,,如果你之前没见过 Select 菜单，这对你来说可能不那么明显。
Dialogue: 0,1:19:07.86,1:19:15.19,中文,,0,0,0,,这里明显缺少什么可以解释我的错误？
Dialogue: 0,1:19:15.19,1:19:19.01,中文,,0,0,0,,是的，我没有给这个表单字段命名为 sport。
Dialogue: 0,1:19:19.01,1:19:23.47,中文,,0,0,0,,公平地说，你之前没见过我把它做成 Select 菜单，它和这个 input 不同。
Dialogue: 0,1:19:23.47,1:19:28.54,中文,,0,0,0,,当你使用 input 标签时，你需要在标签上写上 name 等于某个值。
Dialogue: 0,1:19:28.54,1:19:31.84,中文,,0,0,0,,事实证明，我不知道为什么我之前跳过了这一步，我可能本来想回头再说的。
Dialogue: 0,1:19:31.84,1:19:34.96,中文,,0,0,0,,Select 标签也可以接受 name 参数。
Dialogue: 0,1:19:34.96,1:19:40.46,中文,,0,0,0,,如果我回到 name 参数， 在这里，回去添加 name 参数。
Dialogue: 0,1:19:40.46,1:19:44.13,中文,,0,0,0,,让我进入那个模板，也就是 index.html。
Dialogue: 0,1:19:44.13,1:19:55.59,中文,,0,0,0,,让我添加 name=sport，全部小写，这与这个临时的禁用选项的视觉效果不同，它只是为了让人看起来更漂亮。
Dialogue: 0,1:19:55.59,1:19:58.05,中文,,0,0,0,,现在，让我继续。
Dialogue: 0,1:19:58.05,1:20:01.79,中文,,0,0,0,,首先，我要进入我的终端窗口。
Dialogue: 0,1:20:01.79,1:20:11.00,中文,,0,0,0,,我将按 Ctrl-C 键完全停止服务器，因为我想丢弃内存中的内容，从而摆脱那个包含 David、Carter 和那些空值的字典。
Dialogue: 0,1:20:11.00,1:20:13.70,中文,,0,0,0,,这有点像我在清理电脑内存。
Dialogue: 0,1:20:13.70,1:20:16.22,中文,,0,0,0,,我要重新运行 Flask run。
Dialogue: 0,1:20:16.22,1:20:17.95,中文,,0,0,0,,我得到了和之前一样的 URL。
Dialogue: 0,1:20:17.95,1:20:20.23,中文,,0,0,0,,所以我要把鼠标悬停在上面，打开新标签页。
Dialogue: 0,1:20:20.23,1:20:22.91,中文,,0,0,0,,为了保险起见，我要查看页面源代码。
Dialogue: 0,1:20:22.91,1:20:28.33,中文,,0,0,0,,这里我看到了，现在这个表单既有名字又有运动项目了。
Dialogue: 0,1:20:28.33,1:20:32.69,中文,,0,0,0,,现在我真的要祈祷了，因为我打算让它现在就起作用。
Dialogue: 0,1:20:32.69,1:20:35.27,中文,,0,0,0,,David 将再次注册足球。
Dialogue: 0,1:20:35.27,1:20:36.31,中文,,0,0,0,,注册。
Dialogue: 0,1:20:36.31,1:20:37.37,中文,,0,0,0,,声称我们已注册。
Dialogue: 0,1:20:37.37,1:20:41.02,中文,,0,0,0,,我要回去再为 Carter 注册篮球。
Dialogue: 0,1:20:41.02,1:20:42.00,中文,,0,0,0,,注册。
Dialogue: 0,1:20:42.00,1:20:51.90,中文,,0,0,0,,我们仍然没有链接，所以我打算像之前那样手动转到 URL 并将 /register 更改为 /registrants，缩小，然后按回车键。
Dialogue: 0,1:20:51.90,1:20:55.70,中文,,0,0,0,,谢天谢地，现在我真的注册成功了。
Dialogue: 0,1:20:55.70,1:21:01.28,中文,,0,0,0,,所以谢谢你。
Dialogue: 0,1:21:01.28,1:21:04.28,中文,,0,0,0,,过了大约 20 年，我还在为实现这个网站而苦苦挣扎？
Dialogue: 0,1:21:04.28,1:21:11.28,中文,,0,0,0,,所以现在我们第一次在 Python 和 Web 开发中，有了一个合适的 Web 应用程序。
Dialogue: 0,1:21:11.28,1:21:13.94,中文,,0,0,0,,它不只是回显“hello，David”，“hello，Carter”。
Dialogue: 0,1:21:13.94,1:21:15.66,中文,,0,0,0,,这现在适用于你们中的任何一个人。
Dialogue: 0,1:21:15.66,1:21:17.18,中文,,0,0,0,,它目前是私有的。
Dialogue: 0,1:21:17.18,1:21:22.33,中文,,0,0,0,,但如果我将此 URL 公开，我现在就可以将它放到网上，让世界上任何人都可以注册。
Dialogue: 0,1:21:22.33,1:21:24.99,中文,,0,0,0,,但这有一些问题。
Dialogue: 0,1:21:24.99,1:21:27.71,中文,,0,0,0,,可能存在一些安全漏洞。
Dialogue: 0,1:21:27.71,1:21:30.81,中文,,0,0,0,,例如，让我回到 Web 表单这里。
Dialogue: 0,1:21:30.81,1:21:43.50,中文,,0,0,0,,让我打开“检查”选项卡，“开发者工具”，提醒你，互联网上的任何人，\N不仅是你，开发者，还有攻击者，都可以看到你所有的 HTML、CSS 和 JavaScript 代码。
Dialogue: 0,1:21:43.50,1:21:52.22,中文,,0,0,0,,更重要的是，因为这一切都发生在浏览器的客户端，所以从技术上讲，没有什么能阻止他们更改 HTML，
Dialogue: 0,1:21:52.22,1:21:56.21,中文,,0,0,0,,或者至少是他们自己的副本。上周我就对耶鲁大学的网站做了这件事，我更改了他们的网站。
Dialogue: 0,1:21:56.21,1:21:58.45,中文,,0,0,0,,不，我更改的是我浏览器中他们网站的副本。
Dialogue: 0,1:21:58.45,1:22:02.63,中文,,0,0,0,,但是，当涉及到表单时，你可能真的会怀有恶意。
Dialogue: 0,1:22:02.63,1:22:17.64,中文,,0,0,0,,因为即使这个下拉菜单里只有篮球、足球和极限飞盘，假设我真的想注册，比如说，你最喜欢的运动。
Dialogue: 0,1:22:17.64,1:22:22.80,中文,,0,0,0,,排球，我们真的想注册排球，但是这个网站不允许我这样做。
Dialogue: 0,1:22:22.80,1:22:29.15,中文,,0,0,0,,那么，没有什么能阻止我进入浏览器中的“元素”选项卡，进入这个“选择”菜单。
Dialogue: 0,1:22:29.15,1:22:31.07,中文,,0,0,0,,然后呢？
Dialogue: 0,1:22:31.07,1:22:34.05,中文,,0,0,0,,极限飞盘，我们把它改成排球。
Dialogue: 0,1:22:34.05,1:22:37.69,中文,,0,0,0,,然后我们把这个也改成排球，回车。
Dialogue: 0,1:22:37.69,1:22:40.37,中文,,0,0,0,,我现在要关闭检查器了。
Dialogue: 0,1:22:40.37,1:22:45.34,中文,,0,0,0,,根据要求，现在我们的表单支持排球了。
Dialogue: 0,1:22:45.34,1:22:47.48,中文,,0,0,0,,公平地说，服务器上的数据并没有改变。
Dialogue: 0,1:22:47.48,1:22:49.44,中文,,0,0,0,,但是想想 HTTP 是如何工作的。
Dialogue: 0,1:22:49.44,1:22:56.09,中文,,0,0,0,,当我填写这个表单时，比如说，Bernie 的名字，Bernie 也非常想注册排球。
Dialogue: 0,1:22:56.09,1:23:00.55,中文,,0,0,0,,目前，我的代码只会相信 request.form 中的内容
Dialogue: 0,1:23:00.55,1:23:07.37,中文,,0,0,0,,就是原始表单中的内容，而不管用户是否真的恶意地更改了它。
Dialogue: 0,1:23:07.37,1:23:22.52,中文,,0,0,0,,如果我真的提交这个表单，点击“注册 Bernie 和排球”，即使这不是支持的可用运动之一，\N如果我现在去看注册人员，我的网站仍然会相信 Bernie，也许还有你，已经注册了排球。
Dialogue: 0,1:23:22.52,1:23:23.90,中文,,0,0,0,,这意味着什么呢？
Dialogue: 0,1:23:23.90,1:23:28.63,中文,,0,0,0,,在过去，当网站的实现非常糟糕时，这种情况肯定发生过，
Dialogue: 0,1:23:28.63,1:23:33.03,中文,,0,0,0,,例如，允许你在购物车中指定商品的价格。
Dialogue: 0,1:23:33.03,1:23:39.19,中文,,0,0,0,,当你点击“提交”或“添加到购物车”时，它会信任你，并将价格添加到后端服务器。
Dialogue: 0,1:23:39.19,1:23:48.83,中文,,0,0,0,,如果你没有验证价格，并像使用数据库一样确保价格有效，或者运动项目有效，谁知道人们会对你的网站做什么呢？
Dialogue: 0,1:23:48.83,1:23:53.13,中文,,0,0,0,,实际上，入侵一个网站就是这么简单。
Dialogue: 0,1:23:53.13,1:23:57.81,中文,,0,0,0,,现在，我们可以用第六周学习的一些 Python 知识轻松地解决这个问题。
Dialogue: 0,1:23:57.81,1:23:59.98,中文,,0,0,0,,我们只需要做一点逻辑。
Dialogue: 0,1:23:59.98,1:24:01.44,中文,,0,0,0,,我来提出一个建议。
Dialogue: 0,1:24:01.44,1:24:03.72,中文,,0,0,0,,让我进入 app.py 文件。
Dialogue: 0,1:24:03.72,1:24:11.00,中文,,0,0,0,,在最顶部，让我创建一个名为 SPORTS 的全局变量，全部大写。
Dialogue: 0,1:24:11.00,1:24:16.06,中文,,0,0,0,,我将把它设置为一个方括号，里面是我实际想要支持的运动项目列表。
Dialogue: 0,1:24:16.06,1:24:18.04,中文,,0,0,0,,我要把篮球放进去。
Dialogue: 0,1:24:18.04,1:24:19.70,中文,,0,0,0,,我要把足球放进去。
Dialogue: 0,1:24:19.70,1:24:21.68,中文,,0,0,0,,很抱歉，官方不支持排球。
Dialogue: 0,1:24:21.68,1:24:23.16,中文,,0,0,0,,我要把橄榄球放进去。
Dialogue: 0,1:24:23.16,1:24:24.02,中文,,0,0,0,,还有飞盘。
Dialogue: 0,1:24:24.02,1:24:27.01,中文,,0,0,0,,这样我就有了一个支持的运动项目全局列表。
Dialogue: 0,1:24:27.01,1:24:29.73,中文,,0,0,0,,现在想想我之前是怎么制作这个表单的。
Dialogue: 0,1:24:29.73,1:24:31.61,中文,,0,0,0,,我只是在这里硬编码了这些运动。
Dialogue: 0,1:24:31.61,1:24:33.09,中文,,0,0,0,,其实我不必那样做。
Dialogue: 0,1:24:33.09,1:24:37.15,中文,,0,0,0,,我可以利用我自己官方的运动项目列表。
Dialogue: 0,1:24:37.15,1:24:41.93,中文,,0,0,0,,让我向下滚动到我的 index.html 渲染模板。
Dialogue: 0,1:24:41.93,1:24:44.54,中文,,0,0,0,,我想说我想要支持的运动是这些。
Dialogue: 0,1:24:44.54,1:24:51.44,中文,,0,0,0,,所以还是使用和之前一样的占位符技巧，但我现在告诉模板我们当前支持哪些运动。
Dialogue: 0,1:24:51.44,1:24:56.39,中文,,0,0,0,,现在，如果我回到 index.html，我不必手动做任何这些。
Dialogue: 0,1:24:56.39,1:25:00.73,中文,,0,0,0,,让我去掉所有这三个选项，这些是我之前手动输入的。
Dialogue: 0,1:25:00.73,1:25:06.56,中文,,0,0,0,,让我用 Jinja 语法使用我的新技巧，说 for sport in sports。
Dialogue: 0,1:25:06.56,1:25:09.58,中文,,0,0,0,,让我先发制人地说 end for，来完成这个想法。
Dialogue: 0,1:25:09.58,1:25:15.44,中文,,0,0,0,,然后在这里，让我输入 option，value 等于，在大括号中，sports。
Dialogue: 0,1:25:15.44,1:25:19.74,中文,,0,0,0,,为了让人也能看到相同的词语，我要在这里写上 sport。
Dialogue: 0,1:25:19.74,1:25:25.99,中文,,0,0,0,,所以我完全改变了之前硬编码、手动输入的内容，变成了现在完全动态的内容。
Dialogue: 0,1:25:25.99,1:25:30.07,中文,,0,0,0,,所以现在它不会阻止像我这样有敌意的人改变 HTML 了。
Dialogue: 0,1:25:30.07,1:25:33.99,中文,,0,0,0,,但是看看这个。如果我们回去看，表单上的行为，
Dialogue: 0,1:25:33.99,1:25:37.20,中文,,0,0,0,,现在仍然和之前的下拉菜单一样。
Dialogue: 0,1:25:37.20,1:25:40.94,中文,,0,0,0,,所以从美学上来说，它看起来是一样的。但是，我们为什么现在不聪明一点呢？
Dialogue: 0,1:25:40.94,1:25:44.46,中文,,0,0,0,,让我们进入 app.py 和 /register 路由。
Dialogue: 0,1:25:44.46,1:25:46.69,中文,,0,0,0,,我们为什么不说这样说呢？
Dialogue: 0,1:25:46.69,1:25:57.47,中文,,0,0,0,,如果，sport 不在 sports 中，那么让我们返回渲染 failure.html 模板。
Dialogue: 0,1:25:57.47,1:25:59.10,中文,,0,0,0,,现在，这个模板还不存在。
Dialogue: 0,1:25:59.10,1:26:01.00,中文,,0,0,0,,所以让我快速地把它创建出来。
Dialogue: 0,1:26:01.00,1:26:03.26,中文,,0,0,0,,我要复制之前的代码。
Dialogue: 0,1:26:03.26,1:26:08.51,中文,,0,0,0,,我来创建一个代码文件，叫做 failure.html。
Dialogue: 0,1:26:08.51,1:26:11.37,中文,,0,0,0,,我把这段代码粘贴到这里。这里有一条超级简单的错误信息。
Dialogue: 0,1:26:11.37,1:26:13.41,中文,,0,0,0,,它会显示：您尚未注册。
Dialogue: 0,1:26:13.41,1:26:15.89,中文,,0,0,0,,这就是我们所说的失败。
Dialogue: 0,1:26:15.89,1:26:19.10,中文,,0,0,0,,现在在 app.py 中，看一下我添加了什么逻辑。
Dialogue: 0,1:26:19.10,1:26:29.33,中文,,0,0,0,,第 22 行的全大写 Sports，和之前一样是一个全局列表，它会用 Python 的语法询问，如果 sport 不在 sports 中，那就说明你黑进我的系统了。
Dialogue: 0,1:26:29.33,1:26:34.55,中文,,0,0,0,,比如，你试图在 request.form 中注入 volleyball 或其他运动。
Dialogue: 0,1:26:34.55,1:26:38.18,中文,,0,0,0,,因此，程序会显示：不行，失败，不允许你注册。
Dialogue: 0,1:26:38.18,1:26:40.98,中文,,0,0,0,,我还可以做更多。
Dialogue: 0,1:26:40.98,1:26:43.94,中文,,0,0,0,,更详细一点，为什么不加上这个呢？
Dialogue: 0,1:26:43.94,1:26:51.20,中文,,0,0,0,,如果不是 name，也就是如果 name 为空，同样返回渲染 failure.html 模板。
Dialogue: 0,1:26:51.20,1:26:55.72,中文,,0,0,0,,换句话说，如果你没有输入姓名，把它留空，那对我运行这个运动程序没有用。
Dialogue: 0,1:26:55.72,1:26:58.01,中文,,0,0,0,,我们也将其视为失败。
Dialogue: 0,1:26:58.01,1:27:02.97,中文,,0,0,0,,现在回到这个标签页，刷新一下，确保用的是最新的客户端。
Dialogue: 0,1:27:02.97,1:27:06.21,中文,,0,0,0,,偷个懒，直接点击注册。回车。
Dialogue: 0,1:27:06.21,1:27:09.01,中文,,0,0,0,,程序显示：您尚未注册，因为我没有输入实际姓名。
Dialogue: 0,1:27:09.01,1:27:10.37,中文,,0,0,0,,好吧，我们回去。
Dialogue: 0,1:27:10.37,1:27:13.53,中文,,0,0,0,,这次我输入 David，但不选择运动。
Dialogue: 0,1:27:13.53,1:27:15.64,中文,,0,0,0,,我只想注册。
Dialogue: 0,1:27:15.64,1:27:17.64,中文,,0,0,0,,不行，这次也不行。
Dialogue: 0,1:27:17.64,1:27:20.34,中文,,0,0,0,,我选足球。
Dialogue: 0,1:27:20.34,1:27:21.84,中文,,0,0,0,,这个，我觉得。
Dialogue: 0,1:27:21.84,1:27:22.94,中文,,0,0,0,,能用。
Dialogue: 0,1:27:22.94,1:27:28.93,中文,,0,0,0,,现在我试试这个黑客技巧，就是进入下拉菜单。
Dialogue: 0,1:27:28.93,1:27:31.23,中文,,0,0,0,,进入 Select 菜单。
Dialogue: 0,1:27:31.23,1:27:34.85,中文,,0,0,0,,和之前一样，我把 Ultimate Frisbee 改成 Volleyball。
Dialogue: 0,1:27:34.85,1:27:38.20,中文,,0,0,0,,我把这个也改成 Volleyball。
Dialogue: 0,1:27:38.20,1:27:40.28,中文,,0,0,0,,现在关闭标签页。
Dialogue: 0,1:27:40.28,1:27:42.68,中文,,0,0,0,,这看起来像是可以用了。
Dialogue: 0,1:27:42.68,1:27:47.11,中文,,0,0,0,,但是这次当我点击 Register 时，它显示你还没有注册。
Dialogue: 0,1:27:47.11,1:27:54.65,中文,,0,0,0,,这比你在网上看到或曾经见过的其他 HTML 技巧要好得多，因为还有这样一个技巧。
Dialogue: 0,1:27:54.65,1:27:56.41,中文,,0,0,0,,回到这个界面。
Dialogue: 0,1:27:56.41,1:27:58.57,中文,,0,0,0,,回到 index.html。
Dialogue: 0,1:27:58.57,1:28:03.71,中文,,0,0,0,,你可能在网上看到过，或者以后会看到，还有其他的属性可以使用，比如 required。
Dialogue: 0,1:28:03.71,1:28:06.69,中文,,0,0,0,,你可以直接告诉浏览器，这个字段是必填的。
Dialogue: 0,1:28:06.69,1:28:08.23,中文,,0,0,0,,你不能留空。
Dialogue: 0,1:28:08.23,1:28:16.52,中文,,0,0,0,,如果我现在回到浏览器，重新加载，并且像之前一样偷懒，不输入任何名字就点击 Register，好吧，这还挺好。
Dialogue: 0,1:28:16.52,1:28:20.96,中文,,0,0,0,,现在浏览器更有帮助了，它提示说，不行，不行。
Dialogue: 0,1:28:20.96,1:28:21.81,中文,,0,0,0,,这是必填项。
Dialogue: 0,1:28:21.81,1:28:23.29,中文,,0,0,0,,你必须填一下。
Dialogue: 0,1:28:23.29,1:28:28.09,中文,,0,0,0,,如果你知道自己在做什么，你就会明白，我不同意你要求我提供姓名。
Dialogue: 0,1:28:28.09,1:28:29.55,中文,,0,0,0,,让我来这里。
Dialogue: 0,1:28:29.55,1:28:31.37,中文,,0,0,0,,让我看看这个标签。
Dialogue: 0,1:28:31.37,1:28:35.52,中文,,0,0,0,,让我删除 required 属性，现在
Dialogue: 0,1:28:35.52,1:28:38.58,中文,,0,0,0,,我成功绕过了，但没有绕过服务器。
Dialogue: 0,1:28:38.58,1:28:40.68,中文,,0,0,0,,这里有个区别，一个重要的区别。
Dialogue: 0,1:28:40.68,1:28:43.36,中文,,0,0,0,,现实生活中很多人仍然会犯这个错误。
Dialogue: 0,1:28:43.36,1:28:49.10,中文,,0,0,0,,有客户端验证，比如在客户端（浏览器）上实际检查数据是否符合预期。
Dialogue: 0,1:28:49.10,1:28:50.75,中文,,0,0,0,,还有服务器端验证。
Dialogue: 0,1:28:50.75,1:28:55.51,中文,,0,0,0,,尽管客户端验证（例如添加 required 属性）使事情更加用户友好。
Dialogue: 0,1:28:55.51,1:28:57.89,中文,,0,0,0,,弹出的窗口很漂亮，它告诉我这是必填项。
Dialogue: 0,1:28:57.89,1:29:00.39,中文,,0,0,0,,它看起来比之前的版本好多了。
Dialogue: 0,1:29:00.39,1:29:01.93,中文,,0,0,0,,但不值得信任。
Dialogue: 0,1:29:01.93,1:29:11.68,中文,,0,0,0,,你永远不能相信来自用户的任何输入，因为很明显，只需学习一小时左右的 CS50，他们就能学会如何关闭所有这些防御措施。
Dialogue: 0,1:29:11.68,1:29:18.82,中文,,0,0,0,,所以即使你喜欢客户端的用户界面，你也必须，必须，必须始终进行服务器端验证。
Dialogue: 0,1:29:18.82,1:29:20.20,中文,,0,0,0,,用户是不可信的。
Dialogue: 0,1:29:20.20,1:29:23.27,中文,,0,0,0,,一旦你开发的任何应用程序或网站变得流行起来，
Dialogue: 0,1:29:23.27,1:29:27.64,中文,,0,0,0,,不幸的是，你就必须处理所有可能的攻击。
Dialogue: 0,1:29:34.52,1:29:35.10,中文,,0,0,0,,问得好。
Dialogue: 0,1:29:35.10,1:29:39.12,中文,,0,0,0,,攻击者有可能访问敏感信息吗，比如 app.py？
Dialogue: 0,1:29:39.12,1:29:40.50,中文,,0,0,0,,理论上不会。
Dialogue: 0,1:29:40.50,1:29:43.15,中文,,0,0,0,,如果 Flask 本身有漏洞，那当然有可能。
Dialogue: 0,1:29:43.15,1:29:47.87,中文,,0,0,0,,如果你在服务器或笔记本电脑上运行其他软件，那么有可能。
Dialogue: 0,1:29:47.87,1:29:52.79,中文,,0,0,0,,但是，如果你的服务器配置正确，理论上他们应该无法访问。
Dialogue: 0,1:29:52.79,1:30:02.14,中文,,0,0,0,,也就是说，我们很快就会看到，或者你在做网络相关的期末项目时会发现，你永远不会想把用户名和密码直接写在代码里。
Dialogue: 0,1:30:02.14,1:30:04.31,中文,,0,0,0,,你可以把它们放在环境变量中。
Dialogue: 0,1:30:04.31,1:30:09.21,中文,,0,0,0,,可以理解为存储在计算机内存中，而不是代码中，以防你或其他人搞砸了。
Dialogue: 0,1:30:09.21,1:30:14.74,中文,,0,0,0,,仍然有一些方法可以防御这类可能性，即使可能性很小。
Dialogue: 0,1:30:14.74,1:30:15.88,中文,,0,0,0,,对吧？
Dialogue: 0,1:30:22.44,1:30:26.08,中文,,0,0,0,,问得好，这又回到了 C 语言和 Python 中的第一性原理。
Dialogue: 0,1:30:26.08,1:30:29.18,中文,,0,0,0,,一旦你从函数返回，就结束了。
Dialogue: 0,1:30:29.18,1:30:31.70,中文,,0,0,0,,该行代码之后的任何内容都不会执行。
Dialogue: 0,1:30:31.70,1:30:41.96,中文,,0,0,0,,总结一下这个问题，即使我返回了这个 failure.html 模板，我怎么能确保我们仍然不会意外地把 volleyball 放到那个全局字典里？
Dialogue: 0,1:30:41.96,1:30:48.28,中文,,0,0,0,,因为，例如，如果你现在没有在第 22 行给我一个名字，我就会返回 failure 模板，仅此而已。
Dialogue: 0,1:30:48.28,1:30:51.94,中文,,0,0,0,,第 23、24、25、26、27 行永远不会执行。
Dialogue: 0,1:30:51.94,1:30:54.46,中文,,0,0,0,,特别是第 26 行永远不会执行。
Dialogue: 0,1:30:54.46,1:30:56.89,中文,,0,0,0,,而那正是我要保存名字的地方。
Dialogue: 0,1:30:56.89,1:31:07.49,中文,,0,0,0,,类似地，如果我们得到一个无效的运动项目，它要么是空白的，要么不在最初的权威列表中，我们会在第 25 行返回 failure.html 作为模板。
Dialogue: 0,1:31:07.49,1:31:09.53,中文,,0,0,0,,我们永远不会执行到第 26 行。
Dialogue: 0,1:31:09.53,1:31:13.39,中文,,0,0,0,,所以这可以归结为 return 以及它在 Python 2 中的含义。
Dialogue: 0,1:31:13.39,1:31:15.02,中文,,0,0,0,,问得好。
Dialogue: 0,1:31:15.02,1:31:18.45,中文,,0,0,0,,还有其他问题吗？
Dialogue: 0,1:31:18.45,1:31:23.27,中文,,0,0,0,,那我们再做一次改进怎么样？
Dialogue: 0,1:31:23.27,1:31:30.06,中文,,0,0,0,,因为把所有东西都存储在这个全局字典里的问题是什么？
Dialogue: 0,1:31:30.06,1:31:32.22,中文,,0,0,0,,我们终于把它全部搞定了。
Dialogue: 0,1:31:32.22,1:31:39.88,中文,,0,0,0,,但是为什么全局字典可能不是存储新生 IM 注册数据的地方呢？
Dialogue: 0,1:31:39.88,1:31:43.69,中文,,0,0,0,,这意味着什么？
Dialogue: 0,1:31:43.69,1:31:46.72,中文,,0,0,0,,它可能会拖慢整个过程，但 RAM 实际上是好的。
Dialogue: 0,1:31:46.72,1:31:48.62,中文,,0,0,0,,内存通常是件好事。
Dialogue: 0,1:31:48.62,1:31:51.26,中文,,0,0,0,,所以这不会成为一个障碍。
Dialogue: 0,1:31:51.26,1:31:57.09,中文,,0,0,0,,但是，为什么我不想把数据存储在那个变量里呢？
Dialogue: 0,1:31:57.09,1:32:04.52,中文,,0,0,0,,你也许可以推断出我之前是怎么修复一些东西的。对，后面那位。
Dialogue: 0,1:32:04.52,1:32:10.36,中文,,0,0,0,,是的，一旦 Flask 停止运行，内存就会被删除，被垃圾回收。
Dialogue: 0,1:32:10.36,1:32:17.55,中文,,0,0,0,,如果你按下了 Control-C，你就会失去所有注册这项运动的新生，这可能不是什么好事。
Dialogue: 0,1:32:17.55,1:32:22.65,中文,,0,0,0,,我刚才故意这样做的，我按了 Control-C，因为我想清除字典。
Dialogue: 0,1:32:22.65,1:32:31.64,中文,,0,0,0,,但是，相信你的服务器永远不会崩溃，你的代码永远有效，电源永远不会断，这不是构建任何具有持久数据的 Web 应用程序的正确方法。
Dialogue: 0,1:32:31.64,1:32:34.03,中文,,0,0,0,,所以我们可能要重新引入 CSV。
Dialogue: 0,1:32:34.03,1:32:36.21,中文,,0,0,0,,我们已经在 C 和 Python 中使用过它们了。
Dialogue: 0,1:32:36.21,1:32:37.57,中文,,0,0,0,,完全可以使用 CSV。
Dialogue: 0,1:32:37.57,1:32:41.11,中文,,0,0,0,,但我们现在也可以使用 SQL 了。
Dialogue: 0,1:32:41.11,1:32:43.89,中文,,0,0,0,,我们用 SQL 来实现它吧。
Dialogue: 0,1:32:43.89,1:32:47.94,中文,,0,0,0,,为此，我先打开一个预先写好的程序版本。
Dialogue: 0,1:32:47.94,1:32:54.32,中文,,0,0,0,,我先关闭这些模板，它们看起来非常相似，但与我预先写好的略有不同。
Dialogue: 0,1:32:54.32,1:32:57.02,中文,,0,0,0,,我先打开。
Dialogue: 0,1:32:57.02,1:32:59.40,中文,,0,0,0,,在今天的课程中，我们进入 src9。
Dialogue: 0,1:32:59.40,1:33:05.95,中文,,0,0,0,,我们进入 Frosh IM's，就用版本 4 吧，严格来说，是在线版本。
Dialogue: 0,1:33:05.95,1:33:08.95,中文,,0,0,0,,然后打开 app.py 文件。
Dialogue: 0,1:33:08.95,1:33:12.43,中文,,0,0,0,,这是一个已经完成的版本，只是做了一些不同的处理。
Dialogue: 0,1:33:12.43,1:33:20.06,中文,,0,0,0,,在最上面，我导入了 CS50 的 SQL 库，你可能还记得我们在几周前用过它，它可以编写与 SQL 数据库交互的 Python 代码。
Dialogue: 0,1:33:20.06,1:33:22.82,中文,,0,0,0,,现在似乎是回顾这个概念的好时机。
Dialogue: 0,1:33:22.82,1:33:30.36,中文,,0,0,0,,在第 8 行，我创建了一个 db 变量，它使用我们之前见过的语法打开了一个名为 froshims.db 的文件。
Dialogue: 0,1:33:30.36,1:33:37.77,中文,,0,0,0,,我在上课前预先创建了这个 froshims.db 文件，以便我们有一些列来存储姓名、运动项目等信息。
Dialogue: 0,1:33:37.77,1:33:41.29,中文,,0,0,0,,这里有相同的全局数组，一个名为 sports 的全局列表。
Dialogue: 0,1:33:41.29,1:33:44.61,中文,,0,0,0,,让我们看看下面发生了什么。
Dialogue: 0,1:33:44.61,1:33:50.07,中文,,0,0,0,,如果我向下滚动到 index，这和我们之前一起写的代码一样。
Dialogue: 0,1:33:50.07,1:33:53.20,中文,,0,0,0,,我们先跳过 deregister，进入 register。
Dialogue: 0,1:33:53.20,1:33:56.10,中文,,0,0,0,,这个函数有点不同，让我们看看我做了什么。
Dialogue: 0,1:33:56.10,1:33:58.30,中文,,0,0,0,,我在里面添加了一些注释，因为我是提前写好的。
Dialogue: 0,1:33:58.30,1:34:01.20,中文,,0,0,0,,我认为这个逻辑几乎是一样的，尽管我把它精简了一些。
Dialogue: 0,1:34:01.20,1:34:10.73,中文,,0,0,0,,我在第 38 行使用 or 关键字同时问了两个问题，也就是说，如果没有名字或者运动项目不在 sports 列表中，我们就认为它是一个错误。
Dialogue: 0,1:34:10.73,1:34:18.26,中文,,0,0,0,,但现在有趣的是，在第 42 行， 我正在使用 CS50 SQL 库来执行一些实际的 SQL 代码。
Dialogue: 0,1:34:18.26,1:34:23.80,中文,,0,0,0,,我要向一个名为 registrants 的表中插入两列：name 和 sport。
Dialogue: 0,1:34:23.80,1:34:25.04,中文,,0,0,0,,名字和运动是什么？
Dialogue: 0,1:34:25.04,1:34:28.88,中文,,0,0,0,,这两个值带有占位符，分别插入 name 和 sport。
Dialogue: 0,1:34:28.88,1:34:30.31,中文,,0,0,0,,注意，我使用了问号。
Dialogue: 0,1:34:30.31,1:34:40.93,中文,,0,0,0,,这绝对必要，这样我们就不会受到 SQL 注入攻击，\N因为如果有人在表单中输入了一些危险的词或关键字，如 delete、单引号或分号，也可能发生这种情况。
Dialogue: 0,1:34:40.93,1:34:43.87,中文,,0,0,0,,在这里，我让库对数据进行清理。
Dialogue: 0,1:34:43.87,1:34:48.45,中文,,0,0,0,,然后这是一个我们还没有见过的技巧，它将真正开始把事情联系起来。
Dialogue: 0,1:34:48.45,1:34:56.87,中文,,0,0,0,,我还可以使用 Flask 中的重定向函数，它的作用是再次执行 safetyschool.org 的技巧（如果你愿意这样说的话）。
Dialogue: 0,1:34:56.87,1:35:08.82,中文,,0,0,0,,也就是说，在用户注册后，如果我想在 /registrants 页面自动显示所有注册的人，我不必像过去几分钟那样手动期望他们更改 URL。
Dialogue: 0,1:35:08.82,1:35:12.08,中文,,0,0,0,,我可以直接将他们重定向到我的应用程序上的任何地方。
Dialogue: 0,1:35:12.08,1:35:16.23,中文,,0,0,0,,或者，我可以使用这个函数调用将他们重定向到互联网上的任何 URL。
Dialogue: 0,1:35:16.23,1:35:21.77,中文,,0,0,0,,如果希望用户看到这些注册者，这是一个很好的方法，可以将他们发送到不同的路由。
Dialogue: 0,1:35:21.77,1:35:22.75,中文,,0,0,0,,让我来做这件事。
Dialogue: 0,1:35:22.75,1:35:24.35,中文,,0,0,0,,在同一个目录下。
Dialogue: 0,1:35:24.35,1:35:26.58,中文,,0,0,0,,让我增加我的终端窗口大小。
Dialogue: 0,1:35:26.58,1:35:30.78,中文,,0,0,0,,让我对 froshims.db 执行 sqlite 3。
Dialogue: 0,1:35:30.78,1:35:32.60,中文,,0,0,0,,然后输入 .schema。
Dialogue: 0,1:35:32.60,1:35:45.13,中文,,0,0,0,,你可以看到，它在这里被分成两行，每个注册者都有一个 ID，\N它将自动分配为 1、2、3，依此类推，一个 name，它是非空的文本，还有一个 sport，也是一样的。
Dialogue: 0,1:35:45.13,1:35:47.79,中文,,0,0,0,,主键就是这个唯一标识符。
Dialogue: 0,1:35:47.79,1:35:49.40,中文,,0,0,0,,是我提前创建好的。
Dialogue: 0,1:35:49.40,1:35:56.32,中文,,0,0,0,,如果我执行 SELECT * FROM registrants;，目前没有任何人注册任何运动。
Dialogue: 0,1:35:56.32,1:35:58.16,中文,,0,0,0,,现在尝试运行一下。
Dialogue: 0,1:35:58.16,1:36:02.38,中文,,0,0,0,,我先关闭旧版本，就是我们一起写的那版。
Dialogue: 0,1:36:02.38,1:36:03.66,中文,,0,0,0,,关闭这个标签页。
Dialogue: 0,1:36:03.66,1:36:07.69,中文,,0,0,0,,在这个版本 4 中运行 flask run。
Dialogue: 0,1:36:07.69,1:36:09.91,中文,,0,0,0,,可以看到类似的输出。
Dialogue: 0,1:36:09.91,1:36:11.65,中文,,0,0,0,,现在打开这个 URL。
Dialogue: 0,1:36:11.65,1:36:14.41,中文,,0,0,0,,可以看到我提前做了一些修改。
Dialogue: 0,1:36:14.41,1:36:23.38,中文,,0,0,0,,我没有使用下拉菜单，而是使用了单选按钮，这指的是以前汽车上那种只能选择一个的旧式单选按钮。
Dialogue: 0,1:36:23.38,1:36:26.60,中文,,0,0,0,,我们会看到如何实现，它只是下拉菜单的另一种选择。
Dialogue: 0,1:36:26.60,1:36:30.12,中文,,0,0,0,,我在这里再次输入我的名字。
Dialogue: 0,1:36:30.12,1:36:36.53,中文,,0,0,0,,输入 David，选择足球的单选按钮，然后点击“立即注册”。
Dialogue: 0,1:36:36.53,1:36:37.71,中文,,0,0,0,,注意发生了什么。
Dialogue: 0,1:36:37.71,1:36:42.25,中文,,0,0,0,,格式有点难看，但 20 年前的网站就是这样。
Dialogue: 0,1:36:42.25,1:36:46.09,中文,,0,0,0,,现在在 /registrants 路径下，
Dialogue: 0,1:36:46.09,1:36:49.46,中文,,0,0,0,,我没有使用无序列表，而是使用了简单的 HTML 表格。
Dialogue: 0,1:36:49.46,1:36:51.96,中文,,0,0,0,,稍后会展示它的样子。
Dialogue: 0,1:36:51.96,1:36:56.10,中文,,0,0,0,,还会展示这个“取消注册”按钮，它有点太大了。
Dialogue: 0,1:36:56.10,1:37:01.32,中文,,0,0,0,,我们很快就会看到，这里也有一个功能可以让你把某人从一项运动中移除。
Dialogue: 0,1:37:01.32,1:37:03.58,中文,,0,0,0,,把你的名字从竞争者名单中去掉。
Dialogue: 0,1:37:03.58,1:37:06.28,中文,,0,0,0,,让我回到终端窗口。
Dialogue: 0,1:37:06.28,1:37:09.63,中文,,0,0,0,,点击加号，再打开一个终端。
Dialogue: 0,1:37:09.63,1:37:13.05,中文,,0,0,0,,回到 src9，froshims4。
Dialogue: 0,1:37:13.05,1:37:16.57,中文,,0,0,0,,运行 sqlite，打开 froshims.db。
Dialogue: 0,1:37:16.57,1:37:19.83,中文,,0,0,0,,运行 SELECT * FROM registrants。
Dialogue: 0,1:37:19.83,1:37:24.92,中文,,0,0,0,,可以看到，David 注册了足球。
Dialogue: 0,1:37:24.92,1:37:34.40,中文,,0,0,0,,如果我用 Control-C 退出 Flask 程序并重新运行，数据库还在，下一个 Flask 程序依然会使用这个数据库。
Dialogue: 0,1:37:34.40,1:37:41.91,中文,,0,0,0,,数据持久化存储在 sqlite 中，并通过 Flask 中的 Python 代码获取。
Dialogue: 0,1:37:41.91,1:37:45.67,中文,,0,0,0,,让我们再添加一个人，以便演示如何删除。
Dialogue: 0,1:37:45.67,1:37:47.64,中文,,0,0,0,,Carter 参加篮球。
Dialogue: 0,1:37:47.64,1:37:48.44,中文,,0,0,0,,注册。
Dialogue: 0,1:37:48.44,1:37:50.18,中文,,0,0,0,,现在两个人都在这里了。
Dialogue: 0,1:37:50.18,1:37:53.34,中文,,0,0,0,,让我们看看代码，回到 VS Code。
Dialogue: 0,1:37:53.34,1:37:55.43,中文,,0,0,0,,缩小终端窗口。
Dialogue: 0,1:37:55.43,1:37:58.51,中文,,0,0,0,,进入…
Dialogue: 0,1:37:58.51,1:38:02.31,中文,,0,0,0,,进入 templates 目录。
Dialogue: 0,1:38:02.31,1:38:06.14,中文,,0,0,0,,例如，查看 index.html。
Dialogue: 0,1:38:06.14,1:38:08.76,中文,,0,0,0,,之前我们使用的是选择菜单。
Dialogue: 0,1:38:08.76,1:38:11.92,中文,,0,0,0,,结果是单选按钮也使用 input 标签。
Dialogue: 0,1:38:11.92,1:38:18.79,中文,,0,0,0,,但是不同于输入人名时使用 type=text，这里使用的是 type=radio。
Dialogue: 0,1:38:18.79,1:38:25.11,中文,,0,0,0,,只要每个单选按钮的 name 属性都相同，相同，相同，它们之间就是互斥的。
Dialogue: 0,1:38:25.11,1:38:29.53,中文,,0,0,0,,所以选中一个单选按钮就会关闭其他按钮，因为它们的 name 属性相同。
Dialogue: 0,1:38:29.53,1:38:34.01,中文,,0,0,0,,我想赋给每个单选按钮的值就是 sport 这个占位符。
Dialogue: 0,1:38:34.01,1:38:35.87,中文,,0,0,0,,这是用户在屏幕上看到的内容。
Dialogue: 0,1:38:35.87,1:38:37.49,中文,,0,0,0,,所以它几乎和 Select 菜单一样。
Dialogue: 0,1:38:37.49,1:38:40.73,中文,,0,0,0,,只是外观上有所不同，但按钮的功能是一样的。
Dialogue: 0,1:38:40.73,1:38:42.43,中文,,0,0,0,,这就是我所做的全部改动。
Dialogue: 0,1:38:42.43,1:38:46.52,中文,,0,0,0,,我还添加了一个标题标签 h1，内容为“注册”，以明确其含义。
Dialogue: 0,1:38:46.52,1:38:55.08,中文,,0,0,0,,我们来看看另一个文件，这次是 /registrants 路由对应的文件。
Dialogue: 0,1:38:55.08,1:39:01.49,中文,,0,0,0,,如果我现在打开 registrants.html，会发现它比无序列表冗长得多。
Dialogue: 0,1:39:01.49,1:39:03.17,中文,,0,0,0,,但这只是一些普通的 HTML 代码。
Dialogue: 0,1:39:03.17,1:39:07.41,中文,,0,0,0,,这里有 table 标签、table head、table row、table heading。
Dialogue: 0,1:39:07.41,1:39:10.69,中文,,0,0,0,,这会将表格的第一行加粗。
Dialogue: 0,1:39:10.69,1:39:12.35,中文,,0,0,0,,Name 和 sport 是我的两列。
Dialogue: 0,1:39:12.35,1:39:16.34,中文,,0,0,0,,我还添加了第三列空列，以便放置按钮，我们很快就会看到。
Dialogue: 0,1:39:16.34,1:39:18.12,中文,,0,0,0,,tbody 代表表格主体。
Dialogue: 0,1:39:18.12,1:39:23.88,中文,,0,0,0,,这里再次使用了 for 循环技巧，以便为每个注册者输出一个完整的表格行。
Dialogue: 0,1:39:23.88,1:39:26.78,中文,,0,0,0,,这里面有一个奇怪的 form 表单，不过我们稍后会回过头来讨论它。
Dialogue: 0,1:39:26.78,1:39:28.46,中文,,0,0,0,,这里还有报名者的姓名。
Dialogue: 0,1:39:28.46,1:39:31.04,中文,,0,0,0,,这里还有报名者的运动项目。
Dialogue: 0,1:39:31.04,1:39:34.24,中文,,0,0,0,,但请注意这里略有不同的语法。
Dialogue: 0,1:39:34.24,1:39:48.05,中文,,0,0,0,,回想一下 CS50 的 select，CS50 的 execute 函数，\N当它返回给你一个字典列表时，你可以通过这些键获取各个列。我们来看看 /registrants 路由。
Dialogue: 0,1:39:48.05,1:39:49.95,中文,,0,0,0,,让我回到 app.py。
Dialogue: 0,1:39:49.95,1:39:52.57,中文,,0,0,0,,向下滚动到这，它实际上非常简单。
Dialogue: 0,1:39:52.57,1:39:58.28,中文,,0,0,0,,这里，我有一个 /registrants 路由，它首先执行 SELECT * FROM registrants。
Dialogue: 0,1:39:58.28,1:40:01.82,中文,,0,0,0,,只是一些旧的 SQL 代码。给我 registrants 表中的所有人。
Dialogue: 0,1:40:01.82,1:40:08.27,中文,,0,0,0,,然后我渲染名为 registrants.html 的模板，并传入这个字典列表。
Dialogue: 0,1:40:08.27,1:40:16.31,中文,,0,0,0,,我们还没有完全做到这一点，但如果你回到 registrants.html，如何遍历列表中的每个字典？
Dialogue: 0,1:40:16.31,1:40:19.41,中文,,0,0,0,,语法是 for registrant in registrants。
Dialogue: 0,1:40:19.41,1:40:24.75,中文,,0,0,0,,这使得它一次成为列表中的一个字典，就像在 Python 中一样。
Dialogue: 0,1:40:24.75,1:40:31.60,中文,,0,0,0,,所以 registrant.name 和 registrant.sport 只是使用方括号符号的另一种语法。
Dialogue: 0,1:40:31.60,1:40:37.28,中文,,0,0,0,,它只是比到处都是引号和方括号更简洁一点。
Dialogue: 0,1:40:37.28,1:40:40.53,中文,,0,0,0,,剩下的就是 HTML 了。
Dialogue: 0,1:40:40.53,1:40:46.37,中文,,0,0,0,,如果我想，比如卡特被篮球队开除了，该怎么办？
Dialogue: 0,1:40:46.37,1:40:48.03,中文,,0,0,0,,我们该怎么做？
Dialogue: 0,1:40:48.03,1:40:52.05,中文,,0,0,0,,我们想点击卡特名字旁边的“取消注册”按钮。
Dialogue: 0,1:40:52.05,1:40:53.37,中文,,0,0,0,,但这又是如何运作的呢？
Dialogue: 0,1:40:53.37,1:41:04.74,中文,,0,0,0,,想一想你访问过的任何网站，比如有购物车，你可以从购物车中删除东西，或者更新数量，或者在亚马逊或其他网站上向购物车添加更多商品。
Dialogue: 0,1:41:04.74,1:41:08.54,中文,,0,0,0,,我们来看看我的应用程序生成的 HTML 代码。
Dialogue: 0,1:41:08.54,1:41:12.16,中文,,0,0,0,,我们来看看这里，我们会看到以下内容。
Dialogue: 0,1:41:12.16,1:41:20.26,中文,,0,0,0,,我们会看到，在用户收到的 HTML 中，不仅第一列是 David，第二列是 soccer。
Dialogue: 0,1:41:20.26,1:41:26.70,中文,,0,0,0,,请注意，我的 registrants.html 表单也生成了一个很小的网络表单。
Dialogue: 0,1:41:26.70,1:41:30.32,中文,,0,0,0,,它很丑，但我现在只关心它的功能。
Dialogue: 0,1:41:30.32,1:41:32.28,中文,,0,0,0,,注意我在这里做了什么。
Dialogue: 0,1:41:32.28,1:41:37.22,中文,,0,0,0,,这个数据库中的每个注册者都有自己的“注销”按钮。
Dialogue: 0,1:41:37.22,1:41:40.41,中文,,0,0,0,,该表单上有一个“注销”按钮。
Dialogue: 0,1:41:40.41,1:41:42.69,中文,,0,0,0,,但请注意这些表单还有什么。
Dialogue: 0,1:41:42.69,1:41:43.67,中文,,0,0,0,,没有文本框。
Dialogue: 0,1:41:43.67,1:41:44.73,中文,,0,0,0,,没有下拉菜单。
Dialogue: 0,1:41:44.73,1:41:46.31,中文,,0,0,0,,没有单选按钮。
Dialogue: 0,1:41:46.31,1:41:51.50,中文,,0,0,0,,相反，这里有一个隐藏的输入字段。
Dialogue: 0,1:41:51.50,1:41:53.94,中文,,0,0,0,,所以 HTML 有一种方法
Dialogue: 0,1:41:53.94,1:42:00.50,中文,,0,0,0,,可以让表单提交信息，但不必让用户能够更改这些信息。
Dialogue: 0,1:42:00.50,1:42:06.16,中文,,0,0,0,,你可以继续把它藏在表单里，也可以说是隐藏起来。
Dialogue: 0,1:42:06.16,1:42:13.21,中文,,0,0,0,,如果我点击 Carter 旁边的“注销”按钮，他的主键是 2，会发生什么？
Dialogue: 0,1:42:13.21,1:42:15.43,中文,,0,0,0,,我的是 1。
Dialogue: 0,1:42:15.43,1:42:23.52,中文,,0,0,0,,如果我点击他的“注销”按钮，它会提交一个表单，其中包含一个值为 2 的 ID
Dialogue: 0,1:42:23.52,1:42:29.01,中文,,0,0,0,,参数，并将其提交到 deregister 路由。这意味着什么？
Dialogue: 0,1:42:29.01,1:42:35.58,中文,,0,0,0,,如果我现在打开 VS Code 中的 app.py，我们来看看之前跳过的 deregister 路由。
Dialogue: 0,1:42:35.58,1:42:41.07,中文,,0,0,0,,所以如果通过 POST 访问 deregister 路由，这段代码就会被调用。
Dialogue: 0,1:42:41.07,1:42:46.25,中文,,0,0,0,,我从 request.form 中获取以隐藏方式提交的 ID。
Dialogue: 0,1:42:46.25,1:42:58.89,中文,,0,0,0,,如果确实存在一个 ID，也就是说，它不是空的，不是 0，而是一个实际的数字，\N比如 1、2、3 或更大，我就会执行从 registrants 表中删除 ID 等于该值的记录，并使用问号占位符。
Dialogue: 0,1:42:58.89,1:43:02.34,中文,,0,0,0,,然后我将用户重定向回 registrants 页面。
Dialogue: 0,1:43:02.34,1:43:07.42,中文,,0,0,0,,现在，如果我回到这个表单，点击“注销”，我们将会看到它的实际效果。
Dialogue: 0,1:43:07.42,1:43:08.96,中文,,0,0,0,,Carter 现在不见了。
Dialogue: 0,1:43:08.96,1:43:20.15,中文,,0,0,0,,事实上，如果我回到终端窗口，打开 froshims.db 的 sqlite 3，并重新运行 SELECT * FROM registrants，Carter 现在已经消失了。
Dialogue: 0,1:43:20.15,1:43:28.73,中文,,0,0,0,,再次强调，使用非常简单的 HTML 表单，你可以使用按钮、链接和其他类似的用户界面机制，在服务器上执行你想要的操作。
Dialogue: 0,1:43:28.73,1:43:30.81,中文,,0,0,0,,但这其中存在一个危险。
Dialogue: 0,1:43:30.81,1:43:39.92,中文,,0,0,0,,这个例子现在真的意味着这是一个管理网站，就像 20 年前一样，只是供我们内部人员使用。
Dialogue: 0,1:43:39.92,1:43:57.61,中文,,0,0,0,,从技术上讲，我刚才所做的也是危险的。即使 Carter 的 ID 是 2 并且隐藏了，\N我的 ID 是 1 并且也隐藏了，如果攻击者有权限访问同一个网站，他们会怎么做？
Dialogue: 0,1:43:57.61,1:44:00.27,中文,,0,0,0,,有什么想法吗？
Dialogue: 0,1:44:00.27,1:44:04.69,中文,,0,0,0,,有。
Dialogue: 0,1:44:04.69,1:44:10.20,中文,,0,0,0,,他们可以通过打开 Chrome 的开发者工具来更改隐藏属性的值，修改 HTML 中的数字。
Dialogue: 0,1:44:10.20,1:44:13.44,中文,,0,0,0,,他们可以删除任何人，从数据库中注销任何他们想删除的人。
Dialogue: 0,1:44:13.44,1:44:19.81,中文,,0,0,0,,在这种情况下，我认为这没什么问题，因为这只是为以前管理体育运动的工作人员准备的。
Dialogue: 0,1:44:19.81,1:44:21.27,中文,,0,0,0,,但这确实是一个风险。
Dialogue: 0,1:44:21.27,1:44:29.60,中文,,0,0,0,,如果我们能确保只有那些被授权的用户才能执行某些操作，那不是很好吗？
Dialogue: 0,1:44:29.60,1:44:35.34,中文,,0,0,0,,我认为要实现这个功能，我们还需要引入一些东西。
Dialogue: 0,1:44:35.34,1:44:41.02,中文,,0,0,0,,这里正好有机会简单谈谈你我每天都在做的事情。
Dialogue: 0,1:44:41.02,1:44:47.19,中文,,0,0,0,,我们登录一个或多个网站或应用程序，至少在自动退出之前是这样，之后你必须再次登录。
Dialogue: 0,1:44:47.19,1:44:49.41,中文,,0,0,0,,例如，这是一张 Gmail 的截图。
Dialogue: 0,1:44:49.41,1:44:56.02,中文,,0,0,0,,当你输入用户名和密码，可能还有通过短信或发送到手机的双重验证码后，你就登录了。
Dialogue: 0,1:44:56.02,1:45:02.90,中文,,0,0,0,,幸运的是，通常在几个小时、几天或几周内，你不会被再次提示登录，具体取决于网站。
Dialogue: 0,1:45:02.90,1:45:08.71,中文,,0,0,0,,例如，Gmail 会让你保持登录状态很长时间。为了安全起见，你的银行可能会在一个小时左右后让你退出登录。
Dialogue: 0,1:45:08.71,1:45:11.41,中文,,0,0,0,,这完全可以在服务器上配置。
Dialogue: 0,1:45:11.41,1:45:21.12,中文,,0,0,0,,但是 Gmail 如何知道，Google 如何知道，即使你一遍又一遍地查看不同的邮件，他们如何知道你仍然是登录的那个人？
Dialogue: 0,1:45:21.12,1:45:27.12,中文,,0,0,0,,事实证明，使用今天这些相同的构建块，HTTP、HTML 等等，
Dialogue: 0,1:45:27.12,1:45:35.04,中文,,0,0,0,,你可以通过使用 Cookie 来实现登录功能。
Dialogue: 0,1:45:35.04,1:45:43.27,中文,,0,0,0,,本质上，当你第一次使用用户名和密码成功登录网站时，你的计算机上会被植入一个 Cookie。
Dialogue: 0,1:45:43.27,1:45:56.81,中文,,0,0,0,,打个比方，这就像盖了一个手章，你的手上现在盖了一个笑脸，\N所以每次你在同一个网站（google.com、gmail.com 等等）上点击链接时，你的浏览器都会在你不注意的情况下，
Dialogue: 0,1:45:56.81,1:46:03.62,中文,,0,0,0,,不断地出示那个手章，就像进入俱乐部、游乐园之类的地方，他们不想再次检查你的身份证。
Dialogue: 0,1:46:03.62,1:46:07.60,中文,,0,0,0,,他们不想再次检查你的门票。他们只想快速地看到同一个手章。
Dialogue: 0,1:46:07.60,1:46:12.07,中文,,0,0,0,,这就是浏览器在你登录后一直在为你做的事情之一。
Dialogue: 0,1:46:12.07,1:46:16.47,中文,,0,0,0,,任何已植入你 Mac、PC 或手机中的 Cookie，
Dialogue: 0,1:46:16.47,1:46:22.82,中文,,0,0,0,,都会在你每次点击链接或向该网站发出另一个请求时，不断地呈现给该网站。
Dialogue: 0,1:46:22.82,1:46:27.86,中文,,0,0,0,,从机械原理上来说，不仅仅是用墨水来比喻，它的工作原理是这样的。
Dialogue: 0,1:46:27.86,1:46:32.29,中文,,0,0,0,,这是一个向 Gmail 之类的网站发送 HTTP 请求的例子。
Dialogue: 0,1:46:32.29,1:46:34.69,中文,,0,0,0,,假设你登录了。
Dialogue: 0,1:46:34.69,1:46:46.65,中文,,0,0,0,,通常，就像上周说的，服务器会返回另一个虚拟信封，里面包含一个 200 OK 消息，以及实际的网页、猫的图片或其他内容。
Dialogue: 0,1:46:46.65,1:46:54.74,中文,,0,0,0,,但如果 Google 验证了你输入的用户名和密码是正确的，他们也可以做相当于在你手上盖章的操作。
Dialogue: 0,1:46:54.74,1:47:09.60,中文,,0,0,0,,他们是这样做的：在从服务器发送到浏览器的虚拟信封中添加一行文本，\N也就是使用另一个 HTTP 标头，而不是 content type，content type 只是简单地告诉你返回的是什么类型的内容。
Dialogue: 0,1:47:09.60,1:47:14.86,中文,,0,0,0,,他们实际上发送了一个名为 set-cookie 的 HTTP 标头。
Dialogue: 0,1:47:14.86,1:47:18.57,中文,,0,0,0,,然后他们在你的 Mac 或 PC 上设置一个键值对。
Dialogue: 0,1:47:18.57,1:47:22.09,中文,,0,0,0,,这在技术上相当于笑脸手章。
Dialogue: 0,1:47:22.09,1:47:36.75,中文,,0,0,0,,你的电脑被设计成这样做的，因为你的电脑和浏览器应该实现 HTTP，\N任何时候你在 Gmail 上点击另一个链接或点击另一封邮件或类似的东西，你的浏览器都会在你不经意间显示出手章。
Dialogue: 0,1:47:36.75,1:47:42.17,中文,,0,0,0,,从技术上讲，它是在从浏览器发送给 Google 的信封中实现的。
Dialogue: 0,1:47:42.17,1:47:47.93,中文,,0,0,0,,它不会发送 set cookie。它只发送 cookie、冒号和完全相同的东西。
Dialogue: 0,1:47:47.93,1:47:58.98,中文,,0,0,0,,只要 Google 够聪明，并且他们有一个包含所有会话值的数据库或其他东西，会话是跨 HTTP 维护信息的专业术语。
Dialogue: 0,1:47:58.98,1:48:13.42,中文,,0,0,0,,只要 只要谷歌有一个大数据库，知道我的 cookie 值是 1, 2, 3，\N而你的 cookie 值是 4, 5, 6，他们就可以根据这个虚拟手印推断出应该显示谁的邮件，是我的、你的，还是其他人的。
Dialogue: 0,1:48:13.42,1:48:14.88,中文,,0,0,0,,这只是触及了表面。
Dialogue: 0,1:48:14.88,1:48:24.20,中文,,0,0,0,,但如果我真的只想让 Carter 能够注销自己，我只需要确保以某种方式让他登录，用户名、密码等等。
Dialogue: 0,1:48:24.20,1:48:27.62,中文,,0,0,0,,我给他的手盖章，或者说在他的电脑上放一个 cookie。
Dialogue: 0,1:48:27.62,1:48:36.16,中文,,0,0,0,,只有当他的 cookie 与他试图注销的用户 ID 一致时，他才被允许这样做。
Dialogue: 0,1:48:36.16,1:48:37.81,中文,,0,0,0,,所以这一切都是有可能的。
Dialogue: 0,1:48:37.81,1:48:40.31,中文,,0,0,0,,实际上，这个专业术语叫做会话。
Dialogue: 0,1:48:40.31,1:48:55.30,中文,,0,0,0,,我们今天剩下的时间里，将向大家展示一些当今最常见的 Web 功能是如何实现的，\N其中一些你会在你自己的问题集 9 中用到，它本身就是一个 Web 应用程序，甚至可能是你的期末项目。
Dialogue: 0,1:48:55.30,1:48:56.94,中文,,0,0,0,,我来演示一下。
Dialogue: 0,1:48:56.94,1:49:00.36,中文,,0,0,0,,我先关闭之前的标签页和所有 Frosh IMs。
Dialogue: 0,1:49:00.36,1:49:03.84,中文,,0,0,0,,接下来让我们实现登录功能。
Dialogue: 0,1:49:03.84,1:49:06.92,中文,,0,0,0,,稍后我会切换到 VS Code。
Dialogue: 0,1:49:06.92,1:49:12.75,中文,,0,0,0,,我要在我的 src9 目录中，进入 login 目录。
Dialogue: 0,1:49:12.75,1:49:22.17,中文,,0,0,0,,如果我在这里输入 ls，你会看到 app.py，requirements.txt（它指的是我想要自动安装的库）和一个 templates 文件夹。
Dialogue: 0,1:49:22.17,1:49:25.53,中文,,0,0,0,,我将停止之前的服务器并关闭该终端窗口。
Dialogue: 0,1:49:25.53,1:49:28.71,中文,,0,0,0,,我将打开这个版本的 app.py。
Dialogue: 0,1:49:28.71,1:49:30.57,中文,,0,0,0,,这里有几行新代码。
Dialogue: 0,1:49:30.57,1:49:33.15,中文,,0,0,0,,我们会把这些代码提供给你们用于解决问题 9。
Dialogue: 0,1:49:33.15,1:49:37.90,中文,,0,0,0,,上面有一些熟悉的内容，包括我们刚刚使用的新 redirect 函数。
Dialogue: 0,1:49:37.90,1:49:45.18,中文,,0,0,0,,Flask 也提供了一个 session 变量。Flask 的优点在于它会自动处理所有 cookie 相关的事情。
Dialogue: 0,1:49:45.18,1:49:46.49,中文,,0,0,0,,它设置 cookie。
Dialogue: 0,1:49:46.49,1:49:47.63,中文,,0,0,0,,它检查 cookie。
Dialogue: 0,1:49:47.63,1:49:53.31,中文,,0,0,0,,Flask 为你做的是，它提供了一个名为 session 的变量抽象。
Dialogue: 0,1:49:53.31,1:50:02.08,中文,,0,0,0,,这样，你放入 session 变量（它本身是一个字典）的任何内容，都会在同一个用户再次访问时一直存在。
Dialogue: 0,1:50:02.08,1:50:07.40,中文,,0,0,0,,session 就是你实现类似于谚语中所说的购物车的机制。
Dialogue: 0,1:50:07.40,1:50:13.89,中文,,0,0,0,,如果我登录了亚马逊，你也登录了亚马逊，亚马逊通过 cookie 知道我们是谁。
Dialogue: 0,1:50:13.89,1:50:19.23,中文,,0,0,0,,如果亚马逊使用 Flask，它会为程序员提供一个名为 session 的字典。
Dialogue: 0,1:50:19.23,1:50:24.49,中文,,0,0,0,,当 Carter 访问网站时，Flask 会确保代码使用他的 session 对象。
Dialogue: 0,1:50:24.49,1:50:27.65,中文,,0,0,0,,当我访问网站时，它使用我的 session 对象。
Dialogue: 0,1:50:27.65,1:50:29.90,中文,,0,0,0,,但这一切都是用相同的 cookie 实现的。
Dialogue: 0,1:50:29.90,1:50:31.72,中文,,0,0,0,,这和之前一样。
Dialogue: 0,1:50:31.72,1:50:32.60,中文,,0,0,0,,这几行是新的。
Dialogue: 0,1:50:32.60,1:50:34.38,中文,,0,0,0,,你会在习题集9中看到这些。
Dialogue: 0,1:50:34.38,1:50:37.76,中文,,0,0,0,,这就是我们如何在 web 应用中启用 session 的方法。
Dialogue: 0,1:50:37.76,1:50:39.78,中文,,0,0,0,,我就不详细解释细节了。
Dialogue: 0,1:50:39.78,1:50:45.74,中文,,0,0,0,,实现 session 有不同的方式，可以使用服务器上的 cookie、浏览器上的 cookie 或其他方式。
Dialogue: 0,1:50:45.74,1:50:52.19,中文,,0,0,0,,这些只是确保我们将 session 信息（购物车）存储在服务器本身上。
Dialogue: 0,1:50:52.19,1:50:54.71,中文,,0,0,0,,现在，让我们继续往下看，做这个。
Dialogue: 0,1:50:54.71,1:51:00.17,中文,,0,0,0,,让我们运行 flask run ，这样我就可以看看这个应用的功能了。
Dialogue: 0,1:51:00.17,1:51:05.87,中文,,0,0,0,,如果我这样做并访问输出的 URL，你会看到一个非常简单的网页。
Dialogue: 0,1:51:05.87,1:51:13.34,中文,,0,0,0,,例如，如果我输入我的名字，我就不必费心输入密码了，然后点击登录，你会看到你已经以 David 的身份登录了。
Dialogue: 0,1:51:13.34,1:51:14.82,中文,,0,0,0,,现在我可以退出了。
Dialogue: 0,1:51:14.82,1:51:17.14,中文,,0,0,0,,所以我要点击退出。
Dialogue: 0,1:51:17.14,1:51:20.14,中文,,0,0,0,,现在它似乎知道我又没有登录了。
Dialogue: 0,1:51:20.14,1:51:25.86,中文,,0,0,0,,我可以以 Carter 的身份登录，因为为了简单起见，我没有设置密码。但现在网站知道我以 Carter 的身份登录了。
Dialogue: 0,1:51:25.86,1:51:36.61,中文,,0,0,0,,更好的是，如果我不断刷新、刷新、刷新，或者一遍又一遍地点击这个按钮，你会注意到它仍然知道我是 Carter，直到我退出登录。
Dialogue: 0,1:51:36.61,1:51:38.03,中文,,0,0,0,,这是怎么运作的呢？
Dialogue: 0,1:51:38.03,1:51:40.15,中文,,0,0,0,,让我们回到 VS Code。
Dialogue: 0,1:51:40.15,1:51:43.11,中文,,0,0,0,,让我向下滚动到这个路由。
Dialogue: 0,1:51:43.11,1:51:48.30,中文,,0,0,0,,这是一种非常常见的模式，我正在检查索引路由。
Dialogue: 0,1:51:48.30,1:51:54.06,中文,,0,0,0,,如果会话中没有名字，则将用户重定向到 /login。
Dialogue: 0,1:51:54.06,1:51:57.28,中文,,0,0,0,,这意味着什么呢？ 让我们回到 VS Code 看看。
Dialogue: 0,1:51:57.28,1:51:59.82,中文,,0,0,0,,我们进入 / 路由。
Dialogue: 0,1:51:59.82,1:52:01.32,中文,,0,0,0,,再说一次，你的 URL 会有所不同。
Dialogue: 0,1:52:01.32,1:52:03.60,中文,,0,0,0,,我只是要进入 / 然后按回车键。
Dialogue: 0,1:52:03.60,1:52:06.47,中文,,0,0,0,,注意，我被自动重定向到 login。
Dialogue: 0,1:52:06.47,1:52:08.03,中文,,0,0,0,,很多网站都会这样做。
Dialogue: 0,1:52:08.03,1:52:15.47,中文,,0,0,0,,如果你访问一个网站并且没有登录，你通常会被重定向到 /login 或 /account 之类的页面，提示你登录。
Dialogue: 0,1:52:15.47,1:52:17.93,中文,,0,0,0,,实现这一功能的代码就在这里。
Dialogue: 0,1:52:17.93,1:52:22.15,中文,,0,0,0,,如果会话中没有名字，也就是说，如果购物车里没有名字，
Dialogue: 0,1:52:22.15,1:52:25.76,中文,,0,0,0,,那就把用户带回到登录路由。
Dialogue: 0,1:52:25.76,1:52:29.94,中文,,0,0,0,,否则，如果他们已经登录，就隐式地向他们展示 index.html。
Dialogue: 0,1:52:29.94,1:52:31.36,中文,,0,0,0,,让我们深入了解一下。
Dialogue: 0,1:52:31.36,1:52:34.83,中文,,0,0,0,,让我在 VS Code 中打开第二个终端窗口。
Dialogue: 0,1:52:34.83,1:52:39.89,中文,,0,0,0,,让我进入 src9，然后进入同一个登录演示。
Dialogue: 0,1:52:39.89,1:52:44.17,中文,,0,0,0,,让我打开名为 index.html 的模板。
Dialogue: 0,1:52:44.17,1:52:45.33,中文,,0,0,0,,这就是全部内容。
Dialogue: 0,1:52:45.33,1:52:47.23,中文,,0,0,0,,这里有一些布局，但现在谁在乎呢。
Dialogue: 0,1:52:47.23,1:52:49.85,中文,,0,0,0,,这只是一些通用的 HTML 样板代码。
Dialogue: 0,1:52:49.85,1:52:51.47,中文,,0,0,0,,这是 body 代码块。
Dialogue: 0,1:52:51.47,1:52:52.43,中文,,0,0,0,,我有这个。
Dialogue: 0,1:52:52.43,1:52:57.72,中文,,0,0,0,,因为有大括号和百分号，所以这也是 Jinja。
Dialogue: 0,1:52:57.72,1:53:02.71,中文,,0,0,0,,如果会话中有名字，这只是 Python 语法，那么就说这句话。
Dialogue: 0,1:53:02.71,1:53:07.47,中文,,0,0,0,,您已登录，名称为会话中的名称，也就是购物车中的名称。
Dialogue: 0,1:53:07.47,1:53:11.17,中文,,0,0,0,,然后我这里有一个用于用户注销的 HTML 链接。
Dialogue: 0,1:53:11.17,1:53:18.56,中文,,0,0,0,,否则，如果会话中没有名称，逻辑上，只需说您没有登录，并为他们提供一个手动链接用于登录。
Dialogue: 0,1:53:18.56,1:53:21.30,中文,,0,0,0,,这就是这个特定模板的全部功能。
Dialogue: 0,1:53:21.30,1:53:23.70,中文,,0,0,0,,但是 /login 是如何工作的呢？
Dialogue: 0,1:53:23.70,1:53:28.97,中文,,0,0,0,,让我们来看看另一个模板，login.html 的代码，我被重定向到了这里。
Dialogue: 0,1:53:28.97,1:53:29.93,中文,,0,0,0,,超级简单。
Dialogue: 0,1:53:29.93,1:53:32.13,中文,,0,0,0,,这只是从之前的 HTML 复制粘贴过来的。
Dialogue: 0,1:53:32.13,1:53:35.69,中文,,0,0,0,,我有一个登录表单，它的 action 是 /login。
Dialogue: 0,1:53:35.69,1:53:38.77,中文,,0,0,0,,为了隐私，只通过 POST 提交。
Dialogue: 0,1:53:38.77,1:53:44.68,中文,,0,0,0,,剩下的只是一个简单的表单。我使用的是 input type equals submit 而不是 button equals type equals submit。
Dialogue: 0,1:53:44.68,1:53:50.10,中文,,0,0,0,,但这里的想法也一样。如果我回到 app.py，让我们看看登录是如何工作的。
Dialogue: 0,1:53:50.10,1:53:50.84,中文,,0,0,0,,好吗？
Dialogue: 0,1:53:50.84,1:53:55.25,中文,,0,0,0,,虽然内容很多，但它们都是对同一想法的相对简单的再次应用。
Dialogue: 0,1:53:55.25,1:54:01.93,中文,,0,0,0,,如果用户通过 GET 或 POST 访问 /login，就调用 login 这个函数。
Dialogue: 0,1:54:01.93,1:54:08.38,中文,,0,0,0,,如果用户通过 POST 提交了表单，我们之前见过这种技术，那么就执行第 23 行的代码。
Dialogue: 0,1:54:08.38,1:54:17.97,中文,,0,0,0,,在这个 Flask 自带的特殊 session 变量中存储一个名为 name 的键，并在其中存储用户的用户名。
Dialogue: 0,1:54:17.97,1:54:21.61,中文,,0,0,0,,name 的值将是 David 或 Carter 之类的。
Dialogue: 0,1:54:21.61,1:54:26.92,中文,,0,0,0,,一旦你这样做了，就把用户重定向回 /，这样他们就能再次看到主页了。
Dialogue: 0,1:54:26.92,1:54:29.94,中文,,0,0,0,,亚马逊和其他所有网站也是这样运作的。
Dialogue: 0,1:54:29.94,1:54:37.37,中文,,0,0,0,,否则，如果用户通过 GET 隐式访问这个页面，即使我没有在任何地方写 equals equals GET，这也是隐含的逻辑。
Dialogue: 0,1:54:37.37,1:54:46.12,中文,,0,0,0,,因为如果只能通过 GET 或 POST 访问这里，而我们已经处理了 POST，那么逻辑上剩下的就只有 GET 了，那么就向他们显示登录屏幕。
Dialogue: 0,1:54:46.12,1:54:49.72,中文,,0,0,0,,但我们可以用很多种方式来表达相同的逻辑。
Dialogue: 0,1:54:49.72,1:54:52.31,中文,,0,0,0,,对于 logout 来说，这就很简单了。
Dialogue: 0,1:54:52.31,1:55:02.10,中文,,0,0,0,,如果用户点击了 logout 链接，并进入了 /logout 这个路由，那么就将 session 中该键的值改为 None。
Dialogue: 0,1:55:02.10,1:55:04.34,中文,,0,0,0,,实际上，就是把 Carter 和 David 都清空了。
Dialogue: 0,1:55:04.34,1:55:06.72,中文,,0,0,0,,现在没有人登录了。
Dialogue: 0,1:55:06.72,1:55:15.81,中文,,0,0,0,,这就是实现网站登录和注销概念所需的全部内容，再加上密码部分，这可能需要用到数据库，但我们先一步一步来。
Dialogue: 0,1:55:15.81,1:55:23.23,中文,,0,0,0,,实际上，session 就像购物车代码版本一样，如果我访问相同的代码，我就会得到自己的 session 对象。
Dialogue: 0,1:55:23.23,1:55:25.89,中文,,0,0,0,,如果 Carter 访问网站，他也会得到自己的 session 对象。
Dialogue: 0,1:55:25.89,1:55:34.71,中文,,0,0,0,,Flask 区分我们两个人的方式是在我的电脑上放一个 cookie，在他的电脑上放一个不同的 cookie，并使用这些 cookie 来对应，
Dialogue: 0,1:55:34.71,1:55:40.24,中文,,0,0,0,,确保将正确的 session 显示给正确的实际用户。
Dialogue: 0,1:55:40.24,1:55:47.02,中文,,0,0,0,,关于 session 的概念，大家还有什么问题吗？
Dialogue: 0,1:55:47.02,1:55:47.62,中文,,0,0,0,,没有吗？
Dialogue: 0,1:55:47.62,1:55:51.28,中文,,0,0,0,,我们再来看几个例子，把这些都串起来？
Dialogue: 0,1:55:51.28,1:55:53.84,中文,,0,0,0,,回到 VS Code。
Dialogue: 0,1:55:53.84,1:55:56.63,中文,,0,0,0,,退出之前的 Flask 版本。
Dialogue: 0,1:55:56.63,1:56:00.99,中文,,0,0,0,,我们打开 src9 中的 Store，这是一个独立的应用。
Dialogue: 0,1:56:00.99,1:56:03.79,中文,,0,0,0,,先运行 Flask 看看它是什么。
Dialogue: 0,1:56:03.79,1:56:06.94,中文,,0,0,0,,将鼠标悬停在 URL 上，在新标签页中打开它。
Dialogue: 0,1:56:06.94,1:56:09.86,中文,,0,0,0,,这个页面也很丑，放大一点。
Dialogue: 0,1:56:09.86,1:56:20.04,中文,,0,0,0,,这是一个非常简单的书店，就像早期的 Amazon.com，这里有七本书，每本书看起来都像，也许这是 h1，这是 h2，h2，h2，h2。
Dialogue: 0,1:56:20.04,1:56:22.52,中文,,0,0,0,,然后每个下面都有一个按钮。
Dialogue: 0,1:56:22.52,1:56:27.64,中文,,0,0,0,,现在，让我们以此为契机，像分析任何网站一样，来推断它是如何工作的。
Dialogue: 0,1:56:27.64,1:56:30.01,中文,,0,0,0,,查看页面源代码。
Dialogue: 0,1:56:30.01,1:56:32.67,中文,,0,0,0,,你可以对互联网上的任何网站这样做。
Dialogue: 0,1:56:32.67,1:56:36.85,中文,,0,0,0,,让我们试着找出这个书店是如何将商品添加到购物车中的。
Dialogue: 0,1:56:36.85,1:56:40.39,中文,,0,0,0,,这是 h1 标签，h2，h2，h2，没什么意思。
Dialogue: 0,1:56:40.39,1:56:42.73,中文,,0,0,0,,所以关键部分在这些表单中。
Dialogue: 0,1:56:42.73,1:56:46.43,中文,,0,0,0,,每个表单都有一个指向 /cart 的 action。
Dialogue: 0,1:56:46.43,1:56:48.89,中文,,0,0,0,,所以这是一会儿会很有趣的路由。
Dialogue: 0,1:56:48.89,1:56:51.47,中文,,0,0,0,,为了安全起见，它使用 POST 请求。
Dialogue: 0,1:56:51.47,1:56:58.53,中文,,0,0,0,,每个表单，比如 Carter 的取消注册功能，都有一个 ID 参数。
Dialogue: 0,1:56:58.53,1:57:03.10,中文,,0,0,0,,它是隐藏的，值是 1，2 或 3。
Dialogue: 0,1:57:03.10,1:57:09.16,中文,,0,0,0,,就好比是书籍的唯一条形码，只不过在我们这种情况下，数字非常小。
Dialogue: 0,1:57:09.16,1:57:15.86,中文,,0,0,0,,除了这里的这个值以外，其他每本书籍都有着相同的格式。
Dialogue: 0,1:57:15.86,1:57:23.65,中文,,0,0,0,,在这种情况下，用户从技术上可以侵入这家书店 amazon.com 的 HTML 代码，并更改 ID，但这并不是什么大问题。
Dialogue: 0,1:57:23.65,1:57:29.01,中文,,0,0,0,,因为，哇，他们会做什么最坏的事呢，比如通过在购物车中添加更多 ID 来购买更多书籍？
Dialogue: 0,1:57:29.01,1:57:30.27,中文,,0,0,0,,这根本不是问题。
Dialogue: 0,1:57:30.27,1:57:31.61,中文,,0,0,0,,这里没有价格。
Dialogue: 0,1:57:31.61,1:57:33.25,中文,,0,0,0,,仅仅是书籍的唯一 ID。
Dialogue: 0,1:57:33.25,1:57:44.12,中文,,0,0,0,,虽然注销操作可能令人担忧，因为你在更改服务器，但我认为这没关系，因为用户最多只能通过按钮购买比他们可能购买的更多书籍。
Dialogue: 0,1:57:44.12,1:57:45.80,中文,,0,0,0,,那么，现在这是如何工作的呢？
Dialogue: 0,1:57:45.80,1:57:49.35,中文,,0,0,0,,让我们再次进入 VS Code。
Dialogue: 0,1:57:49.35,1:57:51.09,中文,,0,0,0,,让我再打开一个终端窗口。
Dialogue: 0,1:57:51.09,1:57:57.04,中文,,0,0,0,,在 src9/store 中，打开 app.py，所有逻辑都在这里。
Dialogue: 0,1:57:57.04,1:57:59.80,中文,,0,0,0,,我会快速浏览大部分内容，因为我们之前见过。
Dialogue: 0,1:57:59.80,1:58:02.50,中文,,0,0,0,,这些导入与之前基本相同。
Dialogue: 0,1:58:02.50,1:58:03.70,中文,,0,0,0,,这行代码相同。
Dialogue: 0,1:58:03.70,1:58:04.90,中文,,0,0,0,,这行代码几乎相同。
Dialogue: 0,1:58:04.90,1:58:09.78,中文,,0,0,0,,但现在数据库名为 store.db，而不是 froshims.db。
Dialogue: 0,1:58:09.78,1:58:14.49,中文,,0,0,0,,这是用于启用会话（购物车概念）的样板代码。
Dialogue: 0,1:58:14.49,1:58:16.45,中文,,0,0,0,,让我们看看 index 是如何工作的。
Dialogue: 0,1:58:16.45,1:58:18.91,中文,,0,0,0,,我是如何同时看到七本书的？
Dialogue: 0,1:58:18.91,1:58:25.39,中文,,0,0,0,,在这个 index 函数中，我在第 19 行使用了 SELECT * FROM books 从数据库中获取所有书籍。
Dialogue: 0,1:58:25.39,1:58:30.97,中文,,0,0,0,,然后我渲染了一个名为 books.html 的模板，并将所有书籍作为占位符传入。
Dialogue: 0,1:58:30.97,1:58:33.19,中文,,0,0,0,,我们来深入研究一下。
Dialogue: 0,1:58:33.19,1:58:36.98,中文,,0,0,0,,让我打开 templates 目录下的 books.html 文件。
Dialogue: 0,1:58:36.98,1:58:42.64,中文,,0,0,0,,虽然这是今天新学的，但在语法上你可能越来越熟悉了。
Dialogue: 0,1:58:42.64,1:58:44.24,中文,,0,0,0,,这是 h1 标签。
Dialogue: 0,1:58:44.24,1:58:45.54,中文,,0,0,0,,这是我的循环。
Dialogue: 0,1:58:45.54,1:58:49.94,中文,,0,0,0,,这是 h2 标签，它将在循环中输出当前书籍的标题。
Dialogue: 0,1:58:49.94,1:58:51.18,中文,,0,0,0,,这是表单。
Dialogue: 0,1:58:51.18,1:58:54.01,中文,,0,0,0,,这是将在表单中输出的书籍 ID。
Dialogue: 0,1:58:54.01,1:58:56.95,中文,,0,0,0,,我没有手动输入七个长表单。
Dialogue: 0,1:58:56.95,1:59:08.36,中文,,0,0,0,,我只是在这个模板中创建了一个，以便它能自动生成，就像 Amazon 这样的网站会用来一次性显示 10 本书或 10 个搜索结果或更多内容一样。
Dialogue: 0,1:59:08.36,1:59:12.12,中文,,0,0,0,,我们来看看 /cart 路径，这是最有趣的部分。
Dialogue: 0,1:59:12.12,1:59:15.62,中文,,0,0,0,,这段代码比较长，但我们来看看能不能理解它。
Dialogue: 0,1:59:15.62,1:59:20.80,中文,,0,0,0,,如果用户通过 GET 或 POST 请求提交到 /cart，我们会先执行这段代码。
Dialogue: 0,1:59:20.80,1:59:23.97,中文,,0,0,0,,这是必要的，是一些样板代码。
Dialogue: 0,1:59:23.97,1:59:29.83,中文,,0,0,0,,我们将使用 session 对象来存储一个名为 cart 的变量，在本例中，它将是一个列表。
Dialogue: 0,1:59:29.83,1:59:31.83,中文,,0,0,0,,session 只是一个字典。
Dialogue: 0,1:59:31.83,1:59:33.81,中文,,0,0,0,,你可以往里面放任何你想放的东西。
Dialogue: 0,1:59:33.81,1:59:36.69,中文,,0,0,0,,之前，我们放入了学生姓名和运动项目。
Dialogue: 0,1:59:36.69,1:59:38.47,中文,,0,0,0,,现在，
Dialogue: 0,1:59:38.47,1:59:45.82,中文,,0,0,0,,我想做的是，抱歉，之前我们把学生的姓名，用户的姓名放进去了。
Dialogue: 0,1:59:45.82,1:59:51.11,中文,,0,0,0,,现在我要存储一个购物车键，它的值是一个列表。
Dialogue: 0,1:59:51.11,1:59:54.46,中文,,0,0,0,,为什么？因为我想在这个列表中添加越来越多的书。
Dialogue: 0,1:59:54.46,2:00:00.28,中文,,0,0,0,,这样可以确保用户第一次这样做的时候至少有一个空的购物车。
Dialogue: 0,2:00:00.28,2:00:05.22,中文,,0,0,0,,如果他们通过 POST 访问这个表单，让我们继续获取他们 POST 的图书 ID。
Dialogue: 0,2:00:05.22,2:00:14.27,中文,,0,0,0,,如果它不为空，如果有一个数字，比如 1、2 或 3，让我们继续进入购物车，根据这一行，它是一个列表。
Dialogue: 0,2:00:14.27,2:00:16.25,中文,,0,0,0,,然后追加该 ID。
Dialogue: 0,2:00:16.25,2:00:23.42,中文,,0,0,0,,所以购物车中的这份图书列表将包含 1、2、4、6，以及你实际购买的任何图书。
Dialogue: 0,2:00:23.42,2:00:26.10,中文,,0,0,0,,然后用户被重定向到购物车。
Dialogue: 0,2:00:26.10,2:00:31.18,中文,,0,0,0,,但是，如果用户是通过 GET 而不是 POST 到达这里的呢？这个就比较简单了。
Dialogue: 0,2:00:31.18,2:00:37.25,中文,,0,0,0,,如果你只是访问 /cart，我们会从 ID 在其中的图书中选择星号。
Dialogue: 0,2:00:37.25,2:00:39.81,中文,,0,0,0,,这很有趣。
Dialogue: 0,2:00:39.81,2:00:42.75,中文,,0,0,0,,这份列表，你可能以前没见过这种语法。
Dialogue: 0,2:00:42.75,2:00:53.01,中文,,0,0,0,,但是如果你阅读了 CS50 库的文档，如果你选择了一些东西并使用了一个问号占位符，并且占位符本身是一个列表，
Dialogue: 0,2:00:53.01,2:01:01.43,中文,,0,0,0,,我们会输出一个逗号分隔的值列表，就像你在习题集 7 中自己做 SQL 查询时可能会用到的一样。
Dialogue: 0,2:01:01.43,2:01:07.86,中文,,0,0,0,,所以这只是意味着只显示我购物车里的那些书，而不是 Carter 的，也不是别人的，也不是整个数据库里的。
Dialogue: 0,2:01:07.86,2:01:13.04,中文,,0,0,0,,只显示我购物车里的书，然后按原样渲染。
Dialogue: 0,2:01:13.04,2:01:17.48,中文,,0,0,0,,所以我们只看到了 /books 处的目录是什么样子的。
Dialogue: 0,2:01:17.48,2:01:19.44,中文,,0,0,0,,让我们继续 /。
Dialogue: 0,2:01:19.44,2:01:22.36,中文,,0,0,0,,让我们继续，也许把第一本书添加到我的购物车里。
Dialogue: 0,2:01:22.36,2:01:25.25,中文,,0,0,0,,现在我看到了 /cart。
Dialogue: 0,2:01:25.25,2:01:28.03,中文,,0,0,0,,只有第一本书，它的 ID 是 1。
Dialogue: 0,2:01:28.03,2:01:33.68,中文,,0,0,0,,现在我回到书店页面，向下滚动到第七本书，把它添加到购物车。
Dialogue: 0,2:01:33.68,2:01:36.46,中文,,0,0,0,,现在我在这里也看到了。
Dialogue: 0,2:01:36.46,2:01:40.26,中文,,0,0,0,,同时，所有这些信息都存储在我的会话中。
Dialogue: 0,2:01:40.26,2:01:49.15,中文,,0,0,0,,所以当我一次又一次地刷新购物车时，我只看到我的两本书，是因为我们只检查会话中的列表。
Dialogue: 0,2:01:49.15,2:01:55.33,中文,,0,0,0,,Flask 确保了我的会话与你的会话不同，也与 Carter 的会话不同。
Dialogue: 0,2:01:55.33,2:02:02.12,中文,,0,0,0,,但你只需要编写一次代码，它就可以同时为成千上万，甚至数百万人工作。
Dialogue: 0,2:02:02.12,2:02:06.84,中文,,0,0,0,,对此有什么问题吗？
Dialogue: 0,2:02:06.84,2:02:09.34,中文,,0,0,0,,是的，后面那位。
Dialogue: 0,2:02:09.34,2:02:15.33,中文,,0,0,0,,抱歉，请大声一点。
Dialogue: 0,2:02:15.33,2:02:19.75,中文,,0,0,0,,总结一下，用户永远不会有相同的会话值。
Dialogue: 0,2:02:19.75,2:02:23.58,中文,,0,0,0,,理论上，植入的 cookie 不会对每个人都显示为笑脸。
Dialogue: 0,2:02:23.58,2:02:26.76,中文,,0,0,0,,我们每个人都会得到一个分配给自己的大随机数。
Dialogue: 0,2:02:26.76,2:02:30.88,中文,,0,0,0,,所以这就像我们每个人都有一个完全独一无二的手印，其他人看不到。
Dialogue: 0,2:02:30.88,2:02:40.31,中文,,0,0,0,,其他人看不到它的原因是，如果网站使用 HTTPS，每次显示这个手印时，每次来回发送这个 cookie 时，它都是加密的。
Dialogue: 0,2:02:40.31,2:02:49.80,中文,,0,0,0,,所以即使我们碰巧有相同的内容，因为我们喜欢相同的书籍，我们每个人也会拥有独立的 cookie、独立的内存、独立的会话。
Dialogue: 0,2:02:49.80,2:02:54.62,中文,,0,0,0,,你后面那位，是的。
Dialogue: 0,2:02:54.62,2:02:57.64,中文,,0,0,0,,问得好，会话什么时候结束？这是完全可配置的。
Dialogue: 0,2:02:57.64,2:03:01.44,中文,,0,0,0,,通常情况下，它会在你关闭标签页或退出浏览器时结束。
Dialogue: 0,2:03:01.44,2:03:06.97,中文,,0,0,0,,或者你也可以把 Cookie 配置成持续一天、一周甚至更长时间。
Dialogue: 0,2:03:06.97,2:03:16.13,中文,,0,0,0,,例如，当你登录 Gmail 时，他们可能会在你的电脑上设置一个 Cookie，有效期可能是一周、一个月或一年。
Dialogue: 0,2:03:16.13,2:03:22.10,中文,,0,0,0,,因为如果你每次都要登录账户，这会很烦人，可能会让你转向 Outlook 或其他服务。
Dialogue: 0,2:03:22.10,2:03:25.28,中文,,0,0,0,,而你的银行账户可能只会在你关闭标签页时才等待你。
Dialogue: 0,2:03:25.28,2:03:29.48,中文,,0,0,0,,为了你的资金安全，他们会更快地自动删除会话。
Dialogue: 0,2:03:29.48,2:03:30.88,中文,,0,0,0,,但这完全是可配置的。
Dialogue: 0,2:03:30.88,2:03:35.22,中文,,0,0,0,,默认情况下，就像我使用的那样，当浏览器本身关闭时，它通常会被丢弃。
Dialogue: 0,2:03:35.22,2:03:39.58,中文,,0,0,0,,这也是使用隐身模式开发网站的另一个原因。
Dialogue: 0,2:03:39.58,2:03:46.35,中文,,0,0,0,,因为如果你想丢弃所有 Cookie，只需关闭隐身窗口模式，打开一个新的窗口，就可以重新开始了。
Dialogue: 0,2:03:46.35,2:03:50.57,中文,,0,0,0,,你不必手动删除所有 Cookie，因为这可能会让你退出你真正关心的网站。
Dialogue: 0,2:03:50.57,2:03:52.33,中文,,0,0,0,,你真正关心的网站。
Dialogue: 0,2:03:52.33,2:03:56.81,中文,,0,0,0,,是的。
Dialogue: 0,2:03:56.81,2:03:57.31,中文,,0,0,0,,好问题。
Dialogue: 0,2:03:57.31,2:04:02.06,中文,,0,0,0,,使用会话时，如果有人恶意更改表单的值，会影响到其他人吗？
Dialogue: 0,2:04:02.06,2:04:08.14,中文,,0,0,0,,理论上不会，因为你最多只能在自己不需要的购物车里添加商品。
Dialogue: 0,2:04:08.14,2:04:22.23,中文,,0,0,0,,即使它在服务器上，也不会影响到你、Carter 或其他任何人，\N除非发生了一些更全局性的事件，比如注册或取消注册一项运动，或者从亚马逊数据库中删除书籍。
Dialogue: 0,2:04:22.23,2:04:27.09,中文,,0,0,0,,那将是一个问题，但在这种情况下，我们只是从网站提供给我的会话中删除东西。
Dialogue: 0,2:04:27.09,2:04:38.68,中文,,0,0,0,,今天最后一个主题是 API，也就是应用程序编程接口，现在到处都能看到。
Dialogue: 0,2:04:38.68,2:04:49.49,中文,,0,0,0,,这是一个非常通用的术语，实际上，你在 C、Scratch、Python、SQL 中使用的任何函数都是 API，因为它们都有一种与这些函数交互的标准方式。
Dialogue: 0,2:04:49.49,2:04:51.61,中文,,0,0,0,,与这些函数交互的标准方式。
Dialogue: 0,2:04:51.61,2:04:52.63,中文,,0,0,0,,它们都有名字。
Dialogue: 0,2:04:52.63,2:04:54.17,中文,,0,0,0,,它们有时有返回值。
Dialogue: 0,2:04:54.17,2:04:55.89,中文,,0,0,0,,它们有时有参数。
Dialogue: 0,2:04:55.89,2:04:59.34,中文,,0,0,0,,API 就是你如何使用函数的方式。
Dialogue: 0,2:04:59.34,2:05:03.90,中文,,0,0,0,,或者更概括地说，API 只是指定了你如何与某些服务交互。
Dialogue: 0,2:05:03.90,2:05:13.80,中文,,0,0,0,,所以现在，有很多基于 Web 的服务可以用来获取数据，比如天气、当前时间，或者 Amazon Books 的数据库。
Dialogue: 0,2:05:13.80,2:05:16.75,中文,,0,0,0,,所有这些都可能有 API，通常是基于 Web 的。
Dialogue: 0,2:05:16.75,2:05:24.09,中文,,0,0,0,,它们允许你使用 URL 或其他技术从其他人那里获取数据，就像你在远程调用函数一样。
Dialogue: 0,2:05:24.09,2:05:29.63,中文,,0,0,0,,HTTP 通常是用于从服务器获取数据的机制。
Dialogue: 0,2:05:29.63,2:05:32.48,中文,,0,0,0,,数据返回的方式可以如下。
Dialogue: 0,2:05:32.48,2:05:38.66,中文,,0,0,0,,让我们用过去几周熟悉的一些节目来结束最后一个例子。
Dialogue: 0,2:05:38.66,2:05:41.40,中文,,0,0,0,,让我们继续关闭旧的 Flask 版本。
Dialogue: 0,2:05:41.40,2:05:48.03,中文,,0,0,0,,回到 src9，进入一个名为 shows 的例子。
Dialogue: 0,2:05:48.03,2:05:52.31,中文,,0,0,0,,第一个版本，我将直接用 flask run 运行。
Dialogue: 0,2:05:52.31,2:05:54.87,中文,,0,0,0,,我将鼠标悬停在我的 URL 上，然后在这里打开它。
Dialogue: 0,2:05:54.87,2:05:58.92,中文,,0,0,0,,你会看到我现在有一个非常简单的表单，就像我们今天一直在做的那样。
Dialogue: 0,2:05:58.92,2:06:04.52,中文,,0,0,0,,我要在这个搜索框中输入 O-F-F-I-C-E，office，然后点击搜索。
Dialogue: 0,2:06:04.52,2:06:11.56,中文,,0,0,0,,你会看到我现在到达了一个以 /search、?、q = office 结尾的 URL。
Dialogue: 0,2:06:11.56,2:06:16.15,中文,,0,0,0,,所以这就像我自己做的一个简易版 google.com。
Dialogue: 0,2:06:16.15,2:06:25.27,中文,,0,0,0,,对于过去几周任何与 O-F-F-I-C-E 匹配的电视剧标题，我都会把它输出到一个无序列表中。
Dialogue: 0,2:06:25.27,2:06:26.53,中文,,0,0,0,,这是怎么实现的？
Dialogue: 0,2:06:26.53,2:06:33.32,中文,,0,0,0,,你可以想象一下，即使你现在可能还不能马上编写出这段代码，让我进入 src9。
Dialogue: 0,2:06:33.32,2:06:36.18,中文,,0,0,0,,让我进入 show 0。
Dialogue: 0,2:06:36.18,2:06:38.80,中文,,0,0,0,,让我打开 app.py。
Dialogue: 0,2:06:38.80,2:06:47.27,中文,,0,0,0,,在这个文件里，你会看到我正在获取一个名为 shows.db 的文件，它就像几周前那个文件的简化版本。
Dialogue: 0,2:06:47.27,2:06:48.89,中文,,0,0,0,,这就是我看到网页表单的原因。
Dialogue: 0,2:06:48.89,2:06:51.13,中文,,0,0,0,,我的第一个路由，我的索引非常简单。
Dialogue: 0,2:06:51.13,2:06:52.77,中文,,0,0,0,,它只是吐出了那个表单。
Dialogue: 0,2:06:52.77,2:06:55.93,中文,,0,0,0,,我的搜索路由，你可以把它想象成 google.com。
Dialogue: 0,2:06:55.93,2:06:58.13,中文,,0,0,0,,它只有四行代码。
Dialogue: 0,2:06:58.13,2:07:03.34,中文,,0,0,0,,如果用户向 /search 发送数据，就会调用名为 search 的函数。
Dialogue: 0,2:07:03.34,2:07:11.92,中文,,0,0,0,,我声明了一个名为 shows 的变量。我执行了一个 SQL 命令：SELECT * FROM shows WHERE title LIKE ?。
Dialogue: 0,2:07:11.92,2:07:29.13,中文,,0,0,0,,这里的语法有点疯狂，但我想在用户输入的前后加上百分号，\N并在这两个值之间加上实际输入 y。在 SQL 中，如果左右两边都有百分号，这意味着什么？
Dialogue: 0,2:07:29.13,2:07:32.13,中文,,0,0,0,,今天与 Jinja 无关。
Dialogue: 0,2:07:32.13,2:07:33.01,中文,,0,0,0,,它是一个通配符。
Dialogue: 0,2:07:33.01,2:07:38.51,中文,,0,0,0,,所以这意味着匹配左侧零个或多个字符，或匹配右侧零个或多个字符。
Dialogue: 0,2:07:38.51,2:07:42.79,中文,,0,0,0,,你必须将连接操作作为该函数的第二个参数。
Dialogue: 0,2:07:42.79,2:07:46.18,中文,,0,0,0,,你不能做一些聪明的事情，比如把它放在问号周围。
Dialogue: 0,2:07:46.18,2:07:49.64,中文,,0,0,0,,问号是插入这些值的占位符。
Dialogue: 0,2:07:49.64,2:07:55.32,中文,,0,0,0,,但这只是意味着，嘿，SQL，显示所有标题中包含 O-F-F-I-C-E 的内容。
Dialogue: 0,2:07:55.32,2:07:58.08,中文,,0,0,0,,这会返回一个字典列表。
Dialogue: 0,2:07:58.08,2:08:05.01,中文,,0,0,0,,我把它作为占位符传递给一个名为 shows 的变量。我们来看看 search.html。
Dialogue: 0,2:08:05.01,2:08:08.09,中文,,0,0,0,,在我的 templates 目录中，有一个名为 search.html 的文件。
Dialogue: 0,2:08:08.09,2:08:09.03,中文,,0,0,0,,超级简单。
Dialogue: 0,2:08:09.03,2:08:12.79,中文,,0,0,0,,我的意思是，这就像 google.com 搜索结果的本质。
Dialogue: 0,2:08:12.79,2:08:15.29,中文,,0,0,0,,我用一个无序列表来保持简单。
Dialogue: 0,2:08:15.29,2:08:18.70,中文,,0,0,0,,但我遍历了返回的 shows 列表中的每一个节目。
Dialogue: 0,2:08:18.70,2:08:21.40,中文,,0,0,0,,然后我用每个节目的标题输出一个 li。
Dialogue: 0,2:08:21.40,2:08:21.86,中文,,0,0,0,,就是这样。
Dialogue: 0,2:08:21.86,2:08:26.80,中文,,0,0,0,,现在，Google 有蓝色链接，还有一些预览，以及其他文本，比如每个页面的第一句话。
Dialogue: 0,2:08:26.80,2:08:28.34,中文,,0,0,0,,但这就是思路。
Dialogue: 0,2:08:28.34,2:08:33.71,中文,,0,0,0,,这在精神上与 google.com/search 为你做的事情非常相似。
Dialogue: 0,2:08:33.71,2:08:35.21,中文,,0,0,0,,那么，这是如何工作的呢？
Dialogue: 0,2:08:35.21,2:08:37.13,中文,,0,0,0,,这里还没有涉及 API。
Dialogue: 0,2:08:37.13,2:08:39.58,中文,,0,0,0,,这只是非常基本的 HTTP。
Dialogue: 0,2:08:39.58,2:08:43.10,中文,,0,0,0,,我提交表单，进入另一个路由，然后得到结果。
Dialogue: 0,2:08:43.10,2:08:44.30,中文,,0,0,0,,但是看看这个版本。
Dialogue: 0,2:08:44.30,2:08:46.37,中文,,0,0,0,,让我关闭这里的标签页。
Dialogue: 0,2:08:46.37,2:08:48.65,中文,,0,0,0,,打开我的第一个终端窗口。
Dialogue: 0,2:08:48.65,2:08:54.65,中文,,0,0,0,,让我进入今天 src9 目录下的 shows1，这次执行 flask run。
Dialogue: 0,2:08:54.65,2:08:57.38,中文,,0,0,0,,我把鼠标悬停在这个 URL 上，然后在这里打开它。
Dialogue: 0,2:08:57.38,2:08:59.72,中文,,0,0,0,,现在“提交”按钮不见了。
Dialogue: 0,2:08:59.72,2:09:11.19,中文,,0,0,0,,现在，我要制作一个使用 AJAX 技术的用户界面，AJAX 指的是异步 JavaScript 和 XML，这多少有点过时了，因为我们不再使用 XML 了。
Dialogue: 0,2:09:11.19,2:09:17.83,中文,,0,0,0,,但 AJAX 是一种技术， 有了它，你不再需要提交表单就能从服务器获取更多数据。
Dialogue: 0,2:09:17.83,2:09:25.61,中文,,0,0,0,,你可以像上周那样，用 JavaScript 监听按键按下或弹起的事件，一旦你听到这样的事件，
Dialogue: 0,2:09:25.61,2:09:35.61,中文,,0,0,0,,你就可以在 JavaScript 代码中偷偷地向服务器发送请求以获取更多数据，然后将其插入到 DOM 中，也就是计算机内存中的树状结构里。
Dialogue: 0,2:09:35.61,2:09:39.89,中文,,0,0,0,,这使得用户体验更加无缝，就像任何网站上的自动完成功能一样。
Dialogue: 0,2:09:39.89,2:09:44.24,中文,,0,0,0,,现在让我试着输入 o。我们得到了超快的自动完成结果。
Dialogue: 0,2:09:44.24,2:09:55.42,中文,,0,0,0,,F、F、I、C、E。你会发现，每次我在输入框中添加更多字符时，我都在进行另一次搜索，又一次搜索，又一次搜索，数据也在不断变化。
Dialogue: 0,2:09:55.42,2:10:02.83,中文,,0,0,0,,那么，这是如何实现的呢？让我回到 VS Code 这里。在我的另一个终端窗口中，打开 app.py。
Dialogue: 0,2:10:02.83,2:10:07.66,中文,,0,0,0,,在 app.py 中，你会看到仍然有一个搜索
Dialogue: 0,2:10:07.66,2:10:11.95,中文,,0,0,0,,路由在下面，它返回一个搜索模板。
Dialogue: 0,2:10:11.95,2:10:13.05,中文,,0,0,0,,但请看这里。
Dialogue: 0,2:10:13.05,2:10:17.19,中文,,0,0,0,,让我进入 templates/search.html。
Dialogue: 0,2:10:17.19,2:10:27.00,中文,,0,0,0,,注意，我们在这里确实一次又一次地返回了一个无序的节目列表。
Dialogue: 0,2:10:27.00,2:10:32.75,中文,,0,0,0,,返回的这个 HTML，让我打开它。
Dialogue: 0,2:10:32.75,2:10:33.79,中文,,0,0,0,,让我打开终端。
Dialogue: 0,2:10:33.79,2:10:36.42,中文,,0,0,0,,抱歉，版本错了。
Dialogue: 0,2:10:36.42,2:10:37.80,中文,,0,0,0,,抱歉，我进错文件夹了。
Dialogue: 0,2:10:37.80,2:10:39.38,中文,,0,0,0,,我们来解决这个问题。
Dialogue: 0,2:10:39.38,2:10:43.08,中文,,0,0,0,,在 shows1 中，app.py 的代码几乎一样。
Dialogue: 0,2:10:43.08,2:10:49.06,中文,,0,0,0,,在 search 这里，我稍微改了一下。我来展示一下这个版本的 search。
Dialogue: 0,2:10:49.06,2:10:52.30,中文,,0,0,0,,如果我打开 app.py，这是我的 search 路由。
Dialogue: 0,2:10:52.30,2:10:59.38,中文,,0,0,0,,我获取一个叫做 q 的变量，把它设置为 request.args 中用户输入的任何值，比如 q=office。
Dialogue: 0,2:10:59.38,2:11:03.28,中文,,0,0,0,,然后我检查用户是否真的输入了内容，如果是，则执行这条 SQL 查询。
Dialogue: 0,2:11:03.28,2:11:06.55,中文,,0,0,0,,从 shows 表中选择所有列，其中标题类似于用户输入的内容，使用相同的语法。
Dialogue: 0,2:11:06.55,2:11:12.33,中文,,0,0,0,,这次为了保持效率，我将结果总数限制为 50 个，而不是无限数量。
Dialogue: 0,2:11:12.33,2:11:18.19,中文,,0,0,0,,否则，如果用户没有输入任何内容，为了安全起见，我将 shows 设置为空列表。
Dialogue: 0,2:11:18.19,2:11:24.66,中文,,0,0,0,,如果你没有输入任何内容，就不会显示任何内容。无论如何，我都会渲染这个名为 search.html 的模板。
Dialogue: 0,2:11:24.66,2:11:31.13,中文,,0,0,0,,我们来看看。如果我打开 templates/search.html，这次没有布局。
Dialogue: 0,2:11:31.13,2:11:34.03,中文,,0,0,0,,没有继承 layout.html。
Dialogue: 0,2:11:34.03,2:11:38.49,中文,,0,0,0,,我实际上只是生成了一堆 li 片段。
Dialogue: 0,2:11:38.49,2:11:40.88,中文,,0,0,0,,为什么？我们来看看浏览器中发生了什么。
Dialogue: 0,2:11:40.88,2:11:43.04,中文,,0,0,0,,这就是 API 的开始。
Dialogue: 0,2:11:43.04,2:11:55.97,中文,,0,0,0,,如果我想让这个 API 可用，这个应用程序编程接口，我可以告诉全世界，\N如果你想在我的数据库中搜索电视剧，请访问这个 URL，它类似于 something, something, /search,
Dialogue: 0,2:11:55.97,2:12:01.65,中文,,0,0,0,,问号 q=office，或者 cat，或者 dog，或者其他任何东西。
Dialogue: 0,2:12:01.65,2:12:03.99,中文,,0,0,0,,我将返回给你的是这个。
Dialogue: 0,2:12:03.99,2:12:04.83,中文,,0,0,0,,回车。
Dialogue: 0,2:12:04.83,2:12:08.21,中文,,0,0,0,,我只会给你一堆 li 标签，看起来几乎一样。
Dialogue: 0,2:12:08.21,2:12:10.44,中文,,0,0,0,,但是让我看一下页面源代码。
Dialogue: 0,2:12:10.44,2:12:16.76,中文,,0,0,0,,我只会给你一部分 HTML 代码片段，而不是完整的 HTML 标签、body 标签、title 标签、head 标签。
Dialogue: 0,2:12:16.76,2:12:18.18,中文,,0,0,0,,我不会给你一个完整的网页。
Dialogue: 0,2:12:18.18,2:12:27.30,中文,,0,0,0,,我会给你一个 HTML 代码片段，你可以用它做任何你想做的事情，包括把它插入到你自己的无序列表中。
Dialogue: 0,2:12:27.30,2:12:29.88,中文,,0,0,0,,请注意在这个应用程序中会发生什么。
Dialogue: 0,2:12:29.88,2:12:44.55,中文,,0,0,0,,如果我回到 VS Code，打开我的 index 模板，你会看到一些 JavaScript 的代码。在这个只有文本框而没有按钮的表单中，我做了什么呢？
Dialogue: 0,2:12:44.55,2:12:46.79,中文,,0,0,0,,在一个 script 标签中。
Dialogue: 0,2:12:46.79,2:12:48.81,中文,,0,0,0,,我创建了一个名为 input 的变量。
Dialogue: 0,2:12:48.81,2:12:56.56,中文,,0,0,0,,我使用了 querySelector 函数，它可以获取表单中文本框的引用。
Dialogue: 0,2:12:56.56,2:12:58.34,中文,,0,0,0,,这样我就能看到用户输入的内容了。
Dialogue: 0,2:12:58.34,2:13:00.02,中文,,0,0,0,,今天的内容有些不同。
Dialogue: 0,2:13:00.02,2:13:09.64,中文,,0,0,0,,我使用了 input.addEventListener，这是 JavaScript 中的一种方法，就像在 Scratch 中一样，监听事件的发生，就像监听绿旗被点击一样。
Dialogue: 0,2:13:09.64,2:13:13.38,中文,,0,0,0,,但在这种情况下，它监听的是与 input 相关的事件。
Dialogue: 0,2:13:13.38,2:13:19.73,中文,,0,0,0,,比如键盘输入，无论是复制粘贴、手动输入还是其他方式。
Dialogue: 0,2:13:19.73,2:13:22.41,中文,,0,0,0,,每当事件发生时，就调用这个函数。
Dialogue: 0,2:13:22.41,2:13:24.13,中文,,0,0,0,,async 代表异步。
Dialogue: 0,2:13:24.13,2:13:30.83,中文,,0,0,0,,这是一个专业术语，意味着这个函数可能需要几分之一秒，甚至一两秒的时间来执行。
Dialogue: 0,2:13:30.83,2:13:34.73,中文,,0,0,0,,所以它会在后台执行。
Dialogue: 0,2:13:34.73,2:13:36.33,中文,,0,0,0,,那么它要做什么呢？
Dialogue: 0,2:13:36.33,2:13:46.21,中文,,0,0,0,,它将调用所有浏览器都支持的一个 JavaScript 函数 fetch，这个函数使用 HTTP 从服务器获取更多数据。
Dialogue: 0,2:13:46.21,2:13:53.82,中文,,0,0,0,,它将从一个名为 /search 的路径获取数据，路径后面跟着问号、q、等号和用户输入的值。
Dialogue: 0,2:13:53.82,2:13:59.42,中文,,0,0,0,,我只是手动创建了自己的迷你 URL 并告诉 JavaScript 去获取 HTML。
Dialogue: 0,2:13:59.42,2:14:05.38,中文,,0,0,0,,当它通过这行名为 response.txt 的文本返回时，我来解释一下 await。
Dialogue: 0,2:14:05.38,2:14:07.80,中文,,0,0,0,,Await 意味着它可能不会立即返回。
Dialogue: 0,2:14:07.80,2:14:08.94,中文,,0,0,0,,让我们等待响应。
Dialogue: 0,2:14:08.94,2:14:11.63,中文,,0,0,0,,当它返回时，就执行这段代码。
Dialogue: 0,2:14:11.63,2:14:12.83,中文,,0,0,0,,我会这样做。
Dialogue: 0,2:14:12.83,2:14:26.95,中文,,0,0,0,,我会在整个网页文档中搜索这个 ul 标签，它在这个页面中的某个地方，我们稍后会看到，将其内部 HTML 更改为所有匹配节目的 li, li, li 片段。
Dialogue: 0,2:14:26.95,2:14:28.27,中文,,0,0,0,,这一切都去哪儿了？
Dialogue: 0,2:14:28.27,2:14:33.07,中文,,0,0,0,,如果你向上滚动，你会注意到上面有我常用的 HTML。
Dialogue: 0,2:14:33.07,2:14:35.47,中文,,0,0,0,,Head 标签、body 标签等等。
Dialogue: 0,2:14:35.47,2:14:38.36,中文,,0,0,0,,这是我们已经讨论过的文本框。
Dialogue: 0,2:14:38.36,2:14:41.90,中文,,0,0,0,,没有用于提交的按钮，因为一切都是自动发生的。
Dialogue: 0,2:14:41.90,2:14:48.90,中文,,0,0,0,,但是，默认情况下，这个空的 UL 在我们开始使用 API 之前没有任何内容。
Dialogue: 0,2:14:48.90,2:14:51.40,中文,,0,0,0,,最后一点是这个。
Dialogue: 0,2:14:51.40,2:14:58.88,中文,,0,0,0,,这是一种从服务器获取数据的丑陋、草率的方式，只是获取 HTML 片段。
Dialogue: 0,2:14:58.88,2:15:00.61,中文,,0,0,0,,如果我没有使用 HTML 怎么办？
Dialogue: 0,2:15:00.61,2:15:06.81,中文,,0,0,0,,我想将这些电视剧存储在 PDF 中，或者存储在其他 Web 标签、表格或类似的东西中。
Dialogue: 0,2:15:06.81,2:15:12.71,中文,,0,0,0,,服务器假设我想要用 li 标签包围我的每个数据，这真的没有意义。
Dialogue: 0,2:15:12.71,2:15:15.69,中文,,0,0,0,,最好是返回一种更通用的格式，
Dialogue: 0,2:15:15.69,2:15:23.52,中文,,0,0,0,,而这种格式现在几乎总是被称为 JSON，JavaScript 对象表示法。
Dialogue: 0,2:15:23.52,2:15:24.36,中文,,0,0,0,,我来演示一下。
Dialogue: 0,2:15:24.36,2:15:33.62,中文,,0,0,0,,让我关闭这两个标签页，然后打开终端窗口，并取消之前运行的 Flask 版本。
Dialogue: 0,2:15:33.62,2:15:39.45,中文,,0,0,0,,让我关闭这个版本，然后查看我们最终的版本 shows2，并运行 Flask。
Dialogue: 0,2:15:39.45,2:15:42.77,中文,,0,0,0,,我将鼠标悬停在 URL 上，然后在浏览器中打开它。
Dialogue: 0,2:15:42.77,2:15:53.24,中文,,0,0,0,,放大后，我要手动访问 /search，？，q=office，回车。
Dialogue: 0,2:15:53.24,2:15:55.60,中文,,0,0,0,,这就是 JSON 的样子。
Dialogue: 0,2:15:55.60,2:15:57.84,中文,,0,0,0,,乍一看，这似乎并没有改进。
Dialogue: 0,2:15:57.84,2:16:00.78,中文,,0,0,0,,它看起来很疯狂，只是一大堆文本。
Dialogue: 0,2:16:00.78,2:16:05.18,中文,,0,0,0,,但这些文本足以让计算机可靠地处理它。
Dialogue: 0,2:16:05.18,2:16:08.16,中文,,0,0,0,,注意这里有一个方括号。
Dialogue: 0,2:16:08.16,2:16:12.47,中文,,0,0,0,,如果我向下滚动到最底部，会看到一个闭合的方括号。
Dialogue: 0,2:16:12.47,2:16:23.59,中文,,0,0,0,,方括号里面是一个花括号，然后是 ID、冒号和一个数字，然后是标题，引号，冒号，然后是标题，最后是闭合的花括号。
Dialogue: 0,2:16:23.59,2:16:36.54,中文,,0,0,0,,所以在 JavaScript 对象表示法中，你看到的是一种非常标准、超级流行的格式，\N它只是文本，仍然使用方括号表示列表，也就是数组，仍然使用花括号表示字典，即键值对。
Dialogue: 0,2:16:36.54,2:16:42.60,中文,,0,0,0,,所以你在这里看到的是一个巨大的列表，包含多达 50 个（我认为）从这个 API 返回的节目。
Dialogue: 0,2:16:42.60,2:16:47.74,中文,,0,0,0,,每个节目都有一个字典，或者说是一个键值对的对象。
Dialogue: 0,2:16:47.74,2:16:49.22,中文,,0,0,0,,哪些键和值？
Dialogue: 0,2:16:49.22,2:16:53.47,中文,,0,0,0,,一个 ID 键和一个标题键，每个键都有各自的值。
Dialogue: 0,2:16:53.47,2:16:58.41,中文,,0,0,0,,这与 IMDB 的数据相同，你可能在视觉上还记得其中一些。
Dialogue: 0,2:16:58.41,2:17:03.96,中文,,0,0,0,,这是一种非常原始的、计算机友好的方式来返回一大堆我们人类不需要看到的数据。
Dialogue: 0,2:17:03.96,2:17:06.74,中文,,0,0,0,,但我可以使用这些数据。
Dialogue: 0,2:17:06.74,2:17:14.40,中文,,0,0,0,,回到 VS Code，我们打开另一个终端窗口，进入 src9/shows 2。
Dialogue: 0,2:17:14.40,2:17:23.57,中文,,0,0,0,,在这里，我们打开 templates 文件夹下的 index.html，之前
Dialogue: 0,2:17:23.57,2:17:29.31,中文,,0,0,0,,它只用了 innerHTML 的技巧，你不会喜欢这种语法的。
Dialogue: 0,2:17:29.31,2:17:32.53,中文,,0,0,0,,但我至少要解释一下我们在做什么。
Dialogue: 0,2:17:32.53,2:17:42.68,中文,,0,0,0,,JSON 通常是更好的选择，它更通用、用途更广，不局限于用户和语言，因为它只是文本。
Dialogue: 0,2:17:42.68,2:17:51.56,中文,,0,0,0,,所以无论你使用的是 Python、C、C++、JavaScript、Ruby、PHP 还是其他语言，所有这些语言都可以处理 JSON 信息。
Dialogue: 0,2:17:51.56,2:17:54.51,中文,,0,0,0,,实际上，这里有一些 JavaScript 代码就是这样做的。
Dialogue: 0,2:17:54.51,2:17:56.39,中文,,0,0,0,,最初的代码和之前一样。
Dialogue: 0,2:17:56.39,2:18:00.37,中文,,0,0,0,,我声明了一个名为 input 的变量，它允许我访问用户的文本框。
Dialogue: 0,2:18:00.37,2:18:04.24,中文,,0,0,0,,我监听用户的输入，比如按键的按下和弹起。
Dialogue: 0,2:18:04.24,2:18:07.94,中文,,0,0,0,,当这些事件发生时，我调用这个匿名函数。
Dialogue: 0,2:18:07.94,2:18:15.79,中文,,0,0,0,,我使用与之前完全相同的代码从服务器获取数据，搜索问号 q=office 或其他任何内容。
Dialogue: 0,2:18:15.79,2:18:27.67,中文,,0,0,0,,这是我用来将 JSON 数据转换为我自己的 HTML 格式的新代码，可以是无序列表、有序列表、表格或其他任何格式。
Dialogue: 0,2:18:27.67,2:18:28.75,中文,,0,0,0,,我在做什么？
Dialogue: 0,2:18:28.75,2:18:31.19,中文,,0,0,0,,我创建了一个名为 HTML 的变量，并将其初始化为空字符串。
Dialogue: 0,2:18:31.19,2:18:33.62,中文,,0,0,0,,所以一开始我没有 HTML 代码。
Dialogue: 0,2:18:33.62,2:18:37.12,中文,,0,0,0,,然后我遍历这些 shows 中的每个 ID。
Dialogue: 0,2:18:37.12,2:18:41.54,中文,,0,0,0,,所以 IMDB 的每一个唯一标识符，我都会逐个遍历它们。
Dialogue: 0,2:18:41.54,2:18:47.51,中文,,0,0,0,,然后我进入这个 show，添加它的 ID 位置，并获取它的标题。
Dialogue: 0,2:18:47.51,2:18:51.36,中文,,0,0,0,,而这是...
Dialogue: 0,2:18:51.36,2:18:52.96,中文,,0,0,0,,先把这个放一边。
Dialogue: 0,2:18:52.96,2:19:03.44,中文,,0,0,0,,我获取这个 HTML 变量，将它与我自己的 li 标签、标题以及结束 li 标签连接起来。
Dialogue: 0,2:19:03.44,2:19:05.38,中文,,0,0,0,,我跳过了这一步，因为它很快就变得很复杂。
Dialogue: 0,2:19:05.38,2:19:09.65,中文,,0,0,0,,但事实证明，如果某些电视剧的标题中包含尖括号，
Dialogue: 0,2:19:09.65,2:19:12.49,中文,,0,0,0,,那可能会破坏我的整个 HTML 结构。
Dialogue: 0,2:19:12.49,2:19:22.19,中文,,0,0,0,,你可能还记得上周我们简单地提到了版权符号，它是用 HTML 实体表示的，使用“&”符号、“#”符号、数字 169 和分号。
Dialogue: 0,2:19:22.19,2:19:33.99,中文,,0,0,0,,事实证明，还有其他类似的由字符组成的加密序列，\N它们代表着其他危险的或无法输入的字符，比如这个字符，它可能会让计算机误以为它是一个标签的开头。
Dialogue: 0,2:19:33.99,2:19:39.32,中文,,0,0,0,,还有一个“&”符号，它同样可能误导计算机，使其认为这是一个实体，但实际上它并不是。
Dialogue: 0,2:19:39.32,2:19:43.72,中文,,0,0,0,,但长话短说，幸好有一些库可以帮你处理大部分这类问题。
Dialogue: 0,2:19:43.72,2:19:59.16,中文,,0,0,0,,对我们来说，重要的是，现在你已经了解了一些 HTTP、HTML、CSS 和 JavaScript 的知识，\N所有这些都有各自的作用，你可以最终使用它们来构建你自己的 Web 应用程序，就像你将在习题集 9 中做的那样。
Dialogue: 0,2:19:59.16,2:20:05.83,中文,,0,0,0,,将所有这些语言结合在一起，构建功能齐全的 Web 应用程序、移动应用程序或其他任何东西。
Dialogue: 0,2:20:05.83,2:20:08.59,中文,,0,0,0,,为此，我认为我们已经准备好了。
Dialogue: 0,2:20:08.59,2:20:11.83,中文,,0,0,0,,第一个也可以有这些 cookies。
Dialogue: 0,2:20:11.83,2:20:15.69,中文,,0,0,0,,我们下节课，也是 CS50 的最后一节课再见。
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
