[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 3
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1152
PlayResY: 720

[Aegisub Project Garbage]
Export Encoding: Unicode (UTF-8)
Audio File: D:/python_code/video_tool/video_tool/result/[61B SP24] Lecture 17 - B-Trees (2-3, 2-3-4 Trees).mp4
Video File: D:/python_code/video_tool/video_tool/result/[61B SP24] Lecture 17 - B-Trees (2-3, 2-3-4 Trees).mp4
Video AR Mode: 4
Video AR Value: 1.600000
Video Zoom Percent: 0.750000
Scroll Position: 975
Active Line: 976
Video Position: 11471

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,13,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,90,100,0,0,1,1.33333,1.33333,2,6,6,7,1
Style: 英文,Arial,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.33333,1.33333,2,1,1,5,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.33333,1.33333,2,2,2,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:00:05.67,0:00:08.39,英文,,0,0,0,,Turn off my mic?
Dialogue: 0,0:00:05.67,0:00:08.39,中文,,0,0,0,,关闭我的麦克风
Dialogue: 0,0:00:08.39,0:00:11.48,英文,,0,0,0,,But my mic is off.
Dialogue: 0,0:00:08.39,0:00:11.48,中文,,0,0,0,,可是我的麦克风已经关闭了
Dialogue: 0,0:00:11.48,0:00:14.34,英文,,0,0,0,,Test, test, test.
Dialogue: 0,0:00:11.48,0:00:14.34,中文,,0,0,0,,测试 测试 测试
Dialogue: 0,0:00:14.34,0:00:17.80,英文,,0,0,0,,Huh?
Dialogue: 0,0:00:14.34,0:00:17.80,中文,,0,0,0,,啊
Dialogue: 0,0:00:17.80,0:00:19.08,英文,,0,0,0,,Is it good?
Dialogue: 0,0:00:17.80,0:00:19.08,中文,,0,0,0,,还好吗
Dialogue: 0,0:00:19.08,0:00:21.01,英文,,0,0,0,,Any audio complaints?
Dialogue: 0,0:00:19.08,0:00:21.01,中文,,0,0,0,,有任何音频问题吗
Dialogue: 0,0:00:21.01,0:00:22.23,英文,,0,0,0,,OK, I'm going to start talking.
Dialogue: 0,0:00:21.01,0:00:22.23,中文,,0,0,0,,好的 我要开始讲话了
Dialogue: 0,0:00:22.23,0:00:24.47,英文,,0,0,0,,You complain to me if there's bad audio.
Dialogue: 0,0:00:22.23,0:00:24.47,中文,,0,0,0,,如果音频不好 你就向我抱怨
Dialogue: 0,0:00:24.47,0:00:26.35,英文,,0,0,0,,OK.
Dialogue: 0,0:00:26.35,0:00:27.53,英文,,0,0,0,,Hi.
Dialogue: 0,0:00:26.35,0:00:27.53,中文,,0,0,0,,嗨
Dialogue: 0,0:00:27.53,0:00:29.35,英文,,0,0,0,,It's me again.
Dialogue: 0,0:00:27.53,0:00:29.35,中文,,0,0,0,,我又来了
Dialogue: 0,0:00:29.35,0:00:42.09,英文,,0,0,0,,So in the last three, four, five lectures, we talked about different ways to implement the set and the list abstract data types and the map abstract data type.
Dialogue: 0,0:00:29.35,0:00:42.09,中文,,0,0,0,,在过去的三、四、五次讲座中 我们讨论了实现集合和列表抽象数据类型以及映射抽象数据类型的不同方法
Dialogue: 0,0:00:42.09,0:00:51.43,英文,,0,0,0,,So remember, we talked about using binary search trees to represent a set or using hash maps to represent a set.
Dialogue: 0,0:00:42.09,0:00:51.43,中文,,0,0,0,,记住 我们谈到了使用二叉搜索树来表示集合 或者使用哈希映射来表示集合
Dialogue: 0,0:00:51.43,0:00:54.97,英文,,0,0,0,,and also using binary search trees and hash maps to represent maps.
Dialogue: 0,0:00:51.43,0:00:54.97,中文,,0,0,0,,还有使用二叉搜索树和哈希映射来表示映射
Dialogue: 0,0:00:54.97,0:01:05.58,英文,,0,0,0,,Today, we're gonna switch gears and do another abstract data type that's maybe not as famous as the set in the map, but is also super useful, and it's called the priority queue.
Dialogue: 0,0:00:54.97,0:01:05.58,中文,,0,0,0,,今天 我们要转变一下方向 介绍另一种可能没有集合和映射那么有名 但同样超级实用的抽象数据类型 它被称为优先队列
Dialogue: 0,0:01:05.58,0:01:13.90,英文,,0,0,0,,So just like when we did destroyed sets, and just like when we did sets and maps, I will first tell you about what the abstract data type is.
Dialogue: 0,0:01:05.58,0:01:13.90,中文,,0,0,0,,就像我们讨论集合和映射时一样 我会先告诉你这个抽象数据类型是什么
Dialogue: 0,0:01:13.90,0:01:18.94,英文,,0,0,0,,So what does the user expect to be able to do on this object?
Dialogue: 0,0:01:13.90,0:01:18.94,中文,,0,0,0,,那么用户希望在这个对象上能做什么呢
Dialogue: 0,0:01:18.94,0:01:22.13,英文,,0,0,0,,And then we'll talk about how to actually implement it.
Dialogue: 0,0:01:18.94,0:01:22.13,中文,,0,0,0,,然后我们将讨论如何实际实现它
Dialogue: 0,0:01:22.13,0:01:29.48,英文,,0,0,0,,So kind of the same structure as the past few lectures, but this time with a slightly more exotic data structure.
Dialogue: 0,0:01:22.13,0:01:29.48,中文,,0,0,0,,与过去几堂课程的结构类似 但这次使用了一个略微更不同寻常的数据结构
Dialogue: 0,0:01:29.48,0:01:32.88,英文,,0,0,0,,The priority queue abstract data type.
Dialogue: 0,0:01:29.48,0:01:32.88,中文,,0,0,0,,优先队列抽象数据类型
Dialogue: 0,0:01:32.88,0:01:34.98,英文,,0,0,0,,What does the user want to see?
Dialogue: 0,0:01:32.88,0:01:34.98,中文,,0,0,0,,用户希望看到什么呢
Dialogue: 0,0:01:34.98,0:01:41.48,英文,,0,0,0,,Well, the user wants to see a collection of items, so a pile of things, strings, integers, dogs, whatever.
Dialogue: 0,0:01:34.98,0:01:41.48,中文,,0,0,0,,好的 用户想要看到一堆项目 就是一堆东西 字符串 整数 狗 无论什么
Dialogue: 0,0:01:41.48,0:01:46.91,英文,,0,0,0,,But they want to be able to interact with the collection of items in this very specific way.
Dialogue: 0,0:01:41.48,0:01:46.91,中文,,0,0,0,,但是他们希望能以这种非常特定的方式与项目集进行交互
Dialogue: 0,0:01:46.91,0:01:48.91,英文,,0,0,0,,So there should be an add method.
Dialogue: 0,0:01:46.91,0:01:48.91,中文,,0,0,0,,应该有一个添加方法
Dialogue: 0,0:01:48.91,0:01:53.03,英文,,0,0,0,,The user should be able to throw things into the collection of items.
Dialogue: 0,0:01:48.91,0:01:53.03,中文,,0,0,0,,用户应该能够将东西添加到项目集中
Dialogue: 0,0:01:53.03,0:01:54.09,英文,,0,0,0,,OK.
Dialogue: 0,0:01:54.09,0:02:02.89,英文,,0,0,0,,But when the user wants to interact with things, there's a restriction, which is that the user is only ever going to ask about the smallest item in the collection.
Dialogue: 0,0:01:54.09,0:02:02.89,中文,,0,0,0,,但是当用户想要与事物交互时 有一个限制 就是用户只会询问集合中最小的项目
Dialogue: 0,0:02:02.89,0:02:09.28,英文,,0,0,0,,So the user might ask, hey, give me the smallest item in the priority queue, and you should be able to return that.
Dialogue: 0,0:02:02.89,0:02:09.28,中文,,0,0,0,,用户可能会问 嘿 请给我优先级队列中最小的项目 然后你应该能够返回那个
Dialogue: 0,0:02:09.28,0:02:14.06,英文,,0,0,0,,The user could also say, hey, can you remove the smallest item and give it to me?
Dialogue: 0,0:02:09.28,0:02:14.06,中文,,0,0,0,,用户还可以说 嘿 你能把最小的东西移除并给我吗
Dialogue: 0,0:02:14.06,0:02:19.77,英文,,0,0,0,,And you return the smallest item and remove it from the priority queue collection of items.
Dialogue: 0,0:02:14.06,0:02:19.77,中文,,0,0,0,,然后你返回最小的东西并从优先队列项的集合中移除它
Dialogue: 0,0:02:19.77,0:02:25.58,英文,,0,0,0,,You can also return the size, and it would tell you how many things are in this priority queue.
Dialogue: 0,0:02:19.77,0:02:25.58,中文,,0,0,0,,你还可以返回大小 它会告诉你有多少东西在这个优先队列中
Dialogue: 0,0:02:25.58,0:02:26.44,英文,,0,0,0,,So that's it.
Dialogue: 0,0:02:25.58,0:02:26.44,中文,,0,0,0,,就是这样
Dialogue: 0,0:02:26.44,0:02:30.06,英文,,0,0,0,,The only thing the user can ever do is interact with the smallest thing.
Dialogue: 0,0:02:26.44,0:02:30.06,中文,,0,0,0,,用户唯一能做的事情就是与最小的东西交互
Dialogue: 0,0:02:30.06,0:02:32.68,英文,,0,0,0,,And you're like, well, but what if the user wants the largest thing?
Dialogue: 0,0:02:30.06,0:02:32.68,中文,,0,0,0,,你可能会想 那如果用户想要最大的东西呢
Dialogue: 0,0:02:32.68,0:02:33.42,英文,,0,0,0,,Well, too bad.
Dialogue: 0,0:02:32.68,0:02:33.42,中文,,0,0,0,,唉 那就太糟糕了
Dialogue: 0,0:02:33.42,0:02:34.82,英文,,0,0,0,,The user cannot get it.
Dialogue: 0,0:02:33.42,0:02:34.82,中文,,0,0,0,,用户无法理解
Dialogue: 0,0:02:34.82,0:02:42.02,英文,,0,0,0,,The user can only get the smallest thing in the data structure or remove the smallest thing in the data structure, and that's it.
Dialogue: 0,0:02:34.82,0:02:42.02,中文,,0,0,0,,用户只能获取数据结构中的最小元素或删除数据结构中的最小元素 仅此而已
Dialogue: 0,0:02:42.02,0:02:57.75,英文,,0,0,0,,And this constraint that the user only ever wants to touch the smallest thing, this is going to allow us to write specialized implementations that make these operations extremely fast when they might be slower in other data structures or other implementations.
Dialogue: 0,0:02:42.02,0:02:57.75,中文,,0,0,0,,而用户仅限于操作最小的元素这一限制 将使我们能够编写专门的实现 在这些操作可能在其他数据结构或其他实现中较慢时使其极其快速
Dialogue: 0,0:02:57.75,0:03:03.43,英文,,0,0,0,,OK, so everyone cool with the abstract data type, the thing the user wants to see?
Dialogue: 0,0:02:57.75,0:03:03.43,中文,,0,0,0,,好的 那么大家对抽象数据类型满意吗 用户想看到的是什么
Dialogue: 0,0:03:03.43,0:03:05.17,英文,,0,0,0,,So remember, we're the little monks in the back.
Dialogue: 0,0:03:03.43,0:03:05.17,中文,,0,0,0,,记住 我们是后排的小和尚
Dialogue: 0,0:03:05.17,0:03:13.98,英文,,0,0,0,,We're going to write something to give people the priority queue show, which is they want to be able to access the smallest things in a big collection of things.
Dialogue: 0,0:03:05.17,0:03:13.98,中文,,0,0,0,,我们将编写一些代码来展示优先队列 即它们希望能够访问大量元素中的最小元素
Dialogue: 0,0:03:13.98,0:03:15.45,英文,,0,0,0,,OK.
Dialogue: 0,0:03:15.45,0:03:19.18,英文,,0,0,0,,So maybe your first question is, what is the point of this?
Dialogue: 0,0:03:15.45,0:03:19.18,中文,,0,0,0,,也许你的第一个问题是 这到底有什么意义呢
Dialogue: 0,0:03:19.18,0:03:23.96,英文,,0,0,0,,Where would we ever have a situation where we just want to access the smallest item?
Dialogue: 0,0:03:19.18,0:03:23.96,中文,,0,0,0,,我们什么时候会遇到只想访问最小的项的情况呢
Dialogue: 0,0:03:23.96,0:03:25.08,英文,,0,0,0,,Seems kind of weird.
Dialogue: 0,0:03:23.96,0:03:25.08,中文,,0,0,0,,感觉有点奇怪
Dialogue: 0,0:03:25.08,0:03:29.87,英文,,0,0,0,,So here's an example that maybe teases out why this is useful.
Dialogue: 0,0:03:25.08,0:03:29.87,中文,,0,0,0,,这里有一个例子 也许可以解释为什么这很有用
Dialogue: 0,0:03:29.87,0:03:32.17,英文,,0,0,0,,So maybe we have some particle detector.
Dialogue: 0,0:03:29.87,0:03:32.17,中文,,0,0,0,,也许我们有一些粒子探测器
Dialogue: 0,0:03:32.17,0:03:34.09,英文,,0,0,0,,I'm not a particle physicist.
Dialogue: 0,0:03:32.17,0:03:34.09,中文,,0,0,0,,我不是粒子物理学家
Dialogue: 0,0:03:34.09,0:03:37.72,英文,,0,0,0,,I don't think you are either, so we'll do our best.
Dialogue: 0,0:03:34.09,0:03:37.72,中文,,0,0,0,,我想你也不是 所以我们尽力而为
Dialogue: 0,0:03:37.72,0:03:40.86,英文,,0,0,0,,Let's say a bunch of particles are coming in every day.
Dialogue: 0,0:03:37.72,0:03:40.86,中文,,0,0,0,,假设每天都有一堆粒子进来
Dialogue: 0,0:03:40.86,0:03:42.02,英文,,0,0,0,,I don't know what that means.
Dialogue: 0,0:03:40.86,0:03:42.02,中文,,0,0,0,,我不知道这是什么意思
Dialogue: 0,0:03:42.02,0:03:46.21,英文,,0,0,0,,And we want to find the particles that have the highest energy.
Dialogue: 0,0:03:42.02,0:03:46.21,中文,,0,0,0,,我们想要找出那些能量最高的粒子
Dialogue: 0,0:03:46.21,0:03:50.31,英文,,0,0,0,,So maybe every day, like a million particles stream in.
Dialogue: 0,0:03:46.21,0:03:50.31,中文,,0,0,0,,也许每天 大约有一百万粒子流入
Dialogue: 0,0:03:50.31,0:03:54.01,英文,,0,0,0,,And I want to find the 10 particles that have the highest energy.
Dialogue: 0,0:03:50.31,0:03:54.01,中文,,0,0,0,,我想找出能量最高的10个粒子
Dialogue: 0,0:03:54.01,0:03:55.63,英文,,0,0,0,,So how could you do this?
Dialogue: 0,0:03:54.01,0:03:55.63,中文,,0,0,0,,你会怎么做呢
Dialogue: 0,0:03:55.63,0:04:00.47,英文,,0,0,0,,Well, one idea is when the million particles come in, I just start throwing them into a list.
Dialogue: 0,0:03:55.63,0:04:00.47,中文,,0,0,0,,一个想法是 当一百万粒子进来的时候 我就开始把它们扔进一个列表里
Dialogue: 0,0:04:00.47,0:04:02.17,英文,,0,0,0,,So I have a big old list.
Dialogue: 0,0:04:00.47,0:04:02.17,中文,,0,0,0,,我有一个很长的列表
Dialogue: 0,0:04:02.17,0:04:04.81,英文,,0,0,0,,It could be an array-based list or whatever.
Dialogue: 0,0:04:02.17,0:04:04.81,中文,,0,0,0,,它可能是一个基于数组的列表或其他什么东西
Dialogue: 0,0:04:04.81,0:04:07.35,英文,,0,0,0,,And every time a particle comes in, I add it to the list.
Dialogue: 0,0:04:04.81,0:04:07.35,中文,,0,0,0,,每次有一个粒子进来 我就把它加到列表里
Dialogue: 0,0:04:07.35,0:04:10.59,英文,,0,0,0,,And I get this one million item list.
Dialogue: 0,0:04:07.35,0:04:10.59,中文,,0,0,0,,然后我得到了一个一百万项的列表
Dialogue: 0,0:04:10.59,0:04:18.54,英文,,0,0,0,,And then at the end of the day, after the particles go to sleep or whatever, I can sort them using my particle energy comparator.
Dialogue: 0,0:04:10.59,0:04:18.54,中文,,0,0,0,,然后在一天结束时 粒子休眠或其他什么 我可以使用我的粒子能量比较器对它们进行排序
Dialogue: 0,0:04:18.54,0:04:23.54,英文,,0,0,0,,And I can return the 10 particles that are sorted to have the highest energy.
Dialogue: 0,0:04:18.54,0:04:23.54,中文,,0,0,0,,然后我可以返回排名前十的粒子 它们具有最高的能量
Dialogue: 0,0:04:23.54,0:04:25.50,英文,,0,0,0,,That works.
Dialogue: 0,0:04:23.54,0:04:25.50,中文,,0,0,0,,那很有效
Dialogue: 0,0:04:25.50,0:04:26.70,英文,,0,0,0,,I feel like it works.
Dialogue: 0,0:04:25.50,0:04:26.70,中文,,0,0,0,,我觉得这样挺行的
Dialogue: 0,0:04:26.70,0:04:34.16,英文,,0,0,0,,So I take all the particles, throw them in a big old list, sort them at the end of the day, and then return the 10 highest energy particles.
Dialogue: 0,0:04:26.70,0:04:34.16,中文,,0,0,0,,我把所有的粒子都扔进一个大列表里 最后排好序 然后返回能量最高的十个粒子
Dialogue: 0,0:04:34.16,0:04:36.12,英文,,0,0,0,,But it's kind of inefficient.
Dialogue: 0,0:04:34.16,0:04:36.12,中文,,0,0,0,,但这有点低效
Dialogue: 0,0:04:36.12,0:04:39.96,英文,,0,0,0,,In particular, I think this is inefficient in space.
Dialogue: 0,0:04:36.12,0:04:39.96,中文,,0,0,0,,特别是 我觉得这在空间上是低效的
Dialogue: 0,0:04:39.96,0:04:40.58,英文,,0,0,0,,So what does that mean?
Dialogue: 0,0:04:39.96,0:04:40.58,中文,,0,0,0,,那么这意味着什么呢
Dialogue: 0,0:04:40.58,0:04:47.26,英文,,0,0,0,,Well, it means when I build this list, I have to keep track of 1 million items, which seems kind of wasteful.
Dialogue: 0,0:04:40.58,0:04:47.26,中文,,0,0,0,,这意味着当我构建这个列表时 我必须跟踪一百万个项目 这似乎有点浪费
Dialogue: 0,0:04:47.26,0:04:53.32,英文,,0,0,0,,Because remember, at the end of the day, I just want to return the 10 items with the largest energy.
Dialogue: 0,0:04:47.26,0:04:53.32,中文,,0,0,0,,因为记住 到最后 我只想返回能量最大的十个项目
Dialogue: 0,0:04:53.32,0:04:58.03,英文,,0,0,0,,But I have to keep around a million particles in order to have this naive code work.
Dialogue: 0,0:04:53.32,0:04:58.03,中文,,0,0,0,,但是我得保留大约一百万个粒子才能使这个简单的代码正常运行
Dialogue: 0,0:04:58.03,0:05:00.11,英文,,0,0,0,,So don't worry too much about reading this.
Dialogue: 0,0:04:58.03,0:05:00.11,中文,,0,0,0,,不要太担心阅读这个
Dialogue: 0,0:05:00.11,0:05:03.45,英文,,0,0,0,,It just is a pseudocode version of what I just said.
Dialogue: 0,0:05:00.11,0:05:03.45,中文,,0,0,0,,这只是我刚才说的伪代码版本
Dialogue: 0,0:05:03.45,0:05:13.66,英文,,0,0,0,,But the problem is that it's inefficient in space or memory, because I have to keep track of a million particles every single day just to return the first 10.
Dialogue: 0,0:05:03.45,0:05:13.66,中文,,0,0,0,,但问题是 它在空间或内存上效率低下 因为我每天都要跟踪一百万个粒子 只为了返回前十个
Dialogue: 0,0:05:13.66,0:05:16.43,英文,,0,0,0,,Seems kind of wasteful.
Dialogue: 0,0:05:13.66,0:05:16.43,中文,,0,0,0,,似乎有点浪费
Dialogue: 0,0:05:16.43,0:05:27.48,英文,,0,0,0,,Instead, we're going to try to harness this priority queue data structure that we just talked about, where you can only pull out the smallest thing every single time, to get something that is more space efficient.
Dialogue: 0,0:05:16.43,0:05:27.48,中文,,0,0,0,,相反 我们将尝试利用我们刚刚讨论过的优先队列数据结构 你每次只能取出最小的东西 以获得更节省空间的东西
Dialogue: 0,0:05:27.48,0:05:29.34,英文,,0,0,0,,So let's see what that would look like.
Dialogue: 0,0:05:27.48,0:05:29.34,中文,,0,0,0,,那么让我们看看那会是什么样子
Dialogue: 0,0:05:29.34,0:05:38.34,英文,,0,0,0,,So this time, I still want to use, or I still want the highest energy particles, I'm still going to get a million particles, and I want the 10 best, but
Dialogue: 0,0:05:29.34,0:05:38.34,中文,,0,0,0,,这次 我仍然想使用 或者说我仍然想要最高能量的粒子 我仍然要获取一百万个粒子 并且我想要其中的前十个 但是
Dialogue: 0,0:05:38.34,0:05:43.37,英文,,0,0,0,,How do I do that in a way that doesn't require me storing all million particles at once?
Dialogue: 0,0:05:38.34,0:05:43.37,中文,,0,0,0,,我如何以不需要一次性存储所有百万粒子的方式来做到呢
Dialogue: 0,0:05:43.37,0:05:45.55,英文,,0,0,0,,I want to use less memory.
Dialogue: 0,0:05:43.37,0:05:45.55,中文,,0,0,0,,我想要使用更少的内存
Dialogue: 0,0:05:45.55,0:05:51.42,英文,,0,0,0,,In this case, maybe just 10 units of memory instead of a million units of memory.
Dialogue: 0,0:05:45.55,0:05:51.42,中文,,0,0,0,,在这种情况下 可能只需 10 个内存单元而不是一百万个内存单元
Dialogue: 0,0:05:51.42,0:05:54.36,英文,,0,0,0,,So how can I do that? Here's an idea.
Dialogue: 0,0:05:51.42,0:05:54.36,中文,,0,0,0,,那么我该怎么做呢  这里有个想法
Dialogue: 0,0:05:54.36,0:05:56.78,英文,,0,0,0,,It's kind of exotic, but I'll talk you through it.
Dialogue: 0,0:05:54.36,0:05:56.78,中文,,0,0,0,,这有点不同寻常 但我会向你解释
Dialogue: 0,0:05:56.78,0:05:58.38,英文,,0,0,0,,Don't worry too much about the code.
Dialogue: 0,0:05:56.78,0:05:58.38,中文,,0,0,0,,别太担心代码
Dialogue: 0,0:05:58.38,0:06:07.90,英文,,0,0,0,,But basically, the idea is every time a new particle streams in, I'm going to throw it not into a list, but into my brand new priority queue.
Dialogue: 0,0:05:58.38,0:06:07.90,中文,,0,0,0,,但基本上 想法是每次有新的粒子流入 我不会把它放入列表中 而是放入我的全新优先队列中
Dialogue: 0,0:06:07.90,0:06:10.58,英文,,0,0,0,,So my priority queue is still a collection of items.
Dialogue: 0,0:06:07.90,0:06:10.58,中文,,0,0,0,,我的优先队列仍然是一个项目集
Dialogue: 0,0:06:10.58,0:06:14.82,英文,,0,0,0,,Every time a particle comes in, I will throw it into my priority queue.
Dialogue: 0,0:06:10.58,0:06:14.82,中文,,0,0,0,,每次粒子进来 我都会把它扔进我的优先队列
Dialogue: 0,0:06:14.82,0:06:23.09,英文,,0,0,0,,But, and here's the catch, any time the priority queue gets too full, that is the priority queue has 11 items or more,
Dialogue: 0,0:06:14.82,0:06:23.09,中文,,0,0,0,,但是 这里有个问题 每当优先队列变得太满时 也就是说 优先队列有11个项目或更多时
Dialogue: 0,0:06:23.09,0:06:27.67,英文,,0,0,0,,Well then, I think, am I ever going to return 11 items?
Dialogue: 0,0:06:23.09,0:06:27.67,中文,,0,0,0,,那么 我想 我会返回11个项目吗
Dialogue: 0,0:06:27.67,0:06:29.91,英文,,0,0,0,,No, because I only want to return 10.
Dialogue: 0,0:06:27.67,0:06:29.91,中文,,0,0,0,,不会 因为我只想返回10个
Dialogue: 0,0:06:29.91,0:06:36.80,英文,,0,0,0,,So if my priority queue has 11 items, one of those 11 items is not going to be returned.
Dialogue: 0,0:06:29.91,0:06:36.80,中文,,0,0,0,,如果我的优先队列有11个项目 那么这11个项目中有一个不会被返回
Dialogue: 0,0:06:36.80,0:06:39.24,英文,,0,0,0,,Which one's not going to be returned out of the 11?
Dialogue: 0,0:06:36.80,0:06:39.24,中文,,0,0,0,,这11个项目中哪一个不会被返回
Dialogue: 0,0:06:39.24,0:06:40.44,英文,,0,0,0,,The smallest one. Why?
Dialogue: 0,0:06:39.24,0:06:40.44,中文,,0,0,0,,最小的那个  为什么
Dialogue: 0,0:06:40.44,0:06:42.74,英文,,0,0,0,,Because we're returning the 10 largest ones.
Dialogue: 0,0:06:40.44,0:06:42.74,中文,,0,0,0,,因为我们要返回最大的10个
Dialogue: 0,0:06:42.74,0:06:45.69,英文,,0,0,0,,So if I have 11 items in the priority queue,
Dialogue: 0,0:06:42.74,0:06:45.69,中文,,0,0,0,,如果我的优先队列有11个项目
Dialogue: 0,0:06:45.69,0:06:47.57,英文,,0,0,0,,1 through 11, or whatever.
Dialogue: 0,0:06:45.69,0:06:47.57,中文,,0,0,0,,从1到11 或者其他
Dialogue: 0,0:06:47.57,0:06:50.83,英文,,0,0,0,,And I know I'm only going to return the 10 largest.
Dialogue: 0,0:06:47.57,0:06:50.83,中文,,0,0,0,,而且我知道我只会返回最大的10个
Dialogue: 0,0:06:50.83,0:06:53.87,英文,,0,0,0,,Then the smallest thing in the priority queue, guess what?
Dialogue: 0,0:06:50.83,0:06:53.87,中文,,0,0,0,,然后 在优先队列中最小的东西 猜猜看
Dialogue: 0,0:06:53.87,0:06:54.99,英文,,0,0,0,,It's never going to get returned.
Dialogue: 0,0:06:53.87,0:06:54.99,中文,,0,0,0,,它永远不会被返回
Dialogue: 0,0:06:54.99,0:06:57.19,英文,,0,0,0,,I found 10 other things that are greater.
Dialogue: 0,0:06:54.99,0:06:57.19,中文,,0,0,0,,我找到了其他10个更大的东西
Dialogue: 0,0:06:57.19,0:07:03.42,英文,,0,0,0,,So I can call removeSmallest to kick that 11th item, the smallest one, out of the priority queue.
Dialogue: 0,0:06:57.19,0:07:03.42,中文,,0,0,0,,我可以调用removeSmallest来将第11个项目 即最小的项目 从优先队列中踢出
Dialogue: 0,0:07:03.42,0:07:05.94,英文,,0,0,0,,And now my priority queue is back to 10 items.
Dialogue: 0,0:07:03.42,0:07:05.94,中文,,0,0,0,,现在我的优先队列又恢复到了10个项目
Dialogue: 0,0:07:05.94,0:07:07.74,英文,,0,0,0,,the 10 largest we've seen so far.
Dialogue: 0,0:07:05.94,0:07:07.74,中文,,0,0,0,,迄今为止 我们见过的最大的10个
Dialogue: 0,0:07:07.74,0:07:09.30,英文,,0,0,0,,And I can do this over and over again.
Dialogue: 0,0:07:07.74,0:07:09.30,中文,,0,0,0,,我可以一遍又一遍地做这件事
Dialogue: 0,0:07:09.30,0:07:13.12,英文,,0,0,0,,So anytime new particles come in, I add it to the priority queue.
Dialogue: 0,0:07:09.30,0:07:13.12,中文,,0,0,0,,每次有新的粒子进来 我就把它加入优先队列
Dialogue: 0,0:07:13.12,0:07:20.57,英文,,0,0,0,,If my priority queue ever gets too big, has 11 or more items, I kick all the smallest ones out so that I only have 10 items left.
Dialogue: 0,0:07:13.12,0:07:20.57,中文,,0,0,0,,如果我的优先队列太大了 有11个或更多的项目 我就把所有最小的项目都踢出去 这样我只剩下10个项目
Dialogue: 0,0:07:20.57,0:07:25.27,英文,,0,0,0,,Then at the end of the day, I just return all the things in the priority queue, hopefully just 10 of them.
Dialogue: 0,0:07:20.57,0:07:25.27,中文,,0,0,0,,然后在一天结束时 我只是返回优先队列中的所有东西 希望只有10个
Dialogue: 0,0:07:25.27,0:07:28.33,英文,,0,0,0,,Those are my 10 highest energy particles.
Dialogue: 0,0:07:25.27,0:07:28.33,中文,,0,0,0,,这些就是我的10个能量最高的粒子
Dialogue: 0,0:07:28.33,0:07:29.43,英文,,0,0,0,,So this is great.
Dialogue: 0,0:07:28.33,0:07:29.43,中文,,0,0,0,,这很棒
Dialogue: 0,0:07:29.43,0:07:37.54,英文,,0,0,0,,Now I don't have to keep track of a list of a million, because as the particles come in, I am always throwing out the smallest thing in the priority queue.
Dialogue: 0,0:07:29.43,0:07:37.54,中文,,0,0,0,,现在我不必再跟踪一百万个列表了 因为粒子进来时 我总是在优先队列中抛出最小的东西
Dialogue: 0,0:07:37.54,0:07:39.58,英文,,0,0,0,,And that's where the priority queue comes in handy.
Dialogue: 0,0:07:37.54,0:07:39.58,中文,,0,0,0,,这就是优先队列派上用场的地方
Dialogue: 0,0:07:39.58,0:07:44.30,英文,,0,0,0,,It lets me throw away the smallest thing any time I have more than 10 things.
Dialogue: 0,0:07:39.58,0:07:44.30,中文,,0,0,0,,每当我有超过10个东西的时候 它让我随时丢掉最小的东西
Dialogue: 0,0:07:44.30,0:07:46.40,英文,,0,0,0,,OK, so it's kind of a rough picture.
Dialogue: 0,0:07:44.30,0:07:46.40,中文,,0,0,0,,好的 所以这有点粗略
Dialogue: 0,0:07:46.40,0:07:49.34,英文,,0,0,0,,We don't need you to be particle energy experts.
Dialogue: 0,0:07:46.40,0:07:49.34,中文,,0,0,0,,我们不需要你成为粒子能量专家
Dialogue: 0,0:07:49.34,0:07:55.56,英文,,0,0,0,,But maybe it's an example of why this strange data structure might be useful.
Dialogue: 0,0:07:49.34,0:07:55.56,中文,,0,0,0,,但也许这是一个为什么这种奇怪的数据结构可能有用的例子
Dialogue: 0,0:07:55.56,0:07:59.58,英文,,0,0,0,,OK, question?
Dialogue: 0,0:07:55.56,0:07:59.58,中文,,0,0,0,,好的 问题是
Dialogue: 0,0:07:59.58,0:08:01.16,英文,,0,0,0,,What is the runtime of this?
Dialogue: 0,0:07:59.58,0:08:01.16,中文,,0,0,0,,这个的运行时间是多少
Dialogue: 0,0:08:01.16,0:08:02.06,英文,,0,0,0,,That's a good question.
Dialogue: 0,0:08:01.16,0:08:02.06,中文,,0,0,0,,这是个好问题
Dialogue: 0,0:08:02.06,0:08:08.21,英文,,0,0,0,,I would imagine it's linear in the number of particles that come in, because you have to process all million particles that come in.
Dialogue: 0,0:08:02.06,0:08:08.21,中文,,0,0,0,,我想它与输入的粒子数量呈线性关系 因为你必须处理所有百万个进入的粒子
Dialogue: 0,0:08:08.21,0:08:11.61,英文,,0,0,0,,But in this case, the thing we're trying to save is not the runtime, but the space.
Dialogue: 0,0:08:08.21,0:08:11.61,中文,,0,0,0,,但在这种情况下 我们要保存的不是运行时间 而是空间
Dialogue: 0,0:08:11.61,0:08:14.17,英文,,0,0,0,,That's a weird question, though.
Dialogue: 0,0:08:11.61,0:08:14.17,中文,,0,0,0,,不过 这个问题有点奇怪
Dialogue: 0,0:08:14.17,0:08:19.95,英文,,0,0,0,,Yeah, maybe just as the runtime is 24 hours, because maybe that's how long it takes for the particles to come in.
Dialogue: 0,0:08:14.17,0:08:19.95,中文,,0,0,0,,是的 也许就像运行时间是24小时一样 因为也许粒子需要这么长时间进来
Dialogue: 0,0:08:19.95,0:08:21.99,英文,,0,0,0,,OK, I guess it depends on the setting.
Dialogue: 0,0:08:19.95,0:08:21.99,中文,,0,0,0,,好吧 我想这取决于设置
Dialogue: 0,0:08:21.99,0:08:24.47,英文,,0,0,0,,Good question, though.
Dialogue: 0,0:08:21.99,0:08:24.47,中文,,0,0,0,,不过 问得好
Dialogue: 0,0:08:24.47,0:08:25.92,英文,,0,0,0,,Another question?
Dialogue: 0,0:08:24.47,0:08:25.92,中文,,0,0,0,,又一个问题
Dialogue: 0,0:08:25.92,0:08:26.18,英文,,0,0,0,,Wave.
Dialogue: 0,0:08:25.92,0:08:26.18,中文,,0,0,0,,挥手
Dialogue: 0,0:08:26.18,0:08:26.56,英文,,0,0,0,,Oh, hi.
Dialogue: 0,0:08:26.18,0:08:26.56,中文,,0,0,0,,嗨 嗨
Dialogue: 0,0:08:26.56,0:08:43.81,英文,,0,0,0,,Yes.
Dialogue: 0,0:08:43.81,0:08:47.67,英文,,0,0,0,,The question was, if you remove a particle from the priority queue, how do you bring it back?
Dialogue: 0,0:08:43.81,0:08:47.67,中文,,0,0,0,,问题是 如果你从优先队列中移除一个粒子 你怎么把它放回去呢
Dialogue: 0,0:08:47.67,0:08:49.59,英文,,0,0,0,,Well, the key is you don't.
Dialogue: 0,0:08:47.67,0:08:49.59,中文,,0,0,0,,关键在于你不放回去
Dialogue: 0,0:08:49.59,0:08:55.42,英文,,0,0,0,,If you remove something from the priority queue, you know that there are 10 particles that have greater energy.
Dialogue: 0,0:08:49.59,0:08:55.42,中文,,0,0,0,,如果你从优先队列中移除了东西 你知道有10个粒子的能量更高
Dialogue: 0,0:08:55.42,0:08:58.58,英文,,0,0,0,,So the one that you're kicking out is not going to be part of the final 10.
Dialogue: 0,0:08:55.42,0:08:58.58,中文,,0,0,0,,你要踢掉的那个不会成为最终的十个之一
Dialogue: 0,0:08:58.58,0:09:00.48,英文,,0,0,0,,So it's safe to kick it out.
Dialogue: 0,0:08:58.58,0:09:00.48,中文,,0,0,0,,安全地把它踢掉了
Dialogue: 0,0:09:00.48,0:09:03.15,英文,,0,0,0,,That's kind of the idea.
Dialogue: 0,0:09:00.48,0:09:03.15,中文,,0,0,0,,这就是个大概的想法
Dialogue: 0,0:09:03.15,0:09:05.37,英文,,0,0,0,,So today's all about implementing the priority queue.
Dialogue: 0,0:09:03.15,0:09:05.37,中文,,0,0,0,,今天的重点是实现优先队列
Dialogue: 0,0:09:05.37,0:09:08.59,英文,,0,0,0,,So even if this exact setting isn't the most clear, it's OK.
Dialogue: 0,0:09:05.37,0:09:08.59,中文,,0,0,0,,即使这个确切的设置不够清晰 也没关系
Dialogue: 0,0:09:08.59,0:09:10.61,英文,,0,0,0,,We're not particle physicists.
Dialogue: 0,0:09:08.59,0:09:10.61,中文,,0,0,0,,我们不是粒子物理学家
Dialogue: 0,0:09:10.61,0:09:13.67,英文,,0,0,0,,But it's just an example to show maybe why this is useful.
Dialogue: 0,0:09:10.61,0:09:13.67,中文,,0,0,0,,但这只是一个示例 可能可以说明为什么这很有用
Dialogue: 0,0:09:13.67,0:09:15.13,英文,,0,0,0,,And you can play around with it later.
Dialogue: 0,0:09:13.67,0:09:15.13,中文,,0,0,0,,然后你以后可以玩弄它
Dialogue: 0,0:09:15.13,0:09:16.51,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:09:15.13,0:09:16.51,中文,,0,0,0,,那是个很棒的问题
Dialogue: 0,0:09:16.51,0:09:19.25,英文,,0,0,0,,This one took me a couple looks to understand it, too.
Dialogue: 0,0:09:16.51,0:09:19.25,中文,,0,0,0,,这个我也花了几眼才理解
Dialogue: 0,0:09:19.25,0:09:21.85,英文,,0,0,0,,I think I actually screwed up the explanation last semester.
Dialogue: 0,0:09:19.25,0:09:21.85,中文,,0,0,0,,我觉得上个学期我解释错了
Dialogue: 0,0:09:21.85,0:09:23.42,英文,,0,0,0,,Hopefully I got it right this time.
Dialogue: 0,0:09:21.85,0:09:23.42,中文,,0,0,0,,希望这次我讲对了
Dialogue: 0,0:09:23.42,0:09:25.11,英文,,0,0,0,,OK.
Dialogue: 0,0:09:25.11,0:09:27.81,英文,,0,0,0,,So priority queue, we know what it is.
Dialogue: 0,0:09:25.11,0:09:27.81,中文,,0,0,0,,优先队列 我们知道是什么
Dialogue: 0,0:09:27.81,0:09:29.75,英文,,0,0,0,,We saw an example of why it's useful.
Dialogue: 0,0:09:27.81,0:09:29.75,中文,,0,0,0,,我们看到了一个例子 说明它为什么有用
Dialogue: 0,0:09:29.75,0:09:39.50,英文,,0,0,0,,Let's think about why not just use one of the data structures we already have seen to implement this for the user, to show them those methods that we saw earlier.
Dialogue: 0,0:09:29.75,0:09:39.50,中文,,0,0,0,,让我们思考一下 为什么不只是使用我们已经看过的数据结构之一来为用户实现这个 向他们展示我们之前看过的那些方法
Dialogue: 0,0:09:39.50,0:09:46.58,英文,,0,0,0,,So let's go through and think about some things we've already seen and think about if we use those to implement a priority queue.
Dialogue: 0,0:09:39.50,0:09:46.58,中文,,0,0,0,,让我们回顾一下 并考虑一些我们已经看过的东西 想想如果我们使用它们来实现一个优先队列
Dialogue: 0,0:09:46.58,0:09:47.68,英文,,0,0,0,,Would they be good?
Dialogue: 0,0:09:46.58,0:09:47.68,中文,,0,0,0,,它们会好吗
Dialogue: 0,0:09:47.68,0:09:49.97,英文,,0,0,0,,And if so, maybe we'd be done.
Dialogue: 0,0:09:47.68,0:09:49.97,中文,,0,0,0,,如果是这样的话 也许我们就完成了
Dialogue: 0,0:09:49.97,0:09:51.77,英文,,0,0,0,,So let's start with ordered array.
Dialogue: 0,0:09:49.97,0:09:51.77,中文,,0,0,0,,让我们从有序数组开始
Dialogue: 0,0:09:51.77,0:09:52.29,英文,,0,0,0,,What is that?
Dialogue: 0,0:09:51.77,0:09:52.29,中文,,0,0,0,,那是什么
Dialogue: 0,0:09:52.29,0:09:54.01,英文,,0,0,0,,Well, it's an array of items.
Dialogue: 0,0:09:52.29,0:09:54.01,中文,,0,0,0,,好吧 这是一个项的数组
Dialogue: 0,0:09:54.01,0:09:57.45,英文,,0,0,0,,And any time you add something, you want to keep the array in order.
Dialogue: 0,0:09:54.01,0:09:57.45,中文,,0,0,0,,每次你添加东西的时候 你都希望保持数组的顺序
Dialogue: 0,0:09:57.45,0:10:04.90,英文,,0,0,0,,Well, this is kind of bad, because if I want to add something, I have to scan the entire array to find the right place to put the item.
Dialogue: 0,0:09:57.45,0:10:04.90,中文,,0,0,0,,这有点糟糕 因为如果我想添加东西 我必须扫描整个数组找到正确的位置来放置项
Dialogue: 0,0:10:04.90,0:10:09.88,英文,,0,0,0,,So for example, if I add a really big thing, I have to scan the array, add it to the end of the array.
Dialogue: 0,0:10:04.90,0:10:09.88,中文,,0,0,0,,例如 如果我添加一个非常大的东西 我必须扫描数组 将其添加到数组的末尾
Dialogue: 0,0:10:09.88,0:10:12.22,英文,,0,0,0,,That might be theta of n time.
Dialogue: 0,0:10:09.88,0:10:12.22,中文,,0,0,0,,这可能是 Θ(n)时间
Dialogue: 0,0:10:12.22,0:10:13.78,英文,,0,0,0,,I don't like it. It's slow.
Dialogue: 0,0:10:12.22,0:10:13.78,中文,,0,0,0,,我不喜欢它  它很慢
Dialogue: 0,0:10:13.78,0:10:15.25,英文,,0,0,0,,Get smallest in an ordered array?
Dialogue: 0,0:10:13.78,0:10:15.25,中文,,0,0,0,,在有序数组中找到最小的
Dialogue: 0,0:10:15.25,0:10:16.09,英文,,0,0,0,,Well, that's pretty fast.
Dialogue: 0,0:10:15.25,0:10:16.09,中文,,0,0,0,,嗯 这很快
Dialogue: 0,0:10:16.09,0:10:17.69,英文,,0,0,0,,You just grab the thing at the very front.
Dialogue: 0,0:10:16.09,0:10:17.69,中文,,0,0,0,,你只需拿起最前面的东西
Dialogue: 0,0:10:17.69,0:10:21.07,英文,,0,0,0,,So that's theta of 1, because the array is ordered.
Dialogue: 0,0:10:17.69,0:10:21.07,中文,,0,0,0,,这是Θ(1) 因为数组是有序的
Dialogue: 0,0:10:21.07,0:10:21.89,英文,,0,0,0,,Remove smallest?
Dialogue: 0,0:10:21.07,0:10:21.89,中文,,0,0,0,,移除最小的
Dialogue: 0,0:10:21.89,0:10:27.57,英文,,0,0,0,,Well, that's kind of slow, because not only do you have to remove the thing at the front, but you have to kind of shift everyone else up by 1.
Dialogue: 0,0:10:21.89,0:10:27.57,中文,,0,0,0,,那有点慢 因为你不仅要移除最前面的东西 还得将其他人往上挪一个位置
Dialogue: 0,0:10:27.57,0:10:30.07,英文,,0,0,0,,So that's theta of n time as well.
Dialogue: 0,0:10:27.57,0:10:30.07,中文,,0,0,0,,这也是Θ(n)的时间
Dialogue: 0,0:10:30.07,0:10:33.32,英文,,0,0,0,,So an ordered array, kind of slow.
Dialogue: 0,0:10:30.07,0:10:33.32,中文,,0,0,0,,一个有序数组 有点慢
Dialogue: 0,0:10:33.32,0:10:35.70,英文,,0,0,0,,What about a bushy binary search tree?
Dialogue: 0,0:10:33.32,0:10:35.70,中文,,0,0,0,,那么关于一棵茂密的二叉搜索树呢
Dialogue: 0,0:10:35.70,0:10:42.92,英文,,0,0,0,,So you can use a 2-3 tree or a left-leaning red-black tree to maintain balance and make your trees bushy.
Dialogue: 0,0:10:35.70,0:10:42.92,中文,,0,0,0,,你可以使用2-3树或左倾红黑树来保持平衡 使你的树茂密
Dialogue: 0,0:10:42.92,0:10:46.76,英文,,0,0,0,,If you do this, technically, you do get logarithmic performance.
Dialogue: 0,0:10:42.92,0:10:46.76,中文,,0,0,0,,如果你这样做 从技术上讲 你确实会得到对数级的性能
Dialogue: 0,0:10:46.76,0:10:49.86,英文,,0,0,0,,So adding things to a bushy tree is logarithmic.
Dialogue: 0,0:10:46.76,0:10:49.86,中文,,0,0,0,,向茂密的树中添加东西是对数的
Dialogue: 0,0:10:49.86,0:10:51.94,英文,,0,0,0,,Getting the smallest thing in a tree is logarithmic.
Dialogue: 0,0:10:49.86,0:10:51.94,中文,,0,0,0,,在树中获取最小的东西是对数的
Dialogue: 0,0:10:51.94,0:10:54.52,英文,,0,0,0,,You just climb down the tree until you find it.
Dialogue: 0,0:10:51.94,0:10:54.52,中文,,0,0,0,,你只需沿着树向下爬 直到找到它
Dialogue: 0,0:10:54.52,0:10:56.74,英文,,0,0,0,,And removing items is also logarithmic.
Dialogue: 0,0:10:54.52,0:10:56.74,中文,,0,0,0,,删除项目也是对数级别的
Dialogue: 0,0:10:56.74,0:10:59.04,英文,,0,0,0,,So why not just use the binary search tree?
Dialogue: 0,0:10:56.74,0:10:59.04,中文,,0,0,0,,那为什么不直接使用二叉搜索树呢
Dialogue: 0,0:10:59.04,0:11:01.14,英文,,0,0,0,,Well, the problem?
Dialogue: 0,0:10:59.04,0:11:01.14,中文,,0,0,0,,问题是什么
Dialogue: 0,0:11:01.14,0:11:01.60,英文,,0,0,0,,I'm sorry.
Dialogue: 0,0:11:01.14,0:11:01.60,中文,,0,0,0,,对不起
Dialogue: 0,0:11:01.60,0:11:07.00,英文,,0,0,0,,The problem is that, well, in a binary search tree, it's really hard to have duplicates.
Dialogue: 0,0:11:01.60,0:11:07.00,中文,,0,0,0,,问题在于 在二叉搜索树中 很难有重复项
Dialogue: 0,0:11:07.00,0:11:14.29,英文,,0,0,0,,Remember, the whole point of the binary search tree, we built it for sets and maps, and we never assumed that there would be duplicates.
Dialogue: 0,0:11:07.00,0:11:14.29,中文,,0,0,0,,记住 二叉搜索树的整个目的是用于集合和映射 我们从未假设会有重复项
Dialogue: 0,0:11:14.29,0:11:24.27,英文,,0,0,0,,So if you give a binary search tree two particles with the same energy, it's going to get confused and say, I don't know what to do with these two, because the binary search tree was built for no duplicates.
Dialogue: 0,0:11:14.29,0:11:24.27,中文,,0,0,0,,如果你给二叉搜索树两个具有相同能量的粒子 它会感到困惑并说 我不知道该怎么处理这两个 因为二叉搜索树是为不重复而构建的
Dialogue: 0,0:11:24.27,0:11:25.93,英文,,0,0,0,,So while the runtime is good,
Dialogue: 0,0:11:24.27,0:11:25.93,中文,,0,0,0,,虽然运行时很好
Dialogue: 0,0:11:25.93,0:11:27.35,英文,,0,0,0,,The duplicates are going to be awkward.
Dialogue: 0,0:11:25.93,0:11:27.35,中文,,0,0,0,,重复项会让人感到尴尬
Dialogue: 0,0:11:27.35,0:11:32.35,英文,,0,0,0,,You're going to have to add a bunch of extra code to deal with two particles with the same energy.
Dialogue: 0,0:11:27.35,0:11:32.35,中文,,0,0,0,,你将不得不添加大量额外的代码来处理具有相同能量的两个粒子
Dialogue: 0,0:11:32.35,0:11:35.40,英文,,0,0,0,,So you could, but it's a little annoying.
Dialogue: 0,0:11:32.35,0:11:35.40,中文,,0,0,0,,你可以 但有点烦人
Dialogue: 0,0:11:35.40,0:11:38.40,英文,,0,0,0,,So we're going to go seek something a little bit better.
Dialogue: 0,0:11:35.40,0:11:38.40,中文,,0,0,0,,我们将寻找一些更好的东西
Dialogue: 0,0:11:38.40,0:11:39.58,英文,,0,0,0,,Finally, there's the hash table.
Dialogue: 0,0:11:38.40,0:11:39.58,中文,,0,0,0,,最后 有哈希表
Dialogue: 0,0:11:39.58,0:11:41.56,英文,,0,0,0,,Remember, the hash table was glorious.
Dialogue: 0,0:11:39.58,0:11:41.56,中文,,0,0,0,,记住 哈希表是辉煌的
Dialogue: 0,0:11:41.56,0:11:46.59,英文,,0,0,0,,It was constant-time amortized for adding things and finding things.
Dialogue: 0,0:11:41.56,0:11:46.59,中文,,0,0,0,,它在添加和查找东西时都是常数时间摊销的
Dialogue: 0,0:11:46.59,0:11:49.97,英文,,0,0,0,,So why not use the glorious constant-time data structure?
Dialogue: 0,0:11:46.59,0:11:49.97,中文,,0,0,0,,那为什么不使用光荣的常数时间数据结构呢
Dialogue: 0,0:11:49.97,0:11:57.30,英文,,0,0,0,,Well, it turns out the hash table is a piece of garbage for the priority queue, because how would you find the smallest thing in a hash table?
Dialogue: 0,0:11:49.97,0:11:57.30,中文,,0,0,0,,结果哈希表在优先队列中是一坨垃圾 因为你怎么在哈希表中找到最小的东西呢
Dialogue: 0,0:11:57.30,0:12:00.64,英文,,0,0,0,,Well, there's no real order to the things in the hash table.
Dialogue: 0,0:11:57.30,0:12:00.64,中文,,0,0,0,,哈希表中的东西没有真正的顺序
Dialogue: 0,0:12:00.64,0:12:03.28,英文,,0,0,0,,So to get the smallest thing, you have to look through the first bucket.
Dialogue: 0,0:12:00.64,0:12:03.28,中文,,0,0,0,,要获取最小的东西 你必须查找第一个桶
Dialogue: 0,0:12:03.28,0:12:04.36,英文,,0,0,0,,Do you have the smallest thing?
Dialogue: 0,0:12:03.28,0:12:04.36,中文,,0,0,0,,你有最小的东西吗
Dialogue: 0,0:12:04.36,0:12:04.62,英文,,0,0,0,,No.
Dialogue: 0,0:12:04.36,0:12:04.62,中文,,0,0,0,,没有
Dialogue: 0,0:12:04.62,0:12:05.83,英文,,0,0,0,,OK, second bucket.
Dialogue: 0,0:12:04.62,0:12:05.83,中文,,0,0,0,,好的 第二个桶
Dialogue: 0,0:12:05.83,0:12:06.95,英文,,0,0,0,,Do you have the smallest thing? No.
Dialogue: 0,0:12:05.83,0:12:06.95,中文,,0,0,0,,你有最小的东西吗  没有
Dialogue: 0,0:12:06.95,0:12:08.05,英文,,0,0,0,,OK, third bucket.
Dialogue: 0,0:12:06.95,0:12:08.05,中文,,0,0,0,,好的 第三个桶
Dialogue: 0,0:12:08.05,0:12:09.61,英文,,0,0,0,,Do you have the smallest thing?
Dialogue: 0,0:12:08.05,0:12:09.61,中文,,0,0,0,,你有最小的东西吗
Dialogue: 0,0:12:09.61,0:12:17.04,英文,,0,0,0,,So to get the smallest thing, you end up having to scan through every single bucket, and it kind of defeats the point of the hash table.
Dialogue: 0,0:12:09.61,0:12:17.04,中文,,0,0,0,,要获取最小的东西 最终你得扫描每一个桶 这有点违背了哈希表的初衷
Dialogue: 0,0:12:17.04,0:12:22.72,英文,,0,0,0,,Even though hash tables were beautiful for sets and maps, turns out they're totally crappy for priority queues.
Dialogue: 0,0:12:17.04,0:12:22.72,中文,,0,0,0,,虽然哈希表对于集合和映射来说很美好 但是事实证明它们对于优先队列来说完全不好用
Dialogue: 0,0:12:22.72,0:12:24.60,英文,,0,0,0,,So we have to seek something better.
Dialogue: 0,0:12:22.72,0:12:24.60,中文,,0,0,0,,我们必须寻找更好的东西
Dialogue: 0,0:12:24.60,0:12:36.95,英文,,0,0,0,,I want to fill in this column with an implementation that is fast and elegant at handling duplicates, that is, items that have the same priority, like particles with the same energy.
Dialogue: 0,0:12:24.60,0:12:36.95,中文,,0,0,0,,我想用一个快速而优雅地处理重复项的实现来填充这一列 即具有相同优先级的项 就像具有相同能量的粒子一样
Dialogue: 0,0:12:36.95,0:12:38.87,英文,,0,0,0,,OK, so let's do that.
Dialogue: 0,0:12:36.95,0:12:38.87,中文,,0,0,0,,好的 那么让我们这样做吧
Dialogue: 0,0:12:38.87,0:12:40.51,英文,,0,0,0,,We know what the priority queue is.
Dialogue: 0,0:12:38.87,0:12:40.51,中文,,0,0,0,,我们知道优先队列是什么
Dialogue: 0,0:12:40.51,0:12:43.55,英文,,0,0,0,,We know that none of these are particularly good implementations.
Dialogue: 0,0:12:40.51,0:12:43.55,中文,,0,0,0,,我们知道这些都不是特别好的实现
Dialogue: 0,0:12:43.55,0:12:45.61,英文,,0,0,0,,So let's go finding a good one.
Dialogue: 0,0:12:43.55,0:12:45.61,中文,,0,0,0,,让我们去找一个好的实现
Dialogue: 0,0:12:45.61,0:12:52.16,英文,,0,0,0,,So we will custom build something that does perform well for the priority queue.
Dialogue: 0,0:12:45.61,0:12:52.16,中文,,0,0,0,,我们将定制构建一个在优先队列中表现良好的东西
Dialogue: 0,0:12:52.16,0:12:55.46,英文,,0,0,0,,So while we could use binary search trees, duplicates are awkward.
Dialogue: 0,0:12:52.16,0:12:55.46,中文,,0,0,0,,虽然我们可以使用二叉搜索树 但重复项会很麻烦
Dialogue: 0,0:12:55.46,0:12:57.12,英文,,0,0,0,,Let's do something a little bit better.
Dialogue: 0,0:12:55.46,0:12:57.12,中文,,0,0,0,,我们来做点更好的事情
Dialogue: 0,0:12:57.12,0:13:00.75,英文,,0,0,0,,So I will introduce the data structure and give it to you for free.
Dialogue: 0,0:12:57.12,0:13:00.75,中文,,0,0,0,,我会介绍这种数据结构 并免费给你
Dialogue: 0,0:13:00.75,0:13:03.29,英文,,0,0,0,,And then you'll try to reason through how to use it.
Dialogue: 0,0:13:00.75,0:13:03.29,中文,,0,0,0,,然后你会试着思考如何使用它
Dialogue: 0,0:13:03.29,0:13:09.57,英文,,0,0,0,,So the new data structure that I'm giving to you for free is called a binary min-heap.
Dialogue: 0,0:13:03.29,0:13:09.57,中文,,0,0,0,,我免费给你的新数据结构叫做二叉最小堆
Dialogue: 0,0:13:09.57,0:13:11.67,英文,,0,0,0,,That's an interesting set of words.
Dialogue: 0,0:13:09.57,0:13:11.67,中文,,0,0,0,,这是一组有趣的词语
Dialogue: 0,0:13:11.67,0:13:13.38,英文,,0,0,0,,So the word binary, what does it mean?
Dialogue: 0,0:13:11.67,0:13:13.38,中文,,0,0,0,,二进制这个词是什么意思呢
Dialogue: 0,0:13:13.38,0:13:14.78,英文,,0,0,0,,It means it's a binary tree.
Dialogue: 0,0:13:13.38,0:13:14.78,中文,,0,0,0,,这意味着这是一棵二叉树
Dialogue: 0,0:13:14.78,0:13:19.60,英文,,0,0,0,,It's still a tree, and every node has two children.
Dialogue: 0,0:13:14.78,0:13:19.60,中文,,0,0,0,,它仍然是一棵树 每个节点都有两个子节点
Dialogue: 0,0:13:19.60,0:13:21.26,英文,,0,0,0,,The tree has to be complete.
Dialogue: 0,0:13:19.60,0:13:21.26,中文,,0,0,0,,这棵树必须是完整的
Dialogue: 0,0:13:21.26,0:13:22.46,英文,,0,0,0,,What does complete mean?
Dialogue: 0,0:13:21.26,0:13:22.46,中文,,0,0,0,,完整是什么意思
Dialogue: 0,0:13:22.46,0:13:27.11,英文,,0,0,0,,Complete is roughly a term that captures bushiness.
Dialogue: 0,0:13:22.46,0:13:27.11,中文,,0,0,0,,完整大致是一个捕捉树繁茂程度的术语
Dialogue: 0,0:13:27.11,0:13:29.01,英文,,0,0,0,,So I want my trees to be bushy.
Dialogue: 0,0:13:27.11,0:13:29.01,中文,,0,0,0,,我希望我的树是繁茂的
Dialogue: 0,0:13:29.01,0:13:31.99,英文,,0,0,0,,I want all the items to have two children, if possible.
Dialogue: 0,0:13:29.01,0:13:31.99,中文,,0,0,0,,如果可能的话 我希望所有的项都有两个子节点
Dialogue: 0,0:13:31.99,0:13:36.74,英文,,0,0,0,,And the definition is a little weird, so I'll show you some examples to make it clear.
Dialogue: 0,0:13:31.99,0:13:36.74,中文,,0,0,0,,而且定义有点奇怪 所以我会给你一些例子来澄清
Dialogue: 0,0:13:36.74,0:13:44.66,英文,,0,0,0,,And then the second thing that I want my binary min-heaps to have is the min-heap property, which, again, I think the examples will make clear.
Dialogue: 0,0:13:36.74,0:13:44.66,中文,,0,0,0,,然后我希望我的二进制小顶堆具有的第二个特性是小顶堆属性 再次 我认为例子会让这一点更清楚
Dialogue: 0,0:13:44.66,0:13:51.38,英文,,0,0,0,,But basically, the idea is every node's value has to be less than or equal to the value of both of its children.
Dialogue: 0,0:13:44.66,0:13:51.38,中文,,0,0,0,,但基本上 这个想法是每个节点的值必须小于或等于其两个子节点的值
Dialogue: 0,0:13:51.38,0:13:55.24,英文,,0,0,0,,So it's actually a different property from the binary search tree property.
Dialogue: 0,0:13:51.38,0:13:55.24,中文,,0,0,0,,这实际上是与二叉搜索树属性不同的属性
Dialogue: 0,0:13:55.24,0:13:58.52,英文,,0,0,0,,So at this point, it's really easy to think about the two and get them confused.
Dialogue: 0,0:13:55.24,0:13:58.52,中文,,0,0,0,,在这一点上 很容易思考这两者并将它们弄混
Dialogue: 0,0:13:58.52,0:14:01.55,英文,,0,0,0,,But remember, the tree itself is just a collection of items.
Dialogue: 0,0:13:58.52,0:14:01.55,中文,,0,0,0,,但请记住 树本身只是一堆项目
Dialogue: 0,0:14:01.55,0:14:03.31,英文,,0,0,0,,connect it with a bunch of lines.
Dialogue: 0,0:14:01.55,0:14:03.31,中文,,0,0,0,,用一堆线连接它
Dialogue: 0,0:14:03.31,0:14:06.29,英文,,0,0,0,,In this case, I don't want the binary search tree property.
Dialogue: 0,0:14:03.31,0:14:06.29,中文,,0,0,0,,在这种情况下 我不想要二叉搜索树的属性
Dialogue: 0,0:14:06.29,0:14:08.03,英文,,0,0,0,,I want the min-heap property.
Dialogue: 0,0:14:06.29,0:14:08.03,中文,,0,0,0,,我想要最小堆的属性
Dialogue: 0,0:14:08.03,0:14:09.75,英文,,0,0,0,,It's different.
Dialogue: 0,0:14:08.03,0:14:09.75,中文,,0,0,0,,这是不同的
Dialogue: 0,0:14:09.75,0:14:11.41,英文,,0,0,0,,So we'll start with this tree on the left.
Dialogue: 0,0:14:09.75,0:14:11.41,中文,,0,0,0,,我们将从左边的这棵树开始
Dialogue: 0,0:14:11.41,0:14:14.17,英文,,0,0,0,,Ignore this node that I forgot to animate.
Dialogue: 0,0:14:11.41,0:14:14.17,中文,,0,0,0,,忽略我忘记动画的这个节点
Dialogue: 0,0:14:14.17,0:14:15.55,英文,,0,0,0,,Let's look at this tree on the left.
Dialogue: 0,0:14:14.17,0:14:15.55,中文,,0,0,0,,让我们看看左边的这棵树
Dialogue: 0,0:14:15.55,0:14:17.05,英文,,0,0,0,,This is a binary min-heap.
Dialogue: 0,0:14:15.55,0:14:17.05,中文,,0,0,0,,这是一个二叉最小堆
Dialogue: 0,0:14:17.05,0:14:19.93,英文,,0,0,0,,It's kind of a boring one, but it is one.
Dialogue: 0,0:14:17.05,0:14:19.93,中文,,0,0,0,,这有点无聊 但确实是一个
Dialogue: 0,0:14:19.93,0:14:27.03,英文,,0,0,0,,This tree is as bushy as possible, and all the items are less than or equal to its children.
Dialogue: 0,0:14:19.93,0:14:27.03,中文,,0,0,0,,这棵树尽可能地浓密 所有的项目都小于或等于它的子项
Dialogue: 0,0:14:27.03,0:14:29.99,英文,,0,0,0,,Sorry, I'm dying up here.
Dialogue: 0,0:14:27.03,0:14:29.99,中文,,0,0,0,,抱歉 我这里快要死了
Dialogue: 0,0:14:29.99,0:14:33.37,英文,,0,0,0,,Here's another tree that is a binary min-heap.
Dialogue: 0,0:14:29.99,0:14:33.37,中文,,0,0,0,,这里有另一棵树 它是一个二叉最小堆
Dialogue: 0,0:14:33.37,0:14:34.47,英文,,0,0,0,,So this one is complete.
Dialogue: 0,0:14:33.37,0:14:34.47,中文,,0,0,0,,这个是完整的
Dialogue: 0,0:14:34.47,0:14:35.95,英文,,0,0,0,,It's as bushy as possible.
Dialogue: 0,0:14:34.47,0:14:35.95,中文,,0,0,0,,它尽可能地浓密
Dialogue: 0,0:14:35.95,0:14:39.50,英文,,0,0,0,,Look, all the items have two children if they're not at the bottom layer.
Dialogue: 0,0:14:35.95,0:14:39.50,中文,,0,0,0,,看 所有的项目如果它们不在底层都有两个子项
Dialogue: 0,0:14:39.50,0:14:40.90,英文,,0,0,0,,So it's totally complete.
Dialogue: 0,0:14:39.50,0:14:40.90,中文,,0,0,0,,它是完全的
Dialogue: 0,0:14:40.90,0:14:42.30,英文,,0,0,0,,It's very bushy.
Dialogue: 0,0:14:40.90,0:14:42.30,中文,,0,0,0,,非常茂密
Dialogue: 0,0:14:42.30,0:14:44.62,英文,,0,0,0,,Also, it obeys the min-heap property.
Dialogue: 0,0:14:42.30,0:14:44.62,中文,,0,0,0,,而且 它遵守最小堆属性
Dialogue: 0,0:14:44.62,0:14:46.22,英文,,0,0,0,,And you can pick your favorite node.
Dialogue: 0,0:14:44.62,0:14:46.22,中文,,0,0,0,,而且你可以选择你喜欢的节点
Dialogue: 0,0:14:46.22,0:14:47.32,英文,,0,0,0,,I'll pick 0.
Dialogue: 0,0:14:46.22,0:14:47.32,中文,,0,0,0,,我会选择0
Dialogue: 0,0:14:47.32,0:14:50.84,英文,,0,0,0,,And look, it's less than or equal to 5, less than or equal to 1.
Dialogue: 0,0:14:47.32,0:14:50.84,中文,,0,0,0,,看 它小于或等于5 小于或等于1
Dialogue: 0,0:14:50.84,0:14:51.78,英文,,0,0,0,,Check.
Dialogue: 0,0:14:50.84,0:14:51.78,中文,,0,0,0,,检查
Dialogue: 0,0:14:51.78,0:14:53.54,英文,,0,0,0,,1 is less than or equal to 6 and 2.
Dialogue: 0,0:14:51.78,0:14:53.54,中文,,0,0,0,,1小于或等于6和2
Dialogue: 0,0:14:53.54,0:14:54.41,英文,,0,0,0,,Check.
Dialogue: 0,0:14:53.54,0:14:54.41,中文,,0,0,0,,检查
Dialogue: 0,0:14:54.41,0:14:56.73,英文,,0,0,0,,5 is less than or equal to 8 and 8.
Dialogue: 0,0:14:54.41,0:14:56.73,中文,,0,0,0,,5小于或等于8和8
Dialogue: 0,0:14:56.73,0:14:57.55,英文,,0,0,0,,Check.
Dialogue: 0,0:14:56.73,0:14:57.55,中文,,0,0,0,,检查
Dialogue: 0,0:14:57.55,0:15:03.73,英文,,0,0,0,,OK, I also notice having duplicates in these trees totally fine, unlike binary search trees.
Dialogue: 0,0:14:57.55,0:15:03.73,中文,,0,0,0,,好的 我还注意到这些树中有重复 与二叉搜索树不同
Dialogue: 0,0:15:03.73,0:15:08.42,英文,,0,0,0,,OK, here's another tree with one node that I forgot to animate, but now it's good.
Dialogue: 0,0:15:03.73,0:15:08.42,中文,,0,0,0,,好的 这里有另一棵只有一个节点的树我忘了动画 但现在好了
Dialogue: 0,0:15:08.42,0:15:11.20,英文,,0,0,0,,This tree is also complete and obeys the min-heap property.
Dialogue: 0,0:15:08.42,0:15:11.20,中文,,0,0,0,,这棵树也是完整的 符合最小堆属性
Dialogue: 0,0:15:11.20,0:15:12.97,英文,,0,0,0,,You might say, well, wait a minute.
Dialogue: 0,0:15:11.20,0:15:12.97,中文,,0,0,0,,你可能会说 等等
Dialogue: 0,0:15:12.97,0:15:22.21,英文,,0,0,0,,You're missing a node here, but that's OK, because our definition of complete says that if you're missing items, it's OK as long as the missing items are at the bottom level, which they are.
Dialogue: 0,0:15:12.97,0:15:22.21,中文,,0,0,0,,这里缺少一个节点 但没关系 因为我们对完整的定义是 如果缺少项目 只要缺少的项目在底层 就可以
Dialogue: 0,0:15:22.21,0:15:24.01,英文,,0,0,0,,It's supposed to be right there.
Dialogue: 0,0:15:22.21,0:15:24.01,中文,,0,0,0,,它应该就在那里
Dialogue: 0,0:15:24.01,0:15:28.75,英文,,0,0,0,,And all the nodes are pushed as far to the left as possible, which is also true here.
Dialogue: 0,0:15:24.01,0:15:28.75,中文,,0,0,0,,所有的节点都尽可能地向左推 这里也是如此
Dialogue: 0,0:15:28.75,0:15:32.49,英文,,0,0,0,,All of these 8s at the bottom are pushed as far left as possible.
Dialogue: 0,0:15:28.75,0:15:32.49,中文,,0,0,0,,底部的所有 8 都尽可能向左推
Dialogue: 0,0:15:32.49,0:15:34.09,英文,,0,0,0,,So this tree is complete.
Dialogue: 0,0:15:32.49,0:15:34.09,中文,,0,0,0,,这棵树是完整的
Dialogue: 0,0:15:34.09,0:15:41.37,英文,,0,0,0,,You can check that it follows the min-heap property, like 0 is less than 1 and 5, and so on, all the good stuff.
Dialogue: 0,0:15:34.09,0:15:41.37,中文,,0,0,0,,你可以检查它是否遵循了最小堆属性 比如 0 小于 1 和 5 等等 所有这些好东西
Dialogue: 0,0:15:41.37,0:15:42.65,英文,,0,0,0,,OK.
Dialogue: 0,0:15:42.65,0:15:43.89,英文,,0,0,0,,What about this tree?
Dialogue: 0,0:15:42.65,0:15:43.89,中文,,0,0,0,,这棵树怎么样
Dialogue: 0,0:15:43.89,0:15:48.54,英文,,0,0,0,,Well, at first, you might be tempted and say, well, this tree seems pretty complete, seems pretty bushy.
Dialogue: 0,0:15:43.89,0:15:48.54,中文,,0,0,0,,一开始 你可能会觉得 这棵树看起来相当完整 看起来相当茂密
Dialogue: 0,0:15:48.54,0:15:49.74,英文,,0,0,0,,But there's a problem.
Dialogue: 0,0:15:48.54,0:15:49.74,中文,,0,0,0,,但是有个问题
Dialogue: 0,0:15:49.74,0:15:52.82,英文,,0,0,0,,Look at this missing item right here between the 8 and the 2.
Dialogue: 0,0:15:49.74,0:15:52.82,中文,,0,0,0,,看看这个缺失的项目 在8和2之间
Dialogue: 0,0:15:52.82,0:15:54.64,英文,,0,0,0,,This item, it is at the bottom level.
Dialogue: 0,0:15:52.82,0:15:54.64,中文,,0,0,0,,这个项目 它在底层
Dialogue: 0,0:15:54.64,0:15:57.30,英文,,0,0,0,,So it's a missing item at the bottom level, which is OK.
Dialogue: 0,0:15:54.64,0:15:57.30,中文,,0,0,0,,这是底层缺失的项目 这是可以的
Dialogue: 0,0:15:57.30,0:15:59.56,英文,,0,0,0,,But all the nodes are not as far left as possible.
Dialogue: 0,0:15:57.30,0:15:59.56,中文,,0,0,0,,但是所有的节点都不是尽可能地靠左
Dialogue: 0,0:15:59.56,0:16:03.55,英文,,0,0,0,,In particular, this 2 here could have been pushed one to the left.
Dialogue: 0,0:15:59.56,0:16:03.55,中文,,0,0,0,,特别是 这个 2 在这里本可以向左推一个
Dialogue: 0,0:16:03.55,0:16:05.25,英文,,0,0,0,,So this tree is not complete.
Dialogue: 0,0:16:03.55,0:16:05.25,中文,,0,0,0,,这棵树不完整
Dialogue: 0,0:16:05.25,0:16:09.11,英文,,0,0,0,,All the items are not being pushed as far to the left as possible.
Dialogue: 0,0:16:05.25,0:16:09.11,中文,,0,0,0,,所有项目都没有被尽可能地推向左边
Dialogue: 0,0:16:09.11,0:16:11.55,英文,,0,0,0,,So this tree is incomplete.
Dialogue: 0,0:16:09.11,0:16:11.55,中文,,0,0,0,,这棵树是不完整的
Dialogue: 0,0:16:11.55,0:16:14.01,英文,,0,0,0,,And finally, here's a tree that is complete.
Dialogue: 0,0:16:11.55,0:16:14.01,中文,,0,0,0,,最后 这是一棵完整的树
Dialogue: 0,0:16:14.01,0:16:17.74,英文,,0,0,0,,All the items are pushed as far to the left and down as possible.
Dialogue: 0,0:16:14.01,0:16:17.74,中文,,0,0,0,,所有项目都被尽可能地向左和向下推
Dialogue: 0,0:16:17.74,0:16:22.72,英文,,0,0,0,,Another way of saying that is, this is a tree with, what, one, two, three, four, five, six items.
Dialogue: 0,0:16:17.74,0:16:22.72,中文,,0,0,0,,另一种说法是 这是一个有 什么 一个 两个 三个 四个 五个 六个项目的树
Dialogue: 0,0:16:22.72,0:16:25.50,英文,,0,0,0,,This is as bushy as it gets for six items.
Dialogue: 0,0:16:22.72,0:16:25.50,中文,,0,0,0,,对于六个项目来说 这已经很丰满了
Dialogue: 0,0:16:25.50,0:16:27.28,英文,,0,0,0,,So that's another way of thinking of it.
Dialogue: 0,0:16:25.50,0:16:27.28,中文,,0,0,0,,这是另一种思考的方式
Dialogue: 0,0:16:27.28,0:16:30.08,英文,,0,0,0,,But this one fails to obey the min-heap property.
Dialogue: 0,0:16:27.28,0:16:30.08,中文,,0,0,0,,但是这个不遵守最小堆的属性
Dialogue: 0,0:16:30.08,0:16:34.97,英文,,0,0,0,,Because look, remember how we said every item has to be less than or equal to two children?
Dialogue: 0,0:16:30.08,0:16:34.97,中文,,0,0,0,,因为看 记得我们说过每个项目都必须小于或等于两个子项目吗
Dialogue: 0,0:16:34.97,0:16:35.91,英文,,0,0,0,,5 is less than 8.
Dialogue: 0,0:16:34.97,0:16:35.91,中文,,0,0,0,,5小于8
Dialogue: 0,0:16:35.91,0:16:37.09,英文,,0,0,0,,That's good.
Dialogue: 0,0:16:35.91,0:16:37.09,中文,,0,0,0,,那很好
Dialogue: 0,0:16:37.09,0:16:38.99,英文,,0,0,0,,5 is not less than 4.
Dialogue: 0,0:16:37.09,0:16:38.99,中文,,0,0,0,,5不小于4
Dialogue: 0,0:16:38.99,0:16:40.15,英文,,0,0,0,,So that's not good.
Dialogue: 0,0:16:38.99,0:16:40.15,中文,,0,0,0,,这不好
Dialogue: 0,0:16:40.15,0:16:43.17,英文,,0,0,0,,So this one does not obey the min-heap property.
Dialogue: 0,0:16:40.15,0:16:43.17,中文,,0,0,0,,这个不遵循最小堆属性
Dialogue: 0,0:16:43.17,0:16:44.45,英文,,0,0,0,,OK, that's completeness.
Dialogue: 0,0:16:43.17,0:16:44.45,中文,,0,0,0,,好的 那就是完整性
Dialogue: 0,0:16:44.45,0:16:46.31,英文,,0,0,0,,That's min-heap property.
Dialogue: 0,0:16:44.45,0:16:46.31,中文,,0,0,0,,那是最小堆属性
Dialogue: 0,0:16:46.31,0:16:48.16,英文,,0,0,0,,We all know what heaps are now.
Dialogue: 0,0:16:46.31,0:16:48.16,中文,,0,0,0,,我们都知道堆是什么了
Dialogue: 0,0:16:48.16,0:16:54.40,英文,,0,0,0,,It's a special type of tree following some slightly different properties compared to the binary search tree that we've seen.
Dialogue: 0,0:16:48.16,0:16:54.40,中文,,0,0,0,,它是一种特殊类型的树 遵循与我们之前见过的二叉搜索树略有不同的一些属性
Dialogue: 0,0:16:54.40,0:16:55.60,英文,,0,0,0,,It's got to be complete.
Dialogue: 0,0:16:54.40,0:16:55.60,中文,,0,0,0,,一定要完整
Dialogue: 0,0:16:55.60,0:16:57.03,英文,,0,0,0,,It's got to be min-heap.
Dialogue: 0,0:16:55.60,0:16:57.03,中文,,0,0,0,,它一定要是最小堆
Dialogue: 0,0:16:57.03,0:16:58.34,英文,,0,0,0,,OK.
Dialogue: 0,0:16:58.34,0:17:03.48,英文,,0,0,0,,So to see if all that makes sense to you, I want you to tell me if these are min-heaps or not min-heaps.
Dialogue: 0,0:16:58.34,0:17:03.48,中文,,0,0,0,,那么 为了看看这一切是否对你有意义 我想让你告诉我这些是最小堆还是不是最小堆
Dialogue: 0,0:17:03.48,0:17:05.12,英文,,0,0,0,,So I guess we'll do one at a time.
Dialogue: 0,0:17:03.48,0:17:05.12,中文,,0,0,0,,我想我们一个一个来
Dialogue: 0,0:17:05.12,0:17:09.53,英文,,0,0,0,,Show of hands, vote for the ones you think are min-heaps and you like.
Dialogue: 0,0:17:05.12,0:17:09.53,中文,,0,0,0,,举手表态 投票选出你认为是最小堆并且你喜欢的那些
Dialogue: 0,0:17:09.53,0:17:20.92,英文,,0,0,0,,And remember, the properties are completeness, the missing items are at the bottom layer, and everything's to the left, and min-heapness, which is all the items are less than or equal to both of its children.
Dialogue: 0,0:17:09.53,0:17:20.92,中文,,0,0,0,,记住 属性包括完整性 缺失的项在底层 一切都在左边 以及最小堆特性 即所有项都小于或等于其两个子节点
Dialogue: 0,0:17:20.92,0:17:24.75,英文,,0,0,0,,So what about this first one, the pile of eights?
Dialogue: 0,0:17:20.92,0:17:24.75,中文,,0,0,0,,这第一个呢 这堆八是怎么样的
Dialogue: 0,0:17:24.75,0:17:26.05,英文,,0,0,0,,Who thinks it's a MinHeap?
Dialogue: 0,0:17:24.75,0:17:26.05,中文,,0,0,0,,谁觉得这是一个小顶堆
Dialogue: 0,0:17:26.05,0:17:27.49,英文,,0,0,0,,I agree, it's a MinHeap.
Dialogue: 0,0:17:26.05,0:17:27.49,中文,,0,0,0,,我同意 这是一个小顶堆
Dialogue: 0,0:17:27.49,0:17:32.18,英文,,0,0,0,,Everything is less than or equal to its two children, and all the items are as far to the left as possible.
Dialogue: 0,0:17:27.49,0:17:32.18,中文,,0,0,0,,每个元素都小于或等于其两个子节点 而且所有的元素都尽量靠左
Dialogue: 0,0:17:32.18,0:17:33.54,英文,,0,0,0,,What about the second one?
Dialogue: 0,0:17:32.18,0:17:33.54,中文,,0,0,0,,那第二个呢
Dialogue: 0,0:17:33.54,0:17:34.42,英文,,0,0,0,,Do you like it?
Dialogue: 0,0:17:33.54,0:17:34.42,中文,,0,0,0,,你喜欢吗
Dialogue: 0,0:17:34.42,0:17:36.22,英文,,0,0,0,,Who thinks it's a MinHeap?
Dialogue: 0,0:17:34.42,0:17:36.22,中文,,0,0,0,,谁觉得这是一个小顶堆
Dialogue: 0,0:17:36.22,0:17:37.62,英文,,0,0,0,,Who thinks it's not a min-heap?
Dialogue: 0,0:17:36.22,0:17:37.62,中文,,0,0,0,,谁认为这不是一个最小堆
Dialogue: 0,0:17:37.62,0:17:38.84,英文,,0,0,0,,We don't like this one.
Dialogue: 0,0:17:37.62,0:17:38.84,中文,,0,0,0,,我们不喜欢这个
Dialogue: 0,0:17:38.84,0:17:39.50,英文,,0,0,0,,Why is that?
Dialogue: 0,0:17:38.84,0:17:39.50,中文,,0,0,0,,为什么
Dialogue: 0,0:17:39.50,0:17:41.46,英文,,0,0,0,,Because look at this missing item right here.
Dialogue: 0,0:17:39.50,0:17:41.46,中文,,0,0,0,,因为看看这里缺少的项目
Dialogue: 0,0:17:41.46,0:17:42.83,英文,,0,0,0,,It's not at the bottom layer.
Dialogue: 0,0:17:41.46,0:17:42.83,中文,,0,0,0,,它不在底层
Dialogue: 0,0:17:42.83,0:17:44.37,英文,,0,0,0,,So this is not complete.
Dialogue: 0,0:17:42.83,0:17:44.37,中文,,0,0,0,,这不完整
Dialogue: 0,0:17:44.37,0:17:46.89,英文,,0,0,0,,This could have been bushier, so it's not a complete tree.
Dialogue: 0,0:17:44.37,0:17:46.89,中文,,0,0,0,,这本来可以更繁茂 它不是一棵完整的树
Dialogue: 0,0:17:46.89,0:17:51.37,英文,,0,0,0,,In particular, this item right here is missing, and it's not at the lowest layer.
Dialogue: 0,0:17:46.89,0:17:51.37,中文,,0,0,0,,特别是 这个项目右边的东西丢失了 而且它不在最低层
Dialogue: 0,0:17:51.37,0:17:52.82,英文,,0,0,0,,What about this third one?
Dialogue: 0,0:17:51.37,0:17:52.82,中文,,0,0,0,,第三个呢
Dialogue: 0,0:17:52.82,0:17:53.94,英文,,0,0,0,,Stare at it carefully.
Dialogue: 0,0:17:52.82,0:17:53.94,中文,,0,0,0,,仔细盯着看
Dialogue: 0,0:17:53.94,0:17:55.74,英文,,0,0,0,,Who likes it, thinks it's a min-heap?
Dialogue: 0,0:17:53.94,0:17:55.74,中文,,0,0,0,,谁喜欢它 认为它是一个最小堆
Dialogue: 0,0:17:55.74,0:17:57.32,英文,,0,0,0,,Who does not like it?
Dialogue: 0,0:17:55.74,0:17:57.32,中文,,0,0,0,,谁不喜欢它
Dialogue: 0,0:17:57.32,0:17:58.22,英文,,0,0,0,,I don't like it either.
Dialogue: 0,0:17:57.32,0:17:58.22,中文,,0,0,0,,我也不喜欢它
Dialogue: 0,0:17:58.22,0:17:59.02,英文,,0,0,0,,What's wrong with you?
Dialogue: 0,0:17:58.22,0:17:59.02,中文,,0,0,0,,你怎么了
Dialogue: 0,0:17:59.02,0:18:05.50,英文,,0,0,0,,Well, this 2 is not less than the 0, so it does not obey the Min-Heap property, even though it's complete.
Dialogue: 0,0:17:59.02,0:18:05.50,中文,,0,0,0,,这个2不小于0 所以它不遵守最小堆的规则 尽管它是完全的
Dialogue: 0,0:18:05.50,0:18:08.18,英文,,0,0,0,,And the final one, it's kind of tricky.
Dialogue: 0,0:18:05.50,0:18:08.18,中文,,0,0,0,,最后一个有点棘手
Dialogue: 0,0:18:08.18,0:18:09.72,英文,,0,0,0,,Who likes it?
Dialogue: 0,0:18:08.18,0:18:09.72,中文,,0,0,0,,谁喜欢呢
Dialogue: 0,0:18:09.72,0:18:13.35,英文,,0,0,0,,I like it too, because this is as bushy as it gets with two items.
Dialogue: 0,0:18:09.72,0:18:13.35,中文,,0,0,0,,我也喜欢 因为这就是用两个项目实现的最丰满的情况
Dialogue: 0,0:18:13.35,0:18:18.79,英文,,0,0,0,,Everything is as far down and to the left as possible, and it obeys the Min-Heap property.
Dialogue: 0,0:18:13.35,0:18:18.79,中文,,0,0,0,,一切都尽可能地向下和向左 而且它遵守最小堆的规则
Dialogue: 0,0:18:18.79,0:18:21.49,英文,,0,0,0,,So it turns out first one and last one were good.
Dialogue: 0,0:18:18.79,0:18:21.49,中文,,0,0,0,,事实证明第一个和最后一个是好的
Dialogue: 0,0:18:21.49,0:18:23.34,英文,,0,0,0,,OK, nice job.
Dialogue: 0,0:18:21.49,0:18:23.34,中文,,0,0,0,,好的 干得好
Dialogue: 0,0:18:23.34,0:18:25.46,英文,,0,0,0,,So why is this thing useful?
Dialogue: 0,0:18:23.34,0:18:25.46,中文,,0,0,0,,这东西有啥用呢
Dialogue: 0,0:18:25.46,0:18:26.50,英文,,0,0,0,,Why do we invent this?
Dialogue: 0,0:18:25.46,0:18:26.50,中文,,0,0,0,,我们为啥要发明这个
Dialogue: 0,0:18:26.50,0:18:33.75,英文,,0,0,0,,Well, it turns out this heap data structure, it was invented to make priority queues fast.
Dialogue: 0,0:18:26.50,0:18:33.75,中文,,0,0,0,,原来这个堆数据结构是为了让优先队列变得更快
Dialogue: 0,0:18:33.75,0:18:35.61,英文,,0,0,0,,So remember the priority queue?
Dialogue: 0,0:18:33.75,0:18:35.61,中文,,0,0,0,,还记得优先队列吗
Dialogue: 0,0:18:35.61,0:18:36.97,英文,,0,0,0,,That's our end goal.
Dialogue: 0,0:18:35.61,0:18:36.97,中文,,0,0,0,,那就是我们的最终目标
Dialogue: 0,0:18:36.97,0:18:38.83,英文,,0,0,0,,So we've got to set our sights on the goal.
Dialogue: 0,0:18:36.97,0:18:38.83,中文,,0,0,0,,我们要把目光放在目标上
Dialogue: 0,0:18:38.83,0:18:42.99,英文,,0,0,0,,And the goal is I want to be able to interact with the smallest item.
Dialogue: 0,0:18:38.83,0:18:42.99,中文,,0,0,0,,而且目标就是我想要能够与最小的项进行交互
Dialogue: 0,0:18:42.99,0:18:46.69,英文,,0,0,0,,I want to be able to add things and remove just the smallest item.
Dialogue: 0,0:18:42.99,0:18:46.69,中文,,0,0,0,,我想能够添加东西并只删除最小的项目
Dialogue: 0,0:18:46.69,0:18:49.12,英文,,0,0,0,,So let's start with the easy operation.
Dialogue: 0,0:18:46.69,0:18:49.12,中文,,0,0,0,,让我们从简单的操作开始吧
Dialogue: 0,0:18:49.12,0:18:51.02,英文,,0,0,0,,Because I like things that are easy.
Dialogue: 0,0:18:49.12,0:18:51.02,中文,,0,0,0,,因为我喜欢简单的东西
Dialogue: 0,0:18:51.02,0:18:55.36,英文,,0,0,0,,So if I give you a heap, it's complete, obeys the min-heap property.
Dialogue: 0,0:18:51.02,0:18:55.36,中文,,0,0,0,,如果我给你一个堆 它是完整的 符合最小堆属性
Dialogue: 0,0:18:55.36,0:18:57.88,英文,,0,0,0,,How do you write get-smallest?
Dialogue: 0,0:18:55.36,0:18:57.88,中文,,0,0,0,,你怎么写获取最小值的函数
Dialogue: 0,0:18:57.88,0:19:06.79,英文,,0,0,0,,And maybe like pseudocode, or if you just point at the tree, where is the smallest item in the heap?
Dialogue: 0,0:18:57.88,0:19:06.79,中文,,0,0,0,,也许是伪代码 或者如果你只是指着树 堆中最小的项目在哪里
Dialogue: 0,0:19:06.79,0:19:08.57,英文,,0,0,0,,Root. Always at the root.
Dialogue: 0,0:19:06.79,0:19:08.57,中文,,0,0,0,,根  始终在根处
Dialogue: 0,0:19:08.57,0:19:09.31,英文,,0,0,0,,Why?
Dialogue: 0,0:19:08.57,0:19:09.31,中文,,0,0,0,,为什么
Dialogue: 0,0:19:09.31,0:19:14.75,英文,,0,0,0,,Because the root has the property that it's less than its left child and less than its right child.
Dialogue: 0,0:19:09.31,0:19:14.75,中文,,0,0,0,,因为根具有的属性是它小于其左子节点且小于其右子节点
Dialogue: 0,0:19:14.75,0:19:16.71,英文,,0,0,0,,And these two are less than its children.
Dialogue: 0,0:19:14.75,0:19:16.71,中文,,0,0,0,,而这两个又小于其子节点
Dialogue: 0,0:19:16.71,0:19:18.90,英文,,0,0,0,,So in a heap.
Dialogue: 0,0:19:16.71,0:19:18.90,中文,,0,0,0,,所以在堆中
Dialogue: 0,0:19:18.90,0:19:21.54,英文,,0,0,0,,The smallest item, always at the root.
Dialogue: 0,0:19:18.90,0:19:21.54,中文,,0,0,0,,最小的项 始终在根处
Dialogue: 0,0:19:21.54,0:19:24.10,英文,,0,0,0,,So how do you get the smallest item?
Dialogue: 0,0:19:21.54,0:19:24.10,中文,,0,0,0,,那么你如何获得最小的项
Dialogue: 0,0:19:24.10,0:19:25.36,英文,,0,0,0,,Look at the root.
Dialogue: 0,0:19:24.10,0:19:25.36,中文,,0,0,0,,看根
Dialogue: 0,0:19:25.36,0:19:27.24,英文,,0,0,0,,Very fast.
Dialogue: 0,0:19:25.36,0:19:27.24,中文,,0,0,0,,非常快
Dialogue: 0,0:19:27.24,0:19:31.00,英文,,0,0,0,,So we did one of our operations, which was finding the smallest thing.
Dialogue: 0,0:19:27.24,0:19:31.00,中文,,0,0,0,,我们进行了一项操作 就是找到最小的东西
Dialogue: 0,0:19:31.00,0:19:32.00,英文,,0,0,0,,There it is.
Dialogue: 0,0:19:31.00,0:19:32.00,中文,,0,0,0,,就在那儿
Dialogue: 0,0:19:32.00,0:19:34.42,英文,,0,0,0,,Easy.
Dialogue: 0,0:19:32.00,0:19:34.42,中文,,0,0,0,,简单
Dialogue: 0,0:19:34.42,0:19:35.66,英文,,0,0,0,,How about adding things?
Dialogue: 0,0:19:34.42,0:19:35.66,中文,,0,0,0,,怎么样加东西
Dialogue: 0,0:19:35.66,0:19:37.39,英文,,0,0,0,,Well, now this is a little bit trickier.
Dialogue: 0,0:19:35.66,0:19:37.39,中文,,0,0,0,,现在这有点棘手
Dialogue: 0,0:19:37.39,0:19:43.37,英文,,0,0,0,,So for example, I have this heap, and I want to insert another value, 3, into the heap.
Dialogue: 0,0:19:37.39,0:19:43.37,中文,,0,0,0,,举个例子 我有这个堆 我想要插入另一个值 3 到这个堆中
Dialogue: 0,0:19:43.37,0:19:44.31,英文,,0,0,0,,So how do I do it?
Dialogue: 0,0:19:43.37,0:19:44.31,中文,,0,0,0,,那我该怎么做呢
Dialogue: 0,0:19:44.31,0:19:47.19,英文,,0,0,0,,And remember, I want the runtime to be fast.
Dialogue: 0,0:19:44.31,0:19:47.19,中文,,0,0,0,,记住 我希望运行时速度快
Dialogue: 0,0:19:47.19,0:19:52.86,英文,,0,0,0,,So I don't want to do something silly like the hash table or whatever, where I can insert 3, but maybe now it's hard to find.
Dialogue: 0,0:19:47.19,0:19:52.86,中文,,0,0,0,,我不想做一些像哈希表或者其他的傻事 我能插入3 但也许现在找起来很困难
Dialogue: 0,0:19:52.86,0:19:58.10,英文,,0,0,0,,I want to insert it in a way that preserves the completeness and preserves the min-heap property.
Dialogue: 0,0:19:52.86,0:19:58.10,中文,,0,0,0,,我想以一种方式插入它 保持完整性和保持最小堆的属性
Dialogue: 0,0:19:58.10,0:19:59.32,英文,,0,0,0,,Those are my invariants.
Dialogue: 0,0:19:58.10,0:19:59.32,中文,,0,0,0,,这些是我的不变条件
Dialogue: 0,0:19:59.32,0:20:00.68,英文,,0,0,0,,I want to keep them.
Dialogue: 0,0:19:59.32,0:20:00.68,中文,,0,0,0,,我想要保持它们
Dialogue: 0,0:20:00.68,0:20:04.33,英文,,0,0,0,,So I look at this, and well, suddenly it's not so obvious.
Dialogue: 0,0:20:00.68,0:20:04.33,中文,,0,0,0,,看着这个 突然间就不那么明显了
Dialogue: 0,0:20:04.33,0:20:06.13,英文,,0,0,0,,So here's what I'm going to do.
Dialogue: 0,0:20:04.33,0:20:06.13,中文,,0,0,0,,这是我要做的事情
Dialogue: 0,0:20:06.13,0:20:09.91,英文,,0,0,0,,Top secret data structures design secret tip.
Dialogue: 0,0:20:06.13,0:20:09.91,中文,,0,0,0,,顶级机密数据结构设计秘诀
Dialogue: 0,0:20:09.91,0:20:13.25,英文,,0,0,0,,Well, I have these two properties I got to keep.
Dialogue: 0,0:20:09.91,0:20:13.25,中文,,0,0,0,,我有这两个属性必须保留
Dialogue: 0,0:20:13.25,0:20:19.36,英文,,0,0,0,,This thing has to stay complete, as bushy as possible, everything as far down and to the left as possible.
Dialogue: 0,0:20:13.25,0:20:19.36,中文,,0,0,0,,这个东西必须保持完整 尽可能地树状繁茂 所有东西尽可能地往左下角
Dialogue: 0,0:20:19.36,0:20:21.50,英文,,0,0,0,,And it has to obey the min-heap property.
Dialogue: 0,0:20:19.36,0:20:21.50,中文,,0,0,0,,而且它必须遵守最小堆的属性
Dialogue: 0,0:20:21.50,0:20:27.15,英文,,0,0,0,,And when I stare at this, I don't really see a way to obey both of those things at once.
Dialogue: 0,0:20:21.50,0:20:27.15,中文,,0,0,0,,当我盯着这个的时候 我真的看不出一次性遵守这两个事情的办法
Dialogue: 0,0:20:27.15,0:20:28.41,英文,,0,0,0,,So here's what I'm going to do.
Dialogue: 0,0:20:27.15,0:20:28.41,中文,,0,0,0,,这是我要做的事情
Dialogue: 0,0:20:28.41,0:20:31.23,英文,,0,0,0,,And it's kind of similar to some of the operations we've done earlier.
Dialogue: 0,0:20:28.41,0:20:31.23,中文,,0,0,0,,而且这有点类似于我们之前做过的一些操作
Dialogue: 0,0:20:31.23,0:20:36.15,英文,,0,0,0,,I'm going to insert it and keep one of the properties, maybe temporarily break the other.
Dialogue: 0,0:20:31.23,0:20:36.15,中文,,0,0,0,,我打算插入它并保留其中一个属性 也许是暂时破坏另一个属性
Dialogue: 0,0:20:36.15,0:20:38.91,英文,,0,0,0,,And I'm going to go back and fix what I broke.
Dialogue: 0,0:20:36.15,0:20:38.91,中文,,0,0,0,,然后我会回去修复我弄坏的东西
Dialogue: 0,0:20:38.91,0:20:39.83,英文,,0,0,0,,Why is that?
Dialogue: 0,0:20:38.91,0:20:39.83,中文,,0,0,0,,为什么这样做呢
Dialogue: 0,0:20:39.83,0:20:45.83,英文,,0,0,0,,Because satisfying one property and then fixing the other one, that's easier than trying to satisfy both at the same time.
Dialogue: 0,0:20:39.83,0:20:45.83,中文,,0,0,0,,因为先满足一个属性 然后修复另一个属性 这比试图同时满足两个属性要容易
Dialogue: 0,0:20:45.83,0:20:50.31,英文,,0,0,0,,So maybe just a little strategy for how you might tackle these in real life.
Dialogue: 0,0:20:45.83,0:20:50.31,中文,,0,0,0,,也许只是一点点关于你可能如何在现实生活中应对这些情况的策略
Dialogue: 0,0:20:50.31,0:20:53.97,英文,,0,0,0,,I don't want to have to satisfy both properties at once, because I don't see how to do it.
Dialogue: 0,0:20:50.31,0:20:53.97,中文,,0,0,0,,我不想同时满足两个属性 因为我不知道怎么做
Dialogue: 0,0:20:53.97,0:20:56.99,英文,,0,0,0,,So I'll just satisfy one of the properties to keep things easy.
Dialogue: 0,0:20:53.97,0:20:56.99,中文,,0,0,0,,我只会满足一个属性 以保持简单
Dialogue: 0,0:20:56.99,0:20:59.49,英文,,0,0,0,,And I'll just go back and fix whatever I broke.
Dialogue: 0,0:20:56.99,0:20:59.49,中文,,0,0,0,,然后我会回去修复我弄坏的任何东西
Dialogue: 0,0:20:59.49,0:21:01.41,英文,,0,0,0,,So which one do you want to satisfy?
Dialogue: 0,0:20:59.49,0:21:01.41,中文,,0,0,0,,那么你想满足哪一个呢
Dialogue: 0,0:21:01.41,0:21:07.48,英文,,0,0,0,,Well, I think it'd be pretty easy, because I like easy things, to keep this tree complete.
Dialogue: 0,0:21:01.41,0:21:07.48,中文,,0,0,0,,我觉得这会很容易 因为我喜欢简单的事情 来保持这棵树完整
Dialogue: 0,0:21:07.48,0:21:17.66,英文,,0,0,0,,So in order to keep this tree complete, as bushy as possible, everything down and to the left, where should I put the three to keep this tree totally complete and bushy?
Dialogue: 0,0:21:07.48,0:21:17.66,中文,,0,0,0,,为了保持这棵树完整 尽可能浓密 一切都要放在左下方 那么我应该把3放在哪里 以使这棵树完全完整而且浓密呢
Dialogue: 0,0:21:17.66,0:21:21.54,英文,,0,0,0,,Everything's got to be as far down and to the left as possible.
Dialogue: 0,0:21:17.66,0:21:21.54,中文,,0,0,0,,一切都必须尽量放在最左下方
Dialogue: 0,0:21:21.54,0:21:24.29,英文,,0,0,0,,So I have a missing thing here, some missing things here.
Dialogue: 0,0:21:21.54,0:21:24.29,中文,,0,0,0,,这里有一些缺失的东西 一些地方还有一些遗漏
Dialogue: 0,0:21:24.29,0:21:26.85,英文,,0,0,0,,I want everything to be as far to the left as possible.
Dialogue: 0,0:21:24.29,0:21:26.85,中文,,0,0,0,,我希望一切都尽量靠左
Dialogue: 0,0:21:26.85,0:21:29.65,英文,,0,0,0,,So I'm going to shove the three there.
Dialogue: 0,0:21:26.85,0:21:29.65,中文,,0,0,0,,我要把这三个推到那边
Dialogue: 0,0:21:29.65,0:21:32.54,英文,,0,0,0,,Okay, there.
Dialogue: 0,0:21:29.65,0:21:32.54,中文,,0,0,0,,好的 在那里
Dialogue: 0,0:21:32.54,0:21:34.40,英文,,0,0,0,,Sorry, I forgot there's an animation.
Dialogue: 0,0:21:32.54,0:21:34.40,中文,,0,0,0,,抱歉 我忘记了有一个动画
Dialogue: 0,0:21:34.40,0:21:36.43,英文,,0,0,0,,So I add it to the end of the heap.
Dialogue: 0,0:21:34.40,0:21:36.43,中文,,0,0,0,,我把它添加到堆的末尾
Dialogue: 0,0:21:36.43,0:21:37.51,英文,,0,0,0,,Now it's at the end of the heap.
Dialogue: 0,0:21:36.43,0:21:37.51,中文,,0,0,0,,现在它在堆的末尾
Dialogue: 0,0:21:37.51,0:21:39.17,英文,,0,0,0,,And look, it's still complete.
Dialogue: 0,0:21:37.51,0:21:39.17,中文,,0,0,0,,看 它仍然是完整的
Dialogue: 0,0:21:39.17,0:21:40.57,英文,,0,0,0,,So I didn't violate completeness.
Dialogue: 0,0:21:39.17,0:21:40.57,中文,,0,0,0,,我没有违反完整性
Dialogue: 0,0:21:40.57,0:21:41.81,英文,,0,0,0,,That's good.
Dialogue: 0,0:21:40.57,0:21:41.81,中文,,0,0,0,,那很好
Dialogue: 0,0:21:41.81,0:21:43.81,英文,,0,0,0,,So one of my properties was satisfied.
Dialogue: 0,0:21:41.81,0:21:43.81,中文,,0,0,0,,我的一个属性得到了满足
Dialogue: 0,0:21:43.81,0:21:45.81,英文,,0,0,0,,But this is no longer a min-heap.
Dialogue: 0,0:21:43.81,0:21:45.81,中文,,0,0,0,,但这不再是一个最小堆了
Dialogue: 0,0:21:45.81,0:21:48.68,英文,,0,0,0,,Look, 5 is not less than 3.
Dialogue: 0,0:21:45.81,0:21:48.68,中文,,0,0,0,,看 5不小于3
Dialogue: 0,0:21:48.68,0:21:51.20,英文,,0,0,0,,So I satisfied one of my properties.
Dialogue: 0,0:21:48.68,0:21:51.20,中文,,0,0,0,,我满足了我的一个属性
Dialogue: 0,0:21:51.20,0:21:51.70,英文,,0,0,0,,It's good.
Dialogue: 0,0:21:51.20,0:21:51.70,中文,,0,0,0,,这很好
Dialogue: 0,0:21:51.70,0:21:53.82,英文,,0,0,0,,I don't have to worry about completeness anymore.
Dialogue: 0,0:21:51.70,0:21:53.82,中文,,0,0,0,,我不再担心完整性的问题了
Dialogue: 0,0:21:53.82,0:21:55.96,英文,,0,0,0,,But I broke the min-heap property.
Dialogue: 0,0:21:53.82,0:21:55.96,中文,,0,0,0,,但是我破坏了最小堆的属性
Dialogue: 0,0:21:55.96,0:21:57.24,英文,,0,0,0,,So I got to fix it.
Dialogue: 0,0:21:55.96,0:21:57.24,中文,,0,0,0,,我得修复它
Dialogue: 0,0:21:57.24,0:21:59.95,英文,,0,0,0,,So let's go back and fix the min-heap property.
Dialogue: 0,0:21:57.24,0:21:59.95,中文,,0,0,0,,那么让我们回去修复最小堆的属性
Dialogue: 0,0:21:59.95,0:22:01.19,英文,,0,0,0,,So how do I fix it?
Dialogue: 0,0:21:59.95,0:22:01.19,中文,,0,0,0,,那么我该如何修复它呢
Dialogue: 0,0:22:01.19,0:22:06.99,英文,,0,0,0,,Well, I could just take some of these values, and you kind of trade them around until the min-heap property is satisfied.
Dialogue: 0,0:22:01.19,0:22:06.99,中文,,0,0,0,,我可以取一些这些值 然后你可以将它们交换 直到满足最小堆的属性
Dialogue: 0,0:22:06.99,0:22:10.33,英文,,0,0,0,,So I look at this, and I say, who is in the wrong place?
Dialogue: 0,0:22:06.99,0:22:10.33,中文,,0,0,0,,我看了一下 我就说 谁在错误的地方
Dialogue: 0,0:22:10.33,0:22:12.79,英文,,0,0,0,,Well, three, you're in the wrong place.
Dialogue: 0,0:22:10.33,0:22:12.79,中文,,0,0,0,,好吧 3号 你在错误的地方
Dialogue: 0,0:22:12.79,0:22:16.68,英文,,0,0,0,,You should be higher, because look, 5 is not less than 3.
Dialogue: 0,0:22:12.79,0:22:16.68,中文,,0,0,0,,你应该更高一点 因为看 5不比3小
Dialogue: 0,0:22:16.68,0:22:18.70,英文,,0,0,0,,So 3, you should climb upwards.
Dialogue: 0,0:22:16.68,0:22:18.70,中文,,0,0,0,,所以3号 你应该往上爬
Dialogue: 0,0:22:18.70,0:22:19.62,英文,,0,0,0,,You're better than this.
Dialogue: 0,0:22:18.70,0:22:19.62,中文,,0,0,0,,你比这更好
Dialogue: 0,0:22:19.62,0:22:22.14,英文,,0,0,0,,You've got to come up and find your rightful place.
Dialogue: 0,0:22:19.62,0:22:22.14,中文,,0,0,0,,你得挺起来 找到你应该在的位置
Dialogue: 0,0:22:22.14,0:22:24.94,英文,,0,0,0,,So we'll take the 3. We'll swap it with the 5.
Dialogue: 0,0:22:22.14,0:22:24.94,中文,,0,0,0,,我们就拿这个3号  我们将其与5互换
Dialogue: 0,0:22:24.94,0:22:27.10,英文,,0,0,0,,So now the 3 is less than 8.
Dialogue: 0,0:22:24.94,0:22:27.10,中文,,0,0,0,,现在3小于8
Dialogue: 0,0:22:27.10,0:22:27.86,英文,,0,0,0,,3 is less than 5.
Dialogue: 0,0:22:27.10,0:22:27.86,中文,,0,0,0,,3小于5
Dialogue: 0,0:22:27.86,0:22:30.44,英文,,0,0,0,,So I fixed one of my problems.
Dialogue: 0,0:22:27.86,0:22:30.44,中文,,0,0,0,,我解决了一个问题
Dialogue: 0,0:22:30.44,0:22:32.11,英文,,0,0,0,,But I still have a problem here.
Dialogue: 0,0:22:30.44,0:22:32.11,中文,,0,0,0,,但我这里还有一个问题
Dialogue: 0,0:22:32.11,0:22:34.31,英文,,0,0,0,,5 is not less than 3.
Dialogue: 0,0:22:32.11,0:22:34.31,中文,,0,0,0,,5不小于3
Dialogue: 0,0:22:34.31,0:22:37.09,英文,,0,0,0,,So this 3 is still not in its rightful place.
Dialogue: 0,0:22:34.31,0:22:37.09,中文,,0,0,0,,这个3仍然没有到它应该在的地方
Dialogue: 0,0:22:37.09,0:22:38.49,英文,,0,0,0,,So I'll do another swap.
Dialogue: 0,0:22:37.09,0:22:38.49,中文,,0,0,0,,我要再做一次交换
Dialogue: 0,0:22:38.49,0:22:40.64,英文,,0,0,0,,I'll swap these two.
Dialogue: 0,0:22:38.49,0:22:40.64,中文,,0,0,0,,我要交换这两个
Dialogue: 0,0:22:40.64,0:22:41.39,英文,,0,0,0,,OK, good.
Dialogue: 0,0:22:40.64,0:22:41.39,中文,,0,0,0,,好的 很好
Dialogue: 0,0:22:41.39,0:22:45.91,英文,,0,0,0,,And now, finally, if you look at this tree, it obeys the MinHeap property.
Dialogue: 0,0:22:41.39,0:22:45.91,中文,,0,0,0,,现在 最后 如果你看这棵树 它遵循最小堆属性
Dialogue: 0,0:22:45.91,0:22:48.93,英文,,0,0,0,,This is my true home, so it can stay here.
Dialogue: 0,0:22:45.91,0:22:48.93,中文,,0,0,0,,这是我的真正家园 所以它可以留在这里
Dialogue: 0,0:22:48.93,0:22:50.09,英文,,0,0,0,,So I add the item.
Dialogue: 0,0:22:48.93,0:22:50.09,中文,,0,0,0,,我添加这个项目
Dialogue: 0,0:22:50.09,0:22:52.03,英文,,0,0,0,,It's probably in the wrong place.
Dialogue: 0,0:22:50.09,0:22:52.03,中文,,0,0,0,,它可能在错误的位置
Dialogue: 0,0:22:52.03,0:22:56.46,英文,,0,0,0,,And then I slowly promoted up the tree until it finds its rightful place.
Dialogue: 0,0:22:52.03,0:22:56.46,中文,,0,0,0,,然后我慢慢地往上晋升 直到它找到了它应该在的位置
Dialogue: 0,0:22:56.46,0:22:59.56,英文,,0,0,0,,And this is the rightful place, because I don't want to swap it with 1.
Dialogue: 0,0:22:56.46,0:22:59.56,中文,,0,0,0,,这就是正确的位置 因为我不想与1交换
Dialogue: 0,0:22:59.56,0:23:00.00,英文,,0,0,0,,1 is less than 3.
Dialogue: 0,0:22:59.56,0:23:00.00,中文,,0,0,0,,1小于3
Dialogue: 0,0:23:00.00,0:23:01.18,英文,,0,0,0,,That's good.
Dialogue: 0,0:23:00.00,0:23:01.18,中文,,0,0,0,,那很好
Dialogue: 0,0:23:01.18,0:23:02.22,英文,,0,0,0,,3 is less than 6 and 5.
Dialogue: 0,0:23:01.18,0:23:02.22,中文,,0,0,0,,3小于6和5
Dialogue: 0,0:23:02.22,0:23:03.12,英文,,0,0,0,,That's good.
Dialogue: 0,0:23:02.22,0:23:03.12,中文,,0,0,0,,那很好
Dialogue: 0,0:23:03.12,0:23:05.62,英文,,0,0,0,,The rest of the tree, all good.
Dialogue: 0,0:23:03.12,0:23:05.62,中文,,0,0,0,,树的其余部分 都很好
Dialogue: 0,0:23:05.62,0:23:07.30,英文,,0,0,0,,So that's how you add things.
Dialogue: 0,0:23:05.62,0:23:07.30,中文,,0,0,0,,这就是你添加事物的方式
Dialogue: 0,0:23:07.30,0:23:09.40,英文,,0,0,0,,I will add one more thing just to show you.
Dialogue: 0,0:23:07.30,0:23:09.40,中文,,0,0,0,,我再添加一件事情 只是为了给你看
Dialogue: 0,0:23:09.40,0:23:10.78,英文,,0,0,0,,Let's add 5.
Dialogue: 0,0:23:09.40,0:23:10.78,中文,,0,0,0,,我们加5个
Dialogue: 0,0:23:10.78,0:23:13.53,英文,,0,0,0,,So again, I don't want to break the completeness property yet.
Dialogue: 0,0:23:10.78,0:23:13.53,中文,,0,0,0,,我还不想破坏完整性属性
Dialogue: 0,0:23:13.53,0:23:17.15,英文,,0,0,0,,So I'll just throw in the 5 here, keep the tree complete.
Dialogue: 0,0:23:13.53,0:23:17.15,中文,,0,0,0,,我只是把5放在这里 保持树的完整性
Dialogue: 0,0:23:17.15,0:23:19.51,英文,,0,0,0,,And then now I have some things that are broken.
Dialogue: 0,0:23:17.15,0:23:19.51,中文,,0,0,0,,然后现在有一些东西是坏的
Dialogue: 0,0:23:19.51,0:23:21.47,英文,,0,0,0,,So I'm going to go through and fix them.
Dialogue: 0,0:23:19.51,0:23:21.47,中文,,0,0,0,,我要去修复它们
Dialogue: 0,0:23:21.47,0:23:23.11,英文,,0,0,0,,6, you are not less than 5.
Dialogue: 0,0:23:21.47,0:23:23.11,中文,,0,0,0,,6 你不比5差
Dialogue: 0,0:23:23.11,0:23:27.21,英文,,0,0,0,,So for this 5, you should climb up the tree to your rightful place.
Dialogue: 0,0:23:23.11,0:23:27.21,中文,,0,0,0,,对于这个5 你应该爬上树到你应该的位置
Dialogue: 0,0:23:27.21,0:23:30.29,英文,,0,0,0,,Sometimes people call it swimming for some reason, I don't know.
Dialogue: 0,0:23:27.21,0:23:30.29,中文,,0,0,0,,有时人们出于某种原因把它称为游泳 我不知道为什么
Dialogue: 0,0:23:30.29,0:23:33.67,英文,,0,0,0,,But I think of it as climbing up the tree to your rightful place.
Dialogue: 0,0:23:30.29,0:23:33.67,中文,,0,0,0,,但我把它看作是爬上树到你应该的位置
Dialogue: 0,0:23:33.67,0:23:35.34,英文,,0,0,0,,So five, you're better than this.
Dialogue: 0,0:23:33.67,0:23:35.34,中文,,0,0,0,,所以说5 你比这好
Dialogue: 0,0:23:35.34,0:23:38.16,英文,,0,0,0,,You don't have to stay down here with all these big numbers.
Dialogue: 0,0:23:35.34,0:23:38.16,中文,,0,0,0,,你不必和所有这些大数字一起待在这里
Dialogue: 0,0:23:38.16,0:23:41.10,英文,,0,0,0,,You should go and join all of your small number friends.
Dialogue: 0,0:23:38.16,0:23:41.10,中文,,0,0,0,,你应该去和你的小数字朋友们一起
Dialogue: 0,0:23:41.10,0:23:44.46,英文,,0,0,0,,So this five and the six, they're going to trade places.
Dialogue: 0,0:23:41.10,0:23:44.46,中文,,0,0,0,,这5和6 它们要交换位置
Dialogue: 0,0:23:44.46,0:23:48.96,英文,,0,0,0,,5 and the 6, they trade, because the 6 should be down here with its big items.
Dialogue: 0,0:23:44.46,0:23:48.96,中文,,0,0,0,,5和6 它们交换 因为6应该在这里 有它的大项目
Dialogue: 0,0:23:48.96,0:23:51.66,英文,,0,0,0,,5 should swim upwards toward the smaller items.
Dialogue: 0,0:23:48.96,0:23:51.66,中文,,0,0,0,,5应该向上游向较小的项目
Dialogue: 0,0:23:51.66,0:23:52.91,英文,,0,0,0,,Should the 5 swim any further?
Dialogue: 0,0:23:51.66,0:23:52.91,中文,,0,0,0,,5应该再游多远吗
Dialogue: 0,0:23:52.91,0:23:54.13,英文,,0,0,0,,Should it swap with the 1?
Dialogue: 0,0:23:52.91,0:23:54.13,中文,,0,0,0,,它应该和1交换吗
Dialogue: 0,0:23:54.13,0:23:55.35,英文,,0,0,0,,Well, probably not.
Dialogue: 0,0:23:54.13,0:23:55.35,中文,,0,0,0,,可能不应该
Dialogue: 0,0:23:55.35,0:23:56.83,英文,,0,0,0,,That's too good for the 5.
Dialogue: 0,0:23:55.35,0:23:56.83,中文,,0,0,0,,这对于5来说太好了
Dialogue: 0,0:23:56.83,0:24:00.27,英文,,0,0,0,,And so the 5 looks around, and it says, 1, well, I don't want to swap with the 1.
Dialogue: 0,0:23:56.83,0:24:00.27,中文,,0,0,0,,所以 5 看看四周 它说 1 我不想和 1 交换
Dialogue: 0,0:24:00.27,0:24:02.63,英文,,0,0,0,,And I am less than the 6.
Dialogue: 0,0:24:00.27,0:24:02.63,中文,,0,0,0,,而我小于 6
Dialogue: 0,0:24:02.63,0:24:05.35,英文,,0,0,0,,So it says, I'm happy here.
Dialogue: 0,0:24:02.63,0:24:05.35,中文,,0,0,0,,它说 我在这里很高兴
Dialogue: 0,0:24:05.35,0:24:06.53,英文,,0,0,0,,I'm going to stay here.
Dialogue: 0,0:24:05.35,0:24:06.53,中文,,0,0,0,,我要待在这里
Dialogue: 0,0:24:06.53,0:24:07.64,英文,,0,0,0,,I'm home.
Dialogue: 0,0:24:06.53,0:24:07.64,中文,,0,0,0,,我回家了
Dialogue: 0,0:24:07.64,0:24:10.60,英文,,0,0,0,,And everything is good.
Dialogue: 0,0:24:07.64,0:24:10.60,中文,,0,0,0,,一切都很好
Dialogue: 0,0:24:10.60,0:24:11.89,英文,,0,0,0,,So that's how you add things.
Dialogue: 0,0:24:10.60,0:24:11.89,中文,,0,0,0,,这就是你添加事物的方法
Dialogue: 0,0:24:11.89,0:24:19.32,英文,,0,0,0,,You throw things at the end of the priority queue, and then you slowly trade them upwards until it finds its rightful place.
Dialogue: 0,0:24:11.89,0:24:19.32,中文,,0,0,0,,你把东西扔到优先级队列的末尾 然后慢慢地交换它们 直到它找到它应该在的位置
Dialogue: 0,0:24:19.32,0:24:20.44,英文,,0,0,0,,Questions, thoughts?
Dialogue: 0,0:24:19.32,0:24:20.44,中文,,0,0,0,,有问题 想法吗
Dialogue: 0,0:24:20.44,0:24:40.92,英文,,0,0,0,,Yeah, question?
Dialogue: 0,0:24:20.44,0:24:40.92,中文,,0,0,0,,问题
Dialogue: 0,0:24:40.92,0:24:44.14,英文,,0,0,0,,Yeah, the question was, what if I dangle the 4 off the 3 node?
Dialogue: 0,0:24:40.92,0:24:44.14,中文,,0,0,0,,问题是 如果我把 4 悬挂在 3 的节点上会怎样
Dialogue: 0,0:24:44.14,0:24:46.68,英文,,0,0,0,,You could, but then the tree would not be complete.
Dialogue: 0,0:24:44.14,0:24:46.68,中文,,0,0,0,,你可以 但是那样树就不完整了
Dialogue: 0,0:24:46.68,0:24:50.48,英文,,0,0,0,,And if you remember, I showed some examples from earlier, you would have something like this, right?
Dialogue: 0,0:24:46.68,0:24:50.48,中文,,0,0,0,,如果你记得 我之前展示了一些例子 你会得到类似这样的结果 对吧
Dialogue: 0,0:24:50.48,0:24:56.01,英文,,0,0,0,,You're dangling the node off something that's not the leftmost position.
Dialogue: 0,0:24:50.48,0:24:56.01,中文,,0,0,0,,你把节点悬挂在不是最左边位置的地方
Dialogue: 0,0:24:56.01,0:24:57.97,英文,,0,0,0,,So if you wanted to add the 4, it'd have to be here.
Dialogue: 0,0:24:56.01,0:24:57.97,中文,,0,0,0,,如果你想要添加这个4的话 它必须在这里
Dialogue: 0,0:24:57.97,0:25:01.99,英文,,0,0,0,,If you dangle it too far off, it's not complete anymore.
Dialogue: 0,0:24:57.97,0:25:01.99,中文,,0,0,0,,如果你把它悬挂得太远 它就不完整了
Dialogue: 0,0:25:01.99,0:25:02.63,英文,,0,0,0,,Good question.
Dialogue: 0,0:25:01.99,0:25:02.63,中文,,0,0,0,,好问题
Dialogue: 0,0:25:02.63,0:25:05.61,英文,,0,0,0,,So yeah, we always want to add it as far to the left as we can.
Dialogue: 0,0:25:02.63,0:25:05.61,中文,,0,0,0,,我们总是希望尽可能地向左添加它
Dialogue: 0,0:25:05.61,0:25:14.02,英文,,0,0,0,,One more question?
Dialogue: 0,0:25:05.61,0:25:14.02,中文,,0,0,0,,还有一个问题吗
Dialogue: 0,0:25:14.02,0:25:17.90,英文,,0,0,0,,Yeah, that's a great question, which is, do I have to do any swaps somewhere else?
Dialogue: 0,0:25:14.02,0:25:17.90,中文,,0,0,0,,这是一个很棒的问题 就是 我是否需要在其他地方进行任何交换
Dialogue: 0,0:25:17.90,0:25:21.79,英文,,0,0,0,,So the intuitive idea is, well, if you look at, let's say, I added five.
Dialogue: 0,0:25:17.90,0:25:21.79,中文,,0,0,0,,直观的想法是 如果你看 假设我添加了五
Dialogue: 0,0:25:21.79,0:25:26.01,英文,,0,0,0,,Well, I didn't change anything about this side of the tree, so I shouldn't have to touch anything here.
Dialogue: 0,0:25:21.79,0:25:26.01,中文,,0,0,0,,我这边的树什么都没改 所以我不应该需要碰这里
Dialogue: 0,0:25:26.01,0:25:28.13,英文,,0,0,0,,Same thing with here. I didn't really touch the three.
Dialogue: 0,0:25:26.01,0:25:28.13,中文,,0,0,0,,这边也是同样的情况  我其实并没有真的碰那三个
Dialogue: 0,0:25:28.13,0:25:38.90,英文,,0,0,0,,So it turns out, and you can go and play with it a little bit to convince yourself, the only trades you'll ever have to make are to change that brand new item to five and kind of swap it potentially up to the root.
Dialogue: 0,0:25:28.13,0:25:38.90,中文,,0,0,0,,结果就是 你可以稍微玩玩 自己说服自己 唯一需要做的交换就是把那个全新的项改成五 可能还得把它换到根部去
Dialogue: 0,0:25:38.90,0:25:40.60,英文,,0,0,0,,So just along the path to the root.
Dialogue: 0,0:25:38.90,0:25:40.60,中文,,0,0,0,,就是沿着到根部的路径
Dialogue: 0,0:25:40.60,0:25:42.04,英文,,0,0,0,,That's a great question, though.
Dialogue: 0,0:25:40.60,0:25:42.04,中文,,0,0,0,,不过 这是个好问题
Dialogue: 0,0:25:42.04,0:25:46.35,英文,,0,0,0,,And if you're not convinced, you can try asking yourself, why do I have to swap anything here?
Dialogue: 0,0:25:42.04,0:25:46.35,中文,,0,0,0,,如果你还不信 你可以试着问问自己 我为什么需要在这里换东西
Dialogue: 0,0:25:46.35,0:25:47.95,英文,,0,0,0,,OK, anything else?
Dialogue: 0,0:25:46.35,0:25:47.95,中文,,0,0,0,,好的 还有其他事情吗
Dialogue: 0,0:25:47.95,0:25:49.39,英文,,0,0,0,,Those are all great questions.
Dialogue: 0,0:25:47.95,0:25:49.39,中文,,0,0,0,,这些都是很棒的问题
Dialogue: 0,0:25:49.39,0:25:50.71,英文,,0,0,0,,OK, there's the five.
Dialogue: 0,0:25:49.39,0:25:50.71,中文,,0,0,0,,好的 就这五个
Dialogue: 0,0:25:50.71,0:25:51.91,英文,,0,0,0,,It's home again.
Dialogue: 0,0:25:50.71,0:25:51.91,中文,,0,0,0,,又回到了家
Dialogue: 0,0:25:51.91,0:25:53.09,英文,,0,0,0,,Sorry, we keep going back and forth.
Dialogue: 0,0:25:51.91,0:25:53.09,中文,,0,0,0,,抱歉 我们一直在来回
Dialogue: 0,0:25:53.09,0:25:54.81,英文,,0,0,0,,So we kept losing its place.
Dialogue: 0,0:25:53.09,0:25:54.81,中文,,0,0,0,,我们一直找不到位置
Dialogue: 0,0:25:54.81,0:25:56.66,英文,,0,0,0,,Now it's home. OK.
Dialogue: 0,0:25:54.81,0:25:56.66,中文,,0,0,0,,现在它回到了首页
Dialogue: 0,0:25:56.66,0:25:57.40,英文,,0,0,0,,Great.
Dialogue: 0,0:25:56.66,0:25:57.40,中文,,0,0,0,,太棒了
Dialogue: 0,0:25:57.40,0:26:00.36,英文,,0,0,0,,So we figured out how to add things to our big old heap.
Dialogue: 0,0:25:57.40,0:26:00.36,中文,,0,0,0,,我们弄清楚了如何向我们的旧大堆中添加东西
Dialogue: 0,0:26:00.36,0:26:02.20,英文,,0,0,0,,We know how to find the smallest item.
Dialogue: 0,0:26:00.36,0:26:02.20,中文,,0,0,0,,我们知道如何找到最小的项
Dialogue: 0,0:26:02.20,0:26:03.40,英文,,0,0,0,,Just look at the root.
Dialogue: 0,0:26:02.20,0:26:03.40,中文,,0,0,0,,只需查看根节点
Dialogue: 0,0:26:03.40,0:26:04.84,英文,,0,0,0,,How do you delete things?
Dialogue: 0,0:26:03.40,0:26:04.84,中文,,0,0,0,,你如何删除东西
Dialogue: 0,0:26:04.84,0:26:08.10,英文,,0,0,0,,So now, again, we want something logarithmic.
Dialogue: 0,0:26:04.84,0:26:08.10,中文,,0,0,0,,现在 我们再次想要一些对数的东西
Dialogue: 0,0:26:08.10,0:26:13.35,英文,,0,0,0,,And again, I'm going to use my tried and true strategy of, I don't want to break too many things at once.
Dialogue: 0,0:26:08.10,0:26:13.35,中文,,0,0,0,,再次 我要使用我尝试过的、行之有效的策略 我不想一次性打破太多东西
Dialogue: 0,0:26:13.35,0:26:18.03,英文,,0,0,0,,So I'm going to keep as many of the invariants true, and then go back and fix my mistakes.
Dialogue: 0,0:26:13.35,0:26:18.03,中文,,0,0,0,,我要保持尽可能多的不变量 然后回去修复我的错误
Dialogue: 0,0:26:18.03,0:26:20.13,英文,,0,0,0,,So I want to remove the smallest thing.
Dialogue: 0,0:26:18.03,0:26:20.13,中文,,0,0,0,,我想要移除最小的东西
Dialogue: 0,0:26:20.13,0:26:22.01,英文,,0,0,0,,So what do I have to do?
Dialogue: 0,0:26:20.13,0:26:22.01,中文,,0,0,0,,那么我需要做什么
Dialogue: 0,0:26:22.01,0:26:23.51,英文,,0,0,0,,Let's say I want to delete the smallest thing.
Dialogue: 0,0:26:22.01,0:26:23.51,中文,,0,0,0,,假设我想要删除最小的东西
Dialogue: 0,0:26:23.51,0:26:25.86,英文,,0,0,0,,Well, first of all, where is the smallest thing?
Dialogue: 0,0:26:23.51,0:26:25.86,中文,,0,0,0,,首先 最小的东西在哪里
Dialogue: 0,0:26:25.86,0:26:28.26,英文,,0,0,0,,Root, guaranteed to always be there.
Dialogue: 0,0:26:25.86,0:26:28.26,中文,,0,0,0,,根节点 保证一直存在
Dialogue: 0,0:26:28.26,0:26:30.40,英文,,0,0,0,,That's what the min-heap property says.
Dialogue: 0,0:26:28.26,0:26:30.40,中文,,0,0,0,,这就是最小堆属性的含义
Dialogue: 0,0:26:30.40,0:26:33.37,英文,,0,0,0,,So if I want to delete the one, well, what can I do?
Dialogue: 0,0:26:30.40,0:26:33.37,中文,,0,0,0,,如果我想删除这个呢 我能做什么
Dialogue: 0,0:26:33.37,0:26:34.63,英文,,0,0,0,,Hopefully this slide works.
Dialogue: 0,0:26:33.37,0:26:34.63,中文,,0,0,0,,希望这张幻灯片有效
Dialogue: 0,0:26:34.63,0:26:38.39,英文,,0,0,0,,OK, the first thing I can do is I can say the one is gone.
Dialogue: 0,0:26:34.63,0:26:38.39,中文,,0,0,0,,好的 我能做的第一件事就是说这个已经不存在了
Dialogue: 0,0:26:38.39,0:26:40.43,英文,,0,0,0,,So I delete the one.
Dialogue: 0,0:26:38.39,0:26:40.43,中文,,0,0,0,,我删除了这个
Dialogue: 0,0:26:40.43,0:26:41.89,英文,,0,0,0,,Well, now I have a problem.
Dialogue: 0,0:26:40.43,0:26:41.89,中文,,0,0,0,,现在我有一个问题
Dialogue: 0,0:26:41.89,0:26:43.71,英文,,0,0,0,,I am missing a root.
Dialogue: 0,0:26:41.89,0:26:43.71,中文,,0,0,0,,我缺少一个根节点
Dialogue: 0,0:26:43.71,0:26:45.23,英文,,0,0,0,,So again, we like being lazy.
Dialogue: 0,0:26:43.71,0:26:45.23,中文,,0,0,0,,我们喜欢懒惰
Dialogue: 0,0:26:45.23,0:26:46.65,英文,,0,0,0,,We like the easy thing.
Dialogue: 0,0:26:45.23,0:26:46.65,中文,,0,0,0,,我们喜欢简单的事情
Dialogue: 0,0:26:46.65,0:26:51.58,英文,,0,0,0,,So tell me, what is the easiest thing to promote as the new root?
Dialogue: 0,0:26:46.65,0:26:51.58,中文,,0,0,0,,那么告诉我 作为新根最容易推广的是什么
Dialogue: 0,0:26:51.58,0:26:54.18,英文,,0,0,0,,I could take the 3 and be like, 3, you're the new root.
Dialogue: 0,0:26:51.58,0:26:54.18,中文,,0,0,0,,我可以选择3 然后说 3 你是新的根
Dialogue: 0,0:26:54.18,0:26:57.37,英文,,0,0,0,,But now I have another hole to fill. Then I'll have another hole to fill.
Dialogue: 0,0:26:54.18,0:26:57.37,中文,,0,0,0,,但现在我有另一个空缺要填补  然后我会有另一个空缺要填补
Dialogue: 0,0:26:57.37,0:26:59.07,英文,,0,0,0,,So I don't know about that.
Dialogue: 0,0:26:57.37,0:26:59.07,中文,,0,0,0,,我对此不太清楚
Dialogue: 0,0:26:59.07,0:27:06.70,英文,,0,0,0,,So if I take this one and I delete it, who is the easiest item to swap up to the root that doesn't violate too many things?
Dialogue: 0,0:26:59.07,0:27:06.70,中文,,0,0,0,,如果我拿这个并删除它 谁是最容易交换到根部而不违反太多规则的项目
Dialogue: 0,0:27:06.70,0:27:11.52,英文,,0,0,0,,Well, I like taking the rightmost item.
Dialogue: 0,0:27:06.70,0:27:11.52,中文,,0,0,0,,我喜欢拿最右边的项目
Dialogue: 0,0:27:11.52,0:27:15.34,英文,,0,0,0,,And swapping it into the root, that is, the last item in the heap.
Dialogue: 0,0:27:11.52,0:27:15.34,中文,,0,0,0,,然后将其交换到根部 也就是堆中的最后一个项目
Dialogue: 0,0:27:15.34,0:27:16.64,英文,,0,0,0,,And why do I like this?
Dialogue: 0,0:27:15.34,0:27:16.64,中文,,0,0,0,,我为什么喜欢这样做呢
Dialogue: 0,0:27:16.64,0:27:20.66,英文,,0,0,0,,Because if I delete this 1, so it's about to go, goodbye 1.
Dialogue: 0,0:27:16.64,0:27:20.66,中文,,0,0,0,,因为如果我删除这个1 那么它就要走了 再见1
Dialogue: 0,0:27:20.66,0:27:23.70,英文,,0,0,0,,And then I'm going to take the 6, and I'm going to swap it.
Dialogue: 0,0:27:20.66,0:27:23.70,中文,,0,0,0,,然后我要拿走这个6 然后我要交换它
Dialogue: 0,0:27:23.70,0:27:24.92,英文,,0,0,0,,See, look, it's gone.
Dialogue: 0,0:27:23.70,0:27:24.92,中文,,0,0,0,,看 它已经消失了
Dialogue: 0,0:27:24.92,0:27:26.76,英文,,0,0,0,,And I need another root.
Dialogue: 0,0:27:24.92,0:27:26.76,中文,,0,0,0,,我还需要另一个根节点
Dialogue: 0,0:27:26.76,0:27:30.42,英文,,0,0,0,,I could try to swap the 3 up or the 1 up, but then I got more problems.
Dialogue: 0,0:27:26.76,0:27:30.42,中文,,0,0,0,,我可以尝试将3上移或将1上移 但那样我会遇到更多问题
Dialogue: 0,0:27:30.42,0:27:31.68,英文,,0,0,0,,There's another hole.
Dialogue: 0,0:27:30.42,0:27:31.68,中文,,0,0,0,,还有另一个空缺
Dialogue: 0,0:27:31.68,0:27:33.43,英文,,0,0,0,,But if I take the 6.
Dialogue: 0,0:27:31.68,0:27:33.43,中文,,0,0,0,,但如果我拿走6
Dialogue: 0,0:27:33.43,0:27:35.63,英文,,0,0,0,,And I swap it up to the root.
Dialogue: 0,0:27:33.43,0:27:35.63,中文,,0,0,0,,然后我将它移到根节点
Dialogue: 0,0:27:35.63,0:27:37.85,英文,,0,0,0,,Well, now the tree is still complete.
Dialogue: 0,0:27:35.63,0:27:37.85,中文,,0,0,0,,好吧 现在树还是完整的
Dialogue: 0,0:27:37.85,0:27:39.55,英文,,0,0,0,,Look, it's totally complete.
Dialogue: 0,0:27:37.85,0:27:39.55,中文,,0,0,0,,看 它完全完整了
Dialogue: 0,0:27:39.55,0:27:41.57,英文,,0,0,0,,All the items are as bushy as possible.
Dialogue: 0,0:27:39.55,0:27:41.57,中文,,0,0,0,,所有的项目都尽可能丰满
Dialogue: 0,0:27:41.57,0:27:44.24,英文,,0,0,0,,So that's what I'm going to do to keep the completeness.
Dialogue: 0,0:27:41.57,0:27:44.24,中文,,0,0,0,,这就是我要做的 以保持完整性
Dialogue: 0,0:27:44.24,0:27:49.49,英文,,0,0,0,,And then I'll go back and fix my min-heap mistakes later.
Dialogue: 0,0:27:44.24,0:27:49.49,中文,,0,0,0,,然后我会回去修复我的小根堆错误
Dialogue: 0,0:27:49.49,0:27:52.29,英文,,0,0,0,,In summary, what happens is I want to delete the root.
Dialogue: 0,0:27:49.49,0:27:52.29,中文,,0,0,0,,总之 发生的事情是我想删除根节点
Dialogue: 0,0:27:52.29,0:27:55.89,英文,,0,0,0,,So look, uh-oh, it's not long for this world.
Dialogue: 0,0:27:52.29,0:27:55.89,中文,,0,0,0,,看 哎呀 它对这个世界来说不是很长了
Dialogue: 0,0:27:55.89,0:28:01.30,英文,,0,0,0,,And I'm going to take the last item in the heap, so bottom layer as far to the right as possible.
Dialogue: 0,0:27:55.89,0:28:01.30,中文,,0,0,0,,我要取堆中的最后一个项目 就是尽可能靠右的底层
Dialogue: 0,0:28:01.30,0:28:06.58,英文,,0,0,0,,The thing I can delete and keep the tree complete, I'm going to take you, and I'm going to just toss you up into the root.
Dialogue: 0,0:28:01.30,0:28:06.58,中文,,0,0,0,,我可以删除并保持树的完整性的东西 我会带着你 然后把你扔到根节点
Dialogue: 0,0:28:06.58,0:28:08.50,英文,,0,0,0,,So there you go.
Dialogue: 0,0:28:06.58,0:28:08.50,中文,,0,0,0,,就是这样了
Dialogue: 0,0:28:08.50,0:28:11.18,英文,,0,0,0,,It is unlikely for the 6 to be a proper root.
Dialogue: 0,0:28:08.50,0:28:11.18,中文,,0,0,0,,6作为一个合适的根节点是不太可能的
Dialogue: 0,0:28:11.18,0:28:12.92,英文,,0,0,0,,Like, look, the value is so large.
Dialogue: 0,0:28:11.18,0:28:12.92,中文,,0,0,0,,就像 看 这个值太大了
Dialogue: 0,0:28:12.92,0:28:15.10,英文,,0,0,0,,And remember, we like small things at the top.
Dialogue: 0,0:28:12.92,0:28:15.10,中文,,0,0,0,,记住 我们喜欢顶部的小东西
Dialogue: 0,0:28:15.10,0:28:19.68,英文,,0,0,0,,So the 6 is like, oh, I'm not cut out for being up here at the top and being the big boss.
Dialogue: 0,0:28:15.10,0:28:19.68,中文,,0,0,0,,这个6就像 哦 我不适合在这里当大boss
Dialogue: 0,0:28:19.68,0:28:22.92,英文,,0,0,0,,And we look at the item to the left, the item to the right.
Dialogue: 0,0:28:19.68,0:28:22.92,中文,,0,0,0,,我们看左边的项目 看右边的项目
Dialogue: 0,0:28:22.92,0:28:25.19,英文,,0,0,0,,And this 1 is like, I should be the boss.
Dialogue: 0,0:28:22.92,0:28:25.19,中文,,0,0,0,,而这个1就像 我应该是老大
Dialogue: 0,0:28:25.19,0:28:27.09,英文,,0,0,0,,So get out of here, 6.
Dialogue: 0,0:28:25.19,0:28:27.09,中文,,0,0,0,,赶紧离开 6
Dialogue: 0,0:28:27.09,0:28:30.29,英文,,0,0,0,,And so the 6 is going to trade places with the 1.
Dialogue: 0,0:28:27.09,0:28:30.29,中文,,0,0,0,,然后6要和1交换位置
Dialogue: 0,0:28:30.29,0:28:32.19,英文,,0,0,0,,Or sometimes people call this sinking.
Dialogue: 0,0:28:30.29,0:28:32.19,中文,,0,0,0,,有时候人们称之为下沉
Dialogue: 0,0:28:32.19,0:28:36.87,英文,,0,0,0,,The 6 is going to sink downwards until it finds somewhere where it's comfortable.
Dialogue: 0,0:28:32.19,0:28:36.87,中文,,0,0,0,,6会一直下沉 直到找到一个舒适的位置
Dialogue: 0,0:28:36.87,0:28:40.05,英文,,0,0,0,,So the 6, it looks and says, this is too good for me.
Dialogue: 0,0:28:36.87,0:28:40.05,中文,,0,0,0,,所以6看着说 这对我来说太好了
Dialogue: 0,0:28:40.05,0:28:41.95,英文,,0,0,0,,I don't want to be the big boss.
Dialogue: 0,0:28:40.05,0:28:41.95,中文,,0,0,0,,我不想当老板
Dialogue: 0,0:28:41.95,0:28:43.43,英文,,0,0,0,,So we'll swap it with the 1.
Dialogue: 0,0:28:41.95,0:28:43.43,中文,,0,0,0,,我们将其与1交换
Dialogue: 0,0:28:43.43,0:28:44.54,英文,,0,0,0,,And the 6 looks below it.
Dialogue: 0,0:28:43.43,0:28:44.54,中文,,0,0,0,,而6在下面看着它
Dialogue: 0,0:28:44.54,0:28:46.64,英文,,0,0,0,,And it's like, eh, I don't know about this.
Dialogue: 0,0:28:44.54,0:28:46.64,中文,,0,0,0,,就像是 我不太确定这个
Dialogue: 0,0:28:46.64,0:28:48.66,英文,,0,0,0,,I need to be less than my children.
Dialogue: 0,0:28:46.64,0:28:48.66,中文,,0,0,0,,我需要比我的子节点们低
Dialogue: 0,0:28:48.66,0:28:51.54,英文,,0,0,0,,So I think I'm still too far up in this tree.
Dialogue: 0,0:28:48.66,0:28:51.54,中文,,0,0,0,,我觉得我还是在这棵树上太高了
Dialogue: 0,0:28:51.54,0:28:52.70,英文,,0,0,0,,So it looks at the 5 and the 3.
Dialogue: 0,0:28:51.54,0:28:52.70,中文,,0,0,0,,它看着5和3
Dialogue: 0,0:28:52.70,0:28:54.70,英文,,0,0,0,,And the 3 is like, get out of here, 6.
Dialogue: 0,0:28:52.70,0:28:54.70,中文,,0,0,0,,而3就像是 滚出去 6
Dialogue: 0,0:28:54.70,0:28:55.72,英文,,0,0,0,,And it swaps.
Dialogue: 0,0:28:54.70,0:28:55.72,中文,,0,0,0,,然后它交换了
Dialogue: 0,0:28:55.72,0:28:57.28,英文,,0,0,0,,And the 6 is like, OK, you know what?
Dialogue: 0,0:28:55.72,0:28:57.28,中文,,0,0,0,,而6就像 好吧 你知道吗
Dialogue: 0,0:28:57.28,0:28:58.05,英文,,0,0,0,,I like this.
Dialogue: 0,0:28:57.28,0:28:58.05,中文,,0,0,0,,我喜欢这个
Dialogue: 0,0:28:58.05,0:28:59.49,英文,,0,0,0,,I'm comfortable here.
Dialogue: 0,0:28:58.05,0:28:59.49,中文,,0,0,0,,我在这里感觉舒服
Dialogue: 0,0:28:59.49,0:29:01.45,英文,,0,0,0,,This is the right place for me.
Dialogue: 0,0:28:59.49,0:29:01.45,中文,,0,0,0,,这对我来说是正确的地方
Dialogue: 0,0:29:01.45,0:29:02.91,英文,,0,0,0,,So that's the idea.
Dialogue: 0,0:29:01.45,0:29:02.91,中文,,0,0,0,,这就是主意
Dialogue: 0,0:29:02.91,0:29:11.65,英文,,0,0,0,,You get rid of the root, you swap the last item in, and then the last item kind of swims its way down, or sinks its way down till it finds its rightful place.
Dialogue: 0,0:29:02.91,0:29:11.65,中文,,0,0,0,,你去掉根 把最后一个项目换进去 然后最后一个项目会一直往下游 或者沉下去直到找到它合适的位置
Dialogue: 0,0:29:11.65,0:29:17.64,英文,,0,0,0,,One tiny little note is that here, the 6 could have swapped with the 3, and it could have swapped with the 1.
Dialogue: 0,0:29:11.65,0:29:17.64,中文,,0,0,0,,一个小小的注意是 这里 6可以和3交换 也可以和1交换
Dialogue: 0,0:29:17.64,0:29:23.34,英文,,0,0,0,,You're always going to swap with the item that is most qualified, that is, the item that is less.
Dialogue: 0,0:29:17.64,0:29:23.34,中文,,0,0,0,,总是要与最合格的项目交换 也就是说 与较小的项目交换
Dialogue: 0,0:29:23.34,0:29:25.30,英文,,0,0,0,,So in this case, I should swap the 1 up.
Dialogue: 0,0:29:23.34,0:29:25.30,中文,,0,0,0,,在这种情况下 我应该将1向上交换
Dialogue: 0,0:29:25.30,0:29:30.14,英文,,0,0,0,,And if you're not convinced, you can go home, try swapping the 3 up, and you'll see that things break.
Dialogue: 0,0:29:25.30,0:29:30.14,中文,,0,0,0,,如果你还不相信 你可以回家 尝试将3向上交换 你会发现事情会出问题
Dialogue: 0,0:29:30.14,0:29:33.67,英文,,0,0,0,,So between the 3 and the 1, I prefer the smaller item swapping up.
Dialogue: 0,0:29:30.14,0:29:33.67,中文,,0,0,0,,在3和1之间 我更喜欢较小的项目向上交换
Dialogue: 0,0:29:33.67,0:29:34.91,英文,,0,0,0,,In this case, it's the 1.
Dialogue: 0,0:29:33.67,0:29:34.91,中文,,0,0,0,,在这种情况下 就是1
Dialogue: 0,0:29:34.91,0:29:37.97,英文,,0,0,0,,Between the 5 and the 3, I want the smaller item to swap up.
Dialogue: 0,0:29:34.91,0:29:37.97,中文,,0,0,0,,在5和3之间 我想要较小的项目向上交换
Dialogue: 0,0:29:37.97,0:29:38.93,英文,,0,0,0,,That's the 3.
Dialogue: 0,0:29:37.97,0:29:38.93,中文,,0,0,0,,那就是3
Dialogue: 0,0:29:38.93,0:29:42.71,英文,,0,0,0,,And now the 6 is like, whew, I'm happy with where I am.
Dialogue: 0,0:29:38.93,0:29:42.71,中文,,0,0,0,,现在6就像 哇 我对自己的位置感到满意了
Dialogue: 0,0:29:42.71,0:29:45.21,英文,,0,0,0,,OK, questions, thoughts on deleting?
Dialogue: 0,0:29:42.71,0:29:45.21,中文,,0,0,0,,好的 有什么问题 对删除有什么想法吗
Dialogue: 0,0:29:45.21,0:29:47.90,英文,,0,0,0,,I will delete one more just to convince you.
Dialogue: 0,0:29:45.21,0:29:47.90,中文,,0,0,0,,我再删除一个只是为了说服你
Dialogue: 0,0:29:47.90,0:29:49.38,英文,,0,0,0,,So I want to delete again.
Dialogue: 0,0:29:47.90,0:29:49.38,中文,,0,0,0,,我想再删除一次
Dialogue: 0,0:29:49.38,0:29:51.10,英文,,0,0,0,,So what happens?
Dialogue: 0,0:29:49.38,0:29:51.10,中文,,0,0,0,,那么会发生什么
Dialogue: 0,0:29:51.10,0:29:52.16,英文,,0,0,0,,The 1 is gone.
Dialogue: 0,0:29:51.10,0:29:52.16,中文,,0,0,0,,1不见了
Dialogue: 0,0:29:52.16,0:29:54.30,英文,,0,0,0,,So look, it's gone.
Dialogue: 0,0:29:52.16,0:29:54.30,中文,,0,0,0,,你看 它不见了
Dialogue: 0,0:29:54.30,0:29:57.46,英文,,0,0,0,,And then I'm going to take any item, make it the root.
Dialogue: 0,0:29:54.30,0:29:57.46,中文,,0,0,0,,然后我要取任何一个项目 把它变成根
Dialogue: 0,0:29:57.46,0:30:01.24,英文,,0,0,0,,I'm going to choose the last item, because that preserves completeness.
Dialogue: 0,0:29:57.46,0:30:01.24,中文,,0,0,0,,我会选择最后一个项目 因为那样可以保持完整性
Dialogue: 0,0:30:01.24,0:30:04.10,英文,,0,0,0,,So we'll take this five, and we'll shoot it up to the root.
Dialogue: 0,0:30:01.24,0:30:04.10,中文,,0,0,0,,我们会把这个5拿起来 送到根上
Dialogue: 0,0:30:04.10,0:30:05.54,英文,,0,0,0,,And now it's the brand new root.
Dialogue: 0,0:30:04.10,0:30:05.54,中文,,0,0,0,,现在它是全新的根
Dialogue: 0,0:30:05.54,0:30:07.06,英文,,0,0,0,,Is it a good boss?
Dialogue: 0,0:30:05.54,0:30:07.06,中文,,0,0,0,,是个好老板吗
Dialogue: 0,0:30:07.06,0:30:07.68,英文,,0,0,0,,Probably not.
Dialogue: 0,0:30:07.06,0:30:07.68,中文,,0,0,0,,可能不是
Dialogue: 0,0:30:07.68,0:30:13.15,英文,,0,0,0,,This is like taking the lowly employee at the bottom and just saying, you're the CEO now, and here it is.
Dialogue: 0,0:30:07.68,0:30:13.15,中文,,0,0,0,,这就像把底层的员工提拔为CEO 就这样
Dialogue: 0,0:30:13.15,0:30:15.93,英文,,0,0,0,,And it's like, uh-oh, I don't know about this.
Dialogue: 0,0:30:13.15,0:30:15.93,中文,,0,0,0,,然后就像 哎呀 我不知道这个怎么样
Dialogue: 0,0:30:15.93,0:30:18.41,英文,,0,0,0,,And so it looks to its left, looks to its right.
Dialogue: 0,0:30:15.93,0:30:18.41,中文,,0,0,0,,它看向左边 看向右边
Dialogue: 0,0:30:18.41,0:30:20.23,英文,,0,0,0,,I am not less than three.
Dialogue: 0,0:30:18.41,0:30:20.23,中文,,0,0,0,,我不少于3
Dialogue: 0,0:30:20.23,0:30:22.67,英文,,0,0,0,,So it needs to swap with one of the threes.
Dialogue: 0,0:30:20.23,0:30:22.67,中文,,0,0,0,,它需要和其中一个3进行交换
Dialogue: 0,0:30:22.67,0:30:23.53,英文,,0,0,0,,Well, which one?
Dialogue: 0,0:30:22.67,0:30:23.53,中文,,0,0,0,,好吧 哪一个
Dialogue: 0,0:30:23.53,0:30:24.65,英文,,0,0,0,,They're both 3-3.
Dialogue: 0,0:30:23.53,0:30:24.65,中文,,0,0,0,,它们都是3-3
Dialogue: 0,0:30:24.65,0:30:28.04,英文,,0,0,0,,Turns out you can break ties anyway, and it'll work just fine.
Dialogue: 0,0:30:24.65,0:30:28.04,中文,,0,0,0,,结果你可以随便选择一个 它都能正常工作
Dialogue: 0,0:30:28.04,0:30:29.60,英文,,0,0,0,,If you're not convinced, go home.
Dialogue: 0,0:30:28.04,0:30:29.60,中文,,0,0,0,,如果你还不相信 就回家吧
Dialogue: 0,0:30:29.60,0:30:31.16,英文,,0,0,0,,Try swapping with the other three.
Dialogue: 0,0:30:29.60,0:30:31.16,中文,,0,0,0,,试着和其他三个交换一下
Dialogue: 0,0:30:31.16,0:30:32.46,英文,,0,0,0,,Works out just fine.
Dialogue: 0,0:30:31.16,0:30:32.46,中文,,0,0,0,,一切都很顺利
Dialogue: 0,0:30:32.46,0:30:36.54,英文,,0,0,0,,So it looks below it, and the 3 says, I'm better than you, so get out of the way.
Dialogue: 0,0:30:32.46,0:30:36.54,中文,,0,0,0,,它看下面 3说 我比你更好 所以让开
Dialogue: 0,0:30:36.54,0:30:38.28,英文,,0,0,0,,And the 5 and the 3 swap.
Dialogue: 0,0:30:36.54,0:30:38.28,中文,,0,0,0,,然后5和3交换
Dialogue: 0,0:30:38.28,0:30:41.07,英文,,0,0,0,,And the 5 looks below it and says, should I swap with the 6?
Dialogue: 0,0:30:38.28,0:30:41.07,中文,,0,0,0,,然后5看下面 说 我应该和6交换吗
Dialogue: 0,0:30:41.07,0:30:42.13,英文,,0,0,0,,Probably not.
Dialogue: 0,0:30:41.07,0:30:42.13,中文,,0,0,0,,可能不
Dialogue: 0,0:30:42.13,0:30:43.51,英文,,0,0,0,,Should I swap with the 5?
Dialogue: 0,0:30:42.13,0:30:43.51,中文,,0,0,0,,我要和5交换吗
Dialogue: 0,0:30:43.51,0:30:44.49,英文,,0,0,0,,Probably not.
Dialogue: 0,0:30:43.51,0:30:44.49,中文,,0,0,0,,可能不要
Dialogue: 0,0:30:44.49,0:30:46.43,英文,,0,0,0,,So the 5 says, I'm comfy here.
Dialogue: 0,0:30:44.49,0:30:46.43,中文,,0,0,0,,所以5说 我在这里很舒服
Dialogue: 0,0:30:46.43,0:30:49.89,英文,,0,0,0,,This is my true home, so I'll stop.
Dialogue: 0,0:30:46.43,0:30:49.89,中文,,0,0,0,,这是我的真正家 所以我会停下来
Dialogue: 0,0:30:49.89,0:30:52.81,英文,,0,0,0,,OK, so you swap, and then the item sinks down.
Dialogue: 0,0:30:49.89,0:30:52.81,中文,,0,0,0,,好的 你交换 然后物品下沉
Dialogue: 0,0:30:52.81,0:30:57.29,英文,,0,0,0,,And it always yields to the most qualified item if there are two children.
Dialogue: 0,0:30:52.81,0:30:57.29,中文,,0,0,0,,如果有两个子节点 它总是屈服于最有资格的物品
Dialogue: 0,0:30:57.29,0:30:59.11,英文,,0,0,0,,OK, great.
Dialogue: 0,0:30:57.29,0:30:59.11,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:30:59.11,0:31:02.40,英文,,0,0,0,,So we figured out how to add things, how to delete things.
Dialogue: 0,0:30:59.11,0:31:02.40,中文,,0,0,0,,我们搞清楚了如何添加事物 如何删除事物
Dialogue: 0,0:31:02.40,0:31:04.80,英文,,0,0,0,,How am I doing on time, by the way?
Dialogue: 0,0:31:02.40,0:31:04.80,中文,,0,0,0,,顺便问一下 我现在的时间怎么样
Dialogue: 0,0:31:04.80,0:31:07.32,英文,,0,0,0,,I have 20 minutes? OK, sounds good.
Dialogue: 0,0:31:04.80,0:31:07.32,中文,,0,0,0,,我还有20分钟吗  好的 听起来不错
Dialogue: 0,0:31:07.32,0:31:08.32,英文,,0,0,0,,Plenty of time.
Dialogue: 0,0:31:07.32,0:31:08.32,中文,,0,0,0,,时间很充裕
Dialogue: 0,0:31:08.32,0:31:09.84,英文,,0,0,0,,OK, great.
Dialogue: 0,0:31:08.32,0:31:09.84,中文,,0,0,0,,好的 很好
Dialogue: 0,0:31:09.84,0:31:13.35,英文,,0,0,0,,Any ideas, thoughts, questions on our operations?
Dialogue: 0,0:31:09.84,0:31:13.35,中文,,0,0,0,,对我们的运营有什么想法、想法、问题吗
Dialogue: 0,0:31:13.35,0:31:14.83,英文,,0,0,0,,So now we've built the heap.
Dialogue: 0,0:31:13.35,0:31:14.83,中文,,0,0,0,,现在我们已经建立了堆
Dialogue: 0,0:31:14.83,0:31:19.23,英文,,0,0,0,,We know how to use it to give the users the operations they want to see.
Dialogue: 0,0:31:14.83,0:31:19.23,中文,,0,0,0,,我们知道如何使用它来给用户他们想要看到的操作
Dialogue: 0,0:31:19.23,0:31:24.09,英文,,0,0,0,,OK, and I guess really quick note is that all these operations are logarithmic.
Dialogue: 0,0:31:19.23,0:31:24.09,中文,,0,0,0,,好的 我想快速说明一下 所有这些操作都是对数级的
Dialogue: 0,0:31:24.09,0:31:25.07,英文,,0,0,0,,And why is that?
Dialogue: 0,0:31:24.09,0:31:25.07,中文,,0,0,0,,为什么呢
Dialogue: 0,0:31:25.07,0:31:30.77,英文,,0,0,0,,Because when I climb up the bushy tree, the most layers I'm going to have to climb is log n layers.
Dialogue: 0,0:31:25.07,0:31:30.77,中文,,0,0,0,,因为当我爬上树时 我最多要爬的层数是 log n 层
Dialogue: 0,0:31:30.77,0:31:37.12,英文,,0,0,0,,And when I sink down the tree, the most number of swaps I'll have to do is log n. So that's good.
Dialogue: 0,0:31:30.77,0:31:37.12,中文,,0,0,0,,而当我下沉到树下时 我最多要做的交换次数是 log n 这很好
Dialogue: 0,0:31:37.12,0:31:38.44,英文,,0,0,0,,OK.
Dialogue: 0,0:31:38.44,0:31:44.17,英文,,0,0,0,,So now I'm going to do a slight little detour and talk about how you might write this in Java.
Dialogue: 0,0:31:38.44,0:31:44.17,中文,,0,0,0,,现在我要稍微绕个弯 谈谈你可能如何用Java写这个
Dialogue: 0,0:31:44.17,0:31:48.69,英文,,0,0,0,,So I showed you the pictures and little cartoons of the nodes going up and down.
Dialogue: 0,0:31:44.17,0:31:48.69,中文,,0,0,0,,我给你看了一些节点上下移动的图片和小漫画
Dialogue: 0,0:31:48.69,0:31:51.43,英文,,0,0,0,,But how would you actually write this in Java?
Dialogue: 0,0:31:48.69,0:31:51.43,中文,,0,0,0,,但你真的应该如何在Java中编写呢
Dialogue: 0,0:31:51.43,0:31:55.77,英文,,0,0,0,,So to figure out how to write this, I need to figure out how to represent a tree
Dialogue: 0,0:31:51.43,0:31:55.77,中文,,0,0,0,,为了弄清楚如何写这个 我需要搞清楚如何表示一棵树
Dialogue: 0,0:31:55.77,0:32:01.84,英文,,0,0,0,,In Java, it's something we've kind of already talked about, but maybe it's good to make it totally explicit.
Dialogue: 0,0:31:55.77,0:32:01.84,中文,,0,0,0,,在Java中 这是我们已经谈论过的事情 但也许明确表达一下是个好主意
Dialogue: 0,0:32:01.84,0:32:03.62,英文,,0,0,0,,So we have these operations.
Dialogue: 0,0:32:01.84,0:32:03.62,中文,,0,0,0,,我们有这些操作
Dialogue: 0,0:32:03.62,0:32:08.10,英文,,0,0,0,,We know how to write them in English, so get the smallest thing, pick the root out.
Dialogue: 0,0:32:03.62,0:32:08.10,中文,,0,0,0,,我们知道如何用英语写它们 所以找到最小的东西 挑选出根节点
Dialogue: 0,0:32:08.10,0:32:09.32,英文,,0,0,0,,How do you add something?
Dialogue: 0,0:32:08.10,0:32:09.32,中文,,0,0,0,,怎么添加东西
Dialogue: 0,0:32:09.32,0:32:14.91,英文,,0,0,0,,You put the new item at the last position and then promote it as far up as it goes.
Dialogue: 0,0:32:09.32,0:32:14.91,中文,,0,0,0,,将新项目放在最后位置 然后提升至其能达到的最高位置
Dialogue: 0,0:32:14.91,0:32:16.97,英文,,0,0,0,,And how do you remove smallest?
Dialogue: 0,0:32:14.91,0:32:16.97,中文,,0,0,0,,那么如何移除最小值
Dialogue: 0,0:32:16.97,0:32:27.64,英文,,0,0,0,,I guess to put it in very violent terms, you assassinate the root at the very top, you promote the last item in the heap, and then you demote the item until it finds its rightful place.
Dialogue: 0,0:32:16.97,0:32:27.64,中文,,0,0,0,,我猜用非常激烈的说法 你要暗杀根节点 也就是在堆的顶部 你提升堆的最后一个项目 然后你降级项目 直到它找到合适的位置
Dialogue: 0,0:32:27.64,0:32:30.82,英文,,0,0,0,,But how do you code this? You can't go in Java and be like, Java, assassinate the president.
Dialogue: 0,0:32:27.64,0:32:30.82,中文,,0,0,0,,但是如何编写这个代码  你不能在Java中说 Java 暗杀总统
Dialogue: 0,0:32:30.82,0:32:31.92,英文,,0,0,0,,It's going to be like, what?
Dialogue: 0,0:32:30.82,0:32:31.92,中文,,0,0,0,,它会是什么反应
Dialogue: 0,0:32:31.92,0:32:35.88,英文,,0,0,0,,And so I need to write some actual code.
Dialogue: 0,0:32:31.92,0:32:35.88,中文,,0,0,0,,我需要写一些真正的代码
Dialogue: 0,0:32:35.88,0:32:40.32,英文,,0,0,0,,So let's think about ways I can write trees or represent trees in Java.
Dialogue: 0,0:32:35.88,0:32:40.32,中文,,0,0,0,,那么让我们考虑一下我可以用Java写树或表示树的方式
Dialogue: 0,0:32:40.32,0:32:42.19,英文,,0,0,0,,And you might say, well, hold on.
Dialogue: 0,0:32:40.32,0:32:42.19,中文,,0,0,0,,你可能会说 等等
Dialogue: 0,0:32:42.19,0:32:44.59,英文,,0,0,0,,I thought we were talking about binary heaps.
Dialogue: 0,0:32:42.19,0:32:44.59,中文,,0,0,0,,我以为我们在谈论二叉堆
Dialogue: 0,0:32:44.59,0:32:46.35,英文,,0,0,0,,Why does this thing have three children?
Dialogue: 0,0:32:44.59,0:32:46.35,中文,,0,0,0,,为什么这个东西有三个子节点
Dialogue: 0,0:32:46.35,0:32:48.17,英文,,0,0,0,,It's because this is a digression.
Dialogue: 0,0:32:46.35,0:32:48.17,中文,,0,0,0,,这是因为这是一个离题
Dialogue: 0,0:32:48.17,0:32:52.56,英文,,0,0,0,,I just want to show you how to represent trees in general, even if they're not binary trees.
Dialogue: 0,0:32:48.17,0:32:52.56,中文,,0,0,0,,我只是想向你展示如何表示树 即使它们不是二叉树
Dialogue: 0,0:32:52.56,0:32:56.68,英文,,0,0,0,,But these ideas would work just fine, even if my trees were binary.
Dialogue: 0,0:32:52.56,0:32:56.68,中文,,0,0,0,,但是这些想法即使在我的树是二叉树的情况下也能很好地工作
Dialogue: 0,0:32:56.68,0:33:01.14,英文,,0,0,0,,So here's an idea, which is every object that I create
Dialogue: 0,0:32:56.68,0:33:01.14,中文,,0,0,0,,这里有一个想法 就是我创建的每个对象
Dialogue: 0,0:33:01.14,0:33:02.79,英文,,0,0,0,,It represents one of these nodes.
Dialogue: 0,0:33:01.14,0:33:02.79,中文,,0,0,0,,它代表其中一个节点
Dialogue: 0,0:33:02.79,0:33:03.63,英文,,0,0,0,,I could do that.
Dialogue: 0,0:33:02.79,0:33:03.63,中文,,0,0,0,,我可以这样做
Dialogue: 0,0:33:03.63,0:33:05.47,英文,,0,0,0,,So I could create this little class.
Dialogue: 0,0:33:03.63,0:33:05.47,中文,,0,0,0,,我可以创建这个小类
Dialogue: 0,0:33:05.47,0:33:08.15,英文,,0,0,0,,And this class represents one of these nodes.
Dialogue: 0,0:33:05.47,0:33:08.15,中文,,0,0,0,,这个类代表其中一个节点
Dialogue: 0,0:33:08.15,0:33:10.67,英文,,0,0,0,,What instance variables does the node need?
Dialogue: 0,0:33:08.15,0:33:10.67,中文,,0,0,0,,节点需要哪些实例变量
Dialogue: 0,0:33:10.67,0:33:23.66,英文,,0,0,0,,Well, it might need one instance variable to represent the value, like in this case, w, or x, or y, or z. Then it needs another instance variable, another memory box, to hold the reference of where the left child is.
Dialogue: 0,0:33:10.67,0:33:23.66,中文,,0,0,0,,好吧 可能需要一个实例变量来表示这个值 就像在这种情况下 w、x、y或z一样 然后它需要另一个实例变量 另一个内存盒 来保存左子树的引用
Dialogue: 0,0:33:23.66,0:33:28.22,英文,,0,0,0,,So it could say, if you want to find the left child, go there and write an address.
Dialogue: 0,0:33:23.66,0:33:28.22,中文,,0,0,0,,它可以说 如果你想找到左子树 就去那里写一个地址
Dialogue: 0,0:33:28.22,0:33:31.54,英文,,0,0,0,,If you want to find the middle child, go there and write an address.
Dialogue: 0,0:33:28.22,0:33:31.54,中文,,0,0,0,,如果你想找到中间子树 就去那里写一个地址
Dialogue: 0,0:33:31.54,0:33:35.49,英文,,0,0,0,,If you want to find the right child, go there, find an address.
Dialogue: 0,0:33:31.54,0:33:35.49,中文,,0,0,0,,如果你想找到右子树 就去那里找一个地址
Dialogue: 0,0:33:35.49,0:33:43.51,英文,,0,0,0,,So my tree object, it would have the key, then it would have references to where to find the left, middle, and right children if they exist.
Dialogue: 0,0:33:35.49,0:33:43.51,中文,,0,0,0,,我的树对象 它会有一个键 然后它会有引用 告诉你在哪里找到左、中和右子树（如果存在的话）
Dialogue: 0,0:33:43.51,0:33:49.78,英文,,0,0,0,,And each of those is recursively also a tree object with a key and pointers to their children.
Dialogue: 0,0:33:43.51,0:33:49.78,中文,,0,0,0,,而且每一个都递归地也是一个带有键和指向它们子树的指针的树对象
Dialogue: 0,0:33:49.78,0:33:50.80,英文,,0,0,0,,So I could do this.
Dialogue: 0,0:33:49.78,0:33:50.80,中文,,0,0,0,,我可以这样做
Dialogue: 0,0:33:50.80,0:33:59.37,英文,,0,0,0,,This would be a recursive data structure, pretty similar to what you did in your binary search tree lab, where you had a node, and the node had left child and right child.
Dialogue: 0,0:33:50.80,0:33:59.37,中文,,0,0,0,,这将是一个递归数据结构 与你在二叉搜索树实验中做的相似 你有一个节点 节点有左子节点和右子节点
Dialogue: 0,0:33:59.37,0:34:00.27,英文,,0,0,0,,So this works.
Dialogue: 0,0:33:59.37,0:34:00.27,中文,,0,0,0,,这样可以工作
Dialogue: 0,0:34:00.27,0:34:02.33,英文,,0,0,0,,It's a recursive data structure.
Dialogue: 0,0:34:00.27,0:34:02.33,中文,,0,0,0,,这是一个递归数据结构
Dialogue: 0,0:34:02.33,0:34:04.31,英文,,0,0,0,,It's beautiful.
Dialogue: 0,0:34:02.33,0:34:04.31,中文,,0,0,0,,它很美
Dialogue: 0,0:34:04.31,0:34:06.04,英文,,0,0,0,,And that's one thing you could do.
Dialogue: 0,0:34:04.31,0:34:06.04,中文,,0,0,0,,这是你可以做的一件事
Dialogue: 0,0:34:06.04,0:34:08.98,英文,,0,0,0,,So if I want to build a heap, I could build the heap like this.
Dialogue: 0,0:34:06.04,0:34:08.98,中文,,0,0,0,,如果我想建立一个堆 我可以像这样建立堆
Dialogue: 0,0:34:08.98,0:34:12.88,英文,,0,0,0,,I could represent items and then have pointers to their children.
Dialogue: 0,0:34:08.98,0:34:12.88,中文,,0,0,0,,我可以表示项目 然后有指向它们子节点的指针
Dialogue: 0,0:34:12.88,0:34:14.17,英文,,0,0,0,,OK.
Dialogue: 0,0:34:14.17,0:34:15.49,英文,,0,0,0,,But there are some little variations.
Dialogue: 0,0:34:14.17,0:34:15.49,中文,,0,0,0,,但是有一些小变化
Dialogue: 0,0:34:15.49,0:34:18.62,英文,,0,0,0,,So if you want to get exotic, you could do something like this.
Dialogue: 0,0:34:15.49,0:34:18.62,中文,,0,0,0,,如果你想要搞点新鲜的 你可以做这样的事情
Dialogue: 0,0:34:18.62,0:34:22.16,英文,,0,0,0,,What if your items don't necessarily have three children?
Dialogue: 0,0:34:18.62,0:34:22.16,中文,,0,0,0,,如果你的项不一定有三个子项呢
Dialogue: 0,0:34:22.16,0:34:25.78,英文,,0,0,0,,Here, I'm guaranteeing that I have left, middle, and right.
Dialogue: 0,0:34:22.16,0:34:25.78,中文,,0,0,0,,在这里 我保证我有左、中、右三个
Dialogue: 0,0:34:25.78,0:34:26.71,英文,,0,0,0,,What if you're not so sure?
Dialogue: 0,0:34:25.78,0:34:26.71,中文,,0,0,0,,如果你不太确定呢
Dialogue: 0,0:34:26.71,0:34:32.31,英文,,0,0,0,,What if some of your items have two children, and some of your items have a billion children?
Dialogue: 0,0:34:26.71,0:34:32.31,中文,,0,0,0,,如果你的一些项有两个子项 而另一些项有十亿个子项呢
Dialogue: 0,0:34:32.31,0:34:33.49,英文,,0,0,0,,What do you do then?
Dialogue: 0,0:34:32.31,0:34:33.49,中文,,0,0,0,,那你接下来怎么办呢
Dialogue: 0,0:34:33.49,0:34:35.83,英文,,0,0,0,,Well, then you could do something like this.
Dialogue: 0,0:34:33.49,0:34:35.83,中文,,0,0,0,,那你可以这样做
Dialogue: 0,0:34:35.83,0:34:37.59,英文,,0,0,0,,What are my instance variables?
Dialogue: 0,0:34:35.83,0:34:37.59,中文,,0,0,0,,我的实例变量是什么
Dialogue: 0,0:34:37.59,0:34:41.44,英文,,0,0,0,,I have one instance variable for the item, the W, just like before.
Dialogue: 0,0:34:37.59,0:34:41.44,中文,,0,0,0,,我有一个实例变量用于项目 就像以前一样 是 W
Dialogue: 0,0:34:41.44,0:34:48.90,英文,,0,0,0,,And then my second instance variable, instead of hard-coding it to be, this is the left child, I'm going to say, this is an array.
Dialogue: 0,0:34:41.44,0:34:48.90,中文,,0,0,0,,然后我的第二个实例变量 不再硬编码为左子节点 我会说 这是一个数组
Dialogue: 0,0:34:48.90,0:34:54.51,英文,,0,0,0,,And then in the array, which can be any size, I can instantiate arrays of size 2, size a billion.
Dialogue: 0,0:34:48.90,0:34:54.51,中文,,0,0,0,,然后在数组中 它可以是任意大小 我可以实例化大小为 2、大小为十亿的数组
Dialogue: 0,0:34:54.51,0:34:58.89,英文,,0,0,0,,In my array, I will store the links to where all the children are.
Dialogue: 0,0:34:54.51,0:34:58.89,中文,,0,0,0,,在我的数组中 我会存储所有子节点的链接
Dialogue: 0,0:34:58.89,0:35:00.39,英文,,0,0,0,,So this array could be three items.
Dialogue: 0,0:34:58.89,0:35:00.39,中文,,0,0,0,,这个数组可能有三个项目
Dialogue: 0,0:35:00.39,0:35:02.93,英文,,0,0,0,,This array could be 1,000 items.
Dialogue: 0,0:35:00.39,0:35:02.93,中文,,0,0,0,,这个数组可能有1,000个项目
Dialogue: 0,0:35:02.93,0:35:06.50,英文,,0,0,0,,And every item in the array is a link to one of the children.
Dialogue: 0,0:35:02.93,0:35:06.50,中文,,0,0,0,,而且数组中的每个项目都是指向其中一个子项的链接
Dialogue: 0,0:35:06.50,0:35:09.22,英文,,0,0,0,,And so this is another way to represent the tree.
Dialogue: 0,0:35:06.50,0:35:09.22,中文,,0,0,0,,这是另一种表示树的方式
Dialogue: 0,0:35:09.22,0:35:18.77,英文,,0,0,0,,This one is nice if you don't know how many children the node has, because now you can adjust the size of this array to get more children or fewer children.
Dialogue: 0,0:35:09.22,0:35:18.77,中文,,0,0,0,,如果你不知道节点有多少子项 这种方法就很好 因为现在你可以调整这个数组的大小来获取更多或更少的子项
Dialogue: 0,0:35:18.77,0:35:21.41,英文,,0,0,0,,OK, here's another really exotic one.
Dialogue: 0,0:35:18.77,0:35:21.41,中文,,0,0,0,,好的 这里有另一个非常奇特的例子
Dialogue: 0,0:35:21.41,0:35:25.67,英文,,0,0,0,,I don't think you will ever see this in this class, except for this one slide.
Dialogue: 0,0:35:21.41,0:35:25.67,中文,,0,0,0,,我觉得除了这张幻灯片之外 你永远不会在这个课程中看到这个
Dialogue: 0,0:35:25.67,0:35:27.09,英文,,0,0,0,,But here it is.
Dialogue: 0,0:35:25.67,0:35:27.09,中文,,0,0,0,,但是这里就是
Dialogue: 0,0:35:27.09,0:35:37.60,英文,,0,0,0,,So in this case, instead of having the root node, that is, w, point to x and y and z, I'm actually only going to have w point at one of the children.
Dialogue: 0,0:35:27.09,0:35:37.60,中文,,0,0,0,,在这种情况下 而不是根节点 也就是 w 指向 x 和 y 和 z 我实际上只会让 w 指向其中一个子节点
Dialogue: 0,0:35:37.60,0:35:42.50,英文,,0,0,0,,And then the children on this level are responsible for linking to each other.
Dialogue: 0,0:35:37.60,0:35:42.50,中文,,0,0,0,,然后 这个层级上的子节点负责链接彼此
Dialogue: 0,0:35:42.50,0:35:46.38,英文,,0,0,0,,So they all have to hold hands and tell you where to find the next child.
Dialogue: 0,0:35:42.50,0:35:46.38,中文,,0,0,0,,它们都必须手拉手告诉你下一个子节点在哪里
Dialogue: 0,0:35:46.38,0:35:48.00,英文,,0,0,0,,So it might look something like this.
Dialogue: 0,0:35:46.38,0:35:48.00,中文,,0,0,0,,它可能看起来像这样
Dialogue: 0,0:35:48.00,0:35:50.76,英文,,0,0,0,,I'm going to have still, the item.
Dialogue: 0,0:35:48.00,0:35:50.76,中文,,0,0,0,,我还是会有这个项
Dialogue: 0,0:35:50.76,0:35:58.73,英文,,0,0,0,,So every node still has to represent the item, which is w. And then instead of pointing to all the children, I'm just going to point to one of the child, maybe your favorite child.
Dialogue: 0,0:35:50.76,0:35:58.73,中文,,0,0,0,,每个节点仍然必须表示该项 也就是 w 然后 我只会指向其中一个子节点 也许是你最喜欢的子节点
Dialogue: 0,0:35:58.73,0:36:02.74,英文,,0,0,0,,So I'll say, w, your favorite child is x.
Dialogue: 0,0:35:58.73,0:36:02.74,中文,,0,0,0,,我会说 w 你最喜欢的子节点是x
Dialogue: 0,0:36:02.74,0:36:08.38,英文,,0,0,0,,And then, if you have any siblings, then, for example, this X node, it has a sibling.
Dialogue: 0,0:36:02.74,0:36:08.38,中文,,0,0,0,,然后 如果你有任何兄弟姐妹 比如这个X节点 它有一个兄弟
Dialogue: 0,0:36:08.38,0:36:10.06,英文,,0,0,0,,Look, it's got more children.
Dialogue: 0,0:36:08.38,0:36:10.06,中文,,0,0,0,,看 它有更多的子节点
Dialogue: 0,0:36:10.06,0:36:17.77,英文,,0,0,0,,So the X node would be responsible for pointing you to the Y node, and the Y node would be responsible for giving you a link to the Z node.
Dialogue: 0,0:36:10.06,0:36:17.77,中文,,0,0,0,,所以 x节点将负责指向 y节点 而 y节点将负责给你一个指向 z节点的链接
Dialogue: 0,0:36:17.77,0:36:18.95,英文,,0,0,0,,So you could do that.
Dialogue: 0,0:36:17.77,0:36:18.95,中文,,0,0,0,,你可以这样做
Dialogue: 0,0:36:18.95,0:36:23.79,英文,,0,0,0,,Sometimes people call this a sibling tree, because you're linking together all the siblings.
Dialogue: 0,0:36:18.95,0:36:23.79,中文,,0,0,0,,有时人们称之为兄弟姐妹树 因为你将所有兄弟姐妹连接在一起
Dialogue: 0,0:36:23.79,0:36:24.91,英文,,0,0,0,,So it's a little exotic.
Dialogue: 0,0:36:23.79,0:36:24.91,中文,,0,0,0,,这有点奇特
Dialogue: 0,0:36:24.91,0:36:32.86,英文,,0,0,0,,Instead of having the w point at the x, y, z, you have the w point at the x, and then the x, y, and z, they all hold hands and link to each other.
Dialogue: 0,0:36:24.91,0:36:32.86,中文,,0,0,0,,把 w 指向 x、y、z 的位置 现在把 w 指向 x 然后 x、y、z 他们牵着手互相链接
Dialogue: 0,0:36:32.86,0:36:34.92,英文,,0,0,0,,So you could do that if you wanted to.
Dialogue: 0,0:36:32.86,0:36:34.92,中文,,0,0,0,,如果你想的话 你可以这样做
Dialogue: 0,0:36:34.92,0:36:37.42,英文,,0,0,0,,There's no real obvious reason you want to do this here.
Dialogue: 0,0:36:34.92,0:36:37.42,中文,,0,0,0,,在这里没有明显的理由你想要这样做
Dialogue: 0,0:36:37.42,0:36:41.19,英文,,0,0,0,,But if you feel that this is useful, there it is.
Dialogue: 0,0:36:37.42,0:36:41.19,中文,,0,0,0,,但如果你觉得这有用 那就是了
Dialogue: 0,0:36:41.19,0:36:42.53,英文,,0,0,0,,Sibling tree.
Dialogue: 0,0:36:41.19,0:36:42.53,中文,,0,0,0,,兄弟树
Dialogue: 0,0:36:42.53,0:36:43.95,英文,,0,0,0,,OK.
Dialogue: 0,0:36:43.95,0:36:48.83,英文,,0,0,0,,So this is a whole class or category of ways to represent trees.
Dialogue: 0,0:36:43.95,0:36:48.83,中文,,0,0,0,,这是一整个类别的表示树的方式
Dialogue: 0,0:36:48.83,0:36:54.39,英文,,0,0,0,,They are all different data structures or Java implementations of the same picture.
Dialogue: 0,0:36:48.83,0:36:54.39,中文,,0,0,0,,它们都是不同的数据结构或Java实现同一张图片
Dialogue: 0,0:36:54.39,0:36:59.72,英文,,0,0,0,,This cartoon picture with WXYZ could be represented any of these three ways.
Dialogue: 0,0:36:54.39,0:36:59.72,中文,,0,0,0,,这幅卡通图片带有WXYZ 可以用这三种方式之一来表示
Dialogue: 0,0:36:59.72,0:37:04.88,英文,,0,0,0,,And which one you like is up to you, your implementation, what you're doing with the tree.
Dialogue: 0,0:36:59.72,0:37:04.88,中文,,0,0,0,,你喜欢哪一个取决于你 取决于你的实现 取决于你对树做了什么
Dialogue: 0,0:37:04.88,0:37:12.30,英文,,0,0,0,,So all of these represent the same tree that the user wants to see, just in different ways, using links in different ways, which is kind of cool.
Dialogue: 0,0:37:04.88,0:37:12.30,中文,,0,0,0,,所有这些都代表用户想要看到的同一棵树 只是以不同的方式 使用不同的链接 这有点酷
Dialogue: 0,0:37:12.30,0:37:16.44,英文,,0,0,0,,Okay, I call these 1A, 1B, and 1C.
Dialogue: 0,0:37:12.30,0:37:16.44,中文,,0,0,0,,好的 我称这些为1A、1B和1C
Dialogue: 0,0:37:16.44,0:37:18.48,英文,,0,0,0,,So what about approach number two?
Dialogue: 0,0:37:16.44,0:37:18.48,中文,,0,0,0,,那么第二种方法呢
Dialogue: 0,0:37:18.48,0:37:26.81,英文,,0,0,0,,Well, turns out there are some other approaches, and so these approaches are not using recursive data structures, but they're going to be array-based.
Dialogue: 0,0:37:18.48,0:37:26.81,中文,,0,0,0,,结果发现还有其他一些方法 所以这些方法不使用递归数据结构 而是基于数组
Dialogue: 0,0:37:26.81,0:37:29.91,英文,,0,0,0,,So now we're kind of going back to what we did with disjoint sets.
Dialogue: 0,0:37:26.81,0:37:29.91,中文,,0,0,0,,现在我们有点回到了我们以前用不相交集合做的事情
Dialogue: 0,0:37:29.91,0:37:32.35,英文,,0,0,0,,Remember disjoint sets from like two years ago?
Dialogue: 0,0:37:29.91,0:37:32.35,中文,,0,0,0,,还记得两年前的不相交集合吗
Dialogue: 0,0:37:32.35,0:37:35.09,英文,,0,0,0,,Well, that thing, it was like, it kind of was a tree.
Dialogue: 0,0:37:32.35,0:37:35.09,中文,,0,0,0,,那个东西 就像是一个树
Dialogue: 0,0:37:35.09,0:37:37.12,英文,,0,0,0,,So how do we represent the disjoint sets?
Dialogue: 0,0:37:35.09,0:37:37.12,中文,,0,0,0,,那么我们如何表示这些不相交的集合呢
Dialogue: 0,0:37:37.12,0:37:39.10,英文,,0,0,0,,Remember we had that parents array?
Dialogue: 0,0:37:37.12,0:37:39.10,中文,,0,0,0,,还记得我们有那个父数组吗
Dialogue: 0,0:37:39.10,0:37:42.56,英文,,0,0,0,,So we can try to bring that idea of the parents array back.
Dialogue: 0,0:37:39.10,0:37:42.56,中文,,0,0,0,,我们可以尝试把那个父数组的概念带回来
Dialogue: 0,0:37:42.56,0:37:43.74,英文,,0,0,0,,So let's do that.
Dialogue: 0,0:37:42.56,0:37:43.74,中文,,0,0,0,,那就让我们来做吧
Dialogue: 0,0:37:43.74,0:37:46.96,英文,,0,0,0,,So to represent the tree, I'm going to completely switch gears.
Dialogue: 0,0:37:43.74,0:37:46.96,中文,,0,0,0,,为了表示这棵树 我要完全改变方向
Dialogue: 0,0:37:46.96,0:37:49.16,英文,,0,0,0,,I'm going to say there is no recursion.
Dialogue: 0,0:37:46.96,0:37:49.16,中文,,0,0,0,,我要说没有递归
Dialogue: 0,0:37:49.16,0:37:50.80,英文,,0,0,0,,Forget that recursive stuff.
Dialogue: 0,0:37:49.16,0:37:50.80,中文,,0,0,0,,忘掉那些递归的东西
Dialogue: 0,0:37:50.80,0:37:52.93,英文,,0,0,0,,There are no links between nodes.
Dialogue: 0,0:37:50.80,0:37:52.93,中文,,0,0,0,,节点之间没有链接
Dialogue: 0,0:37:52.93,0:37:57.63,英文,,0,0,0,,I'm going to have a single class that represents the whole tree.
Dialogue: 0,0:37:52.93,0:37:57.63,中文,,0,0,0,,我要有一个类来代表整棵树
Dialogue: 0,0:37:57.63,0:37:59.95,英文,,0,0,0,,And it's going to have two arrays.
Dialogue: 0,0:37:57.63,0:37:59.95,中文,,0,0,0,,它将有两个数组
Dialogue: 0,0:37:59.95,0:38:07.21,英文,,0,0,0,,So now I'm declaring that instead of having all these different objects and links to represent the tree, I'm going to store one, two arrays.
Dialogue: 0,0:37:59.95,0:38:07.21,中文,,0,0,0,,现在我声明 不再使用所有这些不同的对象和链接来表示树 我要存储一个、两个数组
Dialogue: 0,0:38:07.21,0:38:07.76,英文,,0,0,0,,That's it.
Dialogue: 0,0:38:07.21,0:38:07.76,中文,,0,0,0,,就是这样
Dialogue: 0,0:38:07.76,0:38:10.66,英文,,0,0,0,,And that's going to be the whole tree.
Dialogue: 0,0:38:07.76,0:38:10.66,中文,,0,0,0,,而且整棵树都是这样的
Dialogue: 0,0:38:10.66,0:38:14.72,英文,,0,0,0,,In my first array, I'm just going to write down what all my items are.
Dialogue: 0,0:38:10.66,0:38:14.72,中文,,0,0,0,,在我的第一个数组中 我会简单地列出所有的项目
Dialogue: 0,0:38:14.72,0:38:15.92,英文,,0,0,0,,So I look in this tree.
Dialogue: 0,0:38:14.72,0:38:15.92,中文,,0,0,0,,我查看这棵树
Dialogue: 0,0:38:15.92,0:38:20.50,英文,,0,0,0,,My tree has K, E, V, B, G, P, Y, and so on.
Dialogue: 0,0:38:15.92,0:38:20.50,中文,,0,0,0,,我的树上有 K、E、V、B、G、P、Y 等等
Dialogue: 0,0:38:20.50,0:38:22.48,英文,,0,0,0,,So in my first array, I'll store those things.
Dialogue: 0,0:38:20.50,0:38:22.48,中文,,0,0,0,,因此在我的第一个数组中 我会存储这些东西
Dialogue: 0,0:38:22.48,0:38:29.20,英文,,0,0,0,,I'll say the zeroth item is K. The first item is E. The second item is V. So I'm just giving every item a number.
Dialogue: 0,0:38:22.48,0:38:29.20,中文,,0,0,0,,我会说0号项目是 k 1号项目是 e 2号项目是 v 我只是给每个项目一个数字
Dialogue: 0,0:38:29.20,0:38:30.25,英文,,0,0,0,,Because I could do that.
Dialogue: 0,0:38:29.20,0:38:30.25,中文,,0,0,0,,因为我可以这样做
Dialogue: 0,0:38:30.25,0:38:32.93,英文,,0,0,0,,Maybe these items are like pictures or something.
Dialogue: 0,0:38:30.25,0:38:32.93,中文,,0,0,0,,也许这些项目就像图片一样
Dialogue: 0,0:38:32.93,0:38:35.57,英文,,0,0,0,,I'll give every picture a unique number.
Dialogue: 0,0:38:32.93,0:38:35.57,中文,,0,0,0,,我会给每张图片一个唯一的编号
Dialogue: 0,0:38:35.57,0:38:40.95,英文,,0,0,0,,And I'll use this array to keep track of which number corresponds to which picture or which item.
Dialogue: 0,0:38:35.57,0:38:40.95,中文,,0,0,0,,而且我会使用这个数组来追踪哪个编号对应哪张图片或哪个项目
Dialogue: 0,0:38:40.95,0:38:44.55,英文,,0,0,0,,So for example, item number 10 is J. Why is that?
Dialogue: 0,0:38:40.95,0:38:44.55,中文,,0,0,0,,例如 项目编号10是J 为什么呢
Dialogue: 0,0:38:44.55,0:38:48.55,英文,,0,0,0,,Because I wrote and designated J to be item number 10.
Dialogue: 0,0:38:44.55,0:38:48.55,中文,,0,0,0,,因为我写下并指定J为项目编号10
Dialogue: 0,0:38:48.55,0:38:49.08,英文,,0,0,0,,Why?
Dialogue: 0,0:38:48.55,0:38:49.08,中文,,0,0,0,,为什么
Dialogue: 0,0:38:49.08,0:38:50.34,英文,,0,0,0,,Because I felt like it.
Dialogue: 0,0:38:49.08,0:38:50.34,中文,,0,0,0,,因为我就是想这么做
Dialogue: 0,0:38:50.34,0:38:52.68,英文,,0,0,0,,You could have designated J to be item number 11.
Dialogue: 0,0:38:50.34,0:38:52.68,中文,,0,0,0,,你本可以指定J为第11号项目
Dialogue: 0,0:38:52.68,0:38:53.96,英文,,0,0,0,,Would have been fine.
Dialogue: 0,0:38:52.68,0:38:53.96,中文,,0,0,0,,那样也挺好
Dialogue: 0,0:38:53.96,0:38:55.92,英文,,0,0,0,,So every item gets its own number.
Dialogue: 0,0:38:53.96,0:38:55.92,中文,,0,0,0,,这样每个项目都有自己的编号
Dialogue: 0,0:38:55.92,0:38:59.20,英文,,0,0,0,,And the keys array keeps track of which item is which number.
Dialogue: 0,0:38:55.92,0:38:59.20,中文,,0,0,0,,键数组则用来记录每个项目对应的编号
Dialogue: 0,0:38:59.20,0:39:02.83,英文,,0,0,0,,And then, that's all good, but where's the structure of the tree?
Dialogue: 0,0:38:59.20,0:39:02.83,中文,,0,0,0,,但问题来了 树的结构在哪里
Dialogue: 0,0:39:02.83,0:39:05.49,英文,,0,0,0,,How do I encode all these links between the nodes?
Dialogue: 0,0:39:02.83,0:39:05.49,中文,,0,0,0,,我该如何编码节点之间的所有链接
Dialogue: 0,0:39:05.49,0:39:07.55,英文,,0,0,0,,That's where the parents array comes in.
Dialogue: 0,0:39:05.49,0:39:07.55,中文,,0,0,0,,这就是父母数组的作用
Dialogue: 0,0:39:07.55,0:39:13.73,英文,,0,0,0,,So in the parents array, each element stores the ID of its parent.
Dialogue: 0,0:39:07.55,0:39:13.73,中文,,0,0,0,,在父母数组中 每个元素都存储着其父母的ID
Dialogue: 0,0:39:13.73,0:39:17.25,英文,,0,0,0,,So for example, 5, item number 5, there you are.
Dialogue: 0,0:39:13.73,0:39:17.25,中文,,0,0,0,,例如 5 第5个项目 就是这样
Dialogue: 0,0:39:17.25,0:39:18.35,英文,,0,0,0,,Who is your parent?
Dialogue: 0,0:39:17.25,0:39:18.35,中文,,0,0,0,,你的父母是谁
Dialogue: 0,0:39:18.35,0:39:21.57,英文,,0,0,0,,According to this picture, your parent is 2.
Dialogue: 0,0:39:18.35,0:39:21.57,中文,,0,0,0,,根据这张图片 你的父母是2
Dialogue: 0,0:39:21.57,0:39:23.17,英文,,0,0,0,,And if I look in the array, guess what?
Dialogue: 0,0:39:21.57,0:39:23.17,中文,,0,0,0,,如果我在数组中找一找 猜猜看
Dialogue: 0,0:39:23.17,0:39:25.86,英文,,0,0,0,,Item number 5, who is your parent, is 2.
Dialogue: 0,0:39:23.17,0:39:25.86,中文,,0,0,0,,第5个项目 你的父母是谁 是2
Dialogue: 0,0:39:25.86,0:39:26.92,英文,,0,0,0,,Perfect.
Dialogue: 0,0:39:25.86,0:39:26.92,中文,,0,0,0,,完美
Dialogue: 0,0:39:26.92,0:39:29.98,英文,,0,0,0,,Or item number 10, who is your parent?
Dialogue: 0,0:39:26.92,0:39:29.98,中文,,0,0,0,,或者第10项 你的父母是谁
Dialogue: 0,0:39:29.98,0:39:31.66,英文,,0,0,0,,I look in the picture, it's 4.
Dialogue: 0,0:39:29.98,0:39:31.66,中文,,0,0,0,,我在图片中找到了 是4
Dialogue: 0,0:39:31.66,0:39:34.40,英文,,0,0,0,,And in this array, item number 10, who is your parent?
Dialogue: 0,0:39:31.66,0:39:34.40,中文,,0,0,0,,在这个数组中 第10项 你的父母是谁
Dialogue: 0,0:39:34.40,0:39:35.44,英文,,0,0,0,,It's 4.
Dialogue: 0,0:39:34.40,0:39:35.44,中文,,0,0,0,,是4
Dialogue: 0,0:39:35.44,0:39:36.98,英文,,0,0,0,,And 4, who is your parent?
Dialogue: 0,0:39:35.44,0:39:36.98,中文,,0,0,0,,那么4 你的父母是谁
Dialogue: 0,0:39:36.98,0:39:37.38,英文,,0,0,0,,It's 1.
Dialogue: 0,0:39:36.98,0:39:37.38,中文,,0,0,0,,是1
Dialogue: 0,0:39:37.38,0:39:39.15,英文,,0,0,0,,So 4, your parent is 1.
Dialogue: 0,0:39:37.38,0:39:39.15,中文,,0,0,0,,所以4 你的父亲是1
Dialogue: 0,0:39:39.15,0:39:46.85,英文,,0,0,0,,So this parents array, even though it doesn't look like it, it's a pile of numbers, this encodes where all the edges are between the nodes.
Dialogue: 0,0:39:39.15,0:39:46.85,中文,,0,0,0,,这个父母数组 即使看起来不像 它实际上是一堆数字 这些数字编码了节点之间的所有边
Dialogue: 0,0:39:46.85,0:39:51.15,英文,,0,0,0,,It encodes the structure of the tree, which is kind of cool.
Dialogue: 0,0:39:46.85,0:39:51.15,中文,,0,0,0,,它编码了树的结构 有点酷
Dialogue: 0,0:39:51.15,0:39:59.04,英文,,0,0,0,,So by using two arrays, one of them keeps track of what number corresponds to what object, and the other one stores the structure of the tree.
Dialogue: 0,0:39:51.15,0:39:59.04,中文,,0,0,0,,通过使用两个数组 其中一个跟踪哪个数字对应于哪个对象 另一个存储树的结构
Dialogue: 0,0:39:59.04,0:40:03.38,英文,,0,0,0,,By writing down who everyone's parent is, you can represent a tree.
Dialogue: 0,0:39:59.04,0:40:03.38,中文,,0,0,0,,通过记录每个人的父亲是谁 你可以表示一棵树
Dialogue: 0,0:40:03.38,0:40:05.16,英文,,0,0,0,,And you might say, what if someone has two parents?
Dialogue: 0,0:40:03.38,0:40:05.16,中文,,0,0,0,,你可能会说 如果有人有两个父亲呢
Dialogue: 0,0:40:05.16,0:40:06.04,英文,,0,0,0,,It's OK.
Dialogue: 0,0:40:05.16,0:40:06.04,中文,,0,0,0,,没问题
Dialogue: 0,0:40:06.04,0:40:13.18,英文,,0,0,0,,If you go back to our tree lecture, every item has exactly one parent on the way to the root, so no problem.
Dialogue: 0,0:40:06.04,0:40:13.18,中文,,0,0,0,,如果回顾我们的树讲座 每个项目在通往根的路径上确切地有一个父节点 所以没问题
Dialogue: 0,0:40:13.18,0:40:15.04,英文,,0,0,0,,OK, that's approach number two.
Dialogue: 0,0:40:13.18,0:40:15.04,中文,,0,0,0,,好的 这是第二种方法
Dialogue: 0,0:40:15.04,0:40:15.90,英文,,0,0,0,,Like it?
Dialogue: 0,0:40:15.04,0:40:15.90,中文,,0,0,0,,喜欢吗
Dialogue: 0,0:40:15.90,0:40:16.80,英文,,0,0,0,,Thoughts?
Dialogue: 0,0:40:15.90,0:40:16.80,中文,,0,0,0,,想法
Dialogue: 0,0:40:16.80,0:40:20.32,英文,,0,0,0,,Questions?
Dialogue: 0,0:40:16.80,0:40:20.32,中文,,0,0,0,,问题
Dialogue: 0,0:40:20.32,0:40:21.60,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:40:20.32,0:40:21.60,中文,,0,0,0,,这是一个很好的问题
Dialogue: 0,0:40:21.60,0:40:23.18,英文,,0,0,0,,Why is 0's parent itself?
Dialogue: 0,0:40:21.60,0:40:23.18,中文,,0,0,0,,为什么0的父节点是它本身
Dialogue: 0,0:40:23.18,0:40:24.94,英文,,0,0,0,,You could implement this however you want.
Dialogue: 0,0:40:23.18,0:40:24.94,中文,,0,0,0,,你可以随意实现这个
Dialogue: 0,0:40:24.94,0:40:27.76,英文,,0,0,0,,You could put like a negative 1 here to say it has no parent.
Dialogue: 0,0:40:24.94,0:40:27.76,中文,,0,0,0,,你可以在这里放一个负1来表示它没有父节点
Dialogue: 0,0:40:27.76,0:40:29.92,英文,,0,0,0,,Here, I just made the parent itself.
Dialogue: 0,0:40:27.76,0:40:29.92,中文,,0,0,0,,在这里 我只是制作了父节点本身
Dialogue: 0,0:40:29.92,0:40:34.35,英文,,0,0,0,,And if I ever see an item whose parent is itself, I'll say it's got no parent.
Dialogue: 0,0:40:29.92,0:40:34.35,中文,,0,0,0,,如果我看到一个项目的父节点是它自身 我会说它没有父节点
Dialogue: 0,0:40:34.35,0:40:38.39,英文,,0,0,0,,So it's really up to your implementation as long as you're consistent.
Dialogue: 0,0:40:34.35,0:40:38.39,中文,,0,0,0,,只要你保持一致 你的实现方式就无所谓
Dialogue: 0,0:40:38.39,0:40:40.31,英文,,0,0,0,,That's kind of the big idea behind all these.
Dialogue: 0,0:40:38.39,0:40:40.31,中文,,0,0,0,,这就是所有这些背后的大概想法
Dialogue: 0,0:40:40.31,0:40:46.98,英文,,0,0,0,,Whatever you do, you just have to keep it consistent, make sure you and your users know what you're talking about, and you're good.
Dialogue: 0,0:40:40.31,0:40:46.98,中文,,0,0,0,,无论你做什么 你只需要保持一致 确保你和你的用户知道你在说什么 你就没问题了
Dialogue: 0,0:40:46.98,0:40:49.18,英文,,0,0,0,,In this case, if you wanted to, you could say 0.
Dialogue: 0,0:40:46.98,0:40:49.18,中文,,0,0,0,,在这种情况下 如果你愿意的话 你可以说0
Dialogue: 0,0:40:49.18,0:40:53.09,英文,,0,0,0,,You could have put like a negative a million here to represent it's got no parent.
Dialogue: 0,0:40:49.18,0:40:53.09,中文,,0,0,0,,你本来可以在这里放一个负一百万来表示它没有父级
Dialogue: 0,0:40:53.09,0:40:56.51,英文,,0,0,0,,As long as everyone knows what you mean by the negative million, it's OK.
Dialogue: 0,0:40:53.09,0:40:56.51,中文,,0,0,0,,只要每个人都知道你所说的负一百万是什么意思 就没问题
Dialogue: 0,0:40:56.51,0:40:58.19,英文,,0,0,0,,That's a great question, though.
Dialogue: 0,0:40:56.51,0:40:58.19,中文,,0,0,0,,这确实是个很好的问题
Dialogue: 0,0:40:58.19,0:40:59.57,英文,,0,0,0,,OK.
Dialogue: 0,0:40:59.57,0:41:03.19,英文,,0,0,0,,So one final approach is look at this tree.
Dialogue: 0,0:40:59.57,0:41:03.19,中文,,0,0,0,,最后一种方法是看这个树
Dialogue: 0,0:41:03.19,0:41:05.17,英文,,0,0,0,,This tree is complete.
Dialogue: 0,0:41:03.19,0:41:05.17,中文,,0,0,0,,这棵树是完整的
Dialogue: 0,0:41:05.17,0:41:08.20,英文,,0,0,0,,All the items are as far down and to the left as possible.
Dialogue: 0,0:41:05.17,0:41:08.20,中文,,0,0,0,,所有项目尽可能地向下和向左移动
Dialogue: 0,0:41:08.20,0:41:10.12,英文,,0,0,0,,The only missing item is here.
Dialogue: 0,0:41:08.20,0:41:10.12,中文,,0,0,0,,唯一缺失的项目在这里
Dialogue: 0,0:41:10.12,0:41:11.62,英文,,0,0,0,,And it's at the bottom layer.
Dialogue: 0,0:41:10.12,0:41:11.62,中文,,0,0,0,,而且它在最底层
Dialogue: 0,0:41:11.62,0:41:14.12,英文,,0,0,0,,And all the items are pushed as far left as possible.
Dialogue: 0,0:41:11.62,0:41:14.12,中文,,0,0,0,,并且所有项目都尽可能地向左推
Dialogue: 0,0:41:14.12,0:41:19.43,英文,,0,0,0,,And it turns out, I'm not going to prove it, but maybe you can play around and see for yourself,
Dialogue: 0,0:41:14.12,0:41:19.43,中文,,0,0,0,,事实证明 我不会证明它 但也许你可以自己玩玩
Dialogue: 0,0:41:19.43,0:41:25.13,英文,,0,0,0,,If your tree is complete, the parents array is guaranteed to be boring.
Dialogue: 0,0:41:19.43,0:41:25.13,中文,,0,0,0,,如果你的树是完整的 父节点数组肯定是无聊的
Dialogue: 0,0:41:25.13,0:41:26.46,英文,,0,0,0,,What do I mean by boring?
Dialogue: 0,0:41:25.13,0:41:26.46,中文,,0,0,0,,我所说的无聊是什么意思
Dialogue: 0,0:41:26.46,0:41:28.64,英文,,0,0,0,,Well, let's take a look at this parents array.
Dialogue: 0,0:41:26.46,0:41:28.64,中文,,0,0,0,,好的 让我们看看这个父母数组
Dialogue: 0,0:41:28.64,0:41:32.20,英文,,0,0,0,,0 0 1 1 2 2 3 3 4 4 5 5.
Dialogue: 0,0:41:28.64,0:41:32.20,中文,,0,0,0,,0 0 1 1 2 2 3 3 4 4 5 5
Dialogue: 0,0:41:32.20,0:41:33.16,英文,,0,0,0,,You bored yet?
Dialogue: 0,0:41:32.20,0:41:33.16,中文,,0,0,0,,你无聊了吗
Dialogue: 0,0:41:33.16,0:41:34.40,英文,,0,0,0,,6 6 7 7.
Dialogue: 0,0:41:33.16,0:41:34.40,中文,,0,0,0,,6 6 7 7
Dialogue: 0,0:41:34.40,0:41:41.21,英文,,0,0,0,,So it turns out if your tree is complete, your parents array is always going to have this exact same structure, which is
Dialogue: 0,0:41:34.40,0:41:41.21,中文,,0,0,0,,原来如果你的树是完全的 你的父母数组始终会具有完全相同的结构 即
Dialogue: 0,0:41:41.21,0:41:44.27,英文,,0,0,0,,Two 0s, and then two 1s, and then two 2s, and then two 3s.
Dialogue: 0,0:41:41.21,0:41:44.27,中文,,0,0,0,,两个0 然后两个1 然后两个2 然后两个3
Dialogue: 0,0:41:44.27,0:41:45.73,英文,,0,0,0,,That's just the way it is.
Dialogue: 0,0:41:44.27,0:41:45.73,中文,,0,0,0,,事情就是这样的
Dialogue: 0,0:41:45.73,0:41:47.05,英文,,0,0,0,,I haven't really proven it.
Dialogue: 0,0:41:45.73,0:41:47.05,中文,,0,0,0,,我其实还没证明过
Dialogue: 0,0:41:47.05,0:41:50.85,英文,,0,0,0,,But if you're not convinced, go home and draw some complete trees, write the parents array.
Dialogue: 0,0:41:47.05,0:41:50.85,中文,,0,0,0,,但如果你还不信服 回家画几棵完整的树 写出父母数组
Dialogue: 0,0:41:50.85,0:41:54.16,英文,,0,0,0,,You will always get this boring array.
Dialogue: 0,0:41:50.85,0:41:54.16,中文,,0,0,0,,你总会得到这个无聊的数组
Dialogue: 0,0:41:54.16,0:41:58.20,英文,,0,0,0,,So approach number three is kind of exotic, which says, you know what?
Dialogue: 0,0:41:54.16,0:41:58.20,中文,,0,0,0,,第三种方法有点奇特 它说的是 你知道吗
Dialogue: 0,0:41:58.20,0:42:05.32,英文,,0,0,0,,If the tree is complete, and my parents array is guaranteed to be this boring old thing with every number repeated twice,
Dialogue: 0,0:41:58.20,0:42:05.32,中文,,0,0,0,,如果树是完整的 而且我的父母数组肯定是这个无聊的老东西 每个数字都重复两次
Dialogue: 0,0:42:05.32,0:42:06.70,英文,,0,0,0,,Why bother storing it?
Dialogue: 0,0:42:05.32,0:42:06.70,中文,,0,0,0,,为什么要储存它呢
Dialogue: 0,0:42:06.70,0:42:08.42,英文,,0,0,0,,I will just store the keys.
Dialogue: 0,0:42:06.70,0:42:08.42,中文,,0,0,0,,我只会储存键
Dialogue: 0,0:42:08.42,0:42:11.23,英文,,0,0,0,,And I'll forget about that boring-ass parents array.
Dialogue: 0,0:42:08.42,0:42:11.23,中文,,0,0,0,,而我会忘掉那个无聊的父母数组
Dialogue: 0,0:42:11.23,0:42:13.27,英文,,0,0,0,,And I'll just assume that it's there.
Dialogue: 0,0:42:11.23,0:42:13.27,中文,,0,0,0,,而我只会假设它在那里
Dialogue: 0,0:42:13.27,0:42:14.13,英文,,0,0,0,,But I know the structure.
Dialogue: 0,0:42:13.27,0:42:14.13,中文,,0,0,0,,但我知道结构
Dialogue: 0,0:42:14.13,0:42:18.23,英文,,0,0,0,,It's going to be two 0's, and then two 1's, and then two 2's, and so forth.
Dialogue: 0,0:42:14.13,0:42:18.23,中文,,0,0,0,,它将是两个0 然后两个1 然后两个2 依此类推
Dialogue: 0,0:42:18.23,0:42:21.62,英文,,0,0,0,,So one way of thinking of this is the parents array is boring.
Dialogue: 0,0:42:18.23,0:42:21.62,中文,,0,0,0,,想这个父母数组很无聊
Dialogue: 0,0:42:21.62,0:42:23.06,英文,,0,0,0,,Let's forget about it.
Dialogue: 0,0:42:21.62,0:42:23.06,中文,,0,0,0,,我们就不谈它了
Dialogue: 0,0:42:23.06,0:42:30.80,英文,,0,0,0,,Another way of thinking of it is if the tree is complete, then every layer all the way to the bottom is as full as possible.
Dialogue: 0,0:42:23.06,0:42:30.80,中文,,0,0,0,,另一种思考方式是 如果树是完整的 那么每一层一直到底部都是尽可能完整的
Dialogue: 0,0:42:30.80,0:42:39.38,英文,,0,0,0,,So if I write out my items in a sequence like this, I can use this sequence, like this 1D sequence, to represent this tree.
Dialogue: 0,0:42:30.80,0:42:39.38,中文,,0,0,0,,如果我按照这样的顺序写出我的项目 我可以使用这个序列 就像这样的一个一维序列 来表示这个树
Dialogue: 0,0:42:39.38,0:42:40.38,英文,,0,0,0,,How would I do it?
Dialogue: 0,0:42:39.38,0:42:40.38,中文,,0,0,0,,我该怎么做呢
Dialogue: 0,0:42:40.38,0:42:44.50,英文,,0,0,0,,Well, my first layer up top, it's got K, and that's it.
Dialogue: 0,0:42:40.38,0:42:44.50,中文,,0,0,0,,我的第一层在顶部 它只有 k 就这样
Dialogue: 0,0:42:44.50,0:42:46.21,英文,,0,0,0,,My second layer is going to have two things.
Dialogue: 0,0:42:44.50,0:42:46.21,中文,,0,0,0,,我的第二层将有两件事
Dialogue: 0,0:42:46.21,0:42:47.09,英文,,0,0,0,,What are the two things?
Dialogue: 0,0:42:46.21,0:42:47.09,中文,,0,0,0,,这两件事是什么
Dialogue: 0,0:42:47.09,0:42:51.55,英文,,0,0,0,,Go to my array and just pick out the next two, E and V. My next layer is going to have four things.
Dialogue: 0,0:42:47.09,0:42:51.55,中文,,0,0,0,,去我的数组 然后只挑选出接下来的两个 e 和 v 我的下一层将有四个东西
Dialogue: 0,0:42:51.55,0:42:52.79,英文,,0,0,0,,What are the four things?
Dialogue: 0,0:42:51.55,0:42:52.79,中文,,0,0,0,,这四个东西是什么
Dialogue: 0,0:42:52.79,0:42:58.82,英文,,0,0,0,,Go to my array and order, pick out the next four things, B, G, P, Y. My next layer is going to have eight things.
Dialogue: 0,0:42:52.79,0:42:58.82,中文,,0,0,0,,去我的数组里 按顺序挑出下一个四个东西 b、g、p、y 我的下一层会有八样东西
Dialogue: 0,0:42:58.82,0:42:59.60,英文,,0,0,0,,What are the things?
Dialogue: 0,0:42:58.82,0:42:59.60,中文,,0,0,0,,东西都有哪些
Dialogue: 0,0:42:59.60,0:43:04.68,英文,,0,0,0,,Go to the array and order and pick them out, A, D, F, J, M, R, X. I'm out of items.
Dialogue: 0,0:42:59.60,0:43:04.68,中文,,0,0,0,,去数组里按顺序挑出它们 a、d、f、j、m、r、x 我没东西了
Dialogue: 0,0:43:04.68,0:43:05.78,英文,,0,0,0,,I'm done.
Dialogue: 0,0:43:04.68,0:43:05.78,中文,,0,0,0,,我完成了
Dialogue: 0,0:43:05.78,0:43:08.67,英文,,0,0,0,,So if your tree is complete, that's another way of thinking of it.
Dialogue: 0,0:43:05.78,0:43:08.67,中文,,0,0,0,,如果你的树完成了 这是另一种思考方式
Dialogue: 0,0:43:08.67,0:43:16.37,英文,,0,0,0,,You can start at the top level with one item, then two items, then four items, then eight items, and just read them off layer by layer.
Dialogue: 0,0:43:08.67,0:43:16.37,中文,,0,0,0,,你可以从顶层开始 1个项目 然后2个项目 然后个项目 然后8个项目 然后按层读取
Dialogue: 0,0:43:16.37,0:43:18.52,英文,,0,0,0,,That will let me convert the tree to an array.
Dialogue: 0,0:43:16.37,0:43:18.52,中文,,0,0,0,,这样就可以让我把树转换为数组
Dialogue: 0,0:43:18.52,0:43:21.38,英文,,0,0,0,,It would also let me convert the array to a tree.
Dialogue: 0,0:43:18.52,0:43:21.38,中文,,0,0,0,,还可以让我将数组转换成树结构
Dialogue: 0,0:43:21.38,0:43:27.68,英文,,0,0,0,,If I know the tree is complete, I can just write out the layers one by one until I'm out of items.
Dialogue: 0,0:43:21.38,0:43:27.68,中文,,0,0,0,,如果我知道树是完整的 我可以逐层写出它们 直到没有元素为止
Dialogue: 0,0:43:27.68,0:43:29.21,英文,,0,0,0,,Kind of cool.
Dialogue: 0,0:43:27.68,0:43:29.21,中文,,0,0,0,,挺酷的
Dialogue: 0,0:43:29.21,0:43:39.72,英文,,0,0,0,,So if your tree is complete, like our priority queue heap trees, then I can use this approach with just a single array to represent the whole tree, which is pretty cool.
Dialogue: 0,0:43:29.21,0:43:39.72,中文,,0,0,0,,如果你的树是完整的 就像我们的优先队列堆树一样 我可以使用这种方法只需一个数组来表示整个树 这挺不错的
Dialogue: 0,0:43:39.72,0:43:41.54,英文,,0,0,0,,So quick question for you, then.
Dialogue: 0,0:43:39.72,0:43:41.54,中文,,0,0,0,,那么 你有一个问题 对吗
Dialogue: 0,0:43:41.54,0:43:53.25,英文,,0,0,0,,Here's some pseudocode for that swimming operation from earlier, which was we took the node, and it was like, I don't like my place, so I'm going to climb the tree and promote myself until I find my rightful home.
Dialogue: 0,0:43:41.54,0:43:53.25,中文,,0,0,0,,这是之前那个游泳操作的一些伪代码 就是我们拿到节点 然后就像说 我不喜欢这个地方 所以我要爬树 提升自己直到找到我应该在的地方
Dialogue: 0,0:43:53.25,0:43:55.55,英文,,0,0,0,,And so it might look something like this.
Dialogue: 0,0:43:53.25,0:43:55.55,中文,,0,0,0,,可能会看起来有点像这样
Dialogue: 0,0:43:55.55,0:44:00.48,英文,,0,0,0,,If my parent is greater than myself, then I should be the parent.
Dialogue: 0,0:43:55.55,0:44:00.48,中文,,0,0,0,,如果我的父节点比我大 那么我应该成为父节点
Dialogue: 0,0:44:00.48,0:44:03.94,英文,,0,0,0,,So I'm going to swap myself with my parents.
Dialogue: 0,0:44:00.48,0:44:03.94,中文,,0,0,0,,我要和我的父节点交换位置
Dialogue: 0,0:44:03.94,0:44:06.76,英文,,0,0,0,,And then keep moving up the tree recursively.
Dialogue: 0,0:44:03.94,0:44:06.76,中文,,0,0,0,,然后递归地沿着树向上移动
Dialogue: 0,0:44:06.76,0:44:11.27,英文,,0,0,0,,So how do I find the parent of myself?
Dialogue: 0,0:44:06.76,0:44:11.27,中文,,0,0,0,,那么我如何找到我的父节点呢
Dialogue: 0,0:44:11.27,0:44:13.13,英文,,0,0,0,,That's the question for you.
Dialogue: 0,0:44:11.27,0:44:13.13,中文,,0,0,0,,这就是你需要回答的问题
Dialogue: 0,0:44:13.13,0:44:14.85,英文,,0,0,0,,How do I find the parent of myself?
Dialogue: 0,0:44:13.13,0:44:14.85,中文,,0,0,0,,我如何找到我的父节点呢
Dialogue: 0,0:44:14.85,0:44:17.32,英文,,0,0,0,,If I had the parents array, I could just use it.
Dialogue: 0,0:44:14.85,0:44:17.32,中文,,0,0,0,,如果我有父节点数组 我可以直接使用它
Dialogue: 0,0:44:17.32,0:44:20.20,英文,,0,0,0,,But we said the parents array is boring, and we don't need it.
Dialogue: 0,0:44:17.32,0:44:20.20,中文,,0,0,0,,但是我们说过父数组很无聊 我们不需要它
Dialogue: 0,0:44:20.20,0:44:22.52,英文,,0,0,0,,So you have to come up with something more clever.
Dialogue: 0,0:44:20.20,0:44:22.52,中文,,0,0,0,,你必须想出一些更聪明的东西
Dialogue: 0,0:44:22.52,0:44:25.14,英文,,0,0,0,,I want something that takes in an integer.
Dialogue: 0,0:44:22.52,0:44:25.14,中文,,0,0,0,,我想要一个接受整数的东西
Dialogue: 0,0:44:25.14,0:44:30.69,英文,,0,0,0,,corresponding to one of the items, and returns another integer that tells me where the parent is.
Dialogue: 0,0:44:25.14,0:44:30.69,中文,,0,0,0,,对应于其中的一个项目 并返回告诉我父项在哪里的另一个整数
Dialogue: 0,0:44:30.69,0:44:31.95,英文,,0,0,0,,So how would you do it?
Dialogue: 0,0:44:30.69,0:44:31.95,中文,,0,0,0,,那你会怎么做呢
Dialogue: 0,0:44:31.95,0:44:35.97,英文,,0,0,0,,For example, I want 11 to return its parent, which is 5.
Dialogue: 0,0:44:31.95,0:44:35.97,中文,,0,0,0,,例如 我希望11返回其父项 即5
Dialogue: 0,0:44:35.97,0:44:38.31,英文,,0,0,0,,If I pass in 9, I want 4.
Dialogue: 0,0:44:35.97,0:44:38.31,中文,,0,0,0,,如果我传入9 我希望得到4
Dialogue: 0,0:44:38.31,0:44:40.81,英文,,0,0,0,,If I pass in 10, I also want 4.
Dialogue: 0,0:44:38.31,0:44:40.81,中文,,0,0,0,,如果我传入10 我也想要4
Dialogue: 0,0:44:40.81,0:44:43.23,英文,,0,0,0,,I pass in 13, I want 6.
Dialogue: 0,0:44:40.81,0:44:43.23,中文,,0,0,0,,我传入13 我想要6
Dialogue: 0,0:44:43.23,0:44:44.63,英文,,0,0,0,,How do I do it?
Dialogue: 0,0:44:43.23,0:44:44.63,中文,,0,0,0,,我该怎么做
Dialogue: 0,0:44:44.63,0:44:46.63,英文,,0,0,0,,Pass in 12, I want 5.
Dialogue: 0,0:44:44.63,0:44:46.63,中文,,0,0,0,,传入12 我想要5
Dialogue: 0,0:44:46.63,0:44:49.14,英文,,0,0,0,,Pass in 7, I want 3.
Dialogue: 0,0:44:46.63,0:44:49.14,中文,,0,0,0,,传入7 我想要3
Dialogue: 0,0:44:49.14,0:44:51.40,英文,,0,0,0,,Have you started to notice anything?
Dialogue: 0,0:44:49.14,0:44:51.40,中文,,0,0,0,,你开始注意到什么了吗
Dialogue: 0,0:44:51.40,0:44:56.52,英文,,0,0,0,,I noticed something, which is that every time I go from the child to the parent, it looks like I'm dividing by 2.
Dialogue: 0,0:44:51.40,0:44:56.52,中文,,0,0,0,,我注意到了一些事情 就是每次我从子级到父级时 看起来就像我在除以2
Dialogue: 0,0:44:56.52,0:45:03.39,英文,,0,0,0,,Look, 7 becomes 3, 8 becomes 3, and then 9 and 10 become 4, and then 11 and 12 become 5.
Dialogue: 0,0:44:56.52,0:45:03.39,中文,,0,0,0,,看 7变成3 8变成3 然后9和10变成4 然后11和12变成5
Dialogue: 0,0:45:03.39,0:45:06.21,英文,,0,0,0,,So I'm roughly dividing by 2.
Dialogue: 0,0:45:03.39,0:45:06.21,中文,,0,0,0,,我大概是除以2
Dialogue: 0,0:45:06.21,0:45:09.73,英文,,0,0,0,,If you play around with the formulas, you might get something like this.
Dialogue: 0,0:45:06.21,0:45:09.73,中文,,0,0,0,,如果你玩弄这些公式 你可能会得到类似这样的东西
Dialogue: 0,0:45:09.73,0:45:12.58,英文,,0,0,0,,You can try it on all these numbers. You'll see it works good.
Dialogue: 0,0:45:09.73,0:45:12.58,中文,,0,0,0,,你可以在所有这些数字上试试  你会发现它运行得很好
Dialogue: 0,0:45:12.58,0:45:15.24,英文,,0,0,0,,So for example, 11, who's your parent?
Dialogue: 0,0:45:12.58,0:45:15.24,中文,,0,0,0,,例如 11 谁是你的父母
Dialogue: 0,0:45:15.24,0:45:17.00,英文,,0,0,0,,Well, it's not really dividing by 2 exactly.
Dialogue: 0,0:45:15.24,0:45:17.00,中文,,0,0,0,,这实际上并不是精确地除以2
Dialogue: 0,0:45:17.00,0:45:19.02,英文,,0,0,0,,I have to subtract 1 to get 10.
Dialogue: 0,0:45:17.00,0:45:19.02,中文,,0,0,0,,我必须减1才能得到10
Dialogue: 0,0:45:19.02,0:45:20.60,英文,,0,0,0,,Divide by 2, I get 5.
Dialogue: 0,0:45:19.02,0:45:20.60,中文,,0,0,0,,除以2 我得到5
Dialogue: 0,0:45:20.60,0:45:21.32,英文,,0,0,0,,What about 12?
Dialogue: 0,0:45:20.60,0:45:21.32,中文,,0,0,0,,12怎么样
Dialogue: 0,0:45:21.32,0:45:23.48,英文,,0,0,0,,12 minus 1 is 11.
Dialogue: 0,0:45:21.32,0:45:23.48,中文,,0,0,0,,12减1得11
Dialogue: 0,0:45:23.48,0:45:25.86,英文,,0,0,0,,Divided by 2, 5.5.
Dialogue: 0,0:45:23.48,0:45:25.86,中文,,0,0,0,,除以2 得5.5
Dialogue: 0,0:45:25.86,0:45:30.00,英文,,0,0,0,,But I'm returning an integer, so I can round it down to 5.
Dialogue: 0,0:45:25.86,0:45:30.00,中文,,0,0,0,,但我要返回一个整数 所以我可以将其向下取整为5
Dialogue: 0,0:45:30.00,0:45:31.01,英文,,0,0,0,,OK, that's it.
Dialogue: 0,0:45:30.00,0:45:31.01,中文,,0,0,0,,好的 就这样了
Dialogue: 0,0:45:31.01,0:45:31.65,英文,,0,0,0,,It's so simple.
Dialogue: 0,0:45:31.01,0:45:31.65,中文,,0,0,0,,这太简单了
Dialogue: 0,0:45:31.65,0:45:37.63,英文,,0,0,0,,Look, it's just doing some little arithmetic, and I can find the parent, which is kind of cool.
Dialogue: 0,0:45:31.65,0:45:37.63,中文,,0,0,0,,你看 只是做一些小算术 我就能找到父节点 感觉有点酷
Dialogue: 0,0:45:37.63,0:45:44.66,英文,,0,0,0,,By the way, if you didn't see this, go draw some bigger trees and watch the patterns, or maybe even write out the parent array.
Dialogue: 0,0:45:37.63,0:45:44.66,中文,,0,0,0,,顺便说一下 如果你还没有看到这个 去画一些更大的树 观察一下模式 或者甚至写出父节点数组
Dialogue: 0,0:45:44.66,0:45:57.45,英文,,0,0,0,,If you look at this parent array, you will see the pattern, which is that the numbers in the blue boxes are always k minus 1 over 2 of the numbers in the indices.
Dialogue: 0,0:45:44.66,0:45:57.45,中文,,0,0,0,,如果你看一下这个父节点数组 你会发现这个模式 即蓝色方框中的数字总是索引数字的 k 减 1 除以 2
Dialogue: 0,0:45:57.45,0:45:58.33,英文,,0,0,0,,Great.
Dialogue: 0,0:45:57.45,0:45:58.33,中文,,0,0,0,,太好了
Dialogue: 0,0:45:58.33,0:46:01.53,英文,,0,0,0,,So this is our summary of all the ways we can represent trees.
Dialogue: 0,0:45:58.33,0:46:01.53,中文,,0,0,0,,这就是我们可以表示树的所有方式的总结
Dialogue: 0,0:46:01.53,0:46:05.19,英文,,0,0,0,,There are even more exotic ones out there, but I will not talk about them.
Dialogue: 0,0:46:01.53,0:46:05.19,中文,,0,0,0,,还有更奇特的方式 但我不会讨论它们
Dialogue: 0,0:46:05.19,0:46:10.92,英文,,0,0,0,,You could use links and have recursive items or objects per node.
Dialogue: 0,0:46:05.19,0:46:10.92,中文,,0,0,0,,你可以使用链接 并在每个节点上有递归的项目或对象
Dialogue: 0,0:46:10.92,0:46:12.90,英文,,0,0,0,,That was 1a, 1b, and 1c.
Dialogue: 0,0:46:10.92,0:46:12.90,中文,,0,0,0,,那是1a 1b和1c
Dialogue: 0,0:46:12.90,0:46:18.25,英文,,0,0,0,,You could use an array and have one array with the items and one array with the structure.
Dialogue: 0,0:46:12.90,0:46:18.25,中文,,0,0,0,,你可以使用一个数组 其中一个数组包含项目 另一个数组包含结构
Dialogue: 0,0:46:18.25,0:46:20.11,英文,,0,0,0,,That was approach number two.
Dialogue: 0,0:46:18.25,0:46:20.11,中文,,0,0,0,,那是第二种方法
Dialogue: 0,0:46:20.11,0:46:22.25,英文,,0,0,0,,Or if your tree is complete,
Dialogue: 0,0:46:20.11,0:46:22.25,中文,,0,0,0,,或者如果你的树是完整的
Dialogue: 0,0:46:22.25,0:46:25.41,英文,,0,0,0,,Then you could use this third approach, where we say, you know what?
Dialogue: 0,0:46:22.25,0:46:25.41,中文,,0,0,0,,那么你可以使用这第三种方法 我们说 你知道吗
Dialogue: 0,0:46:25.41,0:46:35.54,英文,,0,0,0,,Because my tree is complete, I will throw away the boring parents array, and I'll just keep this array of keys, which I can read layer by layer to reconstruct the tree.
Dialogue: 0,0:46:25.41,0:46:35.54,中文,,0,0,0,,因为我的树是完整的 我会丢掉无聊的父数组 只保留这个键的数组 我可以逐层阅读以重建树
Dialogue: 0,0:46:35.54,0:46:38.04,英文,,0,0,0,,So those are my different representations of the tree.
Dialogue: 0,0:46:35.54,0:46:38.04,中文,,0,0,0,,这就是我对树的不同表达方式
Dialogue: 0,0:46:38.04,0:46:40.19,英文,,0,0,0,,All of them are good.
Dialogue: 0,0:46:38.04,0:46:40.19,中文,,0,0,0,,它们都不错
Dialogue: 0,0:46:40.19,0:46:42.95,英文,,0,0,0,,It's up to you to pick the one you like the best for your setting.
Dialogue: 0,0:46:40.19,0:46:42.95,中文,,0,0,0,,由你来选择在你的环境中最喜欢的那个
Dialogue: 0,0:46:42.95,0:46:45.47,英文,,0,0,0,,How am I doing on time?
Dialogue: 0,0:46:42.95,0:46:45.47,中文,,0,0,0,,我在时间上怎么样
Dialogue: 0,0:46:45.47,0:46:45.93,英文,,0,0,0,,56?
Dialogue: 0,0:46:45.47,0:46:45.93,中文,,0,0,0,,56
Dialogue: 0,0:46:45.93,0:46:46.63,英文,,0,0,0,,Oh, crap.
Dialogue: 0,0:46:45.93,0:46:46.63,中文,,0,0,0,,哦 糟糕
Dialogue: 0,0:46:46.63,0:46:48.17,英文,,0,0,0,,OK.
Dialogue: 0,0:46:48.17,0:46:50.91,英文,,0,0,0,,So I guess I can't talk about Big O, oh well.
Dialogue: 0,0:46:48.17,0:46:50.91,中文,,0,0,0,,我猜我不能谈论大O 算了
Dialogue: 0,0:46:50.91,0:46:54.35,英文,,0,0,0,,OK, so final couple things.
Dialogue: 0,0:46:50.91,0:46:54.35,中文,,0,0,0,,好的 最后几件事
Dialogue: 0,0:46:54.35,0:46:57.39,英文,,0,0,0,,One thing is, maybe you didn't like this k minus 1.
Dialogue: 0,0:46:54.35,0:46:57.39,中文,,0,0,0,,一件事是 也许你不喜欢这个k减1
Dialogue: 0,0:46:57.39,0:46:59.69,英文,,0,0,0,,You thought it was kind of awkward.
Dialogue: 0,0:46:57.39,0:46:59.69,中文,,0,0,0,,你觉得这有点尴尬
Dialogue: 0,0:46:59.69,0:47:02.39,英文,,0,0,0,,If you thought this was awkward, you know who agrees with you?
Dialogue: 0,0:46:59.69,0:47:02.39,中文,,0,0,0,,如果你觉得这有点尴尬 你知道谁同意你吗
Dialogue: 0,0:47:02.39,0:47:05.14,英文,,0,0,0,,Our Princeton's Algorithms textbook agrees with you.
Dialogue: 0,0:47:02.39,0:47:05.14,中文,,0,0,0,,我们的普林斯顿算法教材同意你
Dialogue: 0,0:47:05.14,0:47:08.74,英文,,0,0,0,,And so to fix it, they actually skipped the 0.
Dialogue: 0,0:47:05.14,0:47:08.74,中文,,0,0,0,,为了修复它 他们实际上跳过了0
Dialogue: 0,0:47:08.74,0:47:17.94,英文,,0,0,0,,So all that they do is they take the same array, which is totally complete and has no gaps, and the structure is the same, and they just shift all the items down by 1.
Dialogue: 0,0:47:08.74,0:47:17.94,中文,,0,0,0,,他们所做的就是他们拿同样的数组 完全完整 没有间隙 结构也一样 然后他们只是把所有项目都往下移一个
Dialogue: 0,0:47:17.94,0:47:23.98,英文,,0,0,0,,So instead of putting k and 0, they start at 1 and put k and 1, e and 2, v and 3, and so on.
Dialogue: 0,0:47:17.94,0:47:23.98,中文,,0,0,0,,不是把k和0放在那 他们从1开始 放k和1 e和2 v和3 以此类推
Dialogue: 0,0:47:23.98,0:47:26.36,英文,,0,0,0,,It is the exact same implementation.
Dialogue: 0,0:47:23.98,0:47:26.36,中文,,0,0,0,,这完全相同的实现
Dialogue: 0,0:47:26.36,0:47:28.38,英文,,0,0,0,,They just left an empty spot.
Dialogue: 0,0:47:26.36,0:47:28.38,中文,,0,0,0,,他们只是留下了一个空位
Dialogue: 0,0:47:28.38,0:47:34.01,英文,,0,0,0,,And by leaving the empty spot, these computations of parent and child become a little bit nicer.
Dialogue: 0,0:47:28.38,0:47:34.01,中文,,0,0,0,,通过留下这个空位 父项和子项的计算变得更加方便一些
Dialogue: 0,0:47:34.01,0:47:37.19,英文,,0,0,0,,Because look, how do you get from 12 and 13 to 6?
Dialogue: 0,0:47:34.01,0:47:37.19,中文,,0,0,0,,因为你看 你怎么从12和13到6
Dialogue: 0,0:47:37.19,0:47:38.41,英文,,0,0,0,,You divide by 2.
Dialogue: 0,0:47:37.19,0:47:38.41,中文,,0,0,0,,你除以2
Dialogue: 0,0:47:38.41,0:47:40.47,英文,,0,0,0,,How do you get from 10 and 11 to 5?
Dialogue: 0,0:47:38.41,0:47:40.47,中文,,0,0,0,,你怎么从10和11到5
Dialogue: 0,0:47:40.47,0:47:41.79,英文,,0,0,0,,You divide by 2.
Dialogue: 0,0:47:40.47,0:47:41.79,中文,,0,0,0,,你除以2
Dialogue: 0,0:47:41.79,0:47:44.17,英文,,0,0,0,,So you get rid of that little k minus 1.
Dialogue: 0,0:47:41.79,0:47:44.17,中文,,0,0,0,,你消去了那个小k减1
Dialogue: 0,0:47:44.17,0:47:51.74,英文,,0,0,0,,So if you thought that k minus 1 was gross, then the Princeton's algorithms textbook agrees with you and decides to shift all the items over by 1.
Dialogue: 0,0:47:44.17,0:47:51.74,中文,,0,0,0,,如果你认为k减1很恶心 那么普林斯顿的算法教材同意你的观点 并决定将所有项向前移动1位
Dialogue: 0,0:47:51.74,0:47:53.90,英文,,0,0,0,,If you don't like it, you don't have to use it.
Dialogue: 0,0:47:51.74,0:47:53.90,中文,,0,0,0,,如果你不喜欢 你可以不用它
Dialogue: 0,0:47:53.90,0:47:57.02,英文,,0,0,0,,But there it is for your reference if you feel like it.
Dialogue: 0,0:47:53.90,0:47:57.02,中文,,0,0,0,,但是如果你感觉需要 这里有供参考的
Dialogue: 0,0:47:57.02,0:48:02.40,英文,,0,0,0,,OK, I guess I will summarize, and then we won't have any more time to do anything else, but that's OK.
Dialogue: 0,0:47:57.02,0:48:02.40,中文,,0,0,0,,好的 我想我会总结一下 然后我们就没有时间再做其他事情了 但没关系
Dialogue: 0,0:48:02.40,0:48:17.79,英文,,0,0,0,,So we started with these three possible implementations of the priority queue, the abstract data type where the user interacts with the smallest item, and we decided that the ordered array, binary search tree, and hash table all suck for this purpose.
Dialogue: 0,0:48:02.40,0:48:17.79,中文,,0,0,0,,我们从这三种可能的优先队列实现开始 这是用户与最小项交互的抽象数据类型 我们决定有序数组、二叉搜索树和哈希表都不适用于此目的
Dialogue: 0,0:48:17.79,0:48:22.69,英文,,0,0,0,,So we built our own implementation, the heap, which is excellent for this purpose.
Dialogue: 0,0:48:17.79,0:48:22.69,中文,,0,0,0,,我们构建了自己的实现 堆 非常适合这个目的
Dialogue: 0,0:48:22.69,0:48:32.60,英文,,0,0,0,,Adding and removing things, they're logarithmic time, because I have to take my new node and swim it up and down the tree, which is logarithmic height, because it's complete and bushy.
Dialogue: 0,0:48:22.69,0:48:32.60,中文,,0,0,0,,添加和删除东西 它们是对数时间 因为我必须把我的新节点在树中上下移动 这是对数高度 因为它是完全且丰满的
Dialogue: 0,0:48:32.60,0:48:35.02,英文,,0,0,0,,Getting the smallest item, well, you just pick out the root.
Dialogue: 0,0:48:32.60,0:48:35.02,中文,,0,0,0,,获取最小项 你只需挑选出根节点
Dialogue: 0,0:48:35.02,0:48:36.76,英文,,0,0,0,,That is theta of 1.
Dialogue: 0,0:48:35.02,0:48:36.76,中文,,0,0,0,,这是theta的1
Dialogue: 0,0:48:36.76,0:48:41.44,英文,,0,0,0,,Now, technically, really small note is that these are amortized.
Dialogue: 0,0:48:36.76,0:48:41.44,中文,,0,0,0,,现在 技术上 一个很小的注意是这些是摊销的
Dialogue: 0,0:48:41.44,0:48:44.63,英文,,0,0,0,,They are, on average, logarithmic and constant time.
Dialogue: 0,0:48:41.44,0:48:44.63,中文,,0,0,0,,它们平均而言是对数和常数时间
Dialogue: 0,0:48:44.63,0:48:47.79,英文,,0,0,0,,And that's because sometimes you have to resize the backing array.
Dialogue: 0,0:48:44.63,0:48:47.79,中文,,0,0,0,,这是因为有时候你必须调整支持数组的大小
Dialogue: 0,0:48:47.79,0:48:55.29,英文,,0,0,0,,So if you choose to use an array to represent heat, like approach number three from earlier, that array might have to be resized if you add a bunch of things.
Dialogue: 0,0:48:47.79,0:48:55.29,中文,,0,0,0,,如果你选择用数组来表示热度 就像之前的第三种方法 如果你添加了很多东西 那个数组可能就得调整大小
Dialogue: 0,0:48:55.29,0:48:59.61,英文,,0,0,0,,But we already saw from the array list lecture that resizing is OK.
Dialogue: 0,0:48:55.29,0:48:59.61,中文,,0,0,0,,但是我们已经从数组列表讲座中看到 调整大小是可以的
Dialogue: 0,0:48:59.61,0:49:01.17,英文,,0,0,0,,It's not going to take a lot of time.
Dialogue: 0,0:48:59.61,0:49:01.17,中文,,0,0,0,,这不会花费很多时间
Dialogue: 0,0:49:01.17,0:49:08.86,英文,,0,0,0,,And on average, the amount of time the resizing takes is constant time, so we don't have to worry about it.
Dialogue: 0,0:49:01.17,0:49:08.86,中文,,0,0,0,,而且平均而言 调整大小所需的时间是常数 所以我们不用担心它
Dialogue: 0,0:49:08.86,0:49:11.86,英文,,0,0,0,,One more thing to note is that heaps are really good at duplicates.
Dialogue: 0,0:49:08.86,0:49:11.86,中文,,0,0,0,,需要注意的另一件事是堆对重复项非常擅长
Dialogue: 0,0:49:11.86,0:49:13.95,英文,,0,0,0,,Do you remember the heap with all eights?
Dialogue: 0,0:49:11.86,0:49:13.95,中文,,0,0,0,,你还记得那个全部是八的堆吗
Dialogue: 0,0:49:13.95,0:49:15.91,英文,,0,0,0,,And nobody even called me out on it.
Dialogue: 0,0:49:13.95,0:49:15.91,中文,,0,0,0,,然后没人甚至没指出我的错误
Dialogue: 0,0:49:15.91,0:49:17.39,英文,,0,0,0,,Like, look at this.
Dialogue: 0,0:49:15.91,0:49:17.39,中文,,0,0,0,,就像 看看这个
Dialogue: 0,0:49:17.39,0:49:20.98,英文,,0,0,0,,It's all eights, and nobody called me out and said, wait, this is super weird.
Dialogue: 0,0:49:17.39,0:49:20.98,中文,,0,0,0,,全都是八 没人指出来说 等等 这太奇怪了
Dialogue: 0,0:49:20.98,0:49:22.10,英文,,0,0,0,,It doesn't make sense.
Dialogue: 0,0:49:20.98,0:49:22.10,中文,,0,0,0,,这毫无意义
Dialogue: 0,0:49:22.10,0:49:25.38,英文,,0,0,0,,This makes perfect sense in a heap to have items with duplicates.
Dialogue: 0,0:49:22.10,0:49:25.38,中文,,0,0,0,,在堆中 具有重复项是完全合理的
Dialogue: 0,0:49:25.38,0:49:26.58,英文,,0,0,0,,It's no problem.
Dialogue: 0,0:49:25.38,0:49:26.58,中文,,0,0,0,,这没问题
Dialogue: 0,0:49:26.58,0:49:29.90,英文,,0,0,0,,The rule is that every item is less than or equal to its children.
Dialogue: 0,0:49:26.58,0:49:29.90,中文,,0,0,0,,规则是每个项都小于或等于它的子项
Dialogue: 0,0:49:29.90,0:49:34.93,英文,,0,0,0,,So having a heap with tons of duplicates is no problem at all, which is a nice thing.
Dialogue: 0,0:49:29.90,0:49:34.93,中文,,0,0,0,,拥有一个有大量重复项的堆栈一点问题都没有 这是一件好事
Dialogue: 0,0:49:34.93,0:49:43.03,英文,,0,0,0,,So unlike binary search trees, where duplicates are really confusing, in a heap, it is very natural to have duplicates, which is great.
Dialogue: 0,0:49:34.93,0:49:43.03,中文,,0,0,0,,与二叉搜索树不同 重复项在堆中并不令人困惑 拥有重复项在堆中是非常自然的 这很棒
Dialogue: 0,0:49:43.03,0:49:51.06,英文,,0,0,0,,Final note is that if you use the arrays and you don't keep the links, then it's a little bit more memory efficient, but not something we'll talk about in detail.
Dialogue: 0,0:49:43.03,0:49:51.06,中文,,0,0,0,,最后注意的是 如果你使用数组而不保留链接 那么它会更节省一些内存 但我们不会详细讨论这个
Dialogue: 0,0:49:51.06,0:49:55.04,英文,,0,0,0,,Here are some implementation questions if you're curious, but I will not talk them through.
Dialogue: 0,0:49:51.06,0:49:55.04,中文,,0,0,0,,如果你感兴趣 这里有一些实现问题 但我不会详细讨论它们
Dialogue: 0,0:49:55.04,0:50:06.64,英文,,0,0,0,,Sorry, so the final thing I will say before you all go home is what have we done in the past seven or eight lectures is we've talked about the core data structures in this class.
Dialogue: 0,0:49:55.04,0:50:06.64,中文,,0,0,0,,抱歉 我在你们都回家之前会说的最后一件事是 在过去的七八堂课中我们讨论了这门课的核心数据结构
Dialogue: 0,0:50:06.64,0:50:11.84,英文,,0,0,0,,And all of them do something that is kind of sort of a search problem.
Dialogue: 0,0:50:06.64,0:50:11.84,中文,,0,0,0,,它们都做了一些类似搜索问题的事情
Dialogue: 0,0:50:11.84,0:50:20.44,英文,,0,0,0,,It's like I give you just this big old pile of stuff, a bunch of numbers, a bunch of Japanese characters, and I want you to find one.
Dialogue: 0,0:50:11.84,0:50:20.44,中文,,0,0,0,,就像我给你一大堆东西 一堆数字 一堆日文字符 然后我希望你找到一个
Dialogue: 0,0:50:20.44,0:50:22.66,英文,,0,0,0,,And I want you to be able to add items.
Dialogue: 0,0:50:20.44,0:50:22.66,中文,,0,0,0,,我希望你能够添加项目
Dialogue: 0,0:50:22.66,0:50:31.93,英文,,0,0,0,,And your job was to keep that big pile of Japanese characters organized so that if I ask you to find something, you can find it in an efficient way.
Dialogue: 0,0:50:22.66,0:50:31.93,中文,,0,0,0,,而你的工作就是保持那一大堆日文字符有序 这样如果我要你找些什么 你可以以高效的方式找到它
Dialogue: 0,0:50:31.93,0:50:41.06,英文,,0,0,0,,So all of the data structures we've built, they kind of have this in common, which is you, the user, can add new items into the pile of items.
Dialogue: 0,0:50:31.93,0:50:41.06,中文,,0,0,0,,我们构建的所有数据结构 它们都有一个共同点 那就是你 用户 可以将新项目添加到项目堆中
Dialogue: 0,0:50:41.06,0:50:44.82,英文,,0,0,0,,And the data structure's job is to keep the pile of items organized.
Dialogue: 0,0:50:41.06,0:50:44.82,中文,,0,0,0,,而数据结构的任务就是保持项目堆的有序性
Dialogue: 0,0:50:44.82,0:50:53.18,英文,,0,0,0,,And then there should be some operation that lets the user grab items from the pile, hopefully in an efficient way, because you kept things organized.
Dialogue: 0,0:50:44.82,0:50:53.18,中文,,0,0,0,,然后应该有某个操作让用户从堆中取出项目 希望这样做是高效的 因为你保持了事物的有序性
Dialogue: 0,0:50:53.18,0:50:57.19,英文,,0,0,0,,So for example, in a list, you kept things organized by having an order.
Dialogue: 0,0:50:53.18,0:50:57.19,中文,,0,0,0,,比如 在列表中 通过排序保持事物的有序性
Dialogue: 0,0:50:57.19,0:50:58.87,英文,,0,0,0,,And the user could say, give me the 10th thing.
Dialogue: 0,0:50:57.19,0:50:58.87,中文,,0,0,0,,用户可以说 给我第十个东西
Dialogue: 0,0:50:58.87,0:51:01.35,英文,,0,0,0,,And you could be like, boom, there's the 10th thing.
Dialogue: 0,0:50:58.87,0:51:01.35,中文,,0,0,0,,你可以像这样 嘭 第十件事情就出现了
Dialogue: 0,0:51:01.35,0:51:03.13,英文,,0,0,0,,So you kept things in order.
Dialogue: 0,0:51:01.35,0:51:03.13,中文,,0,0,0,,你把事情都整理好了
Dialogue: 0,0:51:03.13,0:51:06.03,英文,,0,0,0,,In a map, how did you organize your collection of things?
Dialogue: 0,0:51:03.13,0:51:06.03,中文,,0,0,0,,在一个地图中 你是如何组织你的事物集合的
Dialogue: 0,0:51:06.03,0:51:08.23,英文,,0,0,0,,Well, you mapped keys to values.
Dialogue: 0,0:51:06.03,0:51:08.23,中文,,0,0,0,,你把键映射到值上
Dialogue: 0,0:51:08.23,0:51:10.56,英文,,0,0,0,,So you said, you know,
Dialogue: 0,0:51:08.23,0:51:10.56,中文,,0,0,0,,你说 你知道的
Dialogue: 0,0:51:10.56,0:51:13.22,英文,,0,0,0,,Josh Hugg's grade is 55.
Dialogue: 0,0:51:10.56,0:51:13.22,中文,,0,0,0,,Josh Hugg 的分数是 55
Dialogue: 0,0:51:13.22,0:51:15.64,英文,,0,0,0,,So you mapped items to values.
Dialogue: 0,0:51:13.22,0:51:15.64,中文,,0,0,0,,你把项目映射到值上
Dialogue: 0,0:51:15.64,0:51:16.92,英文,,0,0,0,,And how did you get things?
Dialogue: 0,0:51:15.64,0:51:16.92,中文,,0,0,0,,你是怎么做到的
Dialogue: 0,0:51:16.92,0:51:22.72,英文,,0,0,0,,Well, someone gave you the key, and then you had to return efficiently the resulting value.
Dialogue: 0,0:51:16.92,0:51:22.72,中文,,0,0,0,,有人给了你钥匙 然后你要有效地返回结果值
Dialogue: 0,0:51:22.72,0:51:23.86,英文,,0,0,0,,What about a set?
Dialogue: 0,0:51:22.72,0:51:23.86,中文,,0,0,0,,那集合呢
Dialogue: 0,0:51:23.86,0:51:27.02,英文,,0,0,0,,A set is also a pile of items with no duplicates.
Dialogue: 0,0:51:23.86,0:51:27.02,中文,,0,0,0,,集合也是一堆不重复的项目
Dialogue: 0,0:51:27.02,0:51:32.54,英文,,0,0,0,,And the way that you found items was someone asked you, hey, does my set contain Beijing?
Dialogue: 0,0:51:27.02,0:51:32.54,中文,,0,0,0,,你是如何找到项目的 有人问你 嘿 我的集合里有北京吗
Dialogue: 0,0:51:32.54,0:51:36.90,英文,,0,0,0,,And you said yes by looking through the set in a hopefully efficient way.
Dialogue: 0,0:51:32.54,0:51:36.90,中文,,0,0,0,,你通过以希望高效的方式查看集合来回答是的
Dialogue: 0,0:51:36.90,0:51:40.89,英文,,0,0,0,,The priority queue was another pile of items where you can add things.
Dialogue: 0,0:51:36.90,0:51:40.89,中文,,0,0,0,,优先队列是另一个可以添加东西的项目堆
Dialogue: 0,0:51:40.89,0:51:46.09,英文,,0,0,0,,But this time, the rule is that if you want to retrieve something, you can only retrieve the smallest thing.
Dialogue: 0,0:51:40.89,0:51:46.09,中文,,0,0,0,,但这一次 规则是 如果你想检索某样东西 只能检索最小的东西
Dialogue: 0,0:51:46.09,0:51:48.89,英文,,0,0,0,,And we designed a data structure to make that fast.
Dialogue: 0,0:51:46.09,0:51:48.89,中文,,0,0,0,,然后我们设计了一种数据结构来使其快速
Dialogue: 0,0:51:48.89,0:51:54.09,英文,,0,0,0,,And the final one, disjoint sets, the very first one we did, it's kind of also storing things.
Dialogue: 0,0:51:48.89,0:51:54.09,中文,,0,0,0,,最后一个 不相交集合 我们最早做的一个 也有点像存储东西
Dialogue: 0,0:51:54.09,0:51:57.87,英文,,0,0,0,,In particular, you're storing connections between items.
Dialogue: 0,0:51:54.09,0:51:57.87,中文,,0,0,0,,特别是 你正在存储项目之间的连接
Dialogue: 0,0:51:57.87,0:52:00.37,英文,,0,0,0,,And to retrieve something, you ask if the items are connected.
Dialogue: 0,0:51:57.87,0:52:00.37,中文,,0,0,0,,要检索某样东西 你会询问项目是否连接
Dialogue: 0,0:52:00.37,0:52:03.39,英文,,0,0,0,,That one's a little bit more awkward, but the idea is the same.
Dialogue: 0,0:52:00.37,0:52:03.39,中文,,0,0,0,,那个有点尴尬 但想法是相同的
Dialogue: 0,0:52:03.39,0:52:12.14,英文,,0,0,0,,So I find it kind of beautiful that we spent all this time solving the search problem, having a pile of items and trying to retrieve it, in different and creative ways.
Dialogue: 0,0:52:03.39,0:52:12.14,中文,,0,0,0,,我觉得很美 我们花了这么长时间解决搜索问题 拥有一堆项目并尝试检索它 以不同和创造性的方式
Dialogue: 0,0:52:12.14,0:52:13.54,英文,,0,0,0,,And I think that's beautiful.
Dialogue: 0,0:52:12.14,0:52:13.54,中文,,0,0,0,,而且我觉得那很美
Dialogue: 0,0:52:13.54,0:52:16.42,英文,,0,0,0,,That's the core part of this class that we're done with.
Dialogue: 0,0:52:13.54,0:52:16.42,中文,,0,0,0,,这是我们完成的这门课的核心部分
Dialogue: 0,0:52:16.42,0:52:21.44,英文,,0,0,0,,And in the next couple of lectures, we're going to talk about one more data structure that you see a lot called graphs.
Dialogue: 0,0:52:16.42,0:52:21.44,中文,,0,0,0,,在接下来的几节课中 我们将讨论另一种经常见到的数据结构 它被称为图
Dialogue: 0,0:52:21.44,0:52:24.22,英文,,0,0,0,,And after that, we're totally done with data structures.
Dialogue: 0,0:52:21.44,0:52:24.22,中文,,0,0,0,,之后 我们就完全完成了数据结构
Dialogue: 0,0:52:24.22,0:52:24.90,英文,,0,0,0,,So look at us.
Dialogue: 0,0:52:24.22,0:52:24.90,中文,,0,0,0,,看着我们
Dialogue: 0,0:52:24.90,0:52:26.08,英文,,0,0,0,,We're making progress.
Dialogue: 0,0:52:24.90,0:52:26.08,中文,,0,0,0,,我们正在取得进展
Dialogue: 0,0:52:26.08,0:52:26.32,英文,,0,0,0,,OK.
Dialogue: 0,0:52:26.32,0:52:27.36,英文,,0,0,0,,That's it for today, though.
Dialogue: 0,0:52:26.32,0:52:27.36,中文,,0,0,0,,今天就到这儿吧
Dialogue: 0,0:52:27.36,0:52:28.24,英文,,0,0,0,,So come back next time.
Dialogue: 0,0:52:27.36,0:52:28.24,中文,,0,0,0,,下次再来吧
Dialogue: 0,0:52:28.24,0:52:29.24,英文,,0,0,0,,We'll do graphs.
Dialogue: 0,0:52:28.24,0:52:29.24,中文,,0,0,0,,我们会做图表的
Dialogue: 0,0:52:29.24,0:52:30.22,英文,,0,0,0,,OK.
Dialogue: 0,0:52:29.24,0:52:30.22,中文,,0,0,0,,好的
Dialogue: 0,0:52:30.22,0:52:32.41,英文,,0,0,0,,Goodbye.
Dialogue: 0,0:52:30.22,0:52:32.41,中文,,0,0,0,,再见
Dialogue: 0,0:52:32.41,0:52:33.34,英文,,0,0,0,,Oh, I get applause today.
Dialogue: 0,0:52:32.41,0:52:33.34,中文,,0,0,0,,哦 今天我得到掌声了
Dialogue: 0,0:52:33.34,0:52:36.25,英文,,0,0,0,,I don't always get applause.
Dialogue: 0,0:52:33.34,0:52:36.25,中文,,0,0,0,,我并不总是得到掌声
Dialogue: 0,0:52:36.25,0:52:37.43,英文,,0,0,0,,OK, bye.
Dialogue: 0,0:52:36.25,0:52:37.43,中文,,0,0,0,,好的 再见
