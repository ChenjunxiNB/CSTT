[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 3
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1152
PlayResY: 720

[Aegisub Project Garbage]
Export Encoding: Unicode (UTF-8)
Audio File: D:/python_code/video_tool/video_tool/result/[61B SP24] Lecture 17 - B-Trees (2-3, 2-3-4 Trees).mp4
Video File: D:/python_code/video_tool/video_tool/result/[61B SP24] Lecture 17 - B-Trees (2-3, 2-3-4 Trees).mp4
Video AR Mode: 4
Video AR Value: 1.600000
Video Zoom Percent: 0.750000
Scroll Position: 1130
Active Line: 1108
Video Position: 11471

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,13,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,90,100,0,0,1,1.33333,1.33333,2,6,6,7,1
Style: 英文,Arial,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,90,100,0,0,1,1.33333,1.33333,2,1,1,5,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.33333,1.33333,2,2,2,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:00:07.58,0:00:08.94,英文,,0,0,0,,OK.
Dialogue: 0,0:00:08.94,0:00:09.14,英文,,0,0,0,,Hi.
Dialogue: 0,0:00:08.94,0:00:09.14,中文,,0,0,0,,嗨
Dialogue: 0,0:00:09.14,0:00:10.28,英文,,0,0,0,,Welcome back.
Dialogue: 0,0:00:09.14,0:00:10.28,中文,,0,0,0,,欢迎回来
Dialogue: 0,0:00:10.28,0:00:15.48,英文,,0,0,0,,So I'm going to keep talking about binary search trees.
Dialogue: 0,0:00:10.28,0:00:15.48,中文,,0,0,0,,我要继续讲解二叉搜索树
Dialogue: 0,0:00:15.48,0:00:17.59,英文,,0,0,0,,And we'll have fun.
Dialogue: 0,0:00:15.48,0:00:17.59,中文,,0,0,0,,我们会玩得很开心的
Dialogue: 0,0:00:17.59,0:00:18.95,英文,,0,0,0,,OK.
Dialogue: 0,0:00:18.95,0:00:21.25,英文,,0,0,0,,So last time, everything was good.
Dialogue: 0,0:00:18.95,0:00:21.25,中文,,0,0,0,,上次 一切都很顺利
Dialogue: 0,0:00:21.25,0:00:25.41,英文,,0,0,0,,Last time, I sped you through the definitions of trees.
Dialogue: 0,0:00:21.25,0:00:25.41,中文,,0,0,0,,上次 我迅速为你讲解了树的定义
Dialogue: 0,0:00:25.41,0:00:29.24,英文,,0,0,0,,I sped you through the definition of rooted trees, where you pick a node, make it the root.
Dialogue: 0,0:00:25.41,0:00:29.24,中文,,0,0,0,,我迅速为你讲解了有根树的定义 你选择一个节点 将其作为根节点
Dialogue: 0,0:00:29.24,0:00:34.43,英文,,0,0,0,,And we talk about rooted binary trees, where every node has zero, one, or two children.
Dialogue: 0,0:00:29.24,0:00:34.43,中文,,0,0,0,,然后我们讨论了有根二叉树 其中每个节点都有零个、一个或两个子节点
Dialogue: 0,0:00:34.43,0:00:45.47,英文,,0,0,0,,Okay, and we talked about the binary search tree property, and that was, if you have a node, everybody to its left is less than that node, everybody to the right is greater than that node's value.
Dialogue: 0,0:00:34.43,0:00:45.47,中文,,0,0,0,,我们谈论了二叉搜索树的性质 即如果有一个节点 它左边的所有节点都小于该节点 右边的所有节点都大于该节点的值
Dialogue: 0,0:00:45.47,0:00:47.24,英文,,0,0,0,,Okay.
Dialogue: 0,0:00:47.24,0:00:50.28,英文,,0,0,0,,Then we talked about, how do you find something in a binary search tree?
Dialogue: 0,0:00:47.24,0:00:50.28,中文,,0,0,0,,然后我们讨论了如何在二叉搜索树中查找内容
Dialogue: 0,0:00:50.28,0:00:54.02,英文,,0,0,0,,And we said, this algorithm was so easy, it takes one minute to explain.
Dialogue: 0,0:00:50.28,0:00:54.02,中文,,0,0,0,,我们说过 这个算法非常简单 只需一分钟就能解释清楚
Dialogue: 0,0:00:54.02,0:00:55.18,英文,,0,0,0,,You start at the root.
Dialogue: 0,0:00:54.02,0:00:55.18,中文,,0,0,0,,你从根开始
Dialogue: 0,0:00:55.18,0:00:58.34,英文,,0,0,0,,And if the search key is less than the item, you go left.
Dialogue: 0,0:00:55.18,0:00:58.34,中文,,0,0,0,,如果搜索键小于项目 则向左移动
Dialogue: 0,0:00:58.34,0:01:02.02,英文,,0,0,0,,If the search tree is greater, then you recursively search the right thing.
Dialogue: 0,0:00:58.34,0:01:02.02,中文,,0,0,0,,如果搜索树更大 则递归搜索右边的东西
Dialogue: 0,0:01:02.02,0:01:04.88,英文,,0,0,0,,This is what it might look like in code.
Dialogue: 0,0:01:02.02,0:01:04.88,中文,,0,0,0,,这可能是代码中的样子
Dialogue: 0,0:01:04.88,0:01:07.72,英文,,0,0,0,,So maybe when you're working on the lab, you can come back and stare at this.
Dialogue: 0,0:01:04.88,0:01:07.72,中文,,0,0,0,,也许当你在实验室工作时 你可以回来看看这个
Dialogue: 0,0:01:07.72,0:01:09.80,英文,,0,0,0,,I'm not going to talk through all of it.
Dialogue: 0,0:01:07.72,0:01:09.80,中文,,0,0,0,,我不会详细讲解所有内容
Dialogue: 0,0:01:09.80,0:01:13.72,英文,,0,0,0,,But basically, the idea is there's two base cases.
Dialogue: 0,0:01:09.80,0:01:13.72,中文,,0,0,0,,但基本上 思路是有两个基本情况
Dialogue: 0,0:01:13.72,0:01:17.11,英文,,0,0,0,,One base case is if the thing you're looking for is the current node.
Dialogue: 0,0:01:13.72,0:01:17.11,中文,,0,0,0,,一个基本情况是 如果你要找的东西是当前节点
Dialogue: 0,0:01:17.11,0:01:19.77,英文,,0,0,0,,So maybe I'm here, and I'm looking for dog.
Dialogue: 0,0:01:17.11,0:01:19.77,中文,,0,0,0,,也许我在这里 我在找dog
Dialogue: 0,0:01:19.77,0:01:21.01,英文,,0,0,0,,Dog is dog.
Dialogue: 0,0:01:19.77,0:01:21.01,中文,,0,0,0,,狗就是狗
Dialogue: 0,0:01:21.01,0:01:21.95,英文,,0,0,0,,It's right there.
Dialogue: 0,0:01:21.01,0:01:21.95,中文,,0,0,0,,就在那里
Dialogue: 0,0:01:21.95,0:01:25.47,英文,,0,0,0,,And in that case, I would return the current node and say, I found it.
Dialogue: 0,0:01:21.95,0:01:25.47,中文,,0,0,0,,在这种情况下 我会返回当前节点并说 我找到了
Dialogue: 0,0:01:25.47,0:01:30.99,英文,,0,0,0,,Otherwise, if I don't find it, then I'd have to recursively search the left subtree or the right subtree.
Dialogue: 0,0:01:25.47,0:01:30.99,中文,,0,0,0,,否则 如果我找不到 那么我就必须递归搜索左子树或右子树
Dialogue: 0,0:01:30.99,0:01:35.47,英文,,0,0,0,,So for example, if I'm looking for elf, then I'd start at dog, and I'd say, dog, are you elf?
Dialogue: 0,0:01:30.99,0:01:35.47,中文,,0,0,0,,例如 如果我在找elf 那么我会从狗开始 然后说 狗 你是elf吗
Dialogue: 0,0:01:35.47,0:01:37.25,英文,,0,0,0,,And dog would say, ruff ruff, no.
Dialogue: 0,0:01:35.47,0:01:37.25,中文,,0,0,0,,狗会说 汪汪 不
Dialogue: 0,0:01:37.25,0:01:39.83,英文,,0,0,0,,And you'd go to the right, flat.
Dialogue: 0,0:01:37.25,0:01:39.83,中文,,0,0,0,,然后你会往右走 flat
Dialogue: 0,0:01:39.83,0:01:44.07,英文,,0,0,0,,Well, flat is not elf, but elf is less than flat, so I should turn left.
Dialogue: 0,0:01:39.83,0:01:44.07,中文,,0,0,0,,flat不是elf 但elf小于flat 所以我应该往elf
Dialogue: 0,0:01:44.07,0:01:45.94,英文,,0,0,0,,And right here, elf is equal to elf.
Dialogue: 0,0:01:44.07,0:01:45.94,中文,,0,0,0,,就在这里 elf等于elf
Dialogue: 0,0:01:45.94,0:01:46.82,英文,,0,0,0,,I found it.
Dialogue: 0,0:01:45.94,0:01:46.82,中文,,0,0,0,,我找到了
Dialogue: 0,0:01:46.82,0:01:48.30,英文,,0,0,0,,I return elf.
Dialogue: 0,0:01:46.82,0:01:48.30,中文,,0,0,0,,我返回elf
Dialogue: 0,0:01:48.30,0:01:52.32,英文,,0,0,0,,The other base case is if you fall off the tree and you don't find the item.
Dialogue: 0,0:01:48.30,0:01:52.32,中文,,0,0,0,,另一个基本情况是你从树上摔下来 然后找不到物品
Dialogue: 0,0:01:52.32,0:01:54.30,英文,,0,0,0,,So suppose I was looking for zebra.
Dialogue: 0,0:01:52.32,0:01:54.30,中文,,0,0,0,,假设我在找zebra
Dialogue: 0,0:01:54.30,0:01:55.41,英文,,0,0,0,,Well, I'd start with dog.
Dialogue: 0,0:01:54.30,0:01:55.41,中文,,0,0,0,,那么 我会从狗开始
Dialogue: 0,0:01:55.41,0:01:56.57,英文,,0,0,0,,Are you zebra?
Dialogue: 0,0:01:55.41,0:01:56.57,中文,,0,0,0,,你是zebra吗
Dialogue: 0,0:01:56.57,0:01:57.39,英文,,0,0,0,,No.
Dialogue: 0,0:01:56.57,0:01:57.39,中文,,0,0,0,,不是
Dialogue: 0,0:01:57.39,0:02:00.11,英文,,0,0,0,,So I go to the right because zebra is greater than dog.
Dialogue: 0,0:01:57.39,0:02:00.11,中文,,0,0,0,,我向右走 因为zebra大于狗
Dialogue: 0,0:02:00.11,0:02:01.63,英文,,0,0,0,,Flat, are you zebra?
Dialogue: 0,0:02:00.11,0:02:01.63,中文,,0,0,0,,flat 你是zebra吗
Dialogue: 0,0:02:01.63,0:02:02.15,英文,,0,0,0,,No.
Dialogue: 0,0:02:01.63,0:02:02.15,中文,,0,0,0,,不是
Dialogue: 0,0:02:02.15,0:02:05.17,英文,,0,0,0,,And zebra is greater, so I recursively search the right.
Dialogue: 0,0:02:02.15,0:02:05.17,中文,,0,0,0,,zebra更大 所以我递归地搜索右边
Dialogue: 0,0:02:05.17,0:02:06.83,英文,,0,0,0,,Glut, are you zebra?
Dialogue: 0,0:02:05.17,0:02:06.83,中文,,0,0,0,,glut 你是zebra吗
Dialogue: 0,0:02:06.83,0:02:07.47,英文,,0,0,0,,No.
Dialogue: 0,0:02:06.83,0:02:07.47,中文,,0,0,0,,不是
Dialogue: 0,0:02:07.47,0:02:08.51,英文,,0,0,0,,I search the right.
Dialogue: 0,0:02:07.47,0:02:08.51,中文,,0,0,0,,我搜索右边
Dialogue: 0,0:02:08.51,0:02:10.89,英文,,0,0,0,,And at this point, the thing I'm searching is null.
Dialogue: 0,0:02:08.51,0:02:10.89,中文,,0,0,0,,到这一点 我正在搜索的东西是空的
Dialogue: 0,0:02:10.89,0:02:12.07,英文,,0,0,0,,I fell off the tree.
Dialogue: 0,0:02:10.89,0:02:12.07,中文,,0,0,0,,我从树上掉了下来
Dialogue: 0,0:02:12.07,0:02:17.93,英文,,0,0,0,,So I return null, and I indicate I did not find zebra in my set.
Dialogue: 0,0:02:12.07,0:02:17.93,中文,,0,0,0,,我返回空 并且我表明我在我的集合中没有找到zebra
Dialogue: 0,0:02:17.93,0:02:28.06,英文,,0,0,0,,So that's how you might write a contains method to check whether or not the binary search tree contains something or to find something in your binary search tree.
Dialogue: 0,0:02:17.93,0:02:28.06,中文,,0,0,0,,这就是你可能编写包含方法来检查二叉搜索树是否包含某个元素或在二叉搜索树中查找某个元素的方式
Dialogue: 0,0:02:28.06,0:02:34.47,英文,,0,0,0,,So now a question for you, which is, how fast do you think this operation is?
Dialogue: 0,0:02:28.06,0:02:34.47,中文,,0,0,0,,现在有一个问题 就是你认为这个操作有多快呢
Dialogue: 0,0:02:34.47,0:02:42.75,英文,,0,0,0,,So if we have a binary search tree that is bushy, and I haven't really defined bushy yet, but think of it as a tree that's super jam-packed with items.
Dialogue: 0,0:02:34.47,0:02:42.75,中文,,0,0,0,,如果我们有一个树状的二叉搜索树 我还没有真正定义“树状”是什么 但可以将其想象成一棵装满项目的树
Dialogue: 0,0:02:42.75,0:02:44.23,英文,,0,0,0,,Everybody has two children.
Dialogue: 0,0:02:42.75,0:02:44.23,中文,,0,0,0,,每个人都有两个子节点
Dialogue: 0,0:02:44.23,0:02:46.57,英文,,0,0,0,,It looks nice and beautiful like this.
Dialogue: 0,0:02:44.23,0:02:46.57,中文,,0,0,0,,它看起来像这样 既漂亮又美丽
Dialogue: 0,0:02:46.57,0:02:54.75,英文,,0,0,0,,If I have a bushy binary search tree, like the one on the slide, what is the runtime to search for an item in this binary search tree?
Dialogue: 0,0:02:46.57,0:02:54.75,中文,,0,0,0,,如果我有一棵树状的二叉搜索树 就像幻灯片上的那棵树 那么在这棵二叉搜索树中搜索一个元素的运行时间是多少
Dialogue: 0,0:02:54.75,0:02:56.11,英文,,0,0,0,,So you can think about it.
Dialogue: 0,0:02:54.75,0:02:56.11,中文,,0,0,0,,你可以考虑一下
Dialogue: 0,0:02:56.11,0:03:00.26,英文,,0,0,0,,Because I want to get through everything, I'll kind of spoil it a little bit.
Dialogue: 0,0:02:56.11,0:03:00.26,中文,,0,0,0,,因为我想搞清楚所有的事情 我会有点剧透一下
Dialogue: 0,0:03:00.26,0:03:01.32,英文,,0,0,0,,So how do you find something?
Dialogue: 0,0:03:00.26,0:03:01.32,中文,,0,0,0,,那么你要怎么找呢
Dialogue: 0,0:03:01.32,0:03:03.04,英文,,0,0,0,,Well, you've got to start at the root.
Dialogue: 0,0:03:01.32,0:03:03.04,中文,,0,0,0,,你得从根开始
Dialogue: 0,0:03:03.04,0:03:05.62,英文,,0,0,0,,And then depending on the item, you turn right or you turn left.
Dialogue: 0,0:03:03.04,0:03:05.62,中文,,0,0,0,,然后根据物品 你向右转或向左转
Dialogue: 0,0:03:05.62,0:03:07.90,英文,,0,0,0,,It's trying to predict which one you like.
Dialogue: 0,0:03:05.62,0:03:07.90,中文,,0,0,0,,这是在尝试预测你喜欢哪一个
Dialogue: 0,0:03:07.90,0:03:12.11,英文,,0,0,0,,So I'm going to have to turn one way and then go another layer, go another layer.
Dialogue: 0,0:03:07.90,0:03:12.11,中文,,0,0,0,,我得朝某个方向转 然后再进入另一层 再进入另一层
Dialogue: 0,0:03:12.11,0:03:16.13,英文,,0,0,0,,So it seems like at every layer of this tree, I have to search.
Dialogue: 0,0:03:12.11,0:03:16.13,中文,,0,0,0,,看起来在这棵树的每一层 我都得进行搜索
Dialogue: 0,0:03:16.13,0:03:17.73,英文,,0,0,0,,or look at one item.
Dialogue: 0,0:03:16.13,0:03:17.73,中文,,0,0,0,,或者看一个项目
Dialogue: 0,0:03:17.73,0:03:26.34,英文,,0,0,0,,So in this case, since there are four layers, I'd have to search through four items before finding it or falling off the tree, in the worst case.
Dialogue: 0,0:03:17.73,0:03:26.34,中文,,0,0,0,,在这种情况下 由于有四层 我必须在找到它或者在最坏的情况下从树上摔下来之前搜索四个项目
Dialogue: 0,0:03:26.34,0:03:28.16,英文,,0,0,0,,So...
Dialogue: 0,0:03:26.34,0:03:28.16,中文,,0,0,0,,那么...
Dialogue: 0,0:03:28.16,0:03:32.72,英文,,0,0,0,,What that tells me is that if this tree gets taller, it's going to be slower to find things.
Dialogue: 0,0:03:28.16,0:03:32.72,中文,,0,0,0,,这告诉我 如果这棵树变得更高 找东西会变得更慢
Dialogue: 0,0:03:32.72,0:03:34.41,英文,,0,0,0,,So here the tree is four layers.
Dialogue: 0,0:03:32.72,0:03:34.41,中文,,0,0,0,,这里的树有四层
Dialogue: 0,0:03:34.41,0:03:38.33,英文,,0,0,0,,If this tree were 10 layers, then it would take longer to find something.
Dialogue: 0,0:03:34.41,0:03:38.33,中文,,0,0,0,,如果这棵树有10层 那么找到东西会花更长时间
Dialogue: 0,0:03:38.33,0:03:41.57,英文,,0,0,0,,And if this tree were two layers, it'd be faster to find something.
Dialogue: 0,0:03:38.33,0:03:41.57,中文,,0,0,0,,而如果这棵树有两层 找到东西会更快
Dialogue: 0,0:03:41.57,0:03:46.57,英文,,0,0,0,,So somehow, the time it takes to find something is correlated with tree height.
Dialogue: 0,0:03:41.57,0:03:46.57,中文,,0,0,0,,在某种程度上 找到某物所需的时间与树的高度有关
Dialogue: 0,0:03:46.57,0:03:50.77,英文,,0,0,0,,Tall trees are slower to find things, and short trees are faster.
Dialogue: 0,0:03:46.57,0:03:50.77,中文,,0,0,0,,高树找东西慢 矮树找东西快
Dialogue: 0,0:03:50.77,0:03:57.88,英文,,0,0,0,,So what that tells me is when I'm looking for the algorithmic beta notation runtime, I can think about how tall the tree is.
Dialogue: 0,0:03:50.77,0:03:57.88,中文,,0,0,0,,这告诉我 当我在寻找算法贝塔符号运行时间时 我可以考虑树有多高
Dialogue: 0,0:03:57.88,0:04:03.70,英文,,0,0,0,,And specifically, I can think of how much bigger does this tree have to get before it gets taller.
Dialogue: 0,0:03:57.88,0:04:03.70,中文,,0,0,0,,具体地说 我可以思考这棵树必须长多大才能变得更高
Dialogue: 0,0:04:03.70,0:04:10.89,英文,,0,0,0,,So if my tree is bushy and I want to make it taller, I would have to add an extra layer of stuff all the way at the bottom.
Dialogue: 0,0:04:03.70,0:04:10.89,中文,,0,0,0,,如果我的树很茂密 我想让它长高 我就得在底部添加一层额外的东西
Dialogue: 0,0:04:10.89,0:04:20.11,英文,,0,0,0,,And it turns out, I encourage you to go home and try this if you're not convinced, turns out if I add an extra layer of stuff, so I give all of these leaf nodes two more children,
Dialogue: 0,0:04:10.89,0:04:20.11,中文,,0,0,0,,结果是 如果我添加一层额外的东西 所以我给所有这些叶节点再增加两个子节点
Dialogue: 0,0:04:20.11,0:04:24.32,英文,,0,0,0,,Then the size of the tree, the number of nodes, will double.
Dialogue: 0,0:04:20.11,0:04:24.32,中文,,0,0,0,,那么树的大小 节点的数量 将会翻倍
Dialogue: 0,0:04:24.32,0:04:26.21,英文,,0,0,0,,And then that's going to make the tree one taller.
Dialogue: 0,0:04:24.32,0:04:26.21,中文,,0,0,0,,然后这将使得树高度增加一层
Dialogue: 0,0:04:26.21,0:04:30.52,英文,,0,0,0,,It's going to make the runtime of finding something slower by one.
Dialogue: 0,0:04:26.21,0:04:30.52,中文,,0,0,0,,这会使得查找某样东西的运行时间慢一点
Dialogue: 0,0:04:30.52,0:04:31.58,英文,,0,0,0,,So I'll say it one more time.
Dialogue: 0,0:04:30.52,0:04:31.58,中文,,0,0,0,,我会再说一遍
Dialogue: 0,0:04:31.58,0:04:37.57,英文,,0,0,0,,If I make this tree taller, I have to give two children to each of these nodes.
Dialogue: 0,0:04:31.58,0:04:37.57,中文,,0,0,0,,如果我让这棵树更高 我必须给这些节点中的每一个两个子节点
Dialogue: 0,0:04:37.57,0:04:40.85,英文,,0,0,0,,Then the size of the tree, the number of items, will double.
Dialogue: 0,0:04:37.57,0:04:40.85,中文,,0,0,0,,那么树的大小 物品的数量 将会翻倍
Dialogue: 0,0:04:40.85,0:04:43.19,英文,,0,0,0,,And then the time it takes to find something will increase by 1.
Dialogue: 0,0:04:40.85,0:04:43.19,中文,,0,0,0,,然后找到某样东西所需的时间将增加1
Dialogue: 0,0:04:43.19,0:04:55.38,英文,,0,0,0,,So you can start going back and thinking through all the asymptotics, which asymptotic family has the characteristic that if I double the size of the number of items, the runtime gets slower by 1.
Dialogue: 0,0:04:43.19,0:04:55.38,中文,,0,0,0,,你可以开始回顾并思考所有的渐近记号 哪个渐近记号有这样的特性：如果我将物品数量翻倍 运行时间就会慢1
Dialogue: 0,0:04:55.38,0:04:57.96,英文,,0,0,0,,OK, I'll do audience participation.
Dialogue: 0,0:04:55.38,0:04:57.96,中文,,0,0,0,,我会让观众参与
Dialogue: 0,0:04:57.96,0:04:59.92,英文,,0,0,0,,Who says log n?
Dialogue: 0,0:04:57.96,0:04:59.92,中文,,0,0,0,,谁说log n了
Dialogue: 0,0:04:59.92,0:05:01.53,英文,,0,0,0,,OK, that's a lot of people, so I'll stop right there.
Dialogue: 0,0:04:59.92,0:05:01.53,中文,,0,0,0,,那么人数很多 我就到这儿吧
Dialogue: 0,0:05:01.53,0:05:09.30,英文,,0,0,0,,It is log n. OK, so it turns out the characteristic of binary search trees, if they are bushy, is log n.
Dialogue: 0,0:05:01.53,0:05:09.30,中文,,0,0,0,,这就是log n 事实证明 如果二叉搜索树是茂密的话 它们的特性就是log n
Dialogue: 0,0:05:09.30,0:05:17.30,英文,,0,0,0,,Every time I double the size of the tree, the height grows by 1, and the search time gets slower by 1 unit of time or so.
Dialogue: 0,0:05:09.30,0:05:17.30,中文,,0,0,0,,每次我将树的大小翻倍 高度就增加1 搜索时间就会慢大约1个时间单位
Dialogue: 0,0:05:17.30,0:05:19.74,英文,,0,0,0,,And that is logarithmic behavior.
Dialogue: 0,0:05:17.30,0:05:19.74,中文,,0,0,0,,这就是对数行为
Dialogue: 0,0:05:19.74,0:05:21.50,英文,,0,0,0,,Turns out, that's really good.
Dialogue: 0,0:05:19.74,0:05:21.50,中文,,0,0,0,,结果证明 这真的很好
Dialogue: 0,0:05:21.50,0:05:29.22,英文,,0,0,0,,So you can find something in this absurd, like, atoms-in-the-universe number of things in one second, which is pretty good.
Dialogue: 0,0:05:21.50,0:05:29.22,中文,,0,0,0,,你可以在这一个荒谬的、像宇宙中的原子数量一样的东西中 在一秒钟内找到某样东西 这相当不错
Dialogue: 0,0:05:29.22,0:05:34.21,英文,,0,0,0,,So binary search trees, they're wonderful if they're bushy and they look like this.
Dialogue: 0,0:05:29.22,0:05:34.21,中文,,0,0,0,,二叉搜索树 如果它们浓密且看起来像这样 那就很棒
Dialogue: 0,0:05:34.21,0:05:43.01,英文,,0,0,0,,OK, questions, thoughts, opinions, question?
Dialogue: 0,0:05:34.21,0:05:43.01,中文,,0,0,0,,问题、想法、意见 有问题吗
Dialogue: 0,0:05:43.01,0:05:44.80,英文,,0,0,0,,Oh, you want me to hold it even closer to my face?
Dialogue: 0,0:05:43.01,0:05:44.80,中文,,0,0,0,,哦 你想让我把它靠得更近一些吗
Dialogue: 0,0:05:44.80,0:05:45.92,英文,,0,0,0,,OK.
Dialogue: 0,0:05:45.92,0:05:46.88,英文,,0,0,0,,It's like ASMR.
Dialogue: 0,0:05:45.92,0:05:46.88,中文,,0,0,0,,就像 ASMR 一样
Dialogue: 0,0:05:46.88,0:05:47.24,英文,,0,0,0,,OK.
Dialogue: 0,0:05:47.24,0:05:50.42,英文,,0,0,0,,So we can also try to make it louder over there.
Dialogue: 0,0:05:47.24,0:05:50.42,中文,,0,0,0,,我们也可以尝试让它在那边更响亮一些
Dialogue: 0,0:05:50.42,0:05:51.44,英文,,0,0,0,,OK.
Dialogue: 0,0:05:51.44,0:05:51.98,英文,,0,0,0,,Thank you.
Dialogue: 0,0:05:51.44,0:05:51.98,中文,,0,0,0,,谢谢
Dialogue: 0,0:05:51.98,0:05:55.36,英文,,0,0,0,,Any other questions or requests to hold the mic even closer?
Dialogue: 0,0:05:51.98,0:05:55.36,中文,,0,0,0,,还有其他问题或请求让话筒再靠近一点吗
Dialogue: 0,0:05:55.36,0:05:56.55,英文,,0,0,0,,OK.
Dialogue: 0,0:05:56.55,0:06:00.65,英文,,0,0,0,,So we learned how to find something in a binary search tree.
Dialogue: 0,0:05:56.55,0:06:00.65,中文,,0,0,0,,我们学会了如何在二叉搜索树中找到某些东西
Dialogue: 0,0:06:00.65,0:06:02.85,英文,,0,0,0,,Now let's see how to insert something.
Dialogue: 0,0:06:00.65,0:06:02.85,中文,,0,0,0,,现在让我们看看如何插入一些东西
Dialogue: 0,0:06:02.85,0:06:06.31,英文,,0,0,0,,So here's the conceptual picture, and then we'll write it in code.
Dialogue: 0,0:06:02.85,0:06:06.31,中文,,0,0,0,,这是概念图 然后我们会用代码来写
Dialogue: 0,0:06:06.31,0:06:09.47,英文,,0,0,0,,So how do you search for something, or how do you insert something?
Dialogue: 0,0:06:06.31,0:06:09.47,中文,,0,0,0,,那么你是如何搜索某物的 或者如何插入某物的
Dialogue: 0,0:06:09.47,0:06:11.39,英文,,0,0,0,,Well, first, I have to find where it goes.
Dialogue: 0,0:06:09.47,0:06:11.39,中文,,0,0,0,,首先 我得找到它应该放在哪里
Dialogue: 0,0:06:11.39,0:06:17.27,英文,,0,0,0,,So if I want to insert eyes, I have to start a dog all over again and say, dog, are you eyes?
Dialogue: 0,0:06:11.39,0:06:17.27,中文,,0,0,0,,如果我想插入eyes 我得重新开始一个dog 并说 dog 你是eyes吗
Dialogue: 0,0:06:17.27,0:06:17.95,英文,,0,0,0,,No.
Dialogue: 0,0:06:17.27,0:06:17.95,中文,,0,0,0,,不
Dialogue: 0,0:06:17.95,0:06:19.67,英文,,0,0,0,,Eyes is greater, so I go to the right.
Dialogue: 0,0:06:17.95,0:06:19.67,中文,,0,0,0,,eyes更大 所以我向右走
Dialogue: 0,0:06:19.67,0:06:21.43,英文,,0,0,0,,Flat, are you eyes?
Dialogue: 0,0:06:19.67,0:06:21.43,中文,,0,0,0,,flat 你是eyes吗
Dialogue: 0,0:06:21.43,0:06:21.81,英文,,0,0,0,,No.
Dialogue: 0,0:06:21.43,0:06:21.81,中文,,0,0,0,,不
Dialogue: 0,0:06:21.81,0:06:25.40,英文,,0,0,0,,So I go to the left, because eyes is less than flat.
Dialogue: 0,0:06:21.81,0:06:25.40,中文,,0,0,0,,我向左走 因为eyes少于flat
Dialogue: 0,0:06:25.40,0:06:27.12,英文,,0,0,0,,Elf, are you eyes?
Dialogue: 0,0:06:25.40,0:06:27.12,中文,,0,0,0,,elf 你是eyes吗
Dialogue: 0,0:06:27.12,0:06:27.72,英文,,0,0,0,,No.
Dialogue: 0,0:06:27.12,0:06:27.72,中文,,0,0,0,,不是
Dialogue: 0,0:06:27.72,0:06:28.54,英文,,0,0,0,,And where does eyes go?
Dialogue: 0,0:06:27.72,0:06:28.54,中文,,0,0,0,,那么eyes去了哪里
Dialogue: 0,0:06:28.54,0:06:30.46,英文,,0,0,0,,Well, eyes is greater than elf.
Dialogue: 0,0:06:28.54,0:06:30.46,中文,,0,0,0,,eyes比elf大
Dialogue: 0,0:06:30.46,0:06:34.72,英文,,0,0,0,,And at this point, I've fallen off the tree, which means I did not find eyes.
Dialogue: 0,0:06:30.46,0:06:34.72,中文,,0,0,0,,在这一点上 我已经从树上摔下来了 这意味着我没有找到eyes
Dialogue: 0,0:06:34.72,0:06:36.44,英文,,0,0,0,,Eyes is not in my tree.
Dialogue: 0,0:06:34.72,0:06:36.44,中文,,0,0,0,,eyes不在我的树上
Dialogue: 0,0:06:36.44,0:06:38.00,英文,,0,0,0,,I want it to be in my tree.
Dialogue: 0,0:06:36.44,0:06:38.00,中文,,0,0,0,,我想要它在我的树上
Dialogue: 0,0:06:38.00,0:06:41.12,英文,,0,0,0,,So I'm going to add it in the appropriate place.
Dialogue: 0,0:06:38.00,0:06:41.12,中文,,0,0,0,,我会把它添加到合适的位置
Dialogue: 0,0:06:41.12,0:06:42.62,英文,,0,0,0,,And how did I know the appropriate place?
Dialogue: 0,0:06:41.12,0:06:42.62,中文,,0,0,0,,我怎么知道合适的地方呢
Dialogue: 0,0:06:42.62,0:06:44.18,英文,,0,0,0,,Because I searched for eyes.
Dialogue: 0,0:06:42.62,0:06:44.18,中文,,0,0,0,,因为我搜索了eyes
Dialogue: 0,0:06:44.18,0:06:45.34,英文,,0,0,0,,I fell off the tree.
Dialogue: 0,0:06:44.18,0:06:45.34,中文,,0,0,0,,我从树上摔下来了
Dialogue: 0,0:06:45.34,0:06:47.16,英文,,0,0,0,,This is the rightful place for eyes.
Dialogue: 0,0:06:45.34,0:06:47.16,中文,,0,0,0,,这是eyes的合适位置
Dialogue: 0,0:06:47.16,0:06:49.50,英文,,0,0,0,,So I'll stick it right there.
Dialogue: 0,0:06:47.16,0:06:49.50,中文,,0,0,0,,我会把它粘在那里
Dialogue: 0,0:06:49.50,0:06:52.58,英文,,0,0,0,,And if I do find the thing, so let's say I want to insert bag.
Dialogue: 0,0:06:49.50,0:06:52.58,中文,,0,0,0,,如果我找到这个东西 那么假设我想插入bag
Dialogue: 0,0:06:52.58,0:06:53.84,英文,,0,0,0,,Well, I'll start at dog.
Dialogue: 0,0:06:52.58,0:06:53.84,中文,,0,0,0,,好吧 我会从dog开始
Dialogue: 0,0:06:53.84,0:06:54.64,英文,,0,0,0,,Bag.
Dialogue: 0,0:06:53.84,0:06:54.64,中文,,0,0,0,,bag
Dialogue: 0,0:06:54.64,0:06:55.58,英文,,0,0,0,,Are you dog?
Dialogue: 0,0:06:54.64,0:06:55.58,中文,,0,0,0,,你是dog吗
Dialogue: 0,0:06:55.58,0:06:56.24,英文,,0,0,0,,No.
Dialogue: 0,0:06:55.58,0:06:56.24,中文,,0,0,0,,不是
Dialogue: 0,0:06:56.24,0:06:58.20,英文,,0,0,0,,But bag is less than dog, so I'll turn left.
Dialogue: 0,0:06:56.24,0:06:58.20,中文,,0,0,0,,但bag比dog小 所以我会左转
Dialogue: 0,0:06:58.20,0:06:58.78,英文,,0,0,0,,Bag.
Dialogue: 0,0:06:58.20,0:06:58.78,中文,,0,0,0,,bag
Dialogue: 0,0:06:58.78,0:06:59.68,英文,,0,0,0,,Are you bag?
Dialogue: 0,0:06:58.78,0:06:59.68,中文,,0,0,0,,你有bag吗
Dialogue: 0,0:06:59.68,0:07:00.40,英文,,0,0,0,,Yes.
Dialogue: 0,0:06:59.68,0:07:00.40,中文,,0,0,0,,有
Dialogue: 0,0:07:00.40,0:07:03.43,英文,,0,0,0,,Bag is already in my set, so I don't have to add it.
Dialogue: 0,0:07:00.40,0:07:03.43,中文,,0,0,0,,bag已经在我的集合中了 所以我不需要添加它
Dialogue: 0,0:07:03.43,0:07:04.83,英文,,0,0,0,,I can do nothing.
Dialogue: 0,0:07:03.43,0:07:04.83,中文,,0,0,0,,我什么都做不了
Dialogue: 0,0:07:04.83,0:07:07.52,英文,,0,0,0,,Because remember, the whole point of building this is to build a set.
Dialogue: 0,0:07:04.83,0:07:07.52,中文,,0,0,0,,因为记住 构建这个的整点就是要构建一个集合
Dialogue: 0,0:07:07.52,0:07:12.94,英文,,0,0,0,,So if bag's already in my set and I want to add or insert bag, I don't have to do anything.
Dialogue: 0,0:07:07.52,0:07:12.94,中文,,0,0,0,,如果bag已经在我的集合中 而我想添加或插入bag 我什么都不需要做
Dialogue: 0,0:07:12.94,0:07:14.10,英文,,0,0,0,,It's already there.
Dialogue: 0,0:07:12.94,0:07:14.10,中文,,0,0,0,,它已经在那里
Dialogue: 0,0:07:14.10,0:07:14.98,英文,,0,0,0,,So I do the search.
Dialogue: 0,0:07:14.10,0:07:14.98,中文,,0,0,0,,我进行搜索
Dialogue: 0,0:07:14.98,0:07:17.66,英文,,0,0,0,,If I fall off the tree, I add the new node.
Dialogue: 0,0:07:14.98,0:07:17.66,中文,,0,0,0,,如果我从树上掉下来 我添加新节点
Dialogue: 0,0:07:17.66,0:07:21.91,英文,,0,0,0,,If I don't fall off the tree and I find the item, then it's already there, nothing to do.
Dialogue: 0,0:07:17.66,0:07:21.91,中文,,0,0,0,,如果我没有从树上掉下来并且我找到了项目 那么它已经在那里 无需做任何事情
Dialogue: 0,0:07:21.91,0:07:24.79,英文,,0,0,0,,So here's the code that you might write
Dialogue: 0,0:07:21.91,0:07:24.79,中文,,0,0,0,,这是你可能编写的代码
Dialogue: 0,0:07:24.79,0:07:26.69,英文,,0,0,0,,to represent the insert.
Dialogue: 0,0:07:24.79,0:07:26.69,中文,,0,0,0,,来表示插入
Dialogue: 0,0:07:26.69,0:07:30.99,英文,,0,0,0,,I will say, this code, when you look at it the first time, it is a little bit alien.
Dialogue: 0,0:07:26.69,0:07:30.99,中文,,0,0,0,,我要说 这段代码 当你第一次看到它时 会有点陌生
Dialogue: 0,0:07:30.99,0:07:34.58,英文,,0,0,0,,It's very weird code if you haven't programmed like this before.
Dialogue: 0,0:07:30.99,0:07:34.58,中文,,0,0,0,,如果你以前没有这样编程 这段代码非常奇怪
Dialogue: 0,0:07:34.58,0:07:38.84,英文,,0,0,0,,So the way I would best describe it is think of this insert method.
Dialogue: 0,0:07:34.58,0:07:38.84,中文,,0,0,0,,用最好的方式来描述的话 就把这个插入方法想象成这样
Dialogue: 0,0:07:38.84,0:07:47.36,英文,,0,0,0,,If I had to write a comment to tell you what it did, I would say, returns the result of inserting into tree T. So it returns something.
Dialogue: 0,0:07:38.84,0:07:47.36,中文,,0,0,0,,如果我必须写一个评论告诉你它是做什么的 我会说 返回将项目插入树T的结果 所以它会返回一些东西
Dialogue: 0,0:07:47.36,0:07:50.96,英文,,0,0,0,,It's not a null method or not a void method that returns nothing.
Dialogue: 0,0:07:47.36,0:07:50.96,中文,,0,0,0,,它不是一个空方法或不返回任何东西的void方法
Dialogue: 0,0:07:50.96,0:07:53.55,英文,,0,0,0,,It's going to return the result of inserting.
Dialogue: 0,0:07:50.96,0:07:53.55,中文,,0,0,0,,它将返回插入的结果
Dialogue: 0,0:07:53.55,0:07:54.25,英文,,0,0,0,,So what does that mean?
Dialogue: 0,0:07:53.55,0:07:54.25,中文,,0,0,0,,那是什么意思呢
Dialogue: 0,0:07:54.25,0:08:00.18,英文,,0,0,0,,Well, it means if the thing I want to insert is less than my key,
Dialogue: 0,0:07:54.25,0:08:00.18,中文,,0,0,0,,这意味着如果我想插入的东西小于我的关键字
Dialogue: 0,0:08:00.18,0:08:07.18,英文,,0,0,0,,so I'm in dog, I want to insert eyes, well, I guess it's greater than, so that'd be this case right here,
Dialogue: 0,0:08:00.18,0:08:07.18,中文,,0,0,0,,所以我在dog 我想插入eyes 好吧 我猜它是大于的 那么就是这种情况在这里
Dialogue: 0,0:08:07.18,0:08:13.18,英文,,0,0,0,,then what I'll do is I'll say t.right, this right pointer, set it equal to the result of inserting eyes into the right half of the tree.
Dialogue: 0,0:08:07.18,0:08:13.18,中文,,0,0,0,,然后我会说T.right 这个右指针 设置为将eyes插入树右半部分的结果
Dialogue: 0,0:08:13.18,0:08:18.04,英文,,0,0,0,,Or if eyes was less than dog, which is not, but we can pretend, then we would say t.left.
Dialogue: 0,0:08:13.18,0:08:18.04,中文,,0,0,0,,或者如果eyes小于dog 这是不可能的 但我们可以假装 那么我们会说T.left
Dialogue: 0,0:08:18.04,0:08:24.04,英文,,0,0,0,,Your left pointer should be equal to the result of adding eyes to the left half of the tree.
Dialogue: 0,0:08:18.04,0:08:24.04,中文,,0,0,0,,你的左指针应该等于将eyes添加到树的左半部分的结果
Dialogue: 0,0:08:24.04,0:08:25.44,英文,,0,0,0,,So that's kind of how you read this.
Dialogue: 0,0:08:24.04,0:08:25.44,中文,,0,0,0,,这就是你阅读这个的方式
Dialogue: 0,0:08:25.44,0:08:27.06,英文,,0,0,0,,And again, it's a little bit alien.
Dialogue: 0,0:08:25.44,0:08:27.06,中文,,0,0,0,,而且 这有点陌生
Dialogue: 0,0:08:27.06,0:08:31.43,英文,,0,0,0,,I don't expect you to totally understand it until you play around with it in lab.
Dialogue: 0,0:08:27.06,0:08:31.43,中文,,0,0,0,,在实验室里玩弄它之前 我不指望你完全理解它
Dialogue: 0,0:08:31.43,0:08:34.71,英文,,0,0,0,,But that's kind of the highlights of how you might write an insert method.
Dialogue: 0,0:08:31.43,0:08:34.71,中文,,0,0,0,,但这就是你可能编写插入方法的要点
Dialogue: 0,0:08:34.71,0:08:39.43,英文,,0,0,0,,So you could say t.left is the result of inserting recursively
Dialogue: 0,0:08:34.71,0:08:39.43,中文,,0,0,0,,你可以说 T.left 是递归插入到树的左半部分的结果
Dialogue: 0,0:08:39.43,0:08:44.13,英文,,0,0,0,,into the left half of the tree or recursively inserting into the right half of the tree.
Dialogue: 0,0:08:39.43,0:08:44.13,中文,,0,0,0,,或者递归地插入到树的右半部分
Dialogue: 0,0:08:44.13,0:08:45.81,英文,,0,0,0,,There are two base cases here.
Dialogue: 0,0:08:44.13,0:08:45.81,中文,,0,0,0,,这里有两个基本情况
Dialogue: 0,0:08:45.81,0:08:47.41,英文,,0,0,0,,One of the base cases is right here.
Dialogue: 0,0:08:45.81,0:08:47.41,中文,,0,0,0,,其中一个基本情况就在这里
Dialogue: 0,0:08:47.41,0:08:50.38,英文,,0,0,0,,It's like case number four, which is if you found the item.
Dialogue: 0,0:08:47.41,0:08:50.38,中文,,0,0,0,,就像第四种情况一样 如果你找到了这个项目
Dialogue: 0,0:08:50.38,0:08:53.22,英文,,0,0,0,,So this is false, this is false, this is false.
Dialogue: 0,0:08:50.38,0:08:53.22,中文,,0,0,0,,这是假的 这是假的 这是假的
Dialogue: 0,0:08:53.22,0:08:55.10,英文,,0,0,0,,And this means that you found the item.
Dialogue: 0,0:08:53.22,0:08:55.10,中文,,0,0,0,,这意味着你找到了这个项目
Dialogue: 0,0:08:55.10,0:08:59.18,英文,,0,0,0,,That's like you're trying to insert bag and you're calling insert on this node.
Dialogue: 0,0:08:55.10,0:08:59.18,中文,,0,0,0,,这就像你试图插入“bag”并在这个节点上调用插入一样
Dialogue: 0,0:08:59.18,0:09:00.76,英文,,0,0,0,,Well, bag is bag.
Dialogue: 0,0:08:59.18,0:09:00.76,中文,,0,0,0,,bag就是bag
Dialogue: 0,0:09:00.76,0:09:01.90,英文,,0,0,0,,It's already there.
Dialogue: 0,0:09:00.76,0:09:01.90,中文,,0,0,0,,它已经在那儿了
Dialogue: 0,0:09:01.90,0:09:04.36,英文,,0,0,0,,So the result of inserting bag is the same tree.
Dialogue: 0,0:09:01.90,0:09:04.36,中文,,0,0,0,,所以插入bag的结果是相同的树
Dialogue: 0,0:09:04.36,0:09:05.42,英文,,0,0,0,,It's already there.
Dialogue: 0,0:09:04.36,0:09:05.42,中文,,0,0,0,,它已经在那儿了
Dialogue: 0,0:09:05.42,0:09:06.54,英文,,0,0,0,,You do nothing.
Dialogue: 0,0:09:05.42,0:09:06.54,中文,,0,0,0,,你什么也不做
Dialogue: 0,0:09:06.54,0:09:08.04,英文,,0,0,0,,It's the base case right here.
Dialogue: 0,0:09:06.54,0:09:08.04,中文,,0,0,0,,这就是基本情况
Dialogue: 0,0:09:08.04,0:09:10.32,英文,,0,0,0,,What about this last case right here?
Dialogue: 0,0:09:08.04,0:09:10.32,中文,,0,0,0,,那最后一个情况怎么样
Dialogue: 0,0:09:10.32,0:09:11.98,英文,,0,0,0,,When would T be equal to null?
Dialogue: 0,0:09:10.32,0:09:11.98,中文,,0,0,0,,什么时候T会等于null
Dialogue: 0,0:09:11.98,0:09:16.71,英文,,0,0,0,,Well, this is the case where we fall off the tree, where we say, dog, I want to insert eyes.
Dialogue: 0,0:09:11.98,0:09:16.71,中文,,0,0,0,,好吧 这就是我们掉下树的情况 我们说 dog 我要插入eyes
Dialogue: 0,0:09:16.71,0:09:17.71,英文,,0,0,0,,OK, dog is not eyes.
Dialogue: 0,0:09:16.71,0:09:17.71,中文,,0,0,0,,dog不是eyes
Dialogue: 0,0:09:17.71,0:09:19.15,英文,,0,0,0,,I'll insert it on this side.
Dialogue: 0,0:09:17.71,0:09:19.15,中文,,0,0,0,,我会在这边插入它
Dialogue: 0,0:09:19.15,0:09:20.21,英文,,0,0,0,,Flat, it's not eyes.
Dialogue: 0,0:09:19.15,0:09:20.21,中文,,0,0,0,,flat 它不是eyes
Dialogue: 0,0:09:20.21,0:09:21.41,英文,,0,0,0,,I'll insert it here.
Dialogue: 0,0:09:20.21,0:09:21.41,中文,,0,0,0,,我会在这里插入它
Dialogue: 0,0:09:21.41,0:09:23.65,英文,,0,0,0,,Elf, you are not eyes.
Dialogue: 0,0:09:21.41,0:09:23.65,中文,,0,0,0,,elf 你不是eyes
Dialogue: 0,0:09:23.65,0:09:27.41,英文,,0,0,0,,So I will call insert on your right.
Dialogue: 0,0:09:23.65,0:09:27.41,中文,,0,0,0,,我会在你右边调用插入
Dialogue: 0,0:09:27.41,0:09:27.77,英文,,0,0,0,,I got you.
Dialogue: 0,0:09:27.41,0:09:27.77,中文,,0,0,0,,我明白了
Dialogue: 0,0:09:27.77,0:09:29.86,英文,,0,0,0,,I almost said left.
Dialogue: 0,0:09:27.77,0:09:29.86,中文,,0,0,0,,我差点说成 left
Dialogue: 0,0:09:29.86,0:09:34.27,英文,,0,0,0,,I will insert eyes, or I'll call insert on the right child.
Dialogue: 0,0:09:29.86,0:09:34.27,中文,,0,0,0,,我会插入 eyes 或者我会在右子节点上调用 insert
Dialogue: 0,0:09:34.27,0:09:38.11,英文,,0,0,0,,t.right is equal to insert t.right comma elf.
Dialogue: 0,0:09:34.27,0:09:38.11,中文,,0,0,0,,T.right 等于在 T.right 后面插入逗号 elf
Dialogue: 0,0:09:38.11,0:09:41.95,英文,,0,0,0,,And in this case, t.right would have been null, because elf has no right child.
Dialogue: 0,0:09:38.11,0:09:41.95,中文,,0,0,0,,在这种情况下 T.right 本来会是空的 因为 elf 没有右子节点
Dialogue: 0,0:09:41.95,0:09:43.43,英文,,0,0,0,,That would be the space case.
Dialogue: 0,0:09:41.95,0:09:43.43,中文,,0,0,0,,那就是空情况
Dialogue: 0,0:09:43.43,0:09:49.12,英文,,0,0,0,,And the result of inserting into an empty binary search tree is just a single node with eyes.
Dialogue: 0,0:09:43.43,0:09:49.12,中文,,0,0,0,,在空二叉搜索树中插入的结果就是只有一个节点带着 eyes
Dialogue: 0,0:09:49.12,0:09:53.96,英文,,0,0,0,,So you can almost think of this case as, what's the result of inserting eyes into an empty tree?
Dialogue: 0,0:09:49.12,0:09:53.96,中文,,0,0,0,,你可以差不多把这个情况想象成 在一个空树中插入eyes的结果是什么
Dialogue: 0,0:09:53.96,0:09:56.96,英文,,0,0,0,,It's a single node, and that node is eyes.
Dialogue: 0,0:09:53.96,0:09:56.96,中文,,0,0,0,,它是一个单一的节点 而那个节点就是eyes
Dialogue: 0,0:09:56.96,0:09:59.55,英文,,0,0,0,,And again, don't totally expect you to understand this.
Dialogue: 0,0:09:56.96,0:09:59.55,中文,,0,0,0,,再次 不完全指望你理解这个
Dialogue: 0,0:09:59.55,0:10:01.53,英文,,0,0,0,,It's a little bit weird.
Dialogue: 0,0:09:59.55,0:10:01.53,中文,,0,0,0,,这有点奇怪
Dialogue: 0,0:10:01.53,0:10:10.49,英文,,0,0,0,,However, if you see something like this, I know you're going to be really tempted to write this, because this is something that seems more comfortable, more familiar to us.
Dialogue: 0,0:10:01.53,0:10:10.49,中文,,0,0,0,,然而 如果你看到类似这样的情况 我知道你会很想写下面这样 因为这似乎对我们来说更舒服 更熟悉
Dialogue: 0,0:10:10.49,0:10:14.76,英文,,0,0,0,,You might say, well, if the left child is null, I'll set the left child to eyes.
Dialogue: 0,0:10:10.49,0:10:14.76,中文,,0,0,0,,你可能会说 如果左子节点是空的 我就把左子节点设为eyes
Dialogue: 0,0:10:14.76,0:10:18.92,英文,,0,0,0,,Otherwise, if the right child is null, I'll set the right child to a new node with eyes.
Dialogue: 0,0:10:14.76,0:10:18.92,中文,,0,0,0,,或者 如果右子节点是空的 我就把右子节点设为一个新的带有eyes的节点
Dialogue: 0,0:10:18.92,0:10:24.12,英文,,0,0,0,,This seems supernatural, but if you do this, then you're falling into a rookie mistake.
Dialogue: 0,0:10:18.92,0:10:24.12,中文,,0,0,0,,这看起来有点超自然 但如果你这样做 那么你就犯了一个新手错误
Dialogue: 0,0:10:24.12,0:10:27.06,英文,,0,0,0,,And sometimes people call it arm's length recursion.
Dialogue: 0,0:10:24.12,0:10:27.06,中文,,0,0,0,,有时候人们称之为手臂长度的递归
Dialogue: 0,0:10:27.06,0:10:28.30,英文,,0,0,0,,I don't know if that makes sense.
Dialogue: 0,0:10:27.06,0:10:28.30,中文,,0,0,0,,我不知道这是否说得通
Dialogue: 0,0:10:28.30,0:10:32.38,英文,,0,0,0,,But the idea is that you're not going all the way down to the true base case.
Dialogue: 0,0:10:28.30,0:10:32.38,中文,,0,0,0,,但思路是你不必一直走到真正的基本情况
Dialogue: 0,0:10:32.38,0:10:35.70,英文,,0,0,0,,You're making things a little bit more complicated than they have to be.
Dialogue: 0,0:10:32.38,0:10:35.70,中文,,0,0,0,,你让事情变得比必要的更复杂一点
Dialogue: 0,0:10:35.70,0:10:41.63,英文,,0,0,0,,So this code, while it works, I find it kind of ugly because you're not going all the way down to the base case.
Dialogue: 0,0:10:35.70,0:10:41.63,中文,,0,0,0,,这段代码虽然能运行 但我觉得它有点丑陋 因为你没有一直走到基本情况
Dialogue: 0,0:10:41.63,0:10:43.73,英文,,0,0,0,,You're not trusting the recursion.
Dialogue: 0,0:10:41.63,0:10:43.73,中文,,0,0,0,,你没有相信递归
Dialogue: 0,0:10:43.73,0:10:47.99,英文,,0,0,0,,OK, I know you're confused now, so I'll give you one example.
Dialogue: 0,0:10:43.73,0:10:47.99,中文,,0,0,0,,我知道你现在有点糊涂 所以我会给你一个例子
Dialogue: 0,0:10:47.99,0:10:52.60,英文,,0,0,0,,I made this up from scratch, so if it makes no sense, then I guess come yell at me afterwards.
Dialogue: 0,0:10:47.99,0:10:52.60,中文,,0,0,0,,我是从头开始编的 所以如果没有意义 那么我猜以后就来喊我吧
Dialogue: 0,0:10:52.60,0:10:57.51,英文,,0,0,0,,But I will try to give you a picture of why arm's length recursion is bad.
Dialogue: 0,0:10:52.60,0:10:57.51,中文,,0,0,0,,但我会试着让你了解为什么远程递归是不好的
Dialogue: 0,0:10:57.51,0:11:01.05,英文,,0,0,0,,So does everybody agree that this code is ugly?
Dialogue: 0,0:10:57.51,0:11:01.05,中文,,0,0,0,,那么大家都同意这段代码很丑陋吗
Dialogue: 0,0:11:01.05,0:11:04.55,英文,,0,0,0,,Does anyone think this is the most beautiful binary search tree code?
Dialogue: 0,0:11:01.05,0:11:04.55,中文,,0,0,0,,有没有人认为这是最美丽的二叉搜索树代码
Dialogue: 0,0:11:04.55,0:11:05.27,英文,,0,0,0,,I don't.
Dialogue: 0,0:11:04.55,0:11:05.27,中文,,0,0,0,,我不这么认为
Dialogue: 0,0:11:05.27,0:11:10.18,英文,,0,0,0,,This is saying, if t.left.left is null, insert into the left, left subchild.
Dialogue: 0,0:11:05.27,0:11:10.18,中文,,0,0,0,,这是在说 如果 T.left.left 为空 就插入到左侧的左侧子节点
Dialogue: 0,0:11:10.18,0:11:14.14,英文,,0,0,0,,Otherwise, insert into the left, right, or right, left, or right, right.
Dialogue: 0,0:11:10.18,0:11:14.14,中文,,0,0,0,,否则 插入到左侧、右侧 或者右侧、左侧 或者右侧、右侧
Dialogue: 0,0:11:14.14,0:11:15.29,英文,,0,0,0,,This is too complicated.
Dialogue: 0,0:11:14.14,0:11:15.29,中文,,0,0,0,,这太复杂了
Dialogue: 0,0:11:15.29,0:11:16.87,英文,,0,0,0,,Why is this so complicated?
Dialogue: 0,0:11:15.29,0:11:16.87,中文,,0,0,0,,为什么这么复杂呢
Dialogue: 0,0:11:16.87,0:11:19.65,英文,,0,0,0,,It's because you're not going all the way down to the base case.
Dialogue: 0,0:11:16.87,0:11:19.65,中文,,0,0,0,,这是因为你没有一直走到基本情况
Dialogue: 0,0:11:19.65,0:11:21.61,英文,,0,0,0,,The recursion could go further.
Dialogue: 0,0:11:19.65,0:11:21.61,中文,,0,0,0,,递归可以走得更远
Dialogue: 0,0:11:21.61,0:11:23.57,英文,,0,0,0,,In fact, it could go one layer further.
Dialogue: 0,0:11:21.61,0:11:23.57,中文,,0,0,0,,事实上 它可以再往下一层
Dialogue: 0,0:11:23.57,0:11:26.17,英文,,0,0,0,,So don't bother writing four cases at this point.
Dialogue: 0,0:11:23.57,0:11:26.17,中文,,0,0,0,,现在不要费心写四种情况
Dialogue: 0,0:11:26.17,0:11:28.47,英文,,0,0,0,,Your base case is too complicated.
Dialogue: 0,0:11:26.17,0:11:28.47,中文,,0,0,0,,你的基本情况太复杂了
Dialogue: 0,0:11:28.47,0:11:30.72,英文,,0,0,0,,Let the recursion take you further.
Dialogue: 0,0:11:28.47,0:11:30.72,中文,,0,0,0,,让递归带你走得更远
Dialogue: 0,0:11:30.72,0:11:32.06,英文,,0,0,0,,Trust the recursion.
Dialogue: 0,0:11:30.72,0:11:32.06,中文,,0,0,0,,相信递归
Dialogue: 0,0:11:32.06,0:11:34.62,英文,,0,0,0,,So let's take the recursion one step further.
Dialogue: 0,0:11:32.06,0:11:34.62,中文,,0,0,0,,让我们把递归再推进一步
Dialogue: 0,0:11:34.62,0:11:37.54,英文,,0,0,0,,That is, we'll move one layer down in the tree.
Dialogue: 0,0:11:34.62,0:11:37.54,中文,,0,0,0,,也就是说 我们会在树中向下移动一层
Dialogue: 0,0:11:37.54,0:11:44.92,英文,,0,0,0,,So instead of looking, in the base case, two layers down, t.left.left, let's look one layer down, t.left and t.right.
Dialogue: 0,0:11:37.54,0:11:44.92,中文,,0,0,0,,不是在基本情况下往下看两层 比如 T.left.left 而是往下看一层 T.left 和 T.right
Dialogue: 0,0:11:44.92,0:11:46.50,英文,,0,0,0,,This is better.
Dialogue: 0,0:11:44.92,0:11:46.50,中文,,0,0,0,,这样更好
Dialogue: 0,0:11:46.50,0:11:52.99,英文,,0,0,0,,But here's where people stop, and they make the rookie mistake of arm's-length recursion, which is, we all agreed this was ugly,
Dialogue: 0,0:11:46.50,0:11:52.99,中文,,0,0,0,,但这就是人们停下来的地方 他们犯了初学者的错误 就是远距离递归 我们都同意这很丑陋
Dialogue: 0,0:11:52.99,0:11:57.99,英文,,0,0,0,,but at this point, some of you will be tempted to the dark side, and you'll say, this looks pretty good.
Dialogue: 0,0:11:52.99,0:11:57.99,中文,,0,0,0,,但在这一点上 有些人会被诱惑进入黑暗的一面 你会说 这看起来很不错
Dialogue: 0,0:11:57.99,0:12:06.02,英文,,0,0,0,,But if you do, then you're missing the true best, most beautiful recursive case, which, as it turns out, you can go even one layer deeper, which is,
Dialogue: 0,0:11:57.99,0:12:06.02,中文,,0,0,0,,如果你这样做 那么你就错过了真正最好、最美丽的递归情况 事实证明 你甚至可以再深入一层
Dialogue: 0,0:12:06.02,0:12:13.02,英文,,0,0,0,, instead of stopping at this layer where we check t.left and t.right, you can go one layer further and do this.
Dialogue: 0,0:12:06.02,0:12:13.02,中文,,0,0,0,,而不是停在我们检查 T.left 和 T.right 的这一层 你可以再深入一层并这样做
Dialogue: 0,0:12:13.02,0:12:16.42,英文,,0,0,0,,And you check if T is null, then return a new node.
Dialogue: 0,0:12:13.02,0:12:16.42,中文,,0,0,0,,你检查 T 是否为空 然后返回一个新的节点
Dialogue: 0,0:12:16.42,0:12:20.06,英文,,0,0,0,,This is the result of inserting a key into an empty tree.
Dialogue: 0,0:12:16.42,0:12:20.06,中文,,0,0,0,,这是将键插入空树的结果
Dialogue: 0,0:12:20.06,0:12:23.68,英文,,0,0,0,,This is the most beautiful case, and we like things that are beautiful.
Dialogue: 0,0:12:20.06,0:12:23.68,中文,,0,0,0,,这是最美丽的情况 我们喜欢美丽的东西
Dialogue: 0,0:12:23.68,0:12:26.86,英文,,0,0,0,,So that's arm's-length recursion on a slide.
Dialogue: 0,0:12:23.68,0:12:26.86,中文,,0,0,0,,这就是幻灯片上的远距离递归
Dialogue: 0,0:12:26.86,0:12:27.54,英文,,0,0,0,,I tried.
Dialogue: 0,0:12:26.86,0:12:27.54,中文,,0,0,0,,我试过
Dialogue: 0,0:12:27.54,0:12:28.28,英文,,0,0,0,,Questions?
Dialogue: 0,0:12:27.54,0:12:28.28,中文,,0,0,0,,问题
Dialogue: 0,0:12:28.28,0:12:29.06,英文,,0,0,0,,Thoughts?
Dialogue: 0,0:12:28.28,0:12:29.06,中文,,0,0,0,,你有什么想法
Dialogue: 0,0:12:29.06,0:12:52.62,英文,,0,0,0,,Yeah.
Dialogue: 0,0:12:29.06,0:12:52.62,中文,,0,0,0,,是的
Dialogue: 0,0:12:52.62,0:12:57.57,英文,,0,0,0,,OK, so the question was, what if my tree doesn't look like this?
Dialogue: 0,0:12:52.62,0:12:57.57,中文,,0,0,0,,问题是 如果我的树不像这样呢
Dialogue: 0,0:12:57.57,0:12:59.67,英文,,0,0,0,,Stay tuned in 10 minutes.
Dialogue: 0,0:12:57.57,0:12:59.67,中文,,0,0,0,,十分钟后再继续
Dialogue: 0,0:12:59.67,0:13:01.83,英文,,0,0,0,,OK, any other questions?
Dialogue: 0,0:12:59.67,0:13:01.83,中文,,0,0,0,,还有其他问题吗
Dialogue: 0,0:13:01.83,0:13:02.77,英文,,0,0,0,,They're not spoilers.
Dialogue: 0,0:13:01.83,0:13:02.77,中文,,0,0,0,,他们不是剧透
Dialogue: 0,0:13:02.77,0:13:03.99,英文,,0,0,0,,It's OK.
Dialogue: 0,0:13:02.77,0:13:03.99,中文,,0,0,0,,没问题
Dialogue: 0,0:13:03.99,0:13:05.85,英文,,0,0,0,,OK, that's arm's length recursion.
Dialogue: 0,0:13:03.99,0:13:05.85,中文,,0,0,0,,这就是手臂长度的递归
Dialogue: 0,0:13:05.85,0:13:06.99,英文,,0,0,0,,We all think this is ugly.
Dialogue: 0,0:13:05.85,0:13:06.99,中文,,0,0,0,,我们都认为这很丑
Dialogue: 0,0:13:06.99,0:13:07.81,英文,,0,0,0,,This is better.
Dialogue: 0,0:13:06.99,0:13:07.81,中文,,0,0,0,,这样更好
Dialogue: 0,0:13:07.81,0:13:09.13,英文,,0,0,0,,Don't get tempted to stop here.
Dialogue: 0,0:13:07.81,0:13:09.13,中文,,0,0,0,,不要被诱惑停在这里
Dialogue: 0,0:13:09.13,0:13:10.43,英文,,0,0,0,,Go all the way.
Dialogue: 0,0:13:09.13,0:13:10.43,中文,,0,0,0,,一直走到底
Dialogue: 0,0:13:10.43,0:13:13.47,英文,,0,0,0,,Let the recursion take you to the beautiful base case.
Dialogue: 0,0:13:10.43,0:13:13.47,中文,,0,0,0,,让递归带你到美丽的基本情况
Dialogue: 0,0:13:13.47,0:13:14.37,英文,,0,0,0,,OK.
Dialogue: 0,0:13:14.37,0:13:18.08,英文,,0,0,0,,So we figured out how to find if the tree contains something.
Dialogue: 0,0:13:14.37,0:13:18.08,中文,,0,0,0,,我们弄清楚了如何查找树中是否包含某物
Dialogue: 0,0:13:18.08,0:13:19.76,英文,,0,0,0,,We figured out how to insert new things.
Dialogue: 0,0:13:18.08,0:13:19.76,中文,,0,0,0,,我们弄清楚了如何插入新的东西
Dialogue: 0,0:13:19.76,0:13:24.55,英文,,0,0,0,,So we have one thing left to do, which is, how do you delete things out of the tree?
Dialogue: 0,0:13:19.76,0:13:24.55,中文,,0,0,0,,我们还有一件事要做 那就是 如何从树中删除东西
Dialogue: 0,0:13:24.55,0:13:26.13,英文,,0,0,0,,So this time, it's a little bit harder.
Dialogue: 0,0:13:24.55,0:13:26.13,中文,,0,0,0,,这次 有点难度
Dialogue: 0,0:13:26.13,0:13:29.56,英文,,0,0,0,,I can't just search the tree because I have to delete the thing from the tree.
Dialogue: 0,0:13:26.13,0:13:29.56,中文,,0,0,0,,我不能只是搜索树 因为我必须从树中删除这个东西
Dialogue: 0,0:13:29.56,0:13:31.20,英文,,0,0,0,,So this time, it's a little bit harder.
Dialogue: 0,0:13:29.56,0:13:31.20,中文,,0,0,0,,这次 有点难度
Dialogue: 0,0:13:31.20,0:13:33.06,英文,,0,0,0,,And I don't like things that are hard.
Dialogue: 0,0:13:31.20,0:13:33.06,中文,,0,0,0,,我不喜欢困难的事情
Dialogue: 0,0:13:33.06,0:13:36.72,英文,,0,0,0,,So I'm going to try and split it into cases that are easier.
Dialogue: 0,0:13:33.06,0:13:36.72,中文,,0,0,0,,我要尝试将它分成更容易的情况
Dialogue: 0,0:13:36.72,0:13:38.02,英文,,0,0,0,,So that's what I've done here.
Dialogue: 0,0:13:36.72,0:13:38.02,中文,,0,0,0,,这就是我在这里所做的
Dialogue: 0,0:13:38.02,0:13:44.26,英文,,0,0,0,,Instead of figuring out how to delete any node that's hard, I don't like things that are hard, I'm going to start with the easy stuff.
Dialogue: 0,0:13:38.02,0:13:44.26,中文,,0,0,0,,与其想出如何删除任何困难的节点 我不喜欢困难的事情 我要从容易的东西开始
Dialogue: 0,0:13:44.26,0:13:49.64,英文,,0,0,0,,And hopefully, the easy stuff gives me some wisdom when I try to tackle the hard stuff.
Dialogue: 0,0:13:44.26,0:13:49.64,中文,,0,0,0,,希望在我尝试解决困难的事情时 这些容易的东西能给我一些智慧
Dialogue: 0,0:13:49.64,0:13:50.92,英文,,0,0,0,,So let's do that.
Dialogue: 0,0:13:49.64,0:13:50.92,中文,,0,0,0,,那么就让我们这样做吧
Dialogue: 0,0:13:50.92,0:13:51.98,英文,,0,0,0,,So I look at this tree.
Dialogue: 0,0:13:50.92,0:13:51.98,中文,,0,0,0,,我看了看这棵树
Dialogue: 0,0:13:51.98,0:13:54.05,英文,,0,0,0,,What is the easiest thing to delete?
Dialogue: 0,0:13:51.98,0:13:54.05,中文,,0,0,0,,最容易删除的是什么
Dialogue: 0,0:13:54.05,0:13:59.27,英文,,0,0,0,,Well, to me, when I look at this tree, the easiest thing to delete would be eyes.
Dialogue: 0,0:13:54.05,0:13:59.27,中文,,0,0,0,,对我来说 当我看着这棵树时 最容易删除的东西应该是eyes
Dialogue: 0,0:13:59.27,0:14:01.29,英文,,0,0,0,,Because how do I delete eyes?
Dialogue: 0,0:13:59.27,0:14:01.29,中文,,0,0,0,,因为我怎么删除eyes呢
Dialogue: 0,0:14:01.29,0:14:04.57,英文,,0,0,0,,Well, I guess in this case, they want me to delete glut, which is also pretty easy.
Dialogue: 0,0:14:01.29,0:14:04.57,中文,,0,0,0,,我想在这种情况下 他们希望我删除glut 这也很容易
Dialogue: 0,0:14:04.57,0:14:05.23,英文,,0,0,0,,OK.
Dialogue: 0,0:14:05.23,0:14:06.49,英文,,0,0,0,,How do I delete glut?
Dialogue: 0,0:14:05.23,0:14:06.49,中文,,0,0,0,,我怎么删除glut
Dialogue: 0,0:14:06.49,0:14:11.24,英文,,0,0,0,,Well, I just point my death ray at glut, and glut is all the way gone.
Dialogue: 0,0:14:06.49,0:14:11.24,中文,,0,0,0,,我只需要把我的死亡射线对准glut glut就会完全消失
Dialogue: 0,0:14:11.24,0:14:13.30,英文,,0,0,0,,So that wasn't so bad.
Dialogue: 0,0:14:11.24,0:14:13.30,中文,,0,0,0,,那并不那么糟糕
Dialogue: 0,0:14:13.30,0:14:17.82,英文,,0,0,0,,So specifically, what you might have to do if you want to delete glut
Dialogue: 0,0:14:13.30,0:14:17.82,中文,,0,0,0,,具体来说 如果你想删除 glut 你可能需要做的就是这样
Dialogue: 0,0:14:17.82,0:14:21.20,英文,,0,0,0,,is, well, right now, flat says its left child is glut.
Dialogue: 0,0:14:17.82,0:14:21.20,中文,,0,0,0,,现在 flat 说它的左子节点是 glut
Dialogue: 0,0:14:21.20,0:14:25.19,英文,,0,0,0,,And if you want to delete it, you would just say flat, your left child is null.
Dialogue: 0,0:14:21.20,0:14:25.19,中文,,0,0,0,,如果你想删除它 你只需说 flat 你的左子节点是 null
Dialogue: 0,0:14:25.19,0:14:26.87,英文,,0,0,0,,You no longer point at glut.
Dialogue: 0,0:14:25.19,0:14:26.87,中文,,0,0,0,,你不再指向 glut
Dialogue: 0,0:14:26.87,0:14:29.63,英文,,0,0,0,,And now nobody has a reference to glut.
Dialogue: 0,0:14:26.87,0:14:29.63,中文,,0,0,0,,现在没有人引用 glut 了
Dialogue: 0,0:14:29.63,0:14:31.09,英文,,0,0,0,,It's anonymous.
Dialogue: 0,0:14:29.63,0:14:31.09,中文,,0,0,0,,它是匿名的
Dialogue: 0,0:14:31.09,0:14:32.31,英文,,0,0,0,,No one knows where to find it.
Dialogue: 0,0:14:31.09,0:14:32.31,中文,,0,0,0,,没有人知道在哪里找到它
Dialogue: 0,0:14:32.31,0:14:35.57,英文,,0,0,0,,So the garbage collector comes and destroys it.
Dialogue: 0,0:14:32.31,0:14:35.57,中文,,0,0,0,,垃圾收集器会来把它销毁
Dialogue: 0,0:14:35.57,0:14:41.88,英文,,0,0,0,,So if a node has no children, like glut, or eyes, or cat, or elf, then deleting it is not so bad.
Dialogue: 0,0:14:35.57,0:14:41.88,中文,,0,0,0,,如果一个节点没有子节点 像glut 或eyes 或cat 或elf 那么删除它就不会那么糟糕
Dialogue: 0,0:14:41.88,0:14:46.62,英文,,0,0,0,,You sever the link, and the item gets destroyed by the garbage collector.
Dialogue: 0,0:14:41.88,0:14:46.62,中文,,0,0,0,,你切断链接 然后物品被垃圾收集器销毁
Dialogue: 0,0:14:46.62,0:14:47.51,英文,,0,0,0,,OK.
Dialogue: 0,0:14:47.51,0:14:48.47,英文,,0,0,0,,That was case one.
Dialogue: 0,0:14:47.51,0:14:48.47,中文,,0,0,0,,那就是第一种情况
Dialogue: 0,0:14:48.47,0:14:49.67,英文,,0,0,0,,That was pretty easy.
Dialogue: 0,0:14:48.47,0:14:49.67,中文,,0,0,0,,这很容易
Dialogue: 0,0:14:49.67,0:14:51.17,英文,,0,0,0,,I like when things are easy.
Dialogue: 0,0:14:49.67,0:14:51.17,中文,,0,0,0,,我喜欢事情简单
Dialogue: 0,0:14:51.17,0:14:54.05,英文,,0,0,0,,So I hope the next case is just as easy.
Dialogue: 0,0:14:51.17,0:14:54.05,中文,,0,0,0,,我希望下一个案例也一样简单
Dialogue: 0,0:14:54.05,0:14:56.82,英文,,0,0,0,,So we figured out what happens if the key has no children.
Dialogue: 0,0:14:54.05,0:14:56.82,中文,,0,0,0,,我们弄清楚了如果密钥没有子级会发生什么
Dialogue: 0,0:14:56.82,0:14:59.06,英文,,0,0,0,,You just sever the link, and it's gone.
Dialogue: 0,0:14:56.82,0:14:59.06,中文,,0,0,0,,你只需切断链接 它就消失了
Dialogue: 0,0:14:59.06,0:15:01.36,英文,,0,0,0,,What if the key has one child?
Dialogue: 0,0:14:59.06,0:15:01.36,中文,,0,0,0,,如果密钥有一个子级呢
Dialogue: 0,0:15:01.36,0:15:03.96,英文,,0,0,0,,Well, it's a little bit harder, but it's not too bad.
Dialogue: 0,0:15:01.36,0:15:03.96,中文,,0,0,0,,这有点难一些 但也不算太糟糕
Dialogue: 0,0:15:03.96,0:15:06.46,英文,,0,0,0,,So let's say I want to delete flat.
Dialogue: 0,0:15:03.96,0:15:06.46,中文,,0,0,0,,那么 假设我想删除flat 怎么办
Dialogue: 0,0:15:06.46,0:15:08.68,英文,,0,0,0,,Well, now I can't do the same trick as before.
Dialogue: 0,0:15:06.46,0:15:08.68,中文,,0,0,0,,好吧 现在我不能像以前那样做同样的把戏了
Dialogue: 0,0:15:08.68,0:15:13.02,英文,,0,0,0,,If I just sever the link to Flat, I would also lose Elf, and I would lose Eyes.
Dialogue: 0,0:15:08.68,0:15:13.02,中文,,0,0,0,,如果我只是切断与 flat 的链接 我也会失去 elf 也会失去 eyes
Dialogue: 0,0:15:13.02,0:15:16.21,英文,,0,0,0,,And that's bad, because I just want Flat to be gone.
Dialogue: 0,0:15:13.02,0:15:16.21,中文,,0,0,0,,而这是不好的 因为我只是想让 flat 消失
Dialogue: 0,0:15:16.21,0:15:19.17,英文,,0,0,0,,So in this case, I have to be a little bit more clever.
Dialogue: 0,0:15:16.21,0:15:19.17,中文,,0,0,0,,在这种情况下 我必须聪明一点
Dialogue: 0,0:15:19.17,0:15:28.91,英文,,0,0,0,,And I realize that, well, instead of having Dog point to Flat, point to Elf, what if I just had Dog point directly at Elf?
Dialogue: 0,0:15:19.17,0:15:28.91,中文,,0,0,0,,我意识到 与其让 dog 指向 flat 指向 elf 不如让 Dog 直接指向 elf 会怎样
Dialogue: 0,0:15:28.91,0:15:30.85,英文,,0,0,0,,So look, Dog used to point to Flat.
Dialogue: 0,0:15:28.91,0:15:30.85,中文,,0,0,0,,所以看 dog 以前指向 flat
Dialogue: 0,0:15:30.85,0:15:32.76,英文,,0,0,0,,Now it's pointing at Elf.
Dialogue: 0,0:15:30.85,0:15:32.76,中文,,0,0,0,,现在它指向了 elf
Dialogue: 0,0:15:32.76,0:15:36.46,英文,,0,0,0,,And if I do that, then now if you look at flat, it's anonymous.
Dialogue: 0,0:15:32.76,0:15:36.46,中文,,0,0,0,,如果我这样做 那么现在如果你看 flat 它是匿名的
Dialogue: 0,0:15:36.46,0:15:38.42,英文,,0,0,0,,Nobody knows where to find flat.
Dialogue: 0,0:15:36.46,0:15:38.42,中文,,0,0,0,,没有人知道在哪里找 flat
Dialogue: 0,0:15:38.42,0:15:39.00,英文,,0,0,0,,It's gone.
Dialogue: 0,0:15:38.42,0:15:39.00,中文,,0,0,0,,它消失了
Dialogue: 0,0:15:39.00,0:15:41.66,英文,,0,0,0,,And so the garbage collector will destroy it.
Dialogue: 0,0:15:39.00,0:15:41.66,中文,,0,0,0,,垃圾收集器会销毁它
Dialogue: 0,0:15:41.66,0:15:48.33,英文,,0,0,0,,By the way, I will quickly note, because everyone asks this, if you're worried about this pointer, remember that the pointer is just a memory address.
Dialogue: 0,0:15:41.66,0:15:48.33,中文,,0,0,0,,顺便说一句 我会迅速指出 因为每个人都问这个问题 如果你担心这个指针 记住指针只是一个内存地址
Dialogue: 0,0:15:48.33,0:15:49.75,英文,,0,0,0,,It's just a number.
Dialogue: 0,0:15:48.33,0:15:49.75,中文,,0,0,0,,它只是一个数字
Dialogue: 0,0:15:49.75,0:15:52.23,英文,,0,0,0,,And it's like an instance variable of flat.
Dialogue: 0,0:15:49.75,0:15:52.23,中文,,0,0,0,,就像 flat 的一个实例变量一样
Dialogue: 0,0:15:52.23,0:15:55.27,英文,,0,0,0,,So it's just like any other instance variable of the object.
Dialogue: 0,0:15:52.23,0:15:55.27,中文,,0,0,0,,它就像对象的任何其他实例变量一样
Dialogue: 0,0:15:55.27,0:15:56.37,英文,,0,0,0,,It gets destroyed.
Dialogue: 0,0:15:55.27,0:15:56.37,中文,,0,0,0,,它被销毁了
Dialogue: 0,0:15:56.37,0:15:57.81,英文,,0,0,0,,We don't have to worry about it.
Dialogue: 0,0:15:56.37,0:15:57.81,中文,,0,0,0,,我们不必担心它
Dialogue: 0,0:15:57.81,0:16:01.92,英文,,0,0,0,,But the reason why it disappears is because no one knows where to find flat anymore.
Dialogue: 0,0:15:57.81,0:16:01.92,中文,,0,0,0,,但它消失的原因是因为没有人知道哪里可以找到 flat
Dialogue: 0,0:16:01.92,0:16:03.00,英文,,0,0,0,,It's gone.
Dialogue: 0,0:16:01.92,0:16:03.00,中文,,0,0,0,,它消失了
Dialogue: 0,0:16:03.00,0:16:06.56,英文,,0,0,0,,So how do you delete things with exactly one child?
Dialogue: 0,0:16:03.00,0:16:06.56,中文,,0,0,0,,那么你如何删除只有一个子节点的东西呢
Dialogue: 0,0:16:06.56,0:16:08.64,英文,,0,0,0,,You just take the parent and point it at the child.
Dialogue: 0,0:16:06.56,0:16:08.64,中文,,0,0,0,,你只需取出父节点并将其指向子节点
Dialogue: 0,0:16:08.64,0:16:10.34,英文,,0,0,0,,You're like bypassing flat.
Dialogue: 0,0:16:08.64,0:16:10.34,中文,,0,0,0,,你就像绕过flat
Dialogue: 0,0:16:10.34,0:16:13.73,英文,,0,0,0,,You're building a new express lane that goes right through flat.
Dialogue: 0,0:16:10.34,0:16:13.73,中文,,0,0,0,,你在建立一条新的快速通道 直接穿过flat
Dialogue: 0,0:16:13.73,0:16:14.75,英文,,0,0,0,,And now it's gone.
Dialogue: 0,0:16:13.73,0:16:14.75,中文,,0,0,0,,而现在它消失了
Dialogue: 0,0:16:14.75,0:16:16.15,英文,,0,0,0,,Nobody points it flat.
Dialogue: 0,0:16:14.75,0:16:16.15,中文,,0,0,0,,没人指向flat
Dialogue: 0,0:16:16.15,0:16:17.89,英文,,0,0,0,,So it gets garbage collected.
Dialogue: 0,0:16:16.15,0:16:17.89,中文,,0,0,0,,它被垃圾回收了
Dialogue: 0,0:16:17.89,0:16:24.00,英文,,0,0,0,,And in case you're not totally convinced this works, then maybe try to argue to yourself, why can you always do this?
Dialogue: 0,0:16:17.89,0:16:24.00,中文,,0,0,0,,而且 如果你还不完全相信这个方法有效 那么也许试着对自己解释一下 为什么你总是能做到这一点
Dialogue: 0,0:16:24.00,0:16:24.88,英文,,0,0,0,,Why is it safe?
Dialogue: 0,0:16:24.00,0:16:24.88,中文,,0,0,0,,为什么这是安全的
Dialogue: 0,0:16:24.88,0:16:28.76,英文,,0,0,0,,It's because flat's child is definitely larger than dog.
Dialogue: 0,0:16:24.88,0:16:28.76,中文,,0,0,0,,这是因为 flat 的子节点肯定比 dog 大
Dialogue: 0,0:16:28.76,0:16:29.40,英文,,0,0,0,,Why is that?
Dialogue: 0,0:16:28.76,0:16:29.40,中文,,0,0,0,,为什么呢
Dialogue: 0,0:16:29.40,0:16:31.45,英文,,0,0,0,,Because flat's on the right side of dog.
Dialogue: 0,0:16:29.40,0:16:31.45,中文,,0,0,0,,因为 flat 在 dog 的右侧
Dialogue: 0,0:16:31.45,0:16:34.45,英文,,0,0,0,,So any of its children will also be greater than dog.
Dialogue: 0,0:16:31.45,0:16:34.45,中文,,0,0,0,,它的任何子节点都会大于 dog
Dialogue: 0,0:16:34.45,0:16:37.68,英文,,0,0,0,,So building this new pointer, it's safe.
Dialogue: 0,0:16:34.45,0:16:37.68,中文,,0,0,0,,因此 构建这个新指针是安全的
Dialogue: 0,0:16:37.68,0:16:40.69,英文,,0,0,0,,If you're not convinced, try deleting some more stuff.
Dialogue: 0,0:16:37.68,0:16:40.69,中文,,0,0,0,,如果你还不相信 试着删除更多的东西
Dialogue: 0,0:16:40.69,0:16:41.90,英文,,0,0,0,,OK.
Dialogue: 0,0:16:41.90,0:16:44.66,英文,,0,0,0,,Great, so we did the two easy cases.
Dialogue: 0,0:16:41.90,0:16:44.66,中文,,0,0,0,,太好了 我们完成了两个简单的案例
Dialogue: 0,0:16:44.66,0:16:51.47,英文,,0,0,0,,Now, at last, we are at the hard case, which is, what if I want to delete something with two children?
Dialogue: 0,0:16:44.66,0:16:51.47,中文,,0,0,0,,现在 最后 我们来到了困难的案例 那就是 如果我想删除一个有两个子节点的东西怎么办
Dialogue: 0,0:16:51.47,0:16:54.81,英文,,0,0,0,,Uh-oh, I can't do the easy thing of just severing a link.
Dialogue: 0,0:16:51.47,0:16:54.81,中文,,0,0,0,,哎呀 我不能简单地切断链接了
Dialogue: 0,0:16:54.81,0:16:59.43,英文,,0,0,0,,I also can't do the one-child thing where I take the parent and I point it at the child.
Dialogue: 0,0:16:54.81,0:16:59.43,中文,,0,0,0,,我也不能像处理一个子节点那样 将父节点指向子节点
Dialogue: 0,0:16:59.43,0:17:01.02,英文,,0,0,0,,So now I have to be clever.
Dialogue: 0,0:16:59.43,0:17:01.02,中文,,0,0,0,,现在我必须聪明一些
Dialogue: 0,0:17:01.02,0:17:03.94,英文,,0,0,0,,OK, so I got through the two easy cases.
Dialogue: 0,0:17:01.02,0:17:03.94,中文,,0,0,0,,好的 我通过了两个简单的案例
Dialogue: 0,0:17:03.94,0:17:05.28,英文,,0,0,0,,Here comes the hard case.
Dialogue: 0,0:17:03.94,0:17:05.28,中文,,0,0,0,,困难的案例来了
Dialogue: 0,0:17:05.28,0:17:10.52,英文,,0,0,0,,So I guess to make it a little bit easier, we can start thinking about, well,
Dialogue: 0,0:17:05.28,0:17:10.52,中文,,0,0,0,,我想为了让事情变得简单一点 我们可以开始考虑
Dialogue: 0,0:17:10.52,0:17:14.33,英文,,0,0,0,,If I want to get rid of dog, what's my first problem that I have to solve?
Dialogue: 0,0:17:10.52,0:17:14.33,中文,,0,0,0,,如果我想摆脱dog 我首先要解决的问题是什么
Dialogue: 0,0:17:14.33,0:17:14.79,英文,,0,0,0,,I'm lazy.
Dialogue: 0,0:17:14.33,0:17:14.79,中文,,0,0,0,,我很懒
Dialogue: 0,0:17:14.79,0:17:16.63,英文,,0,0,0,,I don't want to have to solve too many problems.
Dialogue: 0,0:17:14.79,0:17:16.63,中文,,0,0,0,,我不想要解决太多的问题
Dialogue: 0,0:17:16.63,0:17:17.81,英文,,0,0,0,,It's a good strategy, by the way.
Dialogue: 0,0:17:16.63,0:17:17.81,中文,,0,0,0,,顺便说一句 这是一个好策略
Dialogue: 0,0:17:17.81,0:17:21.84,英文,,0,0,0,,Be lazy and hope that the easy thing comes to you.
Dialogue: 0,0:17:17.81,0:17:21.84,中文,,0,0,0,,懒惰并希望容易的事情来找你
Dialogue: 0,0:17:21.84,0:17:25.28,英文,,0,0,0,,I realized if I delete dog, what's my immediate problem that I have to solve?
Dialogue: 0,0:17:21.84,0:17:25.28,中文,,0,0,0,,我意识到 如果我删除dog 我要解决的即时问题是什么
Dialogue: 0,0:17:25.28,0:17:27.48,英文,,0,0,0,,I'm sure there are probably other problems.
Dialogue: 0,0:17:25.28,0:17:27.48,中文,,0,0,0,,我确信可能还有其他问题
Dialogue: 0,0:17:27.48,0:17:33.63,英文,,0,0,0,,But the first problem that I spot is if I delete dog and it's gone, I no longer have a root.
Dialogue: 0,0:17:27.48,0:17:33.63,中文,,0,0,0,,但我首先发现的问题是 如果我删除了dog 它就没了 我就没有了根
Dialogue: 0,0:17:33.63,0:17:36.17,英文,,0,0,0,,Because dog is gone, no root.
Dialogue: 0,0:17:33.63,0:17:36.17,中文,,0,0,0,,因为dog没了 没有根了
Dialogue: 0,0:17:36.17,0:17:40.10,英文,,0,0,0,,So I have to promote somebody else to be the new root.
Dialogue: 0,0:17:36.17,0:17:40.10,中文,,0,0,0,,我得提拔别人来做新的根
Dialogue: 0,0:17:40.10,0:17:45.58,英文,,0,0,0,,Dog is gone, and somebody else needs to take the place of dog and be the brand new root.
Dialogue: 0,0:17:40.10,0:17:45.58,中文,,0,0,0,,dog没了 得有别人来接替dog的位置 成为全新的根
Dialogue: 0,0:17:45.58,0:17:46.70,英文,,0,0,0,,So who's it going to be?
Dialogue: 0,0:17:45.58,0:17:46.70,中文,,0,0,0,,那会是谁呢
Dialogue: 0,0:17:46.70,0:17:52.75,英文,,0,0,0,,Well, now I have to look through my tree, and I have to think, who would be a good new root?
Dialogue: 0,0:17:46.70,0:17:52.75,中文,,0,0,0,,现在 我得查看我的树 思考 谁会是个好的新根呢
Dialogue: 0,0:17:52.75,0:17:57.23,英文,,0,0,0,,So one thing you could try is, what if you take bag and make bag the new root?
Dialogue: 0,0:17:52.75,0:17:57.23,中文,,0,0,0,,试试的一个方法是 把bag拿出来 把bag作为新的根
Dialogue: 0,0:17:57.23,0:17:58.06,英文,,0,0,0,,Would that work?
Dialogue: 0,0:17:57.23,0:17:58.06,中文,,0,0,0,,这样行吗
Dialogue: 0,0:17:58.06,0:18:00.32,英文,,0,0,0,,Would that be correct?
Dialogue: 0,0:17:58.06,0:18:00.32,中文,,0,0,0,,这样正确吗
Dialogue: 0,0:18:00.32,0:18:01.38,英文,,0,0,0,,OK, I guess I spoiled it.
Dialogue: 0,0:18:00.32,0:18:01.38,中文,,0,0,0,,好吧 我猜我把事情给透露了
Dialogue: 0,0:18:01.38,0:18:02.80,英文,,0,0,0,,So would bag work?
Dialogue: 0,0:18:01.38,0:18:02.80,中文,,0,0,0,,那么bag可以吗
Dialogue: 0,0:18:02.80,0:18:07.36,英文,,0,0,0,,Try and think, well, if I move bag up to the root, does that really work?
Dialogue: 0,0:18:02.80,0:18:07.36,中文,,0,0,0,,试着思考一下 如果我把bag移到根上 真的管用吗
Dialogue: 0,0:18:07.36,0:18:11.97,英文,,0,0,0,,Well, I mean, you could move bag up, but now it's kind of ugly because you have Alf and Cat.
Dialogue: 0,0:18:07.36,0:18:11.97,中文,,0,0,0,,我是说 你可以把bag移上去 但现在看起来有点难看 因为你有alf和cat
Dialogue: 0,0:18:11.97,0:18:13.51,英文,,0,0,0,,I don't know where to put them.
Dialogue: 0,0:18:11.97,0:18:13.51,中文,,0,0,0,,我不知道把它们放在哪里
Dialogue: 0,0:18:13.51,0:18:15.63,英文,,0,0,0,,And, you know, like dog still points it flat.
Dialogue: 0,0:18:13.51,0:18:15.63,中文,,0,0,0,,而且 你知道 dog还是flat的
Dialogue: 0,0:18:15.63,0:18:19.19,英文,,0,0,0,,So you could try moving bag up to the root, but then you're going to have more problems.
Dialogue: 0,0:18:15.63,0:18:19.19,中文,,0,0,0,,你可以尝试将bag移动到根目录 但接下来会有更多问题
Dialogue: 0,0:18:19.19,0:18:21.08,英文,,0,0,0,,And remember, we like being lazy.
Dialogue: 0,0:18:19.19,0:18:21.08,中文,,0,0,0,,记住 我们喜欢懒惰
Dialogue: 0,0:18:21.08,0:18:25.26,英文,,0,0,0,,We don't like having more problems if I move bag up to the root.
Dialogue: 0,0:18:21.08,0:18:25.26,中文,,0,0,0,,如果我把bag移动到根目录 我们不喜欢有更多问题
Dialogue: 0,0:18:25.26,0:18:27.62,英文,,0,0,0,,So I want to find the easiest thing
Dialogue: 0,0:18:25.26,0:18:27.62,中文,,0,0,0,,我想找到最简单的方法
Dialogue: 0,0:18:27.62,0:18:30.82,英文,,0,0,0,,to replace Dog as the brand new root.
Dialogue: 0,0:18:27.62,0:18:30.82,中文,,0,0,0,,将狗替换为全新的根t
Dialogue: 0,0:18:30.82,0:18:33.11,英文,,0,0,0,,So I don't want to move Bag up because Bag has a problem.
Dialogue: 0,0:18:30.82,0:18:33.11,中文,,0,0,0,,我不想移动 bag 因为 bag 有问题
Dialogue: 0,0:18:33.11,0:18:37.67,英文,,0,0,0,,Now Alpha and Cat are to the left, and Cat shouldn't really be on the left side of Bag.
Dialogue: 0,0:18:33.11,0:18:37.67,中文,,0,0,0,,现在 Alpha 和 cat 在左边 而 cat 真的不应该在 bag 的左边
Dialogue: 0,0:18:37.67,0:18:39.03,英文,,0,0,0,,So I don't really like it.
Dialogue: 0,0:18:37.67,0:18:39.03,中文,,0,0,0,,我真的不喜欢它
Dialogue: 0,0:18:39.03,0:18:40.88,英文,,0,0,0,,So what would be a better root?
Dialogue: 0,0:18:39.03,0:18:40.88,中文,,0,0,0,,那什么才是更好的根呢
Dialogue: 0,0:18:40.88,0:18:44.14,英文,,0,0,0,,If I delete Dog, my immediate problem is there's no root.
Dialogue: 0,0:18:40.88,0:18:44.14,中文,,0,0,0,,如果我删除 Dog 我立即面临的问题是没有根
Dialogue: 0,0:18:44.14,0:18:46.72,英文,,0,0,0,,So what is the easiest solution?
Dialogue: 0,0:18:44.14,0:18:46.72,中文,,0,0,0,,那么什么是最简单的解决方案
Dialogue: 0,0:18:46.72,0:18:49.80,英文,,0,0,0,,to putting a new root in dog's place.
Dialogue: 0,0:18:46.72,0:18:49.80,中文,,0,0,0,,就在狗的位置放一个新的根
Dialogue: 0,0:18:49.80,0:18:53.04,英文,,0,0,0,,So I can look through all these nodes, and I can see who would be a good fit.
Dialogue: 0,0:18:49.80,0:18:53.04,中文,,0,0,0,,我可以浏览所有这些节点 看看谁是合适的人选
Dialogue: 0,0:18:53.04,0:18:59.88,英文,,0,0,0,,And it turns out that, I guess I kind of spoiled it earlier, but I think cat is a good fit, and I think elf is a good fit.
Dialogue: 0,0:18:53.04,0:18:59.88,中文,,0,0,0,,原来如此 我想我可能有点提前泄露了 但我认为cat是个不错的选择 我认为elf也是个不错的选择
Dialogue: 0,0:18:59.88,0:19:01.15,英文,,0,0,0,,Why is that?
Dialogue: 0,0:18:59.88,0:19:01.15,中文,,0,0,0,,为什么呢
Dialogue: 0,0:19:01.15,0:19:05.17,英文,,0,0,0,,Because if I put cat up here, everything to the left is less than cat.
Dialogue: 0,0:19:01.15,0:19:05.17,中文,,0,0,0,,因为如果我把cat放在这里 左边的所有东西都小于cat
Dialogue: 0,0:19:05.17,0:19:06.09,英文,,0,0,0,,That's good.
Dialogue: 0,0:19:05.17,0:19:06.09,中文,,0,0,0,,那挺好的
Dialogue: 0,0:19:06.09,0:19:08.29,英文,,0,0,0,,Everything to the right is greater than cat.
Dialogue: 0,0:19:06.09,0:19:08.29,中文,,0,0,0,,右边的所有东西都大于cat
Dialogue: 0,0:19:08.29,0:19:09.37,英文,,0,0,0,,I like that.
Dialogue: 0,0:19:08.29,0:19:09.37,中文,,0,0,0,,我喜欢这个
Dialogue: 0,0:19:09.37,0:19:11.33,英文,,0,0,0,,What if I put Elf at the top?
Dialogue: 0,0:19:09.37,0:19:11.33,中文,,0,0,0,,如果我把elf放在顶部会怎么样
Dialogue: 0,0:19:11.33,0:19:14.74,英文,,0,0,0,,Well, then everything to the left, ABC, they're all less than Elf.
Dialogue: 0,0:19:11.33,0:19:14.74,中文,,0,0,0,,那么 左边的一切 ABC 它们都小于elf
Dialogue: 0,0:19:14.74,0:19:18.66,英文,,0,0,0,,And everything to the right, FGE, they're all greater than Elf.
Dialogue: 0,0:19:14.74,0:19:18.66,中文,,0,0,0,,右边的一切 FGE 它们都大于elf
Dialogue: 0,0:19:18.66,0:19:21.72,英文,,0,0,0,,So Cat and Elf would be good choices.
Dialogue: 0,0:19:18.66,0:19:21.72,中文,,0,0,0,,所以cat和elf会是不错的选择
Dialogue: 0,0:19:21.72,0:19:23.25,英文,,0,0,0,,So what makes them good?
Dialogue: 0,0:19:21.72,0:19:23.25,中文,,0,0,0,,那么是什么使它们变得好
Dialogue: 0,0:19:23.25,0:19:26.91,英文,,0,0,0,,How do I generalize this to deleting anything I want?
Dialogue: 0,0:19:23.25,0:19:26.91,中文,,0,0,0,,我如何将这个推广到删除我想要的任何东西
Dialogue: 0,0:19:26.91,0:19:36.57,英文,,0,0,0,,Well, the thing that makes Cat special and the thing that makes Elf special is Cat, sometimes people call it the predecessor, is the largest thing on the left side of Dog.
Dialogue: 0,0:19:26.91,0:19:36.57,中文,,0,0,0,,使cat特殊的东西和使elf特殊的东西是cat 有时人们称之为前任 是Dog左侧最大的东西
Dialogue: 0,0:19:36.57,0:19:38.99,英文,,0,0,0,,So I look on the left side of Dog, there's all this stuff.
Dialogue: 0,0:19:36.57,0:19:38.99,中文,,0,0,0,,我看了dog的左边 那边有一堆东西
Dialogue: 0,0:19:38.99,0:19:41.52,英文,,0,0,0,,Cat is the greatest one of those.
Dialogue: 0,0:19:38.99,0:19:41.52,中文,,0,0,0,,cat是那些中最伟大的一个
Dialogue: 0,0:19:41.52,0:19:42.50,英文,,0,0,0,,And Elf...
Dialogue: 0,0:19:41.52,0:19:42.50,中文,,0,0,0,,还有elf...
Dialogue: 0,0:19:42.50,0:19:45.94,英文,,0,0,0,,It's the predecessor, or I guess the successor, of dog.
Dialogue: 0,0:19:42.50,0:19:45.94,中文,,0,0,0,,它是dog的前身 或者我猜应该说是后继者
Dialogue: 0,0:19:45.94,0:19:50.02,英文,,0,0,0,,And it's the lowest thing on the right side of dog.
Dialogue: 0,0:19:45.94,0:19:50.02,中文,,0,0,0,,它是dog右边最低的东西
Dialogue: 0,0:19:50.02,0:19:51.63,英文,,0,0,0,,So I go to the right half of dog.
Dialogue: 0,0:19:50.02,0:19:51.63,中文,,0,0,0,,我去了dog的右半边
Dialogue: 0,0:19:51.63,0:19:52.69,英文,,0,0,0,,I find a tree.
Dialogue: 0,0:19:51.63,0:19:52.69,中文,,0,0,0,,我找到了一棵树
Dialogue: 0,0:19:52.69,0:19:56.39,英文,,0,0,0,,Alpha is the lowest thing on the left side.
Dialogue: 0,0:19:52.69,0:19:56.39,中文,,0,0,0,,Alpha是左侧最低的东西
Dialogue: 0,0:19:56.39,0:20:01.85,英文,,0,0,0,,So I can promote either of these to be the new root, and everything is good.
Dialogue: 0,0:19:56.39,0:20:01.85,中文,,0,0,0,,我可以提升其中任何一个成为新的根 一切都好
Dialogue: 0,0:20:01.85,0:20:02.71,英文,,0,0,0,,Or is it?
Dialogue: 0,0:20:01.85,0:20:02.71,中文,,0,0,0,,还是吗
Dialogue: 0,0:20:02.71,0:20:06.98,英文,,0,0,0,,Because what if Cat or Elf had two children?
Dialogue: 0,0:20:02.71,0:20:06.98,中文,,0,0,0,,因为如果cat或elf有两个子节点呢
Dialogue: 0,0:20:06.98,0:20:10.92,英文,,0,0,0,,Then wouldn't I have to go and delete that in some other fancy way too?
Dialogue: 0,0:20:06.98,0:20:10.92,中文,,0,0,0,,那我是不是还得以某种花哨的方式去删除它
Dialogue: 0,0:20:10.92,0:20:19.08,英文,,0,0,0,,But it turns out we don't have to worry about that because Cat or Elf, the successor or the predecessor, is guaranteed to be one of my easy cases.
Dialogue: 0,0:20:10.92,0:20:19.08,中文,,0,0,0,,但事实证明 我们不必担心这个 因为cat或elf 继任者或前任 保证是我容易处理的情况之一
Dialogue: 0,0:20:19.08,0:20:21.99,英文,,0,0,0,,It will either have zero children or one children.
Dialogue: 0,0:20:19.08,0:20:21.99,中文,,0,0,0,,它要么没有子节点 要么有一个子节点
Dialogue: 0,0:20:21.99,0:20:23.45,英文,,0,0,0,,And you can think about why.
Dialogue: 0,0:20:21.99,0:20:23.45,中文,,0,0,0,,你可以考虑一下为什么
Dialogue: 0,0:20:23.45,0:20:31.27,英文,,0,0,0,,It might not make total sense right now, but maybe go home, like, when you're going to sleep, try and think, why, oh, why can't Cat have two children?
Dialogue: 0,0:20:23.45,0:20:31.27,中文,,0,0,0,,现在可能不太明白 但也许回家的时候 在你要睡觉的时候 试着思考一下 为什么cat不能有两个子节点
Dialogue: 0,0:20:31.27,0:20:34.95,英文,,0,0,0,,Well, it's because if Cat had two children, it would no longer be the predecessor.
Dialogue: 0,0:20:31.27,0:20:34.95,中文,,0,0,0,,这是因为如果cat有两个子节点 它就不再是前任了
Dialogue: 0,0:20:34.95,0:20:37.47,英文,,0,0,0,,Cat's right child would be the true predecessor.
Dialogue: 0,0:20:34.95,0:20:37.47,中文,,0,0,0,,猫的右子节点将成为真正的前任
Dialogue: 0,0:20:37.47,0:20:41.67,英文,,0,0,0,,And if Elf had two children, Elf's left child would be the true successor.
Dialogue: 0,0:20:37.47,0:20:41.67,中文,,0,0,0,,如果elf有两个子节点 elf的左子节点将成为真正的后继者
Dialogue: 0,0:20:41.67,0:20:49.61,英文,,0,0,0,,So we can guarantee that the real predecessor or the real successor only has zero children or one children or one child, I guess.
Dialogue: 0,0:20:41.67,0:20:49.61,中文,,0,0,0,,我们可以确保真正的前任或真正的后继者只有零个子节点或一个子节点 我猜
Dialogue: 0,0:20:49.61,0:20:52.85,英文,,0,0,0,,And so if I want to replace Dog with cat.
Dialogue: 0,0:20:49.61,0:20:52.85,中文,,0,0,0,,如果我想要替换有猫的dog
Dialogue: 0,0:20:52.85,0:20:57.80,英文,,0,0,0,,I can just delete cat using one of my easy cases, put it in the root, and I'm all done.
Dialogue: 0,0:20:52.85,0:20:57.80,中文,,0,0,0,,我只需使用我的一个简单情况删除猫 将其放入根目录 然后就完成了
Dialogue: 0,0:20:57.80,0:21:03.50,英文,,0,0,0,,Because in this case, I could take elf, I could swap it into the root, and then delete elf from the tree.
Dialogue: 0,0:20:57.80,0:21:03.50,中文,,0,0,0,,因为在这种情况下 我可以拿走elf 把它换到根目录 然后从树中删除elf
Dialogue: 0,0:21:03.50,0:21:04.58,英文,,0,0,0,,OK.
Dialogue: 0,0:21:04.58,0:21:05.92,英文,,0,0,0,,Here's another picture to convince you.
Dialogue: 0,0:21:04.58,0:21:05.92,中文,,0,0,0,,这里有另一张图片来说服你
Dialogue: 0,0:21:05.92,0:21:07.26,英文,,0,0,0,,So how do I delete K?
Dialogue: 0,0:21:05.92,0:21:07.26,中文,,0,0,0,,那么我怎么删除 K 呢
Dialogue: 0,0:21:07.26,0:21:13.20,英文,,0,0,0,,Well, again, I need to find the successor or the predecessor of K. So I look in K's left tree.
Dialogue: 0,0:21:07.26,0:21:13.20,中文,,0,0,0,,同样 我需要找到 K 的后继或前驱 我查看 K 的左子树
Dialogue: 0,0:21:13.20,0:21:15.70,英文,,0,0,0,,What's the biggest thing in this left tree?
Dialogue: 0,0:21:13.20,0:21:15.70,中文,,0,0,0,,这左边树上最大的东西是什么
Dialogue: 0,0:21:15.70,0:21:18.08,英文,,0,0,0,,I think it's G. What about the right side?
Dialogue: 0,0:21:15.70,0:21:18.08,中文,,0,0,0,,我觉得是 G 右边呢
Dialogue: 0,0:21:18.08,0:21:19.63,英文,,0,0,0,,What's the least thing?
Dialogue: 0,0:21:18.08,0:21:19.63,中文,,0,0,0,,最小的东西是什么
Dialogue: 0,0:21:19.63,0:21:21.13,英文,,0,0,0,,The thing with the lowest value?
Dialogue: 0,0:21:19.63,0:21:21.13,中文,,0,0,0,,值最小的东西
Dialogue: 0,0:21:21.13,0:21:23.31,英文,,0,0,0,,I think it's M, I hope.
Dialogue: 0,0:21:21.13,0:21:23.31,中文,,0,0,0,,我觉得是 M 希望没错
Dialogue: 0,0:21:23.31,0:21:29.49,英文,,0,0,0,,So G and M would be good choices, because if I promote them to the root, then everything on the left is less than G.
Dialogue: 0,0:21:23.31,0:21:29.49,中文,,0,0,0,,那么 G 和 M 应该是不错的选择 因为如果我把它们提升为根 那么左边的所有东西都比 G 小
Dialogue: 0,0:21:29.49,0:21:33.49,英文,,0,0,0,, Everything on the right is greater than G. So how do I delete G from the tree?
Dialogue: 0,0:21:29.49,0:21:33.49,中文,,0,0,0,,右边的所有东西都比 G 大 那么我怎么从树中删除 G 呢
Dialogue: 0,0:21:33.49,0:21:39.33,英文,,0,0,0,,Well, I can use my previous easy case, where I just take E, point it at F. So look, G is gone.
Dialogue: 0,0:21:33.49,0:21:39.33,中文,,0,0,0,,我可以利用之前简单的情况 只需要把 E 指向 F 看 G 就消失了
Dialogue: 0,0:21:39.33,0:21:41.05,英文,,0,0,0,,And then I swap it into the root.
Dialogue: 0,0:21:39.33,0:21:41.05,中文,,0,0,0,,然后我把它交换到根节点
Dialogue: 0,0:21:41.05,0:21:43.09,英文,,0,0,0,,And now K is deleted.
Dialogue: 0,0:21:41.05,0:21:43.09,中文,,0,0,0,,现在K被删除了
Dialogue: 0,0:21:43.09,0:21:44.87,英文,,0,0,0,,So I delete K. I need a new root.
Dialogue: 0,0:21:43.09,0:21:44.87,中文,,0,0,0,,我删除K 我需要一个新的根节点
Dialogue: 0,0:21:44.87,0:21:46.43,英文,,0,0,0,,I promote G to the root.
Dialogue: 0,0:21:44.87,0:21:46.43,中文,,0,0,0,,我把G提升为根节点
Dialogue: 0,0:21:46.43,0:21:51.10,英文,,0,0,0,,And I delete G using one of my easy cases.
Dialogue: 0,0:21:46.43,0:21:51.10,中文,,0,0,0,,然后我使用我的一种简单情况删除G
Dialogue: 0,0:21:51.10,0:21:52.16,英文,,0,0,0,,So that's how I delete.
Dialogue: 0,0:21:51.10,0:21:52.16,中文,,0,0,0,,这就是我删除的方法
Dialogue: 0,0:21:52.16,0:21:53.20,英文,,0,0,0,,I have three cases.
Dialogue: 0,0:21:52.16,0:21:53.20,中文,,0,0,0,,我有三种情况
Dialogue: 0,0:21:53.20,0:21:54.78,英文,,0,0,0,,Two of them were pretty easy.
Dialogue: 0,0:21:53.20,0:21:54.78,中文,,0,0,0,,其中两个相当容易
Dialogue: 0,0:21:54.78,0:21:58.02,英文,,0,0,0,,One of them a little bit harder, but we worked it out.
Dialogue: 0,0:21:54.78,0:21:58.02,中文,,0,0,0,,其中一个有点难 但我们解决了
Dialogue: 0,0:21:58.02,0:22:04.09,英文,,0,0,0,,Question?
Dialogue: 0,0:21:58.02,0:22:04.09,中文,,0,0,0,,问题
Dialogue: 0,0:22:04.09,0:22:06.73,英文,,0,0,0,,Yeah, that's a great question, which is, do you have to pick G or M?
Dialogue: 0,0:22:04.09,0:22:06.73,中文,,0,0,0,,是的 这是一个很棒的问题 那就是 你必须选择 G 还是 M
Dialogue: 0,0:22:06.73,0:22:09.09,英文,,0,0,0,,I think both would be equally OK here.
Dialogue: 0,0:22:06.73,0:22:09.09,中文,,0,0,0,,我认为在这里两者都可以
Dialogue: 0,0:22:09.09,0:22:12.63,英文,,0,0,0,,Maybe there's some weird case where you prefer one over the other, but I like both here.
Dialogue: 0,0:22:09.09,0:22:12.63,中文,,0,0,0,,也许有一些奇怪的情况 你更喜欢其中一个 但我在这里都喜欢
Dialogue: 0,0:22:12.63,0:22:15.13,英文,,0,0,0,,So no strong preference.
Dialogue: 0,0:22:12.63,0:22:15.13,中文,,0,0,0,,没有强烈的偏好
Dialogue: 0,0:22:15.13,0:22:18.73,英文,,0,0,0,,I think we chose G because it's a little bit harder just to show you.
Dialogue: 0,0:22:15.13,0:22:18.73,中文,,0,0,0,,我觉得我们选择了 G 是因为这样能更好地向你展示
Dialogue: 0,0:22:18.73,0:22:20.42,英文,,0,0,0,,OK.
Dialogue: 0,0:22:20.42,0:22:20.92,英文,,0,0,0,,Great.
Dialogue: 0,0:22:20.42,0:22:20.92,中文,,0,0,0,,很好
Dialogue: 0,0:22:20.92,0:22:23.84,英文,,0,0,0,,I'm almost done with binary search trees, which is good.
Dialogue: 0,0:22:20.92,0:22:23.84,中文,,0,0,0,,我快要完成二叉搜索树了 这很不错
Dialogue: 0,0:22:23.84,0:22:26.18,英文,,0,0,0,,Any other questions, thoughts?
Dialogue: 0,0:22:23.84,0:22:26.18,中文,,0,0,0,,有其他问题或想法吗
Dialogue: 0,0:22:26.18,0:22:27.06,英文,,0,0,0,,OK.
Dialogue: 0,0:22:27.06,0:22:35.77,英文,,0,0,0,,So a really quick final note is, remember, the whole point of building binary search trees, sometimes at this point, people get so enamored with the binary search trees.
Dialogue: 0,0:22:27.06,0:22:35.77,中文,,0,0,0,,最后一个快速提示是 记住 构建二叉搜索树的整个目的 有时在这一点上 人们会对二叉搜索树产生浓厚的兴趣
Dialogue: 0,0:22:35.77,0:22:37.37,英文,,0,0,0,,They're like, this is so beautiful.
Dialogue: 0,0:22:35.77,0:22:37.37,中文,,0,0,0,,他们就像 这太美了
Dialogue: 0,0:22:37.37,0:22:39.19,英文,,0,0,0,,It's the most beautiful thing I've ever seen.
Dialogue: 0,0:22:37.37,0:22:39.19,中文,,0,0,0,,这是我见过的最美的东西
Dialogue: 0,0:22:39.19,0:22:40.21,英文,,0,0,0,,Their eyes are watering.
Dialogue: 0,0:22:39.19,0:22:40.21,中文,,0,0,0,,他们的眼睛含着泪水
Dialogue: 0,0:22:40.21,0:22:41.41,英文,,0,0,0,,And they forget.
Dialogue: 0,0:22:40.21,0:22:41.41,中文,,0,0,0,,然后他们忘记了
Dialogue: 0,0:22:41.41,0:22:45.17,英文,,0,0,0,,that the whole point of building the binary search tree is to represent a set.
Dialogue: 0,0:22:41.41,0:22:45.17,中文,,0,0,0,,建立二叉搜索树的整个目的是表示一个集合
Dialogue: 0,0:22:45.17,0:22:56.48,英文,,0,0,0,,The whole point of doing this beautiful data structure is that we're the monks in the back, and we're using the binary search tree to represent an unordered set of items with no duplicates.
Dialogue: 0,0:22:45.17,0:22:56.48,中文,,0,0,0,,创建这种美丽的数据结构的整个目的是 我们是后方的僧侣 我们使用二叉搜索树来表示一个无序的、不重复的项目集
Dialogue: 0,0:22:56.48,0:22:58.60,英文,,0,0,0,,That's what the people in the cave want to see.
Dialogue: 0,0:22:56.48,0:22:58.60,中文,,0,0,0,,这就是洞中的人们想要看到的
Dialogue: 0,0:22:58.60,0:23:06.93,英文,,0,0,0,,So the whole point of building the set is to give the user all the set methods, like insert, contains, delete, all the things that we saw from before.
Dialogue: 0,0:22:58.60,0:23:06.93,中文,,0,0,0,,构建整个集合的目的就是为用户提供所有的集合方法 比如插入、包含、删除 所有我们之前看到的东西
Dialogue: 0,0:23:06.93,0:23:08.33,英文,,0,0,0,,That's what a set is for.
Dialogue: 0,0:23:06.93,0:23:08.33,中文,,0,0,0,,这就是集合的用途
Dialogue: 0,0:23:08.33,0:23:09.95,英文,,0,0,0,,And that's how we built this thing.
Dialogue: 0,0:23:08.33,0:23:09.95,中文,,0,0,0,,这就是我们构建这个东西的方式
Dialogue: 0,0:23:09.95,0:23:12.26,英文,,0,0,0,,But what if the users wanted a map?
Dialogue: 0,0:23:09.95,0:23:12.26,中文,,0,0,0,,但是如果用户想要一个映射呢
Dialogue: 0,0:23:12.26,0:23:14.82,英文,,0,0,0,,So what if the people in the cave were like, I don't want to watch the set show.
Dialogue: 0,0:23:12.26,0:23:14.82,中文,,0,0,0,,那么如果洞里的人们说 我不想看集合的节目
Dialogue: 0,0:23:14.82,0:23:15.92,英文,,0,0,0,,I've seen that before.
Dialogue: 0,0:23:14.82,0:23:15.92,中文,,0,0,0,,我以前看过了
Dialogue: 0,0:23:15.92,0:23:17.34,英文,,0,0,0,,I want to see the map show.
Dialogue: 0,0:23:15.92,0:23:17.34,中文,,0,0,0,,我想看地图的节目
Dialogue: 0,0:23:17.34,0:23:22.27,英文,,0,0,0,,I want you to show me a data structure where every item maps to a number.
Dialogue: 0,0:23:17.34,0:23:22.27,中文,,0,0,0,,我想让你展示给我一个数据结构 其中每个项目都映射到一个数字
Dialogue: 0,0:23:22.27,0:23:26.73,英文,,0,0,0,,So, I don't know, sumo mo maps to 1, mo maps to 2, and so forth.
Dialogue: 0,0:23:22.27,0:23:26.73,中文,,0,0,0,,我不知道 sumo mo映射到1 mo映射到2 依此类推
Dialogue: 0,0:23:26.73,0:23:30.01,英文,,0,0,0,,So it turns out you can still use binary search trees to do that.
Dialogue: 0,0:23:26.73,0:23:30.01,中文,,0,0,0,,事实证明 你仍然可以使用二叉搜索树来实现这个目的
Dialogue: 0,0:23:30.01,0:23:44.00,英文,,0,0,0,,All you have to do is for every item, in addition to storing the key, that is, the word sumomo, you also store the mapping, which is that sumomo is associated with 1, and uchi is associated with 1.
Dialogue: 0,0:23:30.01,0:23:44.00,中文,,0,0,0,,你所需要做的就是对于每个项目 除了存储关键字 也就是单词sumomo 你还需要存储映射 也就是sumomo关联到1 uchi关联到1
Dialogue: 0,0:23:44.00,0:23:48.84,英文,,0,0,0,,So this way, you can still use the binary search tree structure to build a map.
Dialogue: 0,0:23:44.00,0:23:48.84,中文,,0,0,0,,这样 你仍然可以使用二叉搜索树结构构建一个映射
Dialogue: 0,0:23:48.84,0:23:52.46,英文,,0,0,0,,And when someone asks you, hey, what's the number associated with Mo?
Dialogue: 0,0:23:48.84,0:23:52.46,中文,,0,0,0,,当有人问你 嘿 Mo关联的数字是多少
Dialogue: 0,0:23:52.46,0:23:57.46,英文,,0,0,0,,Well, then you start here, you search, you search, you find Mo, and you return the corresponding number, which is 2.
Dialogue: 0,0:23:52.46,0:23:57.46,中文,,0,0,0,,好吧 然后你从这里开始 进行搜索 搜索 找到Mo 然后返回相应的数字 也就是2
Dialogue: 0,0:23:57.46,0:24:01.59,英文,,0,0,0,,So this way, when the user says, hey, what's the number corresponding to Mo?
Dialogue: 0,0:23:57.46,0:24:01.59,中文,,0,0,0,,这样 当用户说 嘿 对应于Mo的数字是多少
Dialogue: 0,0:24:01.59,0:24:04.91,英文,,0,0,0,,You can very quickly find the number 2, which is good.
Dialogue: 0,0:24:01.59,0:24:04.91,中文,,0,0,0,,你可以很快地找到数字2 这很好
Dialogue: 0,0:24:04.91,0:24:09.11,英文,,0,0,0,,So if you wanted to represent a map, this is how you would do it for the users.
Dialogue: 0,0:24:04.91,0:24:09.11,中文,,0,0,0,,如果你想表示一个地图 这就是你为用户做的方式
Dialogue: 0,0:24:09.11,0:24:10.19,英文,,0,0,0,,It's kind of like a set.
Dialogue: 0,0:24:09.11,0:24:10.19,中文,,0,0,0,,这有点像一个集合
Dialogue: 0,0:24:10.19,0:24:19.94,英文,,0,0,0,,Just throw in an extra value question.
Dialogue: 0,0:24:10.19,0:24:19.94,中文,,0,0,0,,只是加入一个额外的值问题
Dialogue: 0,0:24:19.94,0:24:24.94,英文,,0,0,0,,Yeah, that's a great question, which is, we said sets are unordered, but the binary search tree is ordered.
Dialogue: 0,0:24:19.94,0:24:24.94,中文,,0,0,0,,是的 这是一个很棒的问题 就是 我们说集合是无序的 但二叉搜索树是有序的
Dialogue: 0,0:24:24.94,0:24:25.73,英文,,0,0,0,,So what the heck?
Dialogue: 0,0:24:24.94,0:24:25.73,中文,,0,0,0,,那到底是怎么回事
Dialogue: 0,0:24:25.73,0:24:29.23,英文,,0,0,0,,Well, remember, the users, they don't care about order.
Dialogue: 0,0:24:25.73,0:24:29.23,中文,,0,0,0,,记住 用户们不在乎顺序
Dialogue: 0,0:24:29.23,0:24:32.29,英文,,0,0,0,,But that doesn't mean we can't use order to make things fast.
Dialogue: 0,0:24:29.23,0:24:32.29,中文,,0,0,0,,但这并不意味着我们不能利用顺序来加快事情
Dialogue: 0,0:24:32.29,0:24:37.23,英文,,0,0,0,,So the idea here is that we are secretly, we're the monks, we're using order to make things fast.
Dialogue: 0,0:24:32.29,0:24:37.23,中文,,0,0,0,,这里的想法是 我们秘密地 我们就像僧侣一样 利用顺序来加快事情
Dialogue: 0,0:24:37.23,0:24:40.28,英文,,0,0,0,,But the people in the cave, they don't necessarily care about order.
Dialogue: 0,0:24:37.23,0:24:40.28,中文,,0,0,0,,但是洞穴里的人们未必在乎顺序
Dialogue: 0,0:24:40.28,0:24:41.90,英文,,0,0,0,,That's a great question.
Dialogue: 0,0:24:40.28,0:24:41.90,中文,,0,0,0,,那是个很棒的问题
Dialogue: 0,0:24:41.90,0:24:43.16,英文,,0,0,0,,OK.
Dialogue: 0,0:24:43.16,0:24:43.70,英文,,0,0,0,,Great.
Dialogue: 0,0:24:43.16,0:24:43.70,中文,,0,0,0,,太棒了
Dialogue: 0,0:24:43.70,0:24:45.08,英文,,0,0,0,,So that's VsNaps.
Dialogue: 0,0:24:43.70,0:24:45.08,中文,,0,0,0,,那就是VsNaps
Dialogue: 0,0:24:45.08,0:24:47.63,英文,,0,0,0,,Here's a summary I'm not going to read, but you can look at it later.
Dialogue: 0,0:24:45.08,0:24:47.63,中文,,0,0,0,,这是我不打算读的摘要 但你可以稍后看看
Dialogue: 0,0:24:47.63,0:24:49.57,英文,,0,0,0,,And if you're working on the lab, look at this slide.
Dialogue: 0,0:24:47.63,0:24:49.57,中文,,0,0,0,,如果你在做实验 看看这张幻灯片
Dialogue: 0,0:24:49.57,0:24:50.73,英文,,0,0,0,,It's kind of cool.
Dialogue: 0,0:24:49.57,0:24:50.73,中文,,0,0,0,,挺酷的
Dialogue: 0,0:24:50.73,0:24:51.79,英文,,0,0,0,,OK.
Dialogue: 0,0:24:51.79,0:24:55.11,英文,,0,0,0,,Questions before I speed into B-trees?
Dialogue: 0,0:24:51.79,0:24:55.11,中文,,0,0,0,,在我进入B树之前有问题吗
Dialogue: 0,0:24:55.11,0:24:56.21,英文,,0,0,0,,OK.
Dialogue: 0,0:24:56.21,0:24:57.49,英文,,0,0,0,,So we did binary search trees.
Dialogue: 0,0:24:56.21,0:24:57.49,中文,,0,0,0,,我们做了二叉搜索树
Dialogue: 0,0:24:57.49,0:24:58.47,英文,,0,0,0,,We figured out how to do it.
Dialogue: 0,0:24:57.49,0:24:58.47,中文,,0,0,0,,我们弄清楚了怎么做
Dialogue: 0,0:24:58.47,0:25:03.96,英文,,0,0,0,,Quick question.
Dialogue: 0,0:24:58.47,0:25:03.96,中文,,0,0,0,,快问
Dialogue: 0,0:25:03.96,0:25:05.98,英文,,0,0,0,,The question was, how do I implement this thing?
Dialogue: 0,0:25:03.96,0:25:05.98,中文,,0,0,0,,问题是 我怎么实现这个东西
Dialogue: 0,0:25:05.98,0:25:07.52,英文,,0,0,0,,I would say try in lab.
Dialogue: 0,0:25:05.98,0:25:07.52,中文,,0,0,0,,我会说在实验室试试
Dialogue: 0,0:25:07.52,0:25:07.90,英文,,0,0,0,,You'll see.
Dialogue: 0,0:25:07.52,0:25:07.90,中文,,0,0,0,,你会看到的
Dialogue: 0,0:25:07.90,0:25:12.75,英文,,0,0,0,,But you'll have a class, and it'll be recursive.
Dialogue: 0,0:25:07.90,0:25:12.75,中文,,0,0,0,,但你会有一个类 而且它会是递归的
Dialogue: 0,0:25:12.75,0:25:16.10,英文,,0,0,0,,Great, so onwards to features.
Dialogue: 0,0:25:12.75,0:25:16.10,中文,,0,0,0,,那就继续看特性
Dialogue: 0,0:25:16.10,0:25:21.30,英文,,0,0,0,,I'm not going to cover all these slides live, but I will quickly say.
Dialogue: 0,0:25:16.10,0:25:21.30,中文,,0,0,0,,我不会现场介绍所有这些幻灯片 但我会迅速说一下
Dialogue: 0,0:25:21.30,0:25:22.94,英文,,0,0,0,,This is something that someone brought up earlier.
Dialogue: 0,0:25:21.30,0:25:22.94,中文,,0,0,0,,这是之前有人提到的事情
Dialogue: 0,0:25:22.94,0:25:31.79,英文,,0,0,0,,So that thing that I told you to hold on to, we're paying it off here, which is we said that if the tree is bushy, you get wonderful log n performance.
Dialogue: 0,0:25:22.94,0:25:31.79,中文,,0,0,0,,我告诉你要牢牢记住的那个东西 在这里我们正在偿还 也就是说 如果树很茂密 你会得到美妙的log n性能
Dialogue: 0,0:25:31.79,0:25:39.41,英文,,0,0,0,,For this tree to get taller by one and for your operations to get slower by one time step, you need to double the items in the tree.
Dialogue: 0,0:25:31.79,0:25:39.41,中文,,0,0,0,,为了让这棵树增高一次 使你的操作变慢一次 你需要将树中的项目加倍
Dialogue: 0,0:25:39.41,0:25:40.55,英文,,0,0,0,,That's a lot.
Dialogue: 0,0:25:39.41,0:25:40.55,中文,,0,0,0,,那真的很多
Dialogue: 0,0:25:40.55,0:25:43.93,英文,,0,0,0,,But what if your tree looked like this, this wimpy little spindly tree?
Dialogue: 0,0:25:40.55,0:25:43.93,中文,,0,0,0,,但是如果你的树是这样的 这棵瘦弱的小树呢
Dialogue: 0,0:25:43.93,0:25:46.03,英文,,0,0,0,,Well, in this case,
Dialogue: 0,0:25:43.93,0:25:46.03,中文,,0,0,0,,在这种情况下
Dialogue: 0,0:25:46.03,0:25:52.00,英文,,0,0,0,,If you just add a single item to the spindly tall tree, then your runtime gets slower by one.
Dialogue: 0,0:25:46.03,0:25:52.00,中文,,0,0,0,,如果你只是在那棵纤细的高树上添加一个项目 那么你的运行时间会慢一个
Dialogue: 0,0:25:52.00,0:25:54.18,英文,,0,0,0,,You can think of what character that is.
Dialogue: 0,0:25:52.00,0:25:54.18,中文,,0,0,0,,你可以考虑一下那是什么字符
Dialogue: 0,0:25:54.18,0:25:59.00,英文,,0,0,0,,Think of the character of the bushy tree, which we talked about earlier, and the character of the spindly tree.
Dialogue: 0,0:25:54.18,0:25:59.00,中文,,0,0,0,,想想我们之前谈论过的那个繁茂树的性格和纤细树的性格
Dialogue: 0,0:25:59.00,0:26:06.64,英文,,0,0,0,,So the bushy tree, its character is, if you double the amount of items, the tree gets taller by one, and the operations get slower by one.
Dialogue: 0,0:25:59.00,0:26:06.64,中文,,0,0,0,,那个繁茂的树 它的性格是 如果你将项目数量翻倍 树就会变得更高一级 操作会减慢一个
Dialogue: 0,0:26:06.64,0:26:08.18,英文,,0,0,0,,That's log-in behavior.
Dialogue: 0,0:26:06.64,0:26:08.18,中文,,0,0,0,,这就是登录行为
Dialogue: 0,0:26:08.18,0:26:15.10,英文,,0,0,0,,By contrast, on this wimpy little spindly tree, if I add just a single item, the tree gets taller by one.
Dialogue: 0,0:26:08.18,0:26:15.10,中文,,0,0,0,,相比之下 对于这颗瘦弱的小树 如果我只添加一个项目 树就会变得更高一级
Dialogue: 0,0:26:15.10,0:26:17.45,英文,,0,0,0,,And then my operations get slower by one.
Dialogue: 0,0:26:15.10,0:26:17.45,中文,,0,0,0,,然后我的操作慢了一个
Dialogue: 0,0:26:17.45,0:26:20.88,英文,,0,0,0,,So if I add an item, the operations get slower by one.
Dialogue: 0,0:26:17.45,0:26:20.88,中文,,0,0,0,,如果我添加一个项目 操作会慢一个
Dialogue: 0,0:26:20.88,0:26:22.88,英文,,0,0,0,,Well, that's linear time.
Dialogue: 0,0:26:20.88,0:26:22.88,中文,,0,0,0,,这是线性时间
Dialogue: 0,0:26:22.88,0:26:25.28,英文,,0,0,0,,So turns out...
Dialogue: 0,0:26:22.88,0:26:25.28,中文,,0,0,0,,所以结果是...
Dialogue: 0,0:26:25.28,0:26:32.27,英文,,0,0,0,,My bushy trees have log n runtime, but my spindly tall trees, they have theta of n runtime.
Dialogue: 0,0:26:25.28,0:26:32.27,中文,,0,0,0,,我的茂密树有对数n的运行时间 但是我的纤细高树 它们有n的运行时间
Dialogue: 0,0:26:32.27,0:26:37.75,英文,,0,0,0,,So suddenly, that beautiful log n excellent performance from before, it seems like we're in trouble.
Dialogue: 0,0:26:32.27,0:26:37.75,中文,,0,0,0,,突然之间 之前那美妙的对数n优异性能 似乎我们遇到麻烦了
Dialogue: 0,0:26:37.75,0:26:43.87,英文,,0,0,0,,Because if the tree is of height n, that is, it is spindly, then we have a problem.
Dialogue: 0,0:26:37.75,0:26:43.87,中文,,0,0,0,,因为如果树的高度是n 也就是说 它很纤细 那么我们就有问题了
Dialogue: 0,0:26:43.87,0:26:45.65,英文,,0,0,0,,Searching through this thing is slow.
Dialogue: 0,0:26:43.87,0:26:45.65,中文,,0,0,0,,搜索这个东西很慢
Dialogue: 0,0:26:45.65,0:26:47.47,英文,,0,0,0,,Finding something is slow.
Dialogue: 0,0:26:45.65,0:26:47.47,中文,,0,0,0,,找东西很慢
Dialogue: 0,0:26:47.47,0:26:48.85,英文,,0,0,0,,Adding things is slow.
Dialogue: 0,0:26:47.47,0:26:48.85,中文,,0,0,0,,添加东西很慢
Dialogue: 0,0:26:48.85,0:26:50.57,英文,,0,0,0,,So I don't like this tree on the right.
Dialogue: 0,0:26:48.85,0:26:50.57,中文,,0,0,0,,我不喜欢右边的这棵树
Dialogue: 0,0:26:50.57,0:26:53.13,英文,,0,0,0,,I want trees that look like the one on the left.
Dialogue: 0,0:26:50.57,0:26:53.13,中文,,0,0,0,,我想要左边那棵树那样的树
Dialogue: 0,0:26:53.13,0:26:54.49,英文,,0,0,0,,How do I achieve that?
Dialogue: 0,0:26:53.13,0:26:54.49,中文,,0,0,0,,我怎么实现这个
Dialogue: 0,0:26:54.49,0:26:56.14,英文,,0,0,0,,OK, here are some extra slides.
Dialogue: 0,0:26:54.49,0:26:56.14,中文,,0,0,0,,这里有一些额外的幻灯片
Dialogue: 0,0:26:56.14,0:26:59.44,英文,,0,0,0,,I'm not going to read them, but there's a video if you're curious.
Dialogue: 0,0:26:56.14,0:26:59.44,中文,,0,0,0,,我不打算读它们 但如果你好奇的话 有一个视频
Dialogue: 0,0:26:59.44,0:27:04.84,英文,,0,0,0,,And especially if you're confused about Big O versus Big Theta, I like the video, but we're short on time.
Dialogue: 0,0:26:59.44,0:27:04.84,中文,,0,0,0,,尤其是如果你对大O和大Θ感到困惑的话 我喜欢这个视频 但我们时间不多
Dialogue: 0,0:27:04.84,0:27:08.59,英文,,0,0,0,,So I'm sorry, Big O. We're kicking you to the videos.
Dialogue: 0,0:27:04.84,0:27:08.59,中文,,0,0,0,,对不起 大O 我们把你踢到视频里了
Dialogue: 0,0:27:08.59,0:27:10.25,英文,,0,0,0,,OK.
Dialogue: 0,0:27:10.25,0:27:15.96,英文,,0,0,0,,So in order to really formally define what is bushy and what is spindly, we kind of get it.
Dialogue: 0,0:27:10.25,0:27:15.96,中文,,0,0,0,,为了真正正式地定义什么是浓密的和什么是细长的 我们有点明白了
Dialogue: 0,0:27:15.96,0:27:20.58,英文,,0,0,0,,We saw the pictures, and we said, yeah, this is bushy.
Dialogue: 0,0:27:15.96,0:27:20.58,中文,,0,0,0,,我们看到了图片 然后我们说 是的 这是浓密的
Dialogue: 0,0:27:20.58,0:27:21.44,英文,,0,0,0,,It's really full.
Dialogue: 0,0:27:20.58,0:27:21.44,中文,,0,0,0,,这真的很丰满
Dialogue: 0,0:27:21.44,0:27:22.28,英文,,0,0,0,,And this is spindly.
Dialogue: 0,0:27:21.44,0:27:22.28,中文,,0,0,0,,而这就是细长的
Dialogue: 0,0:27:22.28,0:27:23.66,英文,,0,0,0,,It's really wimpy and small.
Dialogue: 0,0:27:22.28,0:27:23.66,中文,,0,0,0,,它真的很瘦小
Dialogue: 0,0:27:23.66,0:27:28.89,英文,,0,0,0,,But let's really formally define what a bushy tree and a spindly tree is.
Dialogue: 0,0:27:23.66,0:27:28.89,中文,,0,0,0,,但让我们真正正式地定义一下什么是繁茂的树和细长的树
Dialogue: 0,0:27:28.89,0:27:33.91,英文,,0,0,0,,So to define it, I will say every node has a depth, which is how far away it is from the root.
Dialogue: 0,0:27:28.89,0:27:33.91,中文,,0,0,0,,为了定义它 我会说每个节点都有一个深度 也就是它离根节点有多远
Dialogue: 0,0:27:33.91,0:27:38.76,英文,,0,0,0,,So G, you are at depth 2, because you are 1, 2 links away from the root.
Dialogue: 0,0:27:33.91,0:27:38.76,中文,,0,0,0,,所以 G 你的深度是 2 因为你离根节点有 1、2 个链接
Dialogue: 0,0:27:38.76,0:27:42.89,英文,,0,0,0,,And S, you are 1, 2, 3, 4 links away from the root.
Dialogue: 0,0:27:38.76,0:27:42.89,中文,,0,0,0,,而 S 你离根节点有 1、2、3、4 个链接
Dialogue: 0,0:27:42.89,0:27:45.27,英文,,0,0,0,,So you are depth 4.
Dialogue: 0,0:27:42.89,0:27:45.27,中文,,0,0,0,,你的深度是 4
Dialogue: 0,0:27:45.27,0:27:46.81,英文,,0,0,0,,So just the vocabulary term.
Dialogue: 0,0:27:45.27,0:27:46.81,中文,,0,0,0,,只是词汇术语而已
Dialogue: 0,0:27:46.81,0:27:50.71,英文,,0,0,0,,And we say the root is depth 0, because it's 0 away from the root.
Dialogue: 0,0:27:46.81,0:27:50.71,中文,,0,0,0,,我们说根是深度0 因为它离根节点有0的距离
Dialogue: 0,0:27:50.71,0:27:51.43,英文,,0,0,0,,OK.
Dialogue: 0,0:27:51.43,0:27:54.57,英文,,0,0,0,,Then we say the height is however deep the deepest leaf is.
Dialogue: 0,0:27:51.43,0:27:54.57,中文,,0,0,0,,然后我们说高度是最深叶子的深度
Dialogue: 0,0:27:54.57,0:27:56.79,英文,,0,0,0,,So in this case, S was the deepest leaf.
Dialogue: 0,0:27:54.57,0:27:56.79,中文,,0,0,0,,在这种情况下 S是最深的叶子
Dialogue: 0,0:27:56.79,0:27:59.14,英文,,0,0,0,,So this tree has height 4.
Dialogue: 0,0:27:56.79,0:27:59.14,中文,,0,0,0,,这棵树的高度是4
Dialogue: 0,0:27:59.14,0:28:00.50,英文,,0,0,0,,Just some vocabulary.
Dialogue: 0,0:27:59.14,0:28:00.50,中文,,0,0,0,,只是一些词汇
Dialogue: 0,0:28:00.50,0:28:04.86,英文,,0,0,0,,You can also do things like average depth, although I won't run through the calculations, but you could.
Dialogue: 0,0:28:00.50,0:28:04.86,中文,,0,0,0,,你还可以做一些类似计算平均深度的事情 虽然我不会详细说明计算过程 但你可以
Dialogue: 0,0:28:04.86,0:28:13.47,英文,,0,0,0,,And so all of this is to say we can formally define height in order to show bushy trees and spindly trees.
Dialogue: 0,0:28:04.86,0:28:13.47,中文,,0,0,0,,所有这些都是为了表明我们可以正式定义树高 以展示繁茂的树和纤细的树
Dialogue: 0,0:28:13.47,0:28:14.46,英文,,0,0,0,,OK.
Dialogue: 0,0:28:14.46,0:28:18.58,英文,,0,0,0,,And we also saw earlier the height of the tree determines the worst-case runtime.
Dialogue: 0,0:28:14.46,0:28:18.58,中文,,0,0,0,,我们之前也看到了树的高度决定了最坏情况运行时间
Dialogue: 0,0:28:18.58,0:28:26.71,英文,,0,0,0,,So for example, if my tree is super tall, then in the worst case, I have to go all the way down the tree to find something, and that could be really slow.
Dialogue: 0,0:28:18.58,0:28:26.71,中文,,0,0,0,,比如说 如果我的树非常高 那么在最坏的情况下 我必须一直沿着树往下找 这可能会很慢
Dialogue: 0,0:28:26.71,0:28:27.59,英文,,0,0,0,,OK.
Dialogue: 0,0:28:27.59,0:28:29.93,英文,,0,0,0,,So again, trees can be spindly.
Dialogue: 0,0:28:27.59,0:28:29.93,中文,,0,0,0,,再次强调 树可能很瘦
Dialogue: 0,0:28:29.93,0:28:31.11,英文,,0,0,0,,Trees can be bushy.
Dialogue: 0,0:28:29.93,0:28:31.11,中文,,0,0,0,,树木可以长得茂密
Dialogue: 0,0:28:31.11,0:28:32.35,英文,,0,0,0,,We like the bushy ones.
Dialogue: 0,0:28:31.11,0:28:32.35,中文,,0,0,0,,我们喜欢那些茂密的
Dialogue: 0,0:28:32.35,0:28:35.33,英文,,0,0,0,,We don't like the spindly ones because they are slow.
Dialogue: 0,0:28:32.35,0:28:35.33,中文,,0,0,0,,我们不喜欢细长的 因为它们生长缓慢
Dialogue: 0,0:28:35.33,0:28:36.23,英文,,0,0,0,,So this one has a height of 6.
Dialogue: 0,0:28:35.33,0:28:36.23,中文,,0,0,0,,这个高度是6
Dialogue: 0,0:28:36.23,0:28:38.57,英文,,0,0,0,,It's really tall and slow to find things.
Dialogue: 0,0:28:36.23,0:28:38.57,中文,,0,0,0,,它真的很高 而且找东西找得很慢
Dialogue: 0,0:28:38.57,0:28:39.81,英文,,0,0,0,,This one has a height of 2.
Dialogue: 0,0:28:38.57,0:28:39.81,中文,,0,0,0,,这个高度是2
Dialogue: 0,0:28:39.81,0:28:40.81,英文,,0,0,0,,It's beautiful.
Dialogue: 0,0:28:39.81,0:28:40.81,中文,,0,0,0,,它很漂亮
Dialogue: 0,0:28:40.81,0:28:41.89,英文,,0,0,0,,It's bushy.
Dialogue: 0,0:28:40.81,0:28:41.89,中文,,0,0,0,,树叶很茂盛
Dialogue: 0,0:28:41.89,0:28:43.17,英文,,0,0,0,,We like it.
Dialogue: 0,0:28:41.89,0:28:43.17,中文,,0,0,0,,我们喜欢它
Dialogue: 0,0:28:43.17,0:28:44.03,英文,,0,0,0,,OK.
Dialogue: 0,0:28:44.03,0:28:48.53,英文,,0,0,0,,So really quick note, which is I'll kind of speed through this as well.
Dialogue: 0,0:28:44.03,0:28:48.53,中文,,0,0,0,,很快的一点 我会迅速通过这个
Dialogue: 0,0:28:48.53,0:28:50.17,英文,,0,0,0,,You can watch the video if you want.
Dialogue: 0,0:28:48.53,0:28:50.17,中文,,0,0,0,,如果你愿意 你可以观看视频
Dialogue: 0,0:28:50.17,0:28:55.64,英文,,0,0,0,,But I will quickly say that if you randomly insert into a tree, the trees end up bushy.
Dialogue: 0,0:28:50.17,0:28:55.64,中文,,0,0,0,,但我会迅速说 如果你随机插入树中 树就会变得浓密
Dialogue: 0,0:28:55.64,0:28:56.72,英文,,0,0,0,,People proofed it.
Dialogue: 0,0:28:55.64,0:28:56.72,中文,,0,0,0,,人们已经验证过了
Dialogue: 0,0:28:56.72,0:28:57.92,英文,,0,0,0,,I won't go through it.
Dialogue: 0,0:28:56.72,0:28:57.92,中文,,0,0,0,,我不会经过它
Dialogue: 0,0:28:57.92,0:29:02.20,英文,,0,0,0,,But turns out if you randomly insert into a tree, it's bushy.
Dialogue: 0,0:28:57.92,0:29:02.20,中文,,0,0,0,,但结果是 如果你随机插入一棵树 它会变得茂密
Dialogue: 0,0:29:02.20,0:29:07.07,英文,,0,0,0,,But it turns out, can we always randomly insert things into a tree?
Dialogue: 0,0:29:02.20,0:29:07.07,中文,,0,0,0,,但结果是 我们总是能把东西随机插入到一棵树里吗
Dialogue: 0,0:29:07.07,0:29:14.69,英文,,0,0,0,,Because if we could, somebody, I don't know who, has proven that randomly inserting things into a tree gives you bushy trees.
Dialogue: 0,0:29:07.07,0:29:14.69,中文,,0,0,0,,因为如果我们能的话 有人 我不知道是谁 已经证明了把东西随机插入到树里会得到茂密的树
Dialogue: 0,0:29:14.69,0:29:18.58,英文,,0,0,0,,But think about, what if someone gives you, I don't know, like a sequence of dates?
Dialogue: 0,0:29:14.69,0:29:18.58,中文,,0,0,0,,但想想看 如果有人给了你 我不知道 像是一系列日期
Dialogue: 0,0:29:18.58,0:29:21.48,英文,,0,0,0,,Like, this is like all of your great scope submissions to the project.
Dialogue: 0,0:29:18.58,0:29:21.48,中文,,0,0,0,,就像 这就是你对项目的所有伟大的范围提交
Dialogue: 0,0:29:21.48,0:29:23.68,英文,,0,0,0,,Well, these come in chronological order.
Dialogue: 0,0:29:21.48,0:29:23.68,中文,,0,0,0,,这些按照时间顺序排列
Dialogue: 0,0:29:23.68,0:29:33.66,英文,,0,0,0,,So if you wanted to add January 1st, and then January 2nd, and then January 3rd, and then January 4th, then your tree starts to get really spindly and bad.
Dialogue: 0,0:29:23.68,0:29:33.66,中文,,0,0,0,,如果你想要添加一月一号 然后一月二号 再然后一月三号 再然后一月四号 那么你的树就开始变得很稀疏和糟糕
Dialogue: 0,0:29:33.66,0:29:36.18,英文,,0,0,0,,So it turns out we still have to worry.
Dialogue: 0,0:29:33.66,0:29:36.18,中文,,0,0,0,,结果我们还是得担心
Dialogue: 0,0:29:36.18,0:29:44.23,英文,,0,0,0,,All of this is to say, the thing that I sped through is to say, we have to worry about people adding things into our tree and making them spindly.
Dialogue: 0,0:29:36.18,0:29:44.23,中文,,0,0,0,,所有这些都是想说 我匆忙提到的是 我们必须担心别人在我们的树中添加东西并使它们变得稀疏
Dialogue: 0,0:29:44.23,0:29:45.57,英文,,0,0,0,,That could be bad.
Dialogue: 0,0:29:44.23,0:29:45.57,中文,,0,0,0,,那可能不太好
Dialogue: 0,0:29:45.57,0:29:51.26,英文,,0,0,0,,So we're going to try to fix this problem and make things bushy and beautiful.
Dialogue: 0,0:29:45.57,0:29:51.26,中文,,0,0,0,,我们要尝试解决这个问题 让事情变得丰满而美丽
Dialogue: 0,0:29:51.26,0:29:52.28,英文,,0,0,0,,Okay, is that okay?
Dialogue: 0,0:29:51.26,0:29:52.28,中文,,0,0,0,,好吗
Dialogue: 0,0:29:52.28,0:29:56.34,英文,,0,0,0,,Sorry, that was a little bit fast, but I promise things will slow down now.
Dialogue: 0,0:29:52.28,0:29:56.34,中文,,0,0,0,,抱歉 有点快 但我保证现在事情会慢下来
Dialogue: 0,0:29:56.34,0:30:03.54,英文,,0,0,0,,Okay, so I have this tree, and my main problem is, let's say I want to add the items 17, 18, and 19.
Dialogue: 0,0:29:56.34,0:30:03.54,中文,,0,0,0,,我有这棵树的问题是 比如说我想要添加项目17、18和19
Dialogue: 0,0:30:03.54,0:30:07.85,英文,,0,0,0,,So, if I added 17, and then 18, and then 19,
Dialogue: 0,0:30:03.54,0:30:07.85,中文,,0,0,0,,那么 如果我先添加了17 然后18 接着是19
Dialogue: 0,0:30:07.85,0:30:16.83,英文,,0,0,0,,Well, then the tree would start to grow really spindly, because I'd hang the 17 here, and then hang the 18 below the 17, and then hang the 19 even deeper.
Dialogue: 0,0:30:07.85,0:30:16.83,中文,,0,0,0,,那么树就会变得非常细长 因为我把17挂在这里 然后在17下面挂上18 再在18下面挂上19
Dialogue: 0,0:30:16.83,0:30:21.30,英文,,0,0,0,,The height would start to grow, and this tree would get spindly, which I don't like.
Dialogue: 0,0:30:16.83,0:30:21.30,中文,,0,0,0,,高度会开始增长 这棵树会变得很细长 我不喜欢这样
Dialogue: 0,0:30:21.30,0:30:26.14,英文,,0,0,0,,It makes my operations theta n instead of theta log n, which I don't like.
Dialogue: 0,0:30:21.30,0:30:26.14,中文,,0,0,0,,这使得我的操作变成了theta n而不是theta log n 我不喜欢这样
Dialogue: 0,0:30:26.14,0:30:29.83,英文,,0,0,0,,So here's an idea for you, and it's kind of mind-bending.
Dialogue: 0,0:30:26.14,0:30:29.83,中文,,0,0,0,,我给你个想法 有点令人费解
Dialogue: 0,0:30:29.83,0:30:36.69,英文,,0,0,0,,But the idea is, if my problem is adding new leaves makes the tree spindly, what if I said, you can't add new leaves.
Dialogue: 0,0:30:29.83,0:30:36.69,中文,,0,0,0,,但是这个想法是 如果我的问题是添加新的叶子使得树变得细长 那么如果我说 你不能添加新的叶子呢
Dialogue: 0,0:30:36.69,0:30:38.19,英文,,0,0,0,,So it's a new rule.
Dialogue: 0,0:30:36.69,0:30:38.19,中文,,0,0,0,,这是一个新规则
Dialogue: 0,0:30:38.19,0:30:39.35,英文,,0,0,0,,No new leaves.
Dialogue: 0,0:30:38.19,0:30:39.35,中文,,0,0,0,,没有新叶
Dialogue: 0,0:30:39.35,0:30:40.69,英文,,0,0,0,,I don't allow it.
Dialogue: 0,0:30:39.35,0:30:40.69,中文,,0,0,0,,我不允许它
Dialogue: 0,0:30:40.69,0:30:41.75,英文,,0,0,0,,Well, then how would I add 17?
Dialogue: 0,0:30:40.69,0:30:41.75,中文,,0,0,0,,那么 我该怎么加17呢
Dialogue: 0,0:30:41.75,0:30:54.03,英文,,0,0,0,,Well, maybe another equally weird idea is, instead of adding 17 as a new leaf, because that would cause the tree to grow imbalanced and tall, what if
Dialogue: 0,0:30:41.75,0:30:54.03,中文,,0,0,0,,也许另一个同样奇怪的想法是 不是将17添加为新叶 因为那会导致树变得不平衡和高大 那么
Dialogue: 0,0:30:54.03,0:30:57.12,英文,,0,0,0,,I just shove the 17 in the same node as the 16.
Dialogue: 0,0:30:54.03,0:30:57.12,中文,,0,0,0,,我只是把17塞到与16相同的节点中
Dialogue: 0,0:30:57.12,0:31:02.86,英文,,0,0,0,,And then when the 18 comes in, I just shove it in the same node as the 16 and the 17.
Dialogue: 0,0:30:57.12,0:31:02.86,中文,,0,0,0,,然后当18到来时 我就把它塞到与16和17相同的节点中
Dialogue: 0,0:31:02.86,0:31:10.71,英文,,0,0,0,,Well, now my tree is not going to get any deeper, because if more items come in, I can just shove them in the leaf nodes.
Dialogue: 0,0:31:02.86,0:31:10.71,中文,,0,0,0,,好了 现在我的树不会再变深了 因为如果有更多的项目进来 我只需把它们塞进叶子节点
Dialogue: 0,0:31:10.71,0:31:12.61,英文,,0,0,0,,So my leaf nodes are now overstuffed.
Dialogue: 0,0:31:10.71,0:31:12.61,中文,,0,0,0,,我的叶子节点现在已经塞得很满了
Dialogue: 0,0:31:12.61,0:31:14.47,英文,,0,0,0,,They have multiple items.
Dialogue: 0,0:31:12.61,0:31:14.47,中文,,0,0,0,,它们有多个项目
Dialogue: 0,0:31:14.47,0:31:16.87,英文,,0,0,0,,Now my tree doesn't get taller.
Dialogue: 0,0:31:14.47,0:31:16.87,中文,,0,0,0,,现在我的树不会再变高
Dialogue: 0,0:31:16.87,0:31:17.67,英文,,0,0,0,,Does this work?
Dialogue: 0,0:31:16.87,0:31:17.67,中文,,0,0,0,,这样行吗
Dialogue: 0,0:31:17.67,0:31:19.11,英文,,0,0,0,,Am I done?
Dialogue: 0,0:31:17.67,0:31:19.11,中文,,0,0,0,,我完成了吗
Dialogue: 0,0:31:19.11,0:31:22.91,英文,,0,0,0,,Well, imagine if I started adding more things, 19, 20, 21.
Dialogue: 0,0:31:19.11,0:31:22.91,中文,,0,0,0,,想象一下 如果我开始添加更多的东西 19、20、21
Dialogue: 0,0:31:22.91,0:31:30.78,英文,,0,0,0,,Well, then this overstuffed node on the right would start to grow even bigger, and I would degenerate back into the spindly tree,
Dialogue: 0,0:31:22.91,0:31:30.78,中文,,0,0,0,,好吧 然后这个右侧的这个过于充斥的节点会变得更大 我会退化回那棵细长的树
Dialogue: 0,0:31:30.78,0:31:38.78,英文,,0,0,0,,because I'd have to search that entire list, 16, 17, 18, 19, 20, to find the item that I'm looking for.
Dialogue: 0,0:31:30.78,0:31:38.78,中文,,0,0,0,,因为我得搜索整个列表 16、17、18、19、20 找到我要找的那个项目
Dialogue: 0,0:31:38.78,0:31:49.35,英文,,0,0,0,,So if one of these nodes gets too overstuffed, then I have to search through all the items in the node to find what I'm looking for, and the tree gets slow again.
Dialogue: 0,0:31:38.78,0:31:49.35,中文,,0,0,0,,如果其中一个节点变得过于充斥 我就得搜索节点中的所有项目找到我要找的东西 然后树就会变慢
Dialogue: 0,0:31:49.35,0:31:55.45,英文,,0,0,0,,So this kind of works, is kind of weird, but it's a stepping stone to what we'll do next.
Dialogue: 0,0:31:49.35,0:31:55.45,中文,,0,0,0,,这有点奇怪 但它是我们下一步要做的事情的垫脚石
Dialogue: 0,0:31:55.45,0:31:58.95,英文,,0,0,0,,So key idea, we're not going to allow you to make the tree taller.
Dialogue: 0,0:31:55.45,0:31:58.95,中文,,0,0,0,,关键点是 我们不允许你使树变得更高
Dialogue: 0,0:31:58.95,0:32:00.75,英文,,0,0,0,,You have to overstuff your nodes.
Dialogue: 0,0:31:58.95,0:32:00.75,中文,,0,0,0,,你必须把节点塞得满满的
Dialogue: 0,0:32:00.75,0:32:09.32,英文,,0,0,0,,But we still have one problem, which is if this node gets really big and has tons and tons of items, then searching through it will still be linear time.
Dialogue: 0,0:32:00.75,0:32:09.32,中文,,0,0,0,,但我们还有一个问题 就是如果这个节点变得非常大 有大量的项目 那么通过它进行搜索仍然是线性时间
Dialogue: 0,0:32:09.32,0:32:10.86,英文,,0,0,0,,It'll be slow.
Dialogue: 0,0:32:09.32,0:32:10.86,中文,,0,0,0,,它会变慢
Dialogue: 0,0:32:10.86,0:32:12.52,英文,,0,0,0,,So how do we solve this?
Dialogue: 0,0:32:10.86,0:32:12.52,中文,,0,0,0,,那我们怎么解决这个问题
Dialogue: 0,0:32:12.52,0:32:13.28,英文,,0,0,0,,So this works.
Dialogue: 0,0:32:12.52,0:32:13.28,中文,,0,0,0,,这样就可以了
Dialogue: 0,0:32:13.28,0:32:15.01,英文,,0,0,0,,It's very weird.
Dialogue: 0,0:32:13.28,0:32:15.01,中文,,0,0,0,,这很奇怪
Dialogue: 0,0:32:15.01,0:32:15.55,英文,,0,0,0,,How do I find 18?
Dialogue: 0,0:32:15.01,0:32:15.55,中文,,0,0,0,,我怎么找到18
Dialogue: 0,0:32:15.55,0:32:17.37,英文,,0,0,0,,I start here.
Dialogue: 0,0:32:15.55,0:32:17.37,中文,,0,0,0,,我从这里开始
Dialogue: 0,0:32:17.37,0:32:18.47,英文,,0,0,0,,18 is greater.
Dialogue: 0,0:32:17.37,0:32:18.47,中文,,0,0,0,,18更大
Dialogue: 0,0:32:18.47,0:32:19.37,英文,,0,0,0,,18 is greater.
Dialogue: 0,0:32:18.47,0:32:19.37,中文,,0,0,0,,18更大
Dialogue: 0,0:32:19.37,0:32:23.44,英文,,0,0,0,,I arrive at this mega node of stuff, and I have to search one by one.
Dialogue: 0,0:32:19.37,0:32:23.44,中文,,0,0,0,,我到了这个大型节点的地方 然后我得一个一个地搜索
Dialogue: 0,0:32:23.44,0:32:24.18,英文,,0,0,0,,Not 18.
Dialogue: 0,0:32:23.44,0:32:24.18,中文,,0,0,0,,不是18岁
Dialogue: 0,0:32:24.18,0:32:24.96,英文,,0,0,0,,Not 18.
Dialogue: 0,0:32:24.18,0:32:24.96,中文,,0,0,0,,不是18岁
Dialogue: 0,0:32:24.96,0:32:26.66,英文,,0,0,0,,Aha, 18.
Dialogue: 0,0:32:24.96,0:32:26.66,中文,,0,0,0,,啊哈 18岁
Dialogue: 0,0:32:26.66,0:32:29.40,英文,,0,0,0,,So it's kind of slow once I get to this mega node.
Dialogue: 0,0:32:26.66,0:32:29.40,中文,,0,0,0,,一旦我到达这个大型节点 速度就有点慢
Dialogue: 0,0:32:29.40,0:32:32.54,英文,,0,0,0,,And if this node gets even bigger, things would get even slower.
Dialogue: 0,0:32:29.40,0:32:32.54,中文,,0,0,0,,如果这个节点变得更大 事情会变得更慢
Dialogue: 0,0:32:32.54,0:32:33.61,英文,,0,0,0,,Like, look at that.
Dialogue: 0,0:32:32.54,0:32:33.61,中文,,0,0,0,,就像 看看那个
Dialogue: 0,0:32:33.61,0:32:35.51,英文,,0,0,0,,Imagine searching for 24 in that.
Dialogue: 0,0:32:33.61,0:32:35.51,中文,,0,0,0,,想象一下在那样的情况下搜索 24
Dialogue: 0,0:32:35.51,0:32:37.65,英文,,0,0,0,,You'd have to scan through all those items.
Dialogue: 0,0:32:35.51,0:32:37.65,中文,,0,0,0,,你得扫描所有那些项目
Dialogue: 0,0:32:37.65,0:32:39.13,英文,,0,0,0,,It'd be slow.
Dialogue: 0,0:32:37.65,0:32:39.13,中文,,0,0,0,,这会很慢
Dialogue: 0,0:32:39.13,0:32:46.07,英文,,0,0,0,,So my second idea, which is equally strange, is, well, the height is perfectly balanced now.
Dialogue: 0,0:32:39.13,0:32:46.07,中文,,0,0,0,,我的第二个想法 同样奇怪 现在高度完美平衡了
Dialogue: 0,0:32:46.07,0:32:49.55,英文,,0,0,0,,So I'm never going to have that spindly tree where it's super tall.
Dialogue: 0,0:32:46.07,0:32:49.55,中文,,0,0,0,,我永远不会有那种超级高的纤细树了
Dialogue: 0,0:32:49.55,0:32:52.01,英文,,0,0,0,,But these nodes can get overstuffed.
Dialogue: 0,0:32:49.55,0:32:52.01,中文,,0,0,0,,但是这些节点可能会过于拥挤
Dialogue: 0,0:32:52.01,0:32:52.79,英文,,0,0,0,,It's too juicy.
Dialogue: 0,0:32:52.01,0:32:52.79,中文,,0,0,0,,它太多汁了
Dialogue: 0,0:32:52.79,0:32:54.33,英文,,0,0,0,,It's too full of stuff.
Dialogue: 0,0:32:52.79,0:32:54.33,中文,,0,0,0,,东西太多了
Dialogue: 0,0:32:54.33,0:32:58.29,英文,,0,0,0,,So the way that we're going to solve it is we're going to say there's a limit.
Dialogue: 0,0:32:54.33,0:32:58.29,中文,,0,0,0,,我们解决的方法是设定一个限制
Dialogue: 0,0:32:58.29,0:33:01.19,英文,,0,0,0,,You cannot stuff this node with
Dialogue: 0,0:32:58.29,0:33:01.19,中文,,0,0,0,,你不能把这个节点塞满
Dialogue: 0,0:33:01.19,0:33:02.83,英文,,0,0,0,,However many items that it is.
Dialogue: 0,0:33:01.19,0:33:02.83,中文,,0,0,0,,不管有多少项
Dialogue: 0,0:33:02.83,0:33:04.88,英文,,0,0,0,,Too many, that's too slow.
Dialogue: 0,0:33:02.83,0:33:04.88,中文,,0,0,0,,太多了 太慢了
Dialogue: 0,0:33:04.88,0:33:06.52,英文,,0,0,0,,So we're going to set a limit.
Dialogue: 0,0:33:04.88,0:33:06.52,中文,,0,0,0,,我们要设定一个限制
Dialogue: 0,0:33:06.52,0:33:08.08,英文,,0,0,0,,And you can set any limit you want.
Dialogue: 0,0:33:06.52,0:33:08.08,中文,,0,0,0,,你可以设置任何你想要的限制
Dialogue: 0,0:33:08.08,0:33:09.76,英文,,0,0,0,,I'm going to say L equals 3.
Dialogue: 0,0:33:08.08,0:33:09.76,中文,,0,0,0,,我要说一下 L 等于 3
Dialogue: 0,0:33:09.76,0:33:11.82,英文,,0,0,0,,And this limit, once you set it, it's set.
Dialogue: 0,0:33:09.76,0:33:11.82,中文,,0,0,0,,而且 一旦你设定了这个限制 它就被固定了
Dialogue: 0,0:33:11.82,0:33:14.16,英文,,0,0,0,,There's no changing it, no changing your mind.
Dialogue: 0,0:33:11.82,0:33:14.16,中文,,0,0,0,,没有改变的余地 也没有改变主意的机会
Dialogue: 0,0:33:14.16,0:33:18.47,英文,,0,0,0,,So if your node is overstuffed, let's say the limit is three items.
Dialogue: 0,0:33:14.16,0:33:18.47,中文,,0,0,0,,如果你的节点超载了 假设限制是三个项目
Dialogue: 0,0:33:18.47,0:33:20.31,英文,,0,0,0,,And here, I have a node with four items.
Dialogue: 0,0:33:18.47,0:33:20.31,中文,,0,0,0,,在这里 我有一个有四个项目的节点
Dialogue: 0,0:33:20.31,0:33:21.83,英文,,0,0,0,,This is violating the limit.
Dialogue: 0,0:33:20.31,0:33:21.83,中文,,0,0,0,,这违反了限制
Dialogue: 0,0:33:21.83,0:33:23.17,英文,,0,0,0,,It's too many things.
Dialogue: 0,0:33:21.83,0:33:23.17,中文,,0,0,0,,它包含的东西太多了
Dialogue: 0,0:33:23.17,0:33:26.73,英文,,0,0,0,,Then what I will do is I'll say, this node, it's so juicy.
Dialogue: 0,0:33:23.17,0:33:26.73,中文,,0,0,0,,那我要做的是 我会说 这个节点 它很多汁
Dialogue: 0,0:33:26.73,0:33:28.09,英文,,0,0,0,,There's so much stuff in it.
Dialogue: 0,0:33:26.73,0:33:28.09,中文,,0,0,0,,里面有很多东西
Dialogue: 0,0:33:28.09,0:33:30.82,英文,,0,0,0,,It's like, I don't know what this is.
Dialogue: 0,0:33:28.09,0:33:30.82,中文,,0,0,0,,就像 我不知道这是什么
Dialogue: 0,0:33:30.82,0:33:31.64,英文,,0,0,0,,What are these things called?
Dialogue: 0,0:33:30.82,0:33:31.64,中文,,0,0,0,,这些东西叫什么
Dialogue: 0,0:33:31.64,0:33:33.09,英文,,0,0,0,,Sorry.
Dialogue: 0,0:33:31.64,0:33:33.09,中文,,0,0,0,,抱歉
Dialogue: 0,0:33:33.09,0:33:34.89,英文,,0,0,0,,Do you know what these things are called?
Dialogue: 0,0:33:33.09,0:33:34.89,中文,,0,0,0,,你知道这些东西叫什么吗
Dialogue: 0,0:33:34.89,0:33:35.87,英文,,0,0,0,,OK, what he said.
Dialogue: 0,0:33:34.89,0:33:35.87,中文,,0,0,0,,他说了什么
Dialogue: 0,0:33:35.87,0:33:38.23,英文,,0,0,0,,So these things, it's so juicy.
Dialogue: 0,0:33:35.87,0:33:38.23,中文,,0,0,0,,这些东西 真的很多汁
Dialogue: 0,0:33:38.23,0:33:45.44,英文,,0,0,0,,There's so much stuff in it that the 17, it's so full that one of the items just rips out of it because it's so full.
Dialogue: 0,0:33:38.23,0:33:45.44,中文,,0,0,0,,里面有很多东西 17这么满 其中一个东西因为太满了就裂开了
Dialogue: 0,0:33:45.44,0:33:47.98,英文,,0,0,0,,And so let's see what that looks like.
Dialogue: 0,0:33:45.44,0:33:47.98,中文,,0,0,0,,那么让我们看看它是什么样子的
Dialogue: 0,0:33:47.98,0:33:56.12,英文,,0,0,0,,So what I will say is if this thing is too full, it's just so juicy, it's bursting, well, then we'll take the item in the left middle.
Dialogue: 0,0:33:47.98,0:33:56.12,中文,,0,0,0,,我会说 如果这个东西太满了 它真的很多汁 快要溢出了 那么我们就取左中的项目
Dialogue: 0,0:33:56.12,0:33:56.84,英文,,0,0,0,,Why?
Dialogue: 0,0:33:56.12,0:33:56.84,中文,,0,0,0,,为什么
Dialogue: 0,0:33:56.84,0:33:58.74,英文,,0,0,0,,Because I said so, because I know how this ends.
Dialogue: 0,0:33:56.84,0:33:58.74,中文,,0,0,0,,因为我这么说 因为我知道这会怎么结束
Dialogue: 0,0:33:58.74,0:34:03.16,英文,,0,0,0,,And I will take it, and I will rip it out of the node and promote it to its parent.
Dialogue: 0,0:33:58.74,0:34:03.16,中文,,0,0,0,,然后我就会拿着它 把它从节点中拔出来 提升到它的父节点
Dialogue: 0,0:34:03.16,0:34:09.05,英文,,0,0,0,,So the 17 gets ripped out of the node because it's too full, and I give it to the parent node 15.
Dialogue: 0,0:34:03.16,0:34:09.05,中文,,0,0,0,,所以17从节点中被移除 因为它太满了 然后我把它给了父节点15
Dialogue: 0,0:34:09.05,0:34:15.99,英文,,0,0,0,,So this is what it looks like after my node is so full, and it bursts, and the item in the middle pops out and goes to its parent.
Dialogue: 0,0:34:09.05,0:34:15.99,中文,,0,0,0,,这就是在我的节点太满 爆炸后的样子 中间的项目弹出来并回到它的父节点
Dialogue: 0,0:34:15.99,0:34:20.50,英文,,0,0,0,,So I took the 17, I ripped it out, and went to its parent.
Dialogue: 0,0:34:15.99,0:34:20.50,中文,,0,0,0,,我拿了这个17 把它弄出来 然后回到它的父节点
Dialogue: 0,0:34:20.50,0:34:22.61,英文,,0,0,0,,How do you like this data structure?
Dialogue: 0,0:34:20.50,0:34:22.61,中文,,0,0,0,,你觉得这个数据结构怎么样
Dialogue: 0,0:34:22.61,0:34:23.51,英文,,0,0,0,,Do you like it?
Dialogue: 0,0:34:22.61,0:34:23.51,中文,,0,0,0,,你喜欢吗
Dialogue: 0,0:34:23.51,0:34:26.23,英文,,0,0,0,,Well, I kind of like it.
Dialogue: 0,0:34:23.51,0:34:26.23,中文,,0,0,0,,嗯 我有点喜欢
Dialogue: 0,0:34:26.23,0:34:27.89,英文,,0,0,0,,But you know one thing I don't like?
Dialogue: 0,0:34:26.23,0:34:27.89,中文,,0,0,0,,但有一件事我不太喜欢 你知道是什么吗
Dialogue: 0,0:34:27.89,0:34:29.97,英文,,0,0,0,,I don't like that the 16 is to the right.
Dialogue: 0,0:34:27.89,0:34:29.97,中文,,0,0,0,,我不喜欢16在右边
Dialogue: 0,0:34:29.97,0:34:32.71,英文,,0,0,0,,Because look, this is 15, 17.
Dialogue: 0,0:34:29.97,0:34:32.71,中文,,0,0,0,,因为看 这是15 17
Dialogue: 0,0:34:32.71,0:34:34.31,英文,,0,0,0,,So why is the 16 over here?
Dialogue: 0,0:34:32.71,0:34:34.31,中文,,0,0,0,,为什么16在这里
Dialogue: 0,0:34:34.31,0:34:37.23,英文,,0,0,0,,16 is not greater than 17.
Dialogue: 0,0:34:34.31,0:34:37.23,中文,,0,0,0,,16不大于17
Dialogue: 0,0:34:37.23,0:34:41.07,英文,,0,0,0,,So I like this data structure, but I don't like the 16 here.
Dialogue: 0,0:34:37.23,0:34:41.07,中文,,0,0,0,,我喜欢这个数据结构 但我不喜欢这里的16
Dialogue: 0,0:34:41.07,0:34:46.29,英文,,0,0,0,,So I'm going to solve the 16 to the right of 17 problem with one more trick.
Dialogue: 0,0:34:41.07,0:34:46.29,中文,,0,0,0,,我要用一个更巧妙的办法解决16在17右边的问题
Dialogue: 0,0:34:46.29,0:34:49.52,英文,,0,0,0,,And that's going to give me my splitting trees.
Dialogue: 0,0:34:46.29,0:34:49.52,中文,,0,0,0,,这样我就能得到我的分裂树了
Dialogue: 0,0:34:49.52,0:34:55.02,英文,,0,0,0,,So the things we have learned so far, to recap, we are not allowing you to add new leaves.
Dialogue: 0,0:34:49.52,0:34:55.02,中文,,0,0,0,,总结一下我们到目前为止学到的东西 我们不允许你添加新的叶子
Dialogue: 0,0:34:55.02,0:34:58.70,英文,,0,0,0,,So anytime you have new things, you need to put them into the leaves and overstuff them.
Dialogue: 0,0:34:55.02,0:34:58.70,中文,,0,0,0,,每当你有新的东西 你需要把它们放到叶子里 把它们塞得满满的
Dialogue: 0,0:34:58.70,0:35:06.60,英文,,0,0,0,,If one of your leaves gets too overstuffed, like this thing has four items, then you're going to take the middle left item, you're going to rip it out, and give it to its parent.
Dialogue: 0,0:34:58.70,0:35:06.60,中文,,0,0,0,,如果你的叶子之一塞得太满了 就像这个东西有四个项目一样 那么你要取出中间左边的项目 把它撕下来 给它的父节点
Dialogue: 0,0:35:06.60,0:35:11.36,英文,,0,0,0,,So the 17 gets ripped out and promoted to its parent.
Dialogue: 0,0:35:06.60,0:35:11.36,中文,,0,0,0,,所以17被撕下来并提升到它的父节点
Dialogue: 0,0:35:11.36,0:35:25.93,英文,,0,0,0,,Now, the third strange idea that will make everything work out is when the 17 gets ripped out of the whatever food item from before, well, if you rip the 17 out, then the 16 and the 18, 19, they split.
Dialogue: 0,0:35:11.36,0:35:25.93,中文,,0,0,0,,现在 让一切都能正常运作的第三个奇怪的想法是 当17从之前的食物项目中被撕下来时 如果你撕下17 那么16和18、19就会分裂
Dialogue: 0,0:35:25.93,0:35:30.46,英文,,0,0,0,,They used to be one node, but you rip the 17 out, so now there's two separate nodes.
Dialogue: 0,0:35:25.93,0:35:30.46,中文,,0,0,0,,它们过去是一个节点 但你撕下17 现在有两个独立的节点
Dialogue: 0,0:35:30.46,0:35:33.88,英文,,0,0,0,,There's one node with the 16, and there's one node with the 18 and 19.
Dialogue: 0,0:35:30.46,0:35:33.88,中文,,0,0,0,,有一个节点带有16 还有一个节点带有18和19
Dialogue: 0,0:35:33.88,0:35:39.48,英文,,0,0,0,,Look, 17 got ripped out, and now there are two nodes left behind.
Dialogue: 0,0:35:33.88,0:35:39.48,中文,,0,0,0,,看 17被拔掉了 现在只剩下两个节点
Dialogue: 0,0:35:39.48,0:35:40.76,英文,,0,0,0,,Do you like this better?
Dialogue: 0,0:35:39.48,0:35:40.76,中文,,0,0,0,,你更喜欢这样吗
Dialogue: 0,0:35:40.76,0:35:48.10,英文,,0,0,0,,Well, yeah, I like it because it has a really cool interpretation, which is all the things that are less than 15, well, they're on the left side.
Dialogue: 0,0:35:40.76,0:35:48.10,中文,,0,0,0,,是的 我喜欢它因为它有一个很酷的解释 就是所有小于15的东西都在左边
Dialogue: 0,0:35:48.10,0:35:51.74,英文,,0,0,0,,All the things between 15 and 17, they're in the middle.
Dialogue: 0,0:35:48.10,0:35:51.74,中文,,0,0,0,,所有15到17之间的东西都在中间
Dialogue: 0,0:35:51.74,0:35:54.80,英文,,0,0,0,,And all the things greater than 17, they're on the right.
Dialogue: 0,0:35:51.74,0:35:54.80,中文,,0,0,0,,而所有大于17的东西都在右边
Dialogue: 0,0:35:54.80,0:35:58.97,英文,,0,0,0,,So now my node has three children, but it turns out that's OK.
Dialogue: 0,0:35:54.80,0:35:58.97,中文,,0,0,0,,现在我的节点有三个子节点 但事实证明这是可以的
Dialogue: 0,0:35:58.97,0:36:01.79,英文,,0,0,0,,And that's going to be our splitting tree structure.
Dialogue: 0,0:35:58.97,0:36:01.79,中文,,0,0,0,,这将成为我们的分裂树结构
Dialogue: 0,0:36:01.79,0:36:07.00,英文,,0,0,0,,So the three ideas were, don't add extra leaves, don't make the tree grow taller.
Dialogue: 0,0:36:01.79,0:36:07.00,中文,,0,0,0,,这三个想法是 不要添加额外的叶子 不要让树长得更高
Dialogue: 0,0:36:07.00,0:36:10.82,英文,,0,0,0,,If your thing is overstuffed, rip something out and promote it to the parent.
Dialogue: 0,0:36:07.00,0:36:10.82,中文,,0,0,0,,如果你的东西太满了 就把一些东西撕下来 提升到上一级
Dialogue: 0,0:36:10.82,0:36:14.95,英文,,0,0,0,,And when you rip something out, the node splits into two nodes.
Dialogue: 0,0:36:10.82,0:36:14.95,中文,,0,0,0,,当你撕下一些东西时 节点就会分裂成两个节点
Dialogue: 0,0:36:14.95,0:36:17.15,英文,,0,0,0,,OK, those are our three big ideas.
Dialogue: 0,0:36:14.95,0:36:17.15,中文,,0,0,0,,这就是我们的三个重要想法
Dialogue: 0,0:36:17.15,0:36:23.17,英文,,0,0,0,,And if we do this, then this is logically consistent, this data structure works, and it's not so weird.
Dialogue: 0,0:36:17.15,0:36:23.17,中文,,0,0,0,,而且如果我们这样做 那么这是逻辑一致的 这个数据结构有效 并且不那么奇怪
Dialogue: 0,0:36:23.17,0:36:28.63,英文,,0,0,0,,As we said from before, if you're looking for 18, we start here, greater, so I go right.
Dialogue: 0,0:36:23.17,0:36:28.63,中文,,0,0,0,,就像我们之前说的 如果你要找18 我们从这里开始 大于的话 我就向右走
Dialogue: 0,0:36:28.63,0:36:32.71,英文,,0,0,0,,Now, it's like a three-way, I don't know, branching path.
Dialogue: 0,0:36:28.63,0:36:32.71,中文,,0,0,0,,现在 就像一个三路的 我不知道 分支路径
Dialogue: 0,0:36:32.71,0:36:34.93,英文,,0,0,0,,So I start here, and I'm like, well, is 18 less than 13 or less than 15?
Dialogue: 0,0:36:32.71,0:36:34.93,中文,,0,0,0,,我从这里开始 然后我想 18是否小于13或小于15
Dialogue: 0,0:36:34.93,0:36:37.35,英文,,0,0,0,,No.
Dialogue: 0,0:36:34.93,0:36:37.35,中文,,0,0,0,,不是的
Dialogue: 0,0:36:37.35,0:36:38.97,英文,,0,0,0,,Is it between 15 and 17?
Dialogue: 0,0:36:37.35,0:36:38.97,中文,,0,0,0,,它是在15和17之间吗
Dialogue: 0,0:36:38.97,0:36:40.55,英文,,0,0,0,,No, it's greater than 17.
Dialogue: 0,0:36:38.97,0:36:40.55,中文,,0,0,0,,不 它比17大
Dialogue: 0,0:36:40.55,0:36:45.56,英文,,0,0,0,,So I'll go to the right child, now there's three, and I'll look here, and I'll find the 18.
Dialogue: 0,0:36:40.55,0:36:45.56,中文,,0,0,0,,我会去右子节点 现在有三个 并且我会在这里看一下 然后我会找到18
Dialogue: 0,0:36:45.56,0:36:46.40,英文,,0,0,0,,And you might be concerned.
Dialogue: 0,0:36:45.56,0:36:46.40,中文,,0,0,0,,你可能会担心
Dialogue: 0,0:36:46.40,0:36:49.84,英文,,0,0,0,,You say, well, but I still have to search 18 and 19.
Dialogue: 0,0:36:46.40,0:36:49.84,中文,,0,0,0,,你会说 但我还是得搜索18和19
Dialogue: 0,0:36:49.84,0:36:55.24,英文,,0,0,0,,For example, if I was looking for 19, I'd have to scan through the 18 and the 19.
Dialogue: 0,0:36:49.84,0:36:55.24,中文,,0,0,0,,举个例子 如果我在找19 我得扫描18和19
Dialogue: 0,0:36:55.24,0:36:59.20,英文,,0,0,0,,But that's OK, because we said there's a limit, and that limit was a constant.
Dialogue: 0,0:36:55.24,0:36:59.20,中文,,0,0,0,,但没关系 因为我们说过有个限制 那个限制是一个常数
Dialogue: 0,0:36:59.20,0:37:02.60,英文,,0,0,0,,So you're not going to have nodes that grow to be absolutely huge.
Dialogue: 0,0:36:59.20,0:37:02.60,中文,,0,0,0,,你不会有节点变得特别大
Dialogue: 0,0:37:02.60,0:37:06.22,英文,,0,0,0,,They will always split before they get too big.
Dialogue: 0,0:37:02.60,0:37:06.22,中文,,0,0,0,,它们会在变得太大之前就分裂
Dialogue: 0,0:37:06.22,0:37:10.16,英文,,0,0,0,,OK, question.
Dialogue: 0,0:37:06.22,0:37:10.16,中文,,0,0,0,,好的 问题
Dialogue: 0,0:37:10.16,0:37:11.80,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:37:10.16,0:37:11.80,中文,,0,0,0,,是的 这是一个很棒的问题
Dialogue: 0,0:37:11.80,0:37:12.38,英文,,0,0,0,,Why did we pick 17?
Dialogue: 0,0:37:11.80,0:37:12.38,中文,,0,0,0,,我们为什么选了17
Dialogue: 0,0:37:12.38,0:37:14.32,英文,,0,0,0,,It turns out it works the cleanest.
Dialogue: 0,0:37:12.38,0:37:14.32,中文,,0,0,0,,原来它的工作方式是最清晰的
Dialogue: 0,0:37:14.32,0:37:16.38,英文,,0,0,0,,If you want to promote something else, you can try.
Dialogue: 0,0:37:14.32,0:37:16.38,中文,,0,0,0,,如果你想推广其他东西 可以试试
Dialogue: 0,0:37:16.38,0:37:19.23,英文,,0,0,0,,But the resulting data structures are a little bit weirder.
Dialogue: 0,0:37:16.38,0:37:19.23,中文,,0,0,0,,但生成的数据结构有点奇怪
Dialogue: 0,0:37:19.23,0:37:24.91,英文,,0,0,0,,So I just kind of spoiled it.
Dialogue: 0,0:37:19.23,0:37:24.91,中文,,0,0,0,,我有点泄露了
Dialogue: 0,0:37:24.91,0:37:27.15,英文,,0,0,0,,Is there an algorithmic way of finding the easiest split?
Dialogue: 0,0:37:24.91,0:37:27.15,中文,,0,0,0,,有没有一种算法的方法来找到最容易的拆分呢
Dialogue: 0,0:37:27.15,0:37:28.25,英文,,0,0,0,,I don't know off the top of my head.
Dialogue: 0,0:37:27.15,0:37:28.25,中文,,0,0,0,,我脑海中不知道
Dialogue: 0,0:37:28.25,0:37:29.63,英文,,0,0,0,,Maybe ask us afterwards.
Dialogue: 0,0:37:28.25,0:37:29.63,中文,,0,0,0,,也许事后问我们
Dialogue: 0,0:37:29.63,0:37:30.87,英文,,0,0,0,,It's an interesting question.
Dialogue: 0,0:37:29.63,0:37:30.87,中文,,0,0,0,,这是个有趣的问题
Dialogue: 0,0:37:30.87,0:37:34.71,英文,,0,0,0,,OK, especially if this L gets different, then there can be different split points.
Dialogue: 0,0:37:30.87,0:37:34.71,中文,,0,0,0,,尤其是如果这个 L 变得不同 那么就可能有不同的分割点
Dialogue: 0,0:37:34.71,0:37:38.64,英文,,0,0,0,,But for today, we are splitting the middle left item because I said so.
Dialogue: 0,0:37:34.71,0:37:38.64,中文,,0,0,0,,但是今天 我们要分割中间左边的项目 因为我这么说了
Dialogue: 0,0:37:38.64,0:37:40.12,英文,,0,0,0,,OK.
Dialogue: 0,0:37:40.12,0:37:41.81,英文,,0,0,0,,I'm up here, so I can say split the middle left.
Dialogue: 0,0:37:40.12,0:37:41.81,中文,,0,0,0,,我在这里 我可以说把中间左边分割开
Dialogue: 0,0:37:41.81,0:37:43.07,英文,,0,0,0,,OK.
Dialogue: 0,0:37:43.07,0:37:47.72,英文,,0,0,0,,Anyway, we do middle left all the time?
Dialogue: 0,0:37:43.07,0:37:47.72,中文,,0,0,0,,无论如何 我们一直都在做中间左边
Dialogue: 0,0:37:47.72,0:37:50.10,英文,,0,0,0,,There's no practical benefits to the other ones?
Dialogue: 0,0:37:47.72,0:37:50.10,中文,,0,0,0,,其他的没有实际好处吗
Dialogue: 0,0:37:50.10,0:37:55.25,英文,,0,0,0,,OK.
Dialogue: 0,0:37:55.25,0:37:56.97,英文,,0,0,0,,OK, sounds good.
Dialogue: 0,0:37:55.25,0:37:56.97,中文,,0,0,0,,听起来不错
Dialogue: 0,0:37:56.97,0:37:58.47,英文,,0,0,0,,So yeah, maybe middle left is the best.
Dialogue: 0,0:37:56.97,0:37:58.47,中文,,0,0,0,,也许中间左边是最好的
Dialogue: 0,0:37:58.47,0:37:59.19,英文,,0,0,0,,I don't know.
Dialogue: 0,0:37:58.47,0:37:59.19,中文,,0,0,0,,我不知道
Dialogue: 0,0:37:59.19,0:38:07.35,英文,,0,0,0,,OK, so just to give you a little bit more practice before we talk about runtime, since I have time, I'm going to start adding more items into this tree.
Dialogue: 0,0:37:59.19,0:38:07.35,中文,,0,0,0,,在我们谈论运行时之前 我会给你多练习一点 因为我有时间 我会开始向这棵树添加更多的项目
Dialogue: 0,0:38:07.35,0:38:12.15,英文,,0,0,0,,So I see this tree is still balanced in that all the leaves are at the same depth.
Dialogue: 0,0:38:07.35,0:38:12.15,中文,,0,0,0,,我看到这棵树仍然保持平衡 所有的叶子深度都一样
Dialogue: 0,0:38:12.15,0:38:13.46,英文,,0,0,0,,It looks pretty bushy.
Dialogue: 0,0:38:12.15,0:38:13.46,中文,,0,0,0,,看起来相当茂密
Dialogue: 0,0:38:13.46,0:38:14.78,英文,,0,0,0,,So I'm going to try to break this tree.
Dialogue: 0,0:38:13.46,0:38:14.78,中文,,0,0,0,,我要试着打破这棵树
Dialogue: 0,0:38:14.78,0:38:18.16,英文,,0,0,0,,I'm going to start adding even more stuff just to see what happens.
Dialogue: 0,0:38:14.78,0:38:18.16,中文,,0,0,0,,我要开始添加更多的东西 只是想看看会发生什么
Dialogue: 0,0:38:18.16,0:38:19.82,英文,,0,0,0,,Kind of play with the behavior.
Dialogue: 0,0:38:18.16,0:38:19.82,中文,,0,0,0,,有点玩弄这种行为
Dialogue: 0,0:38:19.82,0:38:21.04,英文,,0,0,0,,of the splitting tree.
Dialogue: 0,0:38:19.82,0:38:21.04,中文,,0,0,0,,拆分树的
Dialogue: 0,0:38:21.04,0:38:24.14,英文,,0,0,0,,And if you're not totally comfortable with this, I recommend doing the same thing.
Dialogue: 0,0:38:21.04,0:38:24.14,中文,,0,0,0,,如果你对此不是完全放心 我建议你做同样的事情
Dialogue: 0,0:38:24.14,0:38:29.00,英文,,0,0,0,,You go home, try to break this tree, and stuff a bunch of things inside and see what happens.
Dialogue: 0,0:38:24.14,0:38:29.00,中文,,0,0,0,,你回家 试着打破这棵树 然后塞进一堆东西 看看会发生什么
Dialogue: 0,0:38:29.00,0:38:30.83,英文,,0,0,0,,Remember, the limit is three.
Dialogue: 0,0:38:29.00,0:38:30.83,中文,,0,0,0,,记住 限制是三
Dialogue: 0,0:38:30.83,0:38:32.01,英文,,0,0,0,,So let's say 18, 19.
Dialogue: 0,0:38:30.83,0:38:32.01,中文,,0,0,0,,那我们说18 19吧
Dialogue: 0,0:38:32.01,0:38:32.71,英文,,0,0,0,,Now I add 20.
Dialogue: 0,0:38:32.01,0:38:32.71,中文,,0,0,0,,现在我加上20
Dialogue: 0,0:38:32.71,0:38:35.81,英文,,0,0,0,,Now I add 21.
Dialogue: 0,0:38:32.71,0:38:35.81,中文,,0,0,0,,现在我加上21
Dialogue: 0,0:38:35.81,0:38:42.68,英文,,0,0,0,,And remember, the rule is I cannot add new leaves, so I need to stuff the 20 in here and stuff the 21 in the same node.
Dialogue: 0,0:38:35.81,0:38:42.68,中文,,0,0,0,,而且记住 规则是我不能添加新的叶子 所以我需要把20塞进这里 然后把21也塞进同一个节点
Dialogue: 0,0:38:42.68,0:38:44.72,英文,,0,0,0,,So now this node is over full.
Dialogue: 0,0:38:42.68,0:38:44.72,中文,,0,0,0,,现在这个节点已经超过限制了
Dialogue: 0,0:38:44.72,0:38:45.86,英文,,0,0,0,,My limit was 3.
Dialogue: 0,0:38:44.72,0:38:45.86,中文,,0,0,0,,我的限制是3
Dialogue: 0,0:38:45.86,0:38:46.96,英文,,0,0,0,,It's got 4.
Dialogue: 0,0:38:45.86,0:38:46.96,中文,,0,0,0,,它有4个
Dialogue: 0,0:38:46.96,0:38:48.06,英文,,0,0,0,,It's too full.
Dialogue: 0,0:38:46.96,0:38:48.06,中文,,0,0,0,,太满了
Dialogue: 0,0:38:48.06,0:38:50.56,英文,,0,0,0,,So what happens is we need to split it.
Dialogue: 0,0:38:48.06,0:38:50.56,中文,,0,0,0,,发生的是我们需要把它分开
Dialogue: 0,0:38:50.56,0:38:59.37,英文,,0,0,0,,And specifically, what happens is we take the middle left item, which is 19, and we rip it out, and we create two separate nodes, the 18 and the 20 and the 21.
Dialogue: 0,0:38:50.56,0:38:59.37,中文,,0,0,0,,具体来说 发生的是我们取中间左边的项 也就是19 然后我们把它拆分出来 创建两个独立的节点 18 20和21
Dialogue: 0,0:38:59.37,0:39:02.71,英文,,0,0,0,,Try to visualize in your head what's going to happen.
Dialogue: 0,0:38:59.37,0:39:02.71,中文,,0,0,0,,试着在你的脑海中想象会发生什么
Dialogue: 0,0:39:02.71,0:39:07.97,英文,,0,0,0,,Remember, the 19 gets ripped out and split into the parent because this node is too full.
Dialogue: 0,0:39:02.71,0:39:07.97,中文,,0,0,0,,记住 19被拆分出来并分割到父节点 因为这个节点太满了
Dialogue: 0,0:39:07.97,0:39:14.03,英文,,0,0,0,,So what happened is, well, the 19, it gets ripped out and promoted to the parent.
Dialogue: 0,0:39:07.97,0:39:14.03,中文,,0,0,0,,发生的事情是 19这个 被拔出来提升到了父级
Dialogue: 0,0:39:14.03,0:39:17.23,英文,,0,0,0,,And then the 18 and the 20 and the 21, they split.
Dialogue: 0,0:39:14.03,0:39:17.23,中文,,0,0,0,,然后18、20和21 它们分裂了
Dialogue: 0,0:39:17.23,0:39:21.83,英文,,0,0,0,,And again, I get this thing that looks kind of weird, but it is consistent.
Dialogue: 0,0:39:17.23,0:39:21.83,中文,,0,0,0,,然后我又得到了一个看起来有点奇怪但是一致的东西
Dialogue: 0,0:39:21.83,0:39:23.68,英文,,0,0,0,,Here's all the stuff less than 15.
Dialogue: 0,0:39:21.83,0:39:23.68,中文,,0,0,0,,这里是所有小于15的东西
Dialogue: 0,0:39:23.68,0:39:26.26,英文,,0,0,0,,Here's the stuff between 15 and 17.
Dialogue: 0,0:39:23.68,0:39:26.26,中文,,0,0,0,,这里是15到17之间的东西
Dialogue: 0,0:39:26.26,0:39:28.84,英文,,0,0,0,,Here's the stuff between 17 and 19.
Dialogue: 0,0:39:26.26,0:39:28.84,中文,,0,0,0,,这里是17到19之间的东西
Dialogue: 0,0:39:28.84,0:39:31.14,英文,,0,0,0,,Here's the stuff greater than 19.
Dialogue: 0,0:39:28.84,0:39:31.14,中文,,0,0,0,,这里是大于19的东西
Dialogue: 0,0:39:31.14,0:39:35.55,英文,,0,0,0,,So it looks a little bit weird, but it works just fine.
Dialogue: 0,0:39:31.14,0:39:35.55,中文,,0,0,0,,看起来有点奇怪 但它的工作正常
Dialogue: 0,0:39:35.55,0:39:36.29,英文,,0,0,0,,So you're not convinced.
Dialogue: 0,0:39:35.55,0:39:36.29,中文,,0,0,0,,你还不相信
Dialogue: 0,0:39:36.29,0:39:38.09,英文,,0,0,0,,You think this B tree can be broken.
Dialogue: 0,0:39:36.29,0:39:38.09,中文,,0,0,0,,你认为这个 B 树可能会被破坏
Dialogue: 0,0:39:38.09,0:39:42.25,英文,,0,0,0,,Well, in that case, I'm going to keep adding stuff to see what happens.
Dialogue: 0,0:39:38.09,0:39:42.25,中文,,0,0,0,,在那种情况下 我会继续添加东西来看看会发生什么
Dialogue: 0,0:39:42.25,0:39:47.39,英文,,0,0,0,,So if you don't like this tree, I'm going to add more stuff, 25, 26, more things.
Dialogue: 0,0:39:42.25,0:39:47.39,中文,,0,0,0,,如果你不喜欢这棵树 我会添加更多的东西 25、26 更多的东西
Dialogue: 0,0:39:47.39,0:39:54.60,英文,,0,0,0,,And again, I cannot add new leaves, so I need to stuff the 25 and stuff the 26 into this node.
Dialogue: 0,0:39:47.39,0:39:54.60,中文,,0,0,0,,而且 我不能再添加新的叶子了 所以我需要把25和26塞进这个节点里
Dialogue: 0,0:39:54.60,0:39:57.34,英文,,0,0,0,,And again, this node is too full.
Dialogue: 0,0:39:54.60,0:39:57.34,中文,,0,0,0,,而且 这个节点又太满了
Dialogue: 0,0:39:57.34,0:39:58.32,英文,,0,0,0,,The limit is three.
Dialogue: 0,0:39:57.34,0:39:58.32,中文,,0,0,0,,限制是三个
Dialogue: 0,0:39:58.32,0:39:59.56,英文,,0,0,0,,There are four things.
Dialogue: 0,0:39:58.32,0:39:59.56,中文,,0,0,0,,有四件事情
Dialogue: 0,0:39:59.56,0:40:00.78,英文,,0,0,0,,So what do I have to do?
Dialogue: 0,0:39:59.56,0:40:00.78,中文,,0,0,0,,那我得做什么呢
Dialogue: 0,0:40:00.78,0:40:04.96,英文,,0,0,0,,I have to take the middle left thing, rip it out, and promote it to the parent.
Dialogue: 0,0:40:00.78,0:40:04.96,中文,,0,0,0,,我得把中间左边的东西拔出来 提升到父级
Dialogue: 0,0:40:04.96,0:40:09.56,英文,,0,0,0,,So I take the 21, I rip it out, I promote it to the parent.
Dialogue: 0,0:40:04.96,0:40:09.56,中文,,0,0,0,,我拿走21 拔出它 提升到父级
Dialogue: 0,0:40:09.56,0:40:15.29,英文,,0,0,0,,And when I rip something out of that food item picture from before, it splits into two.
Dialogue: 0,0:40:09.56,0:40:15.29,中文,,0,0,0,,当我从之前的食物图片中拔出东西时 它会分裂成两个
Dialogue: 0,0:40:15.29,0:40:21.07,英文,,0,0,0,,So the 20 and the 25, 26 split into two separate nodes.
Dialogue: 0,0:40:15.29,0:40:21.07,中文,,0,0,0,,所以20和25、26分裂成两个单独的节点
Dialogue: 0,0:40:21.07,0:40:21.81,英文,,0,0,0,,Is this tree good?
Dialogue: 0,0:40:21.07,0:40:21.81,中文,,0,0,0,,这棵树好吗
Dialogue: 0,0:40:21.81,0:40:22.83,英文,,0,0,0,,Are we done?
Dialogue: 0,0:40:21.81,0:40:22.83,中文,,0,0,0,,我们完成了吗
Dialogue: 0,0:40:22.83,0:40:23.97,英文,,0,0,0,,There's a problem.
Dialogue: 0,0:40:22.83,0:40:23.97,中文,,0,0,0,,有个问题
Dialogue: 0,0:40:23.97,0:40:25.33,英文,,0,0,0,,This one is too full now.
Dialogue: 0,0:40:23.97,0:40:25.33,中文,,0,0,0,,这个太满了
Dialogue: 0,0:40:25.33,0:40:25.85,英文,,0,0,0,,Oh, OK.
Dialogue: 0,0:40:25.33,0:40:25.85,中文,,0,0,0,,哦 好的
Dialogue: 0,0:40:25.85,0:40:32.06,英文,,0,0,0,,So now we have to do a little chain reaction and split a second time because this node is too full.
Dialogue: 0,0:40:25.85,0:40:32.06,中文,,0,0,0,,现在我们需要做一点连锁反应 因为这个节点太满了 需要再分裂一次
Dialogue: 0,0:40:32.06,0:40:33.42,英文,,0,0,0,,Look, it's got four things.
Dialogue: 0,0:40:32.06,0:40:33.42,中文,,0,0,0,,看 它有四样东西
Dialogue: 0,0:40:33.42,0:40:34.94,英文,,0,0,0,,I said the limit was three.
Dialogue: 0,0:40:33.42,0:40:34.94,中文,,0,0,0,,我说过限制是三个
Dialogue: 0,0:40:34.94,0:40:38.52,英文,,0,0,0,,So it turns out this split, it kind of works like you expect.
Dialogue: 0,0:40:34.94,0:40:38.52,中文,,0,0,0,,事实证明 这个拆分 它有点像你期望的那样工作
Dialogue: 0,0:40:38.52,0:40:40.84,英文,,0,0,0,,So for example, I take, which item do I take?
Dialogue: 0,0:40:38.52,0:40:40.84,中文,,0,0,0,,那么例如 我拿 我拿哪个项呢
Dialogue: 0,0:40:40.84,0:40:41.60,英文,,0,0,0,,Middle left.
Dialogue: 0,0:40:40.84,0:40:41.60,中文,,0,0,0,,中左
Dialogue: 0,0:40:41.60,0:40:42.72,英文,,0,0,0,,I rip it out.
Dialogue: 0,0:40:41.60,0:40:42.72,中文,,0,0,0,,我把它拔出来
Dialogue: 0,0:40:42.72,0:40:44.73,英文,,0,0,0,,I promote the 17 to the parent.
Dialogue: 0,0:40:42.72,0:40:44.73,中文,,0,0,0,,我把17提升到父级
Dialogue: 0,0:40:44.73,0:40:48.03,英文,,0,0,0,,And when I rip it out, I get two residual nodes, the 15 and the 1921.
Dialogue: 0,0:40:44.73,0:40:48.03,中文,,0,0,0,,当我拔出它时 我得到两个残余节点 15和1921
Dialogue: 0,0:40:48.03,0:40:51.39,英文,,0,0,0,,So let's see it in action.
Dialogue: 0,0:40:48.03,0:40:51.39,中文,,0,0,0,,那我们来看看它的运行情况
Dialogue: 0,0:40:51.39,0:40:54.79,英文,,0,0,0,,The 17, it gets ripped out and promoted to the top.
Dialogue: 0,0:40:51.39,0:40:54.79,中文,,0,0,0,,17 被剥离出来并晋升到顶部
Dialogue: 0,0:40:54.79,0:40:55.69,英文,,0,0,0,,So there it is.
Dialogue: 0,0:40:54.79,0:40:55.69,中文,,0,0,0,,它就在那里
Dialogue: 0,0:40:55.69,0:41:05.70,英文,,0,0,0,,And when I rip out the 17, the 15 splits into its own node with two children, and the 1921 splits into its own node with three children.
Dialogue: 0,0:40:55.69,0:41:05.70,中文,,0,0,0,,当我剥离出17时 15会分裂成它自己的节点 有两个子节点 而1921也会分裂成它自己的节点 有三个子节点
Dialogue: 0,0:41:05.70,0:41:07.14,英文,,0,0,0,,So there's the 15 node.
Dialogue: 0,0:41:05.70,0:41:07.14,中文,,0,0,0,,这就是15节点
Dialogue: 0,0:41:07.14,0:41:08.19,英文,,0,0,0,,There's the 19 node.
Dialogue: 0,0:41:07.14,0:41:08.19,中文,,0,0,0,,这就是19节点
Dialogue: 0,0:41:08.19,0:41:12.27,英文,,0,0,0,,And again, I hang the things in kind of their appropriate place.
Dialogue: 0,0:41:08.19,0:41:12.27,中文,,0,0,0,,然后 我再次将这些东西挂在它们适当的位置
Dialogue: 0,0:41:12.27,0:41:14.19,英文,,0,0,0,,So it kind of works like you expect.
Dialogue: 0,0:41:12.27,0:41:14.19,中文,,0,0,0,,它的工作方式有点像你期望的那样
Dialogue: 0,0:41:14.19,0:41:17.07,英文,,0,0,0,,For example, the 20, it's between the 19 and 21.
Dialogue: 0,0:41:14.19,0:41:17.07,中文,,0,0,0,,例如 20 它介于19和21之间
Dialogue: 0,0:41:17.07,0:41:18.61,英文,,0,0,0,,Makes sense to me.
Dialogue: 0,0:41:17.07,0:41:18.61,中文,,0,0,0,,对我来说是有道理的
Dialogue: 0,0:41:18.61,0:41:20.13,英文,,0,0,0,,OK.
Dialogue: 0,0:41:20.13,0:41:20.89,英文,,0,0,0,,Great.
Dialogue: 0,0:41:20.13,0:41:20.89,中文,,0,0,0,,太好了
Dialogue: 0,0:41:20.89,0:41:22.07,英文,,0,0,0,,You're still not convinced.
Dialogue: 0,0:41:20.89,0:41:22.07,中文,,0,0,0,,你还不相信
Dialogue: 0,0:41:22.07,0:41:25.93,英文,,0,0,0,,You want to add more stuff to this already overstuffed tree.
Dialogue: 0,0:41:22.07,0:41:25.93,中文,,0,0,0,,你想往这个已经塞得满满的树上再加东西
Dialogue: 0,0:41:25.93,0:41:28.39,英文,,0,0,0,,So what if the root gets too full?
Dialogue: 0,0:41:25.93,0:41:28.39,中文,,0,0,0,,如果根节点太满了怎么办
Dialogue: 0,0:41:28.39,0:41:30.94,英文,,0,0,0,,So in this case, again, I add more items.
Dialogue: 0,0:41:28.39,0:41:30.94,中文,,0,0,0,,在这种情况下 我再次添加更多的项
Dialogue: 0,0:41:30.94,0:41:32.18,英文,,0,0,0,,This one is too full.
Dialogue: 0,0:41:30.94,0:41:32.18,中文,,0,0,0,,这个节点太满了
Dialogue: 0,0:41:32.18,0:41:35.08,英文,,0,0,0,,I rip something out, promote it to the parent.
Dialogue: 0,0:41:32.18,0:41:35.08,中文,,0,0,0,,我拔出一些东西 提升给父节点
Dialogue: 0,0:41:35.08,0:41:36.18,英文,,0,0,0,,It's not convinced.
Dialogue: 0,0:41:35.08,0:41:36.18,中文,,0,0,0,,它还不服气
Dialogue: 0,0:41:36.18,0:41:38.28,英文,,0,0,0,,I add more stuff.
Dialogue: 0,0:41:36.18,0:41:38.28,中文,,0,0,0,,我添加更多的东西
Dialogue: 0,0:41:38.28,0:41:39.56,英文,,0,0,0,,This node is too full.
Dialogue: 0,0:41:38.28,0:41:39.56,中文,,0,0,0,,这个节点太满了
Dialogue: 0,0:41:39.56,0:41:42.49,英文,,0,0,0,,The 23 gets ripped and promoted to the parent.
Dialogue: 0,0:41:39.56,0:41:42.49,中文,,0,0,0,,23被撕下并提升为上级
Dialogue: 0,0:41:42.49,0:41:44.96,英文,,0,0,0,,If you look at this tree.
Dialogue: 0,0:41:42.49,0:41:44.96,中文,,0,0,0,,如果你看这颗树
Dialogue: 0,0:41:44.96,0:41:45.76,英文,,0,0,0,,The root is too full.
Dialogue: 0,0:41:44.96,0:41:45.76,中文,,0,0,0,,根部太满了
Dialogue: 0,0:41:45.76,0:41:46.76,英文,,0,0,0,,Look, it's got four items.
Dialogue: 0,0:41:45.76,0:41:46.76,中文,,0,0,0,,看 它有四个项目
Dialogue: 0,0:41:46.76,0:41:47.80,英文,,0,0,0,,It's too many.
Dialogue: 0,0:41:46.76,0:41:47.80,中文,,0,0,0,,太多了
Dialogue: 0,0:41:47.80,0:41:56.46,英文,,0,0,0,,So what I will do, and again, it kind of works like you expect, which is I take the 17, and I rip out the 17, and I promote it to its parent.
Dialogue: 0,0:41:47.80,0:41:56.46,中文,,0,0,0,,我要做的是 再次 它的工作方式就像你期望的那样 我拿出17 撕下17 并提升到其上级
Dialogue: 0,0:41:56.46,0:42:00.67,英文,,0,0,0,,And when I promote the 17, it becomes a brand new root.
Dialogue: 0,0:41:56.46,0:42:00.67,中文,,0,0,0,,当我提升17时 它变成了一个全新的根
Dialogue: 0,0:42:00.67,0:42:02.63,英文,,0,0,0,,So look, the 17, I rip it out.
Dialogue: 0,0:42:00.67,0:42:02.63,中文,,0,0,0,,看 17 我把它移出来
Dialogue: 0,0:42:02.63,0:42:04.79,英文,,0,0,0,,I send it to its parent, but there's no parent.
Dialogue: 0,0:42:02.63,0:42:04.79,中文,,0,0,0,,我把它发送到它的父级 但没有父级
Dialogue: 0,0:42:04.79,0:42:07.30,英文,,0,0,0,,So it becomes its own root all by itself.
Dialogue: 0,0:42:04.79,0:42:07.30,中文,,0,0,0,,它就成为它自己的根节点
Dialogue: 0,0:42:07.30,0:42:10.84,英文,,0,0,0,,And then 13, and the 21, and the 23, they split.
Dialogue: 0,0:42:07.30,0:42:10.84,中文,,0,0,0,,然后13 21和23就分裂了
Dialogue: 0,0:42:10.84,0:42:20.08,英文,,0,0,0,,And one kind of cool thing you'll notice is that when I split the root, when the 17 got promoted upwards, everybody else got pushed down by one layer.
Dialogue: 0,0:42:10.84,0:42:20.08,中文,,0,0,0,,有一点很酷 你会注意到当我分裂根节点时 当17被提升时 其他所有人都被推下去了一层
Dialogue: 0,0:42:20.08,0:42:23.08,英文,,0,0,0,,Look, the 13 got pushed down by one layer.
Dialogue: 0,0:42:20.08,0:42:23.08,中文,,0,0,0,,看 13被推下去了一层
Dialogue: 0,0:42:23.08,0:42:26.00,英文,,0,0,0,,And then the 5, 15, 19, 22, those got pushed down.
Dialogue: 0,0:42:23.08,0:42:26.00,中文,,0,0,0,,然后5 15 19 22 它们都被推下去了
Dialogue: 0,0:42:26.00,0:42:28.33,英文,,0,0,0,,Now they're at depth 2 instead of depth 1.
Dialogue: 0,0:42:26.00,0:42:28.33,中文,,0,0,0,,现在它们在深度 2 而不是深度 1
Dialogue: 0,0:42:28.33,0:42:30.75,英文,,0,0,0,,So this tree still has perfect balance.
Dialogue: 0,0:42:28.33,0:42:30.75,中文,,0,0,0,,这棵树仍然保持着完美的平衡
Dialogue: 0,0:42:30.75,0:42:34.31,英文,,0,0,0,,Every time I split, one of two things happens.
Dialogue: 0,0:42:30.75,0:42:34.31,中文,,0,0,0,,每次我分裂 都会发生两种情况之一
Dialogue: 0,0:42:34.31,0:42:41.03,英文,,0,0,0,,If I split a non-root node, like look, this 19, 21, whatever, when this one splits, the height of the tree stays the same.
Dialogue: 0,0:42:34.31,0:42:41.03,中文,,0,0,0,,如果我分裂一个非根节点 就像看 这个 19 21 无论如何 当这个分裂时 树的高度保持不变
Dialogue: 0,0:42:41.03,0:42:43.50,英文,,0,0,0,,I'm just moving items up and down, and I'm splitting.
Dialogue: 0,0:42:41.03,0:42:43.50,中文,,0,0,0,,我只是上下移动项目 然后分裂
Dialogue: 0,0:42:43.50,0:42:45.32,英文,,0,0,0,,The height of the tree doesn't change.
Dialogue: 0,0:42:43.50,0:42:45.32,中文,,0,0,0,,树的高度不会改变
Dialogue: 0,0:42:45.32,0:42:49.94,英文,,0,0,0,,However, when I split the root, then the height of the tree increases by one.
Dialogue: 0,0:42:45.32,0:42:49.94,中文,,0,0,0,,但是 当我分裂根时 树的高度就会增加一
Dialogue: 0,0:42:49.94,0:42:54.90,英文,,0,0,0,,Specifically, one of the items gets promoted up, and everyone else gets pushed down by one.
Dialogue: 0,0:42:49.94,0:42:54.90,中文,,0,0,0,,具体来说 其中一个项目被提升 其他所有项目都被向下推一个位置
Dialogue: 0,0:42:54.90,0:43:06.37,英文,,0,0,0,,So what's kind of cool about the splitting tree is that either the tree height doesn't change, and you just split things and move things around, or the root gets split, and everyone gets pushed down by one.
Dialogue: 0,0:42:54.90,0:43:06.37,中文,,0,0,0,,关于分割树的酷之处在于 要么树的高度不变 只是分割和移动项目 要么根被分割 所有人都被推下去一个位置
Dialogue: 0,0:43:06.37,0:43:11.04,英文,,0,0,0,,And since everyone's getting pushed down together, this tree has perfect balance.
Dialogue: 0,0:43:06.37,0:43:11.04,中文,,0,0,0,,由于每个人都一起被推下去 这颗树保持完美平衡
Dialogue: 0,0:43:11.04,0:43:14.12,英文,,0,0,0,,It will never get lopsided and spindly.
Dialogue: 0,0:43:11.04,0:43:14.12,中文,,0,0,0,,它永远不会变得倾斜和纤细
Dialogue: 0,0:43:14.12,0:43:16.23,英文,,0,0,0,,And we like that.
Dialogue: 0,0:43:14.12,0:43:16.23,中文,,0,0,0,,而我们喜欢这一点
Dialogue: 0,0:43:16.23,0:43:17.55,英文,,0,0,0,,Here's a bunch of vocabulary.
Dialogue: 0,0:43:16.23,0:43:17.55,中文,,0,0,0,,这里有一堆词汇
Dialogue: 0,0:43:17.55,0:43:20.91,英文,,0,0,0,,I would have called them splitting trees, because that's what you've been hearing me saying.
Dialogue: 0,0:43:17.55,0:43:20.91,中文,,0,0,0,,我本来会称它们为分割树 因为这是你听我说的内容
Dialogue: 0,0:43:20.91,0:43:22.60,英文,,0,0,0,,And the trees split, so I like it.
Dialogue: 0,0:43:20.91,0:43:22.60,中文,,0,0,0,,树木分开了 所以我喜欢它
Dialogue: 0,0:43:22.60,0:43:24.66,英文,,0,0,0,,However, I did not invent it.
Dialogue: 0,0:43:22.60,0:43:24.66,中文,,0,0,0,,然而 我并没有发明它
Dialogue: 0,0:43:24.66,0:43:28.08,英文,,0,0,0,,So we are stuck with whatever the inventor called it.
Dialogue: 0,0:43:24.66,0:43:28.08,中文,,0,0,0,,我们只能用发明者给它起的名字
Dialogue: 0,0:43:28.08,0:43:30.06,英文,,0,0,0,,And they called it B-trees.
Dialogue: 0,0:43:28.08,0:43:30.06,中文,,0,0,0,,他们把它叫做B树
Dialogue: 0,0:43:30.06,0:43:30.84,英文,,0,0,0,,Why?
Dialogue: 0,0:43:30.06,0:43:30.84,中文,,0,0,0,,为什么
Dialogue: 0,0:43:30.84,0:43:31.40,英文,,0,0,0,,I don't know.
Dialogue: 0,0:43:30.84,0:43:31.40,中文,,0,0,0,,我不知道
Dialogue: 0,0:43:31.40,0:43:32.82,英文,,0,0,0,,You can read that if you're curious.
Dialogue: 0,0:43:31.40,0:43:32.82,中文,,0,0,0,,如果你好奇 你可以读一读
Dialogue: 0,0:43:32.82,0:43:33.60,英文,,0,0,0,,OK.
Dialogue: 0,0:43:33.60,0:43:37.08,英文,,0,0,0,,And sometimes you'll see 2-3-tree, 2-3-4-tree.
Dialogue: 0,0:43:33.60,0:43:37.08,中文,,0,0,0,,有时候你会看到2-3树 2-3-4树
Dialogue: 0,0:43:37.08,0:43:39.82,英文,,0,0,0,,Those refer to B-trees with a specific limit.
Dialogue: 0,0:43:37.08,0:43:39.82,中文,,0,0,0,,这些指的是具有特定限制的B树
Dialogue: 0,0:43:39.82,0:43:40.56,英文,,0,0,0,,OK.
Dialogue: 0,0:43:40.56,0:43:42.55,英文,,0,0,0,,Enough said about the weird names.
Dialogue: 0,0:43:40.56,0:43:42.55,中文,,0,0,0,,足够讲解了这些奇怪的名字
Dialogue: 0,0:43:42.55,0:43:50.43,英文,,0,0,0,,Remember, they're just splitting trees, even if people decided to confuse us by coming up with all these crazy names.
Dialogue: 0,0:43:42.55,0:43:50.43,中文,,0,0,0,,记住 它们只是分裂树 即使人们决定用所有这些疯狂的名字来迷惑我们
Dialogue: 0,0:43:50.43,0:43:59.42,英文,,0,0,0,,More terminology, you can read it if you ever encounter someone telling you about 2-3-4 trees, but that's just a fancier way of saying what the limit is.
Dialogue: 0,0:43:50.43,0:43:59.42,中文,,0,0,0,,更多术语 如果你遇到有人告诉你关于2-3-4树 你可以阅读 但那只是一种更花哨的说法来表达限制是什么
Dialogue: 0,0:43:59.42,0:44:08.05,英文,,0,0,0,,OK, so I'm now going to tell you two invariants of the B-tree, and then I'm going to prove to you something that hopefully already kind of feels like you already got it,
Dialogue: 0,0:43:59.42,0:44:08.05,中文,,0,0,0,,我现在要告诉你 B 树的两个不变量 然后我会向你证明一件事 希望你已经感觉到
Dialogue: 0,0:44:08.05,0:44:16.05,英文,,0,0,0,,which is that the B-tree is perfectly balanced, and that's going to give us guaranteed logarithmic runtime no matter what items I add.
Dialogue: 0,0:44:08.05,0:44:16.05,中文,,0,0,0,,B 树是完全平衡的 这将确保我们无论添加什么项目 都会得到对数运行时间
Dialogue: 0,0:44:16.05,0:44:17.25,英文,,0,0,0,,I can shove in anything I want.
Dialogue: 0,0:44:16.05,0:44:17.25,中文,,0,0,0,,我可以塞进任何我想要的东西
Dialogue: 0,0:44:17.25,0:44:22.17,英文,,0,0,0,,Your grid scope submission time is in order, and this tree will always be beautiful and bushy.
Dialogue: 0,0:44:17.25,0:44:22.17,中文,,0,0,0,,你的网格范围提交时间是有序的 这棵树将永远美丽而茂密
Dialogue: 0,0:44:22.17,0:44:25.77,英文,,0,0,0,,So I'm going to convince you of that if you're not already convinced.
Dialogue: 0,0:44:22.17,0:44:25.77,中文,,0,0,0,,我会说服你 如果你还没有被说服的话
Dialogue: 0,0:44:25.77,0:44:35.44,英文,,0,0,0,,So to do so, you, by the way, this is kind of like practice for later if you want, you can try adding these items into a B-tree with limit equals two.
Dialogue: 0,0:44:25.77,0:44:35.44,中文,,0,0,0,,为了这样做 顺便说一句 如果你愿意的话 这有点像以后的练习 你可以尝试将这些项目添加到限制为两个的 B 树中
Dialogue: 0,0:44:35.44,0:44:39.80,英文,,0,0,0,,I won't walk through it, but there are a bunch of pictures, so try it out if you're curious.
Dialogue: 0,0:44:35.44,0:44:39.80,中文,,0,0,0,,我不会详细介绍 但有很多图片 如果你感兴趣的话 试一试吧
Dialogue: 0,0:44:39.80,0:44:41.14,英文,,0,0,0,,It's also a video.
Dialogue: 0,0:44:39.80,0:44:41.14,中文,,0,0,0,,它也是一个视频
Dialogue: 0,0:44:41.14,0:44:42.38,英文,,0,0,0,,Okay.
Dialogue: 0,0:44:42.38,0:44:46.53,英文,,0,0,0,,So here are the two, sorry for skipping through a bunch of stuff.
Dialogue: 0,0:44:42.38,0:44:46.53,中文,,0,0,0,,这就是两个 抱歉我跳过了很多东西
Dialogue: 0,0:44:46.53,0:44:47.53,英文,,0,0,0,,I want to get you out of here.
Dialogue: 0,0:44:46.53,0:44:47.53,中文,,0,0,0,,我想让你离开这里
Dialogue: 0,0:44:47.53,0:44:53.09,英文,,0,0,0,,So here are the two invariants that, again, hopefully they kind of feel already true by this point.
Dialogue: 0,0:44:47.53,0:44:53.09,中文,,0,0,0,,这两个不变量 希望到这一点它们已经感觉真实了
Dialogue: 0,0:44:53.09,0:44:57.28,英文,,0,0,0,,But if not, I will say them out loud just so we're all on the same page.
Dialogue: 0,0:44:53.09,0:44:57.28,中文,,0,0,0,,但如果不是 我会大声说出来 这样我们都在一个页面上
Dialogue: 0,0:44:57.28,0:45:00.64,英文,,0,0,0,,So there are two invariants that I think are useful.
Dialogue: 0,0:44:57.28,0:45:00.64,中文,,0,0,0,,有两个不变量我觉得很有用
Dialogue: 0,0:45:00.64,0:45:04.64,英文,,0,0,0,,One of the invariants is that all leaves must be at the same depth.
Dialogue: 0,0:45:00.64,0:45:04.64,中文,,0,0,0,,其中一个不变量是所有叶子节点必须在相同的深度
Dialogue: 0,0:45:04.64,0:45:13.71,英文,,0,0,0,,And the way that we proved this earlier is that the only way you can get the tree to be taller is to promote a brand new root and push everybody else down by one.
Dialogue: 0,0:45:04.64,0:45:13.71,中文,,0,0,0,,我们之前证明这一点的方式是 使树变得更高的唯一方法是提升一个全新的根 并将其他所有节点都推到下面一个位置
Dialogue: 0,0:45:13.71,0:45:17.15,英文,,0,0,0,,So all the leaves stay at the same root or same distance from the root.
Dialogue: 0,0:45:13.71,0:45:17.15,中文,,0,0,0,,所有的叶子都保持在相同的根或距离根的位置
Dialogue: 0,0:45:17.15,0:45:19.37,英文,,0,0,0,,You cannot hang a 1 down here.
Dialogue: 0,0:45:17.15,0:45:19.37,中文,,0,0,0,,你不能把一个1挂在这里
Dialogue: 0,0:45:19.37,0:45:20.47,英文,,0,0,0,,That's not allowed.
Dialogue: 0,0:45:19.37,0:45:20.47,中文,,0,0,0,,那是不允许的
Dialogue: 0,0:45:20.47,0:45:25.39,英文,,0,0,0,,If I was adding the 1, it should have gone in the same node as the 2 and 3 and overstuffed that node.
Dialogue: 0,0:45:20.47,0:45:25.39,中文,,0,0,0,,如果我在添加这个1 它应该放在与2和3相同的节点 并且使该节点过于拥挤
Dialogue: 0,0:45:25.39,0:45:26.97,英文,,0,0,0,,You can't hang a 1 down here.
Dialogue: 0,0:45:25.39,0:45:26.97,中文,,0,0,0,,你不能把一个1挂在这里
Dialogue: 0,0:45:26.97,0:45:28.83,英文,,0,0,0,,So you cannot create new leaves.
Dialogue: 0,0:45:26.97,0:45:28.83,中文,,0,0,0,,你不能创建新的叶子
Dialogue: 0,0:45:28.83,0:45:32.54,英文,,0,0,0,,The only way to make the tree taller is to push everyone down by one.
Dialogue: 0,0:45:28.83,0:45:32.54,中文,,0,0,0,,使树变得更高的唯一方法是将每个人都推下来一点
Dialogue: 0,0:45:32.54,0:45:36.14,英文,,0,0,0,,So all the leaves will always be at the same distance.
Dialogue: 0,0:45:32.54,0:45:36.14,中文,,0,0,0,,所有的叶子始终保持相同的距离
Dialogue: 0,0:45:36.14,0:45:37.58,英文,,0,0,0,,That's one of the invariants.
Dialogue: 0,0:45:36.14,0:45:37.58,中文,,0,0,0,,这是其中一个不变量
Dialogue: 0,0:45:37.58,0:45:38.68,英文,,0,0,0,,Always true.
Dialogue: 0,0:45:37.58,0:45:38.68,中文,,0,0,0,,始终成立
Dialogue: 0,0:45:38.68,0:45:48.05,英文,,0,0,0,,Another invariant that is a little bit trickier to see, but the more you play with it, maybe you're convinced, is that if your node has k items, you must have exactly k plus 1 children.
Dialogue: 0,0:45:38.68,0:45:48.05,中文,,0,0,0,,另一个可能有点难以理解的不变量 但你越玩弄它 也许你就会相信 如果你的节点有k个项目 你必须确切地有k+1个子节点
Dialogue: 0,0:45:48.05,0:45:53.25,英文,,0,0,0,,So for example, this node with 5, 6, and 7, it should have 4 children.
Dialogue: 0,0:45:48.05,0:45:53.25,中文,,0,0,0,,例如 这个节点有5、6和7 它应该有4个子节点
Dialogue: 0,0:45:53.25,0:45:55.21,英文,,0,0,0,,That's just the behavior of the splitting.
Dialogue: 0,0:45:53.25,0:45:55.21,中文,,0,0,0,,这只是分裂的行为
Dialogue: 0,0:45:55.21,0:46:02.60,英文,,0,0,0,,There should be one child with things less than 5, one child with things between 5 and 6, one between 6 and 7, and one greater than 7.
Dialogue: 0,0:45:55.21,0:46:02.60,中文,,0,0,0,,应该有一个子节点的东西少于5个 一个子节点的东西在5和6之间 一个在6和7之间 一个大于7
Dialogue: 0,0:46:02.60,0:46:03.58,英文,,0,0,0,,That's the rule.
Dialogue: 0,0:46:02.60,0:46:03.58,中文,,0,0,0,,那就是规则
Dialogue: 0,0:46:03.58,0:46:08.60,英文,,0,0,0,,You can try to build this P-tree, but you will not succeed because it breaks the invariance.
Dialogue: 0,0:46:03.58,0:46:08.60,中文,,0,0,0,,你可以尝试构建这个P树 但你不会成功 因为它违反了不变性
Dialogue: 0,0:46:08.60,0:46:19.77,英文,,0,0,0,,So although we haven't proven them, hopefully they sound kind of convincing that my leaves are at the same depth and that if I have a node with k things, there needs to be k a plus 1 children coming out of it.
Dialogue: 0,0:46:08.60,0:46:19.77,中文,,0,0,0,,尽管我们还没有证明它们 但希望它们听起来有点令人信服 即我的叶子在同一深度 并且如果我有一个有k个东西的节点 那么需要有k加1个子节点从中出来
Dialogue: 0,0:46:19.77,0:46:22.96,英文,,0,0,0,,Quick question.
Dialogue: 0,0:46:19.77,0:46:22.96,中文,,0,0,0,,快问
Dialogue: 0,0:46:22.96,0:46:26.36,英文,,0,0,0,,While I go over deletion, bonus videos, but not live.
Dialogue: 0,0:46:22.96,0:46:26.36,中文,,0,0,0,,当我讲解删除时 奖励视频 但不是直播
Dialogue: 0,0:46:26.36,0:46:34.76,英文,,0,0,0,,OK, so these two invariants guarantee something that maybe you already felt true, which is that the trees are always going to be bushy.
Dialogue: 0,0:46:26.36,0:46:34.76,中文,,0,0,0,,这两个不变量保证了一些你可能已经感觉到的事实 即树总是会茂密
Dialogue: 0,0:46:34.76,0:46:35.66,英文,,0,0,0,,Try as you might.
Dialogue: 0,0:46:34.76,0:46:35.66,中文,,0,0,0,,尽管你尽力了
Dialogue: 0,0:46:35.66,0:46:36.53,英文,,0,0,0,,And we really tried.
Dialogue: 0,0:46:35.66,0:46:36.53,中文,,0,0,0,,而且我们确实努力了
Dialogue: 0,0:46:36.53,0:46:39.71,英文,,0,0,0,,We added 20, 21, 22, 23, 24.
Dialogue: 0,0:46:36.53,0:46:39.71,中文,,0,0,0,,我们添加了20、21、22、23、24
Dialogue: 0,0:46:39.71,0:46:40.63,英文,,0,0,0,,Try as you might.
Dialogue: 0,0:46:39.71,0:46:40.63,中文,,0,0,0,,尽管你尽力了
Dialogue: 0,0:46:40.63,0:46:44.15,英文,,0,0,0,,You will never get this tree to be spindly and ugly.
Dialogue: 0,0:46:40.63,0:46:44.15,中文,,0,0,0,,你永远也不会让这棵树长得细长且难看
Dialogue: 0,0:46:44.15,0:46:46.47,英文,,0,0,0,,So here's the final slide I got to show you.
Dialogue: 0,0:46:44.15,0:46:46.47,中文,,0,0,0,,这是我要给你展示的最后一页幻灯片
Dialogue: 0,0:46:46.47,0:46:48.95,英文,,0,0,0,,And it's a little bit heavy duty, so I'll walk you through it.
Dialogue: 0,0:46:46.47,0:46:48.95,中文,,0,0,0,,而且这有点复杂 所以我会为你详细解释
Dialogue: 0,0:46:48.95,0:46:53.30,英文,,0,0,0,,So suppose I have a B tree with height 2.
Dialogue: 0,0:46:48.95,0:46:53.30,中文,,0,0,0,,假设我有一棵高度为2的B树
Dialogue: 0,0:46:53.30,0:46:55.80,英文,,0,0,0,,That is, the deepest things are at depth 2.
Dialogue: 0,0:46:53.30,0:46:55.80,中文,,0,0,0,,也就是说 最深的东西在深度2
Dialogue: 0,0:46:55.80,0:46:57.94,英文,,0,0,0,,Look, depth 2, depth 2.
Dialogue: 0,0:46:55.80,0:46:57.94,中文,,0,0,0,,看 深度2 深度2
Dialogue: 0,0:46:57.94,0:47:05.06,英文,,0,0,0,,So what is the worst case, the fewest number of items I can stuff in a B-tree of depth 2?
Dialogue: 0,0:46:57.94,0:47:05.06,中文,,0,0,0,,那么最坏情况是什么 我可以在深度为2的B树中放入最少的项
Dialogue: 0,0:47:05.06,0:47:06.86,英文,,0,0,0,,Well, it would be this tree up here.
Dialogue: 0,0:47:05.06,0:47:06.86,中文,,0,0,0,,那就是这棵树
Dialogue: 0,0:47:06.86,0:47:09.46,英文,,0,0,0,,All the nodes are quite lonely.
Dialogue: 0,0:47:06.86,0:47:09.46,中文,,0,0,0,,所有的节点都相当孤独
Dialogue: 0,0:47:09.46,0:47:10.98,英文,,0,0,0,,They only have one or two items inside.
Dialogue: 0,0:47:09.46,0:47:10.98,中文,,0,0,0,,它们里面只有一两个项
Dialogue: 0,0:47:10.98,0:47:12.10,英文,,0,0,0,,They're pretty empty.
Dialogue: 0,0:47:10.98,0:47:12.10,中文,,0,0,0,,它们相当空
Dialogue: 0,0:47:12.10,0:47:13.66,英文,,0,0,0,,So this would be the worst case.
Dialogue: 0,0:47:12.10,0:47:13.66,中文,,0,0,0,,这将是最糟糕的情况
Dialogue: 0,0:47:13.66,0:47:17.81,英文,,0,0,0,,I was able to stuff eight things in the nodes.
Dialogue: 0,0:47:13.66,0:47:17.81,中文,,0,0,0,,我能把八件东西塞进节点里
Dialogue: 0,0:47:17.81,0:47:22.73,英文,,0,0,0,,Here's the best case, which is I'm trying to stuff as much stuff as I possibly can into this tree of height 2.
Dialogue: 0,0:47:17.81,0:47:22.73,中文,,0,0,0,,这是最好的情况 我试图尽可能多地塞满这个高度为2的树
Dialogue: 0,0:47:22.73,0:47:25.79,英文,,0,0,0,,And in this case, I was able to stuff 26 things.
Dialogue: 0,0:47:22.73,0:47:25.79,中文,,0,0,0,,而在这种情况下 我能够塞进26件东西
Dialogue: 0,0:47:25.79,0:47:28.05,英文,,0,0,0,,Look, all these nodes are overstuffed.
Dialogue: 0,0:47:25.79,0:47:28.05,中文,,0,0,0,,看 所有这些节点都塞得太满了
Dialogue: 0,0:47:28.05,0:47:30.11,英文,,0,0,0,,The nodes with two items have three children.
Dialogue: 0,0:47:28.05,0:47:30.11,中文,,0,0,0,,有两个项目的节点有三个子节点
Dialogue: 0,0:47:30.11,0:47:30.69,英文,,0,0,0,,It's beautiful.
Dialogue: 0,0:47:30.11,0:47:30.69,中文,,0,0,0,,很美
Dialogue: 0,0:47:30.69,0:47:34.65,英文,,0,0,0,,I stuffed tons of things into my B tree of height 2.
Dialogue: 0,0:47:30.69,0:47:34.65,中文,,0,0,0,,我往我的高度为2的B树里塞了很多东西
Dialogue: 0,0:47:34.65,0:47:40.10,英文,,0,0,0,,So it turns out this is the worst case, the fewest number of things I can stuff in a B-tree of height 2.
Dialogue: 0,0:47:34.65,0:47:40.10,中文,,0,0,0,,结果是这是最坏的情况 我能塞进高度为2的B树里的东西最少
Dialogue: 0,0:47:40.10,0:47:44.28,英文,,0,0,0,,This is the best case, the most number of things I can stuff in a B-tree of height 2.
Dialogue: 0,0:47:40.10,0:47:44.28,中文,,0,0,0,,这是最好的情况 我能塞进高度为2的B树里的东西最多
Dialogue: 0,0:47:44.28,0:47:48.40,英文,,0,0,0,,And remember, the L, the max number of things per node, that's something I set ahead of time.
Dialogue: 0,0:47:44.28,0:47:48.40,中文,,0,0,0,,而且记住 L 每个节点的最大东西数 那是我事先设定好的
Dialogue: 0,0:47:48.40,0:47:50.64,英文,,0,0,0,,I lock it in, then I build the tree.
Dialogue: 0,0:47:48.40,0:47:50.64,中文,,0,0,0,,我锁定它 然后建树
Dialogue: 0,0:47:50.64,0:47:54.09,英文,,0,0,0,,Can't change it halfway through.
Dialogue: 0,0:47:50.64,0:47:54.09,中文,,0,0,0,,中途不能改变它
Dialogue: 0,0:47:54.09,0:48:00.75,英文,,0,0,0,,Turns out the behavior, if you take this worst-case tree and you try to add another layer, you're going to double the number of items.
Dialogue: 0,0:47:54.09,0:48:00.75,中文,,0,0,0,,原来 如果你拿这个最坏情况的树 然后尝试再加一层 你会把项目数量翻倍
Dialogue: 0,0:48:00.75,0:48:04.42,英文,,0,0,0,,It's kind of similar to the binary search tree property from before.
Dialogue: 0,0:48:00.75,0:48:04.42,中文,,0,0,0,,这有点类似于以前的二叉搜索树属性
Dialogue: 0,0:48:04.42,0:48:10.36,英文,,0,0,0,,If I add another layer of things to grow the height by one, the number of items will double.
Dialogue: 0,0:48:04.42,0:48:10.36,中文,,0,0,0,,如果我再加一层东西来增加高度 项目数量就会翻倍
Dialogue: 0,0:48:10.36,0:48:12.30,英文,,0,0,0,,That's logarithmic behavior.
Dialogue: 0,0:48:10.36,0:48:12.30,中文,,0,0,0,,这就是对数行为
Dialogue: 0,0:48:12.30,0:48:13.95,英文,,0,0,0,,What about this one?
Dialogue: 0,0:48:12.30,0:48:13.95,中文,,0,0,0,,这个呢
Dialogue: 0,0:48:13.95,0:48:16.75,英文,,0,0,0,,What would it look like if I added another layer of stuff?
Dialogue: 0,0:48:13.95,0:48:16.75,中文,,0,0,0,,如果我再添加一层东西会是什么样子
Dialogue: 0,0:48:16.75,0:48:19.47,英文,,0,0,0,,Well, I'd have to give everybody three children.
Dialogue: 0,0:48:16.75,0:48:19.47,中文,,0,0,0,,我得给每个人三个子节点
Dialogue: 0,0:48:19.47,0:48:20.95,英文,,0,0,0,,Why do I have to give everyone three children?
Dialogue: 0,0:48:19.47,0:48:20.95,中文,,0,0,0,,为什么我必须给每个人三个子节点
Dialogue: 0,0:48:20.95,0:48:24.45,英文,,0,0,0,,Why can't I just give this item one child and say, I'm done?
Dialogue: 0,0:48:20.95,0:48:24.45,中文,,0,0,0,,我为什么不能只给这个项目一个子节点然后说 我完成了
Dialogue: 0,0:48:24.45,0:48:25.37,英文,,0,0,0,,The tree is taller.
Dialogue: 0,0:48:24.45,0:48:25.37,中文,,0,0,0,,这棵树更高
Dialogue: 0,0:48:25.37,0:48:29.71,英文,,0,0,0,,Because remember, my invariant says all the leaves have to be at the same depth.
Dialogue: 0,0:48:25.37,0:48:29.71,中文,,0,0,0,,因为请记住 我的不变量规定所有叶子必须在同一深度
Dialogue: 0,0:48:29.71,0:48:35.48,英文,,0,0,0,,So in order for this tree to be taller, what would have to happen is all of these nodes would have to have three children.
Dialogue: 0,0:48:29.71,0:48:35.48,中文,,0,0,0,,为了使这棵树更高 所有这些节点都必须有三个子节点
Dialogue: 0,0:48:35.48,0:48:37.28,英文,,0,0,0,,That's what the invariant says.
Dialogue: 0,0:48:35.48,0:48:37.28,中文,,0,0,0,,这就是不变量所说的
Dialogue: 0,0:48:37.28,0:48:42.78,英文,,0,0,0,,And if all these items have three children, then the number of items in the tree would triple.
Dialogue: 0,0:48:37.28,0:48:42.78,中文,,0,0,0,,如果所有这些项目都有三个子节点 那么树中的项目数量将会增加三倍
Dialogue: 0,0:48:42.78,0:48:50.26,英文,,0,0,0,,And if the number of items in the tree triples for the height to grow by 1, well, that's still logarithmic behavior, but with a different base.
Dialogue: 0,0:48:42.78,0:48:50.26,中文,,0,0,0,,如果树中的项目数量翻了三倍 高度增加了1 那也还是对数行为 只是基数不同
Dialogue: 0,0:48:50.26,0:48:53.04,英文,,0,0,0,,And remember a little high school math trick?
Dialogue: 0,0:48:50.26,0:48:53.04,中文,,0,0,0,,还记得一点高中数学的小窍门吗
Dialogue: 0,0:48:53.04,0:48:56.26,英文,,0,0,0,,The base is like a constant multiplicative factor.
Dialogue: 0,0:48:53.04,0:48:56.26,中文,,0,0,0,,基数就像一个常数乘法因子
Dialogue: 0,0:48:56.26,0:48:57.38,英文,,0,0,0,,So I can drop it.
Dialogue: 0,0:48:56.26,0:48:57.38,中文,,0,0,0,,我可以忽略它
Dialogue: 0,0:48:57.38,0:49:02.84,英文,,0,0,0,,And it turns out the best case is log n. The worst case is log n. So we have logarithmic performance.
Dialogue: 0,0:48:57.38,0:49:02.84,中文,,0,0,0,,事实证明 最好的情况是对数n 最坏的情况也是对数n 所以我们有对数级的性能
Dialogue: 0,0:49:02.84,0:49:04.78,英文,,0,0,0,,Again, I know it's kind of a heavy-duty slide.
Dialogue: 0,0:49:02.84,0:49:04.78,中文,,0,0,0,,再说一遍 我知道这有点复杂
Dialogue: 0,0:49:04.78,0:49:08.53,英文,,0,0,0,,I would encourage you go and try to build the trees of height 3.
Dialogue: 0,0:49:04.78,0:49:08.53,中文,,0,0,0,,我鼓励你去尝试构建高度为3的树
Dialogue: 0,0:49:08.53,0:49:13.73,英文,,0,0,0,,You will see that no matter how you build B-trees, you can stuff whatever you want in there in any order.
Dialogue: 0,0:49:08.53,0:49:13.73,中文,,0,0,0,,无论你如何构建B树 你会发现你可以按任何顺序将任何东西塞进去
Dialogue: 0,0:49:13.73,0:49:19.71,英文,,0,0,0,,The tree will always be balanced and bushy, and that's what gives you logarithmic behavior.
Dialogue: 0,0:49:13.73,0:49:19.71,中文,,0,0,0,,树始终保持平衡而且茂密 这就是给你对数行为的原因
Dialogue: 0,0:49:19.71,0:49:20.53,英文,,0,0,0,,Okay.
Dialogue: 0,0:49:20.53,0:49:23.34,英文,,0,0,0,,So here's the runtime, maybe in a different picture.
Dialogue: 0,0:49:20.53,0:49:23.34,中文,,0,0,0,,这是运行时间 可能是以不同的方式呈现的
Dialogue: 0,0:49:23.34,0:49:27.36,英文,,0,0,0,,So if you didn't like the original picture, I'll show you this one if you like it better.
Dialogue: 0,0:49:23.34,0:49:27.36,中文,,0,0,0,,如果你不喜欢原始图片 我会给你看这张 如果你更喜欢的话
Dialogue: 0,0:49:27.36,0:49:29.88,英文,,0,0,0,,So how would you find something in the B-tree?
Dialogue: 0,0:49:27.36,0:49:29.88,中文,,0,0,0,,那么在B树中如何查找东西呢
Dialogue: 0,0:49:29.88,0:49:37.18,英文,,0,0,0,,It's kind of like the binary search tree, with a little extra note that if there are two things in the node, you got to check both.
Dialogue: 0,0:49:29.88,0:49:37.18,中文,,0,0,0,,这有点像二叉搜索树 只是多了一个小提示 如果节点中有两个东西 你必须检查两者
Dialogue: 0,0:49:37.18,0:49:39.23,英文,,0,0,0,,So for example, I'm looking for an item.
Dialogue: 0,0:49:37.18,0:49:39.23,中文,,0,0,0,,比如说 我在找一个东西
Dialogue: 0,0:49:39.23,0:49:40.45,英文,,0,0,0,,I start at the root.
Dialogue: 0,0:49:39.23,0:49:40.45,中文,,0,0,0,,我从根开始
Dialogue: 0,0:49:40.45,0:49:41.19,英文,,0,0,0,,There's two items.
Dialogue: 0,0:49:40.45,0:49:41.19,中文,,0,0,0,,有两个项目
Dialogue: 0,0:49:41.19,0:49:42.39,英文,,0,0,0,,I've got to check both.
Dialogue: 0,0:49:41.19,0:49:42.39,中文,,0,0,0,,我得检查两个
Dialogue: 0,0:49:42.39,0:49:43.59,英文,,0,0,0,,And maybe it's greater than both of them.
Dialogue: 0,0:49:42.39,0:49:43.59,中文,,0,0,0,,也许它比它们两个都大
Dialogue: 0,0:49:43.59,0:49:44.79,英文,,0,0,0,,So I go here.
Dialogue: 0,0:49:43.59,0:49:44.79,中文,,0,0,0,,我到这里
Dialogue: 0,0:49:44.79,0:49:45.37,英文,,0,0,0,,There's two items.
Dialogue: 0,0:49:44.79,0:49:45.37,中文,,0,0,0,,有两个项目
Dialogue: 0,0:49:45.37,0:49:46.47,英文,,0,0,0,,I've got to check both.
Dialogue: 0,0:49:45.37,0:49:46.47,中文,,0,0,0,,我得检查两个
Dialogue: 0,0:49:46.47,0:49:47.46,英文,,0,0,0,,Maybe it's between them.
Dialogue: 0,0:49:46.47,0:49:47.46,中文,,0,0,0,,也许就在它们之间
Dialogue: 0,0:49:47.46,0:49:48.78,英文,,0,0,0,,So I'll go to this middle node.
Dialogue: 0,0:49:47.46,0:49:48.78,中文,,0,0,0,,那我就去这个中间节点
Dialogue: 0,0:49:48.78,0:49:49.72,英文,,0,0,0,,There's two items.
Dialogue: 0,0:49:48.78,0:49:49.72,中文,,0,0,0,,有两个条目
Dialogue: 0,0:49:49.72,0:49:52.16,英文,,0,0,0,,I've got to check both.
Dialogue: 0,0:49:49.72,0:49:52.16,中文,,0,0,0,,我得检查两个
Dialogue: 0,0:49:52.16,0:49:56.54,英文,,0,0,0,,The runtime for finding something in this B-tree, it grows with the height.
Dialogue: 0,0:49:52.16,0:49:56.54,中文,,0,0,0,,在这个B树中查找东西的运行时间 它随着树的高度增长而增长
Dialogue: 0,0:49:56.54,0:50:02.52,英文,,0,0,0,,The taller the tree is, the more nodes I have to scan, because I have to go all the way down the tree in the worst case.
Dialogue: 0,0:49:56.54,0:50:02.52,中文,,0,0,0,,树越高 我就得扫描更多的节点 因为在最坏的情况下我必须一直沿着树往下走
Dialogue: 0,0:50:02.52,0:50:07.05,英文,,0,0,0,,And so it grows with the height, and it also grows with the number of things in the node.
Dialogue: 0,0:50:02.52,0:50:07.05,中文,,0,0,0,,随着高度增长 它也随节点中的事物数量增长
Dialogue: 0,0:50:07.05,0:50:09.01,英文,,0,0,0,,If there are 10 things in the node, it's slower.
Dialogue: 0,0:50:07.05,0:50:09.01,中文,,0,0,0,,如果节点中有10个事物 速度会慢一些
Dialogue: 0,0:50:09.01,0:50:11.71,英文,,0,0,0,,If there are 100 things in the node, it's even slower.
Dialogue: 0,0:50:09.01,0:50:11.71,中文,,0,0,0,,如果节点中有100个事物 速度会更慢
Dialogue: 0,0:50:11.71,0:50:15.35,英文,,0,0,0,,But luckily, remember we said the number of things in the node is a constant.
Dialogue: 0,0:50:11.71,0:50:15.35,中文,,0,0,0,,但幸运的是 记住我们说过节点中的事物数量是一个常数
Dialogue: 0,0:50:15.35,0:50:16.39,英文,,0,0,0,,You fix it ahead of time.
Dialogue: 0,0:50:15.35,0:50:16.39,中文,,0,0,0,,你提前修复它
Dialogue: 0,0:50:16.39,0:50:19.97,英文,,0,0,0,,You say, I want a tree with limit 3, and there's no takebacks.
Dialogue: 0,0:50:16.39,0:50:19.97,中文,,0,0,0,,你说 我想要一个限制为3的树 而且不可撤销
Dialogue: 0,0:50:19.97,0:50:24.63,英文,,0,0,0,,Once you say it's limit 3, you build the tree with limit 3, and you don't look back.
Dialogue: 0,0:50:19.97,0:50:24.63,中文,,0,0,0,,一旦你说是限制为3 你就建立一个限制为3的树 而且不回头看
Dialogue: 0,0:50:24.63,0:50:28.36,英文,,0,0,0,,So in that case, we can say L is a constant, and we can drop it.
Dialogue: 0,0:50:24.63,0:50:28.36,中文,,0,0,0,,那么在这种情况下 我们可以说L是一个常数 我们可以忽略它
Dialogue: 0,0:50:28.36,0:50:35.22,英文,,0,0,0,,And we can say the runtime is just log of n. It is just finding the height, or it grows with the height of the tree.
Dialogue: 0,0:50:28.36,0:50:35.22,中文,,0,0,0,,而且我们可以说运行时间就是log n 它就是找到树的高度 或者说它随着树的高度增长
Dialogue: 0,0:50:35.22,0:50:36.90,英文,,0,0,0,,You go all the way down the tree.
Dialogue: 0,0:50:35.22,0:50:36.90,中文,,0,0,0,,你一直沿着树往下走
Dialogue: 0,0:50:36.90,0:50:39.21,英文,,0,0,0,,The taller the tree is, the slower it is.
Dialogue: 0,0:50:36.90,0:50:39.21,中文,,0,0,0,,树越高 速度就越慢
Dialogue: 0,0:50:39.21,0:50:42.59,英文,,0,0,0,,The multiple items in each node, you might be worried about it.
Dialogue: 0,0:50:39.21,0:50:42.59,中文,,0,0,0,,每个节点中的多个项 你可能会担心
Dialogue: 0,0:50:42.59,0:50:45.25,英文,,0,0,0,,But remember, the number of items, there's a constant limit.
Dialogue: 0,0:50:42.59,0:50:45.25,中文,,0,0,0,,但请记住 项的数量有一个常数限制
Dialogue: 0,0:50:45.25,0:50:46.29,英文,,0,0,0,,So it's OK.
Dialogue: 0,0:50:45.25,0:50:46.29,中文,,0,0,0,,没问题
Dialogue: 0,0:50:46.29,0:50:49.25,英文,,0,0,0,,You can scan all the way down the tree, and you're OK.
Dialogue: 0,0:50:46.29,0:50:49.25,中文,,0,0,0,,你可以一直扫描树 没问题的
Dialogue: 0,0:50:49.25,0:50:51.06,英文,,0,0,0,,OK, that was a little bit fast.
Dialogue: 0,0:50:49.25,0:50:51.06,中文,,0,0,0,,好的 那有点快
Dialogue: 0,0:50:51.06,0:50:52.38,英文,,0,0,0,,I'm sorry.
Dialogue: 0,0:50:51.06,0:50:52.38,中文,,0,0,0,,对不起
Dialogue: 0,0:50:52.38,0:50:55.20,英文,,0,0,0,,We wanted to get you through and out of here on time.
Dialogue: 0,0:50:52.38,0:50:55.20,中文,,0,0,0,,我们希望能按时让你通过并离开这里
Dialogue: 0,0:50:55.20,0:51:04.92,英文,,0,0,0,,I will say, if you want to see the bonus things, for example, you want to see deletion, or you want to see the Big O runtime from before
Dialogue: 0,0:50:55.20,0:51:04.92,中文,,0,0,0,,我想说 如果你想看一些额外的东西 比如你想看删除操作 或者你想看之前我们跳过O运行时间
Dialogue: 0,0:51:04.92,0:51:10.92,英文,,0,0,0,,hat we skipped over, there are extra videos linked on the website under videos that I'll show you for the people on the recording.
Dialogue: 0,0:51:04.92,0:51:10.92,中文,,0,0,0,,网站上有额外的视频链接在视频下面 我会给录制的人展示
Dialogue: 0,0:51:10.92,0:51:18.64,英文,,0,0,0,,uh look there's extra videos so you can check them out i think they're kind of cool we won't like test you on them super deeply
Dialogue: 0,0:51:10.92,0:51:18.64,中文,,0,0,0,,看 有额外的视频 你可以看一下 我觉得它们挺酷的 我们不会深入测试它们
Dialogue: 0,0:51:18.64,0:51:26.64,英文,,0,0,0,,because i didn't cover them but if you're curious these two videos kind of cool and there's also bonus slides so check them out otherwise see you next time
Dialogue: 0,0:51:18.64,0:51:26.64,中文,,0,0,0,,因为我没讲到 但如果你好奇 这两个视频还挺有意思的 还有一些额外的幻灯片 去看看吧 否则下次再见
