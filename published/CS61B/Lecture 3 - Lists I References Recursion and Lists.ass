[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 3
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 686

[Aegisub Project Garbage]
Export Encoding: Unicode (UTF-8)
Last Style Storage: Default
Audio File: D:/python_code/video_tool/video_tool/result/Lecture 3 - Lists I： References, Recursion, and Lists.mp4
Video File: D:/python_code/video_tool/video_tool/result/Lecture 3 - Lists I： References, Recursion, and Lists.mp4
Video AR Mode: 4
Video AR Value: 1.865889
Video Zoom Percent: 0.625000
Scroll Position: 914
Active Line: 928
Video Position: 32492

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,12,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,104.956,100,0,0,1,1.27037,1.27037,2,7,7,7,1
Style: 英文,Arial,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,104.956,100,0,0,1,1.27037,1.27037,2,1,1,5,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,104.956,100,0,0,1,1.27037,1.27037,2,1,1,29,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:00:00.44,0:00:03.99,英文,,0,0,0,,That isn't like total chaos, but I guess we'll find out.
Dialogue: 0,0:00:00.44,0:00:03.99,中文,,0,0,0,,这不像是彻底的混乱 但我想我们会找出来的
Dialogue: 0,0:00:03.99,0:00:05.59,英文,,0,0,0,,All right.
Dialogue: 0,0:00:03.99,0:00:05.59,中文,,0,0,0,,好的
Dialogue: 0,0:00:05.59,0:00:07.89,英文,,0,0,0,,Hopefully that was the last bit of chaos all day.
Dialogue: 0,0:00:05.59,0:00:07.89,中文,,0,0,0,,希望这是今天最后一点混乱了
Dialogue: 0,0:00:07.89,0:00:11.41,英文,,0,0,0,,Justin's gonna try to figure out how to get rid of the chat because it was requested on Ed.
Dialogue: 0,0:00:07.89,0:00:11.41,中文,,0,0,0,,贾斯汀会试着想办法摆脱聊天 因为这是Ed要求的
Dialogue: 0,0:00:11.41,0:00:12.89,英文,,0,0,0,,So good luck with that, buddy.
Dialogue: 0,0:00:11.41,0:00:12.89,中文,,0,0,0,,祝你好运 伙计
Dialogue: 0,0:00:12.89,0:00:14.47,英文,,0,0,0,,Okay.
Dialogue: 0,0:00:12.89,0:00:14.47,中文,,0,0,0,,好的
Dialogue: 0,0:00:14.47,0:00:14.87,英文,,0,0,0,,Cool.
Dialogue: 0,0:00:14.47,0:00:14.87,中文,,0,0,0,,很酷
Dialogue: 0,0:00:14.87,0:00:16.39,英文,,0,0,0,,Welcome back.
Dialogue: 0,0:00:14.87,0:00:16.39,中文,,0,0,0,,欢迎回来
Dialogue: 0,0:00:16.39,0:00:18.23,英文,,0,0,0,,OK, hopefully no more chaos all day.
Dialogue: 0,0:00:16.39,0:00:18.23,中文,,0,0,0,,希望今天不会再有混乱
Dialogue: 0,0:00:18.23,0:00:19.81,英文,,0,0,0,,So I'll come back to this in a little bit.
Dialogue: 0,0:00:18.23,0:00:19.81,中文,,0,0,0,,我稍后会回到这个问题
Dialogue: 0,0:00:19.81,0:00:22.30,英文,,0,0,0,,But today starts with a puzzle.
Dialogue: 0,0:00:19.81,0:00:22.30,中文,,0,0,0,,但今天从一个谜题开始
Dialogue: 0,0:00:22.30,0:00:26.84,英文,,0,0,0,,So I'm going to start off today with the mystery of the walrus.
Dialogue: 0,0:00:22.30,0:00:26.84,中文,,0,0,0,,我今天要从海象的谜团开始
Dialogue: 0,0:00:26.84,0:00:28.42,英文,,0,0,0,,So what is the mystery of the walrus?
Dialogue: 0,0:00:26.84,0:00:28.42,中文,,0,0,0,,那么海象的谜团是什么呢
Dialogue: 0,0:00:28.42,0:00:30.68,英文,,0,0,0,,Well, the mystery of the walrus goes like this.
Dialogue: 0,0:00:28.42,0:00:30.68,中文,,0,0,0,,好吧 海象的谜团是这样的
Dialogue: 0,0:00:30.68,0:00:32.14,英文,,0,0,0,,So take a look at the code on the left.
Dialogue: 0,0:00:30.68,0:00:32.14,中文,,0,0,0,,看看左边的代码
Dialogue: 0,0:00:32.14,0:00:35.09,英文,,0,0,0,,What happens is I create a new walrus.
Dialogue: 0,0:00:32.14,0:00:35.09,中文,,0,0,0,,发生的是我创建了一个新的海象
Dialogue: 0,0:00:35.09,0:00:37.37,英文,,0,0,0,,And I give it a weight and a tusk size.
Dialogue: 0,0:00:35.09,0:00:37.37,中文,,0,0,0,,我给它一个体重和一个长獠牙
Dialogue: 0,0:00:37.37,0:00:40.73,英文,,0,0,0,,And what those numbers specifically mean doesn't really matter.
Dialogue: 0,0:00:37.37,0:00:40.73,中文,,0,0,0,,那些数字具体意味着什么并不重要
Dialogue: 0,0:00:40.73,0:00:44.09,英文,,0,0,0,,Then I declare there is another walrus variable, b.
Dialogue: 0,0:00:40.73,0:00:44.09,中文,,0,0,0,,然后我声明有另一个海象变量 b
Dialogue: 0,0:00:44.09,0:00:54.95,英文,,0,0,0,,And then I set b equal to a. And so the question for you is, if I now set the weight of b equal to 5, is that going to change the weight of walrus a?
Dialogue: 0,0:00:44.09,0:00:54.95,中文,,0,0,0,,然后我将b设置为a 那么对你来说 现在如果我将b的体重设置为5 那会改变海象 a 的体重吗
Dialogue: 0,0:00:54.95,0:00:55.49,英文,,0,0,0,,Is it yes?
Dialogue: 0,0:00:54.95,0:00:55.49,中文,,0,0,0,,是的吗
Dialogue: 0,0:00:55.49,0:00:56.35,英文,,0,0,0,,Is it no?
Dialogue: 0,0:00:55.49,0:00:56.35,中文,,0,0,0,,这不是吗
Dialogue: 0,0:00:56.35,0:00:58.90,英文,,0,0,0,,You might not have all the tools you need to solve this problem yet.
Dialogue: 0,0:00:56.35,0:00:58.90,中文,,0,0,0,,你可能还没有解决这个问题所需的所有工具
Dialogue: 0,0:00:58.90,0:01:03.36,英文,,0,0,0,,So just kind of try to feel out what do you think the answer was if you had to take a guess.
Dialogue: 0,0:00:58.90,0:01:03.36,中文,,0,0,0,,试着感受一下 如果你必须猜一下答案 你认为答案是什么
Dialogue: 0,0:01:03.36,0:01:06.00,英文,,0,0,0,,And then we'll try to go through it together.
Dialogue: 0,0:01:03.36,0:01:06.00,中文,,0,0,0,,然后我们将一起尝试解决它
Dialogue: 0,0:01:06.00,0:01:12.58,英文,,0,0,0,,The second part of the mystery of the walrus, I hope you all are talking amongst yourselves about walruses.
Dialogue: 0,0:01:06.00,0:01:12.58,中文,,0,0,0,,关于海象的神秘之谜的第二部分 我希望你们都在讨论海象
Dialogue: 0,0:01:12.58,0:01:14.89,英文,,0,0,0,,The second part of the mystery of the walrus goes like this.
Dialogue: 0,0:01:12.58,0:01:14.89,中文,,0,0,0,,关于海象的神秘之谜的第二部分是这样的
Dialogue: 0,0:01:14.89,0:01:18.07,英文,,0,0,0,,So the code on the right has x equal to 5.
Dialogue: 0,0:01:14.89,0:01:18.07,中文,,0,0,0,,右侧的代码中 x 等于 5
Dialogue: 0,0:01:18.07,0:01:22.77,英文,,0,0,0,,And then I declare another integer y, and then I set y equal to x.
Dialogue: 0,0:01:18.07,0:01:22.77,中文,,0,0,0,,然后我声明另一个整数 y 然后我将 y 设为等于 x
Dialogue: 0,0:01:22.77,0:01:29.55,英文,,0,0,0,,And the question now is, if I set x equal to 2, does the change to x affect y, yes or no?
Dialogue: 0,0:01:22.77,0:01:29.55,中文,,0,0,0,,现在的问题是 如果我将 x 设为 2 那么对 x 的更改会影响到 y 吗 是或否
Dialogue: 0,0:01:29.55,0:01:36.06,英文,,0,0,0,,Is everyone talking about walruses or is there something I'm missing?
Dialogue: 0,0:01:29.55,0:01:36.06,中文,,0,0,0,,大家都在谈论海象吗 还是有什么我没注意到的
Dialogue: 0,0:01:36.06,0:01:37.76,英文,,0,0,0,,I'm going to spoil the answer really soon.
Dialogue: 0,0:01:36.06,0:01:37.76,中文,,0,0,0,,我马上就要泄露答案了
Dialogue: 0,0:01:37.76,0:01:41.32,英文,,0,0,0,,OK.
Dialogue: 0,0:01:37.76,0:01:41.32,中文,,0,0,0,,好的
Dialogue: 0,0:01:41.32,0:01:41.86,英文,,0,0,0,,OK.
Dialogue: 0,0:01:41.32,0:01:41.86,中文,,0,0,0,,好的
Dialogue: 0,0:01:41.86,0:01:48.81,英文,,0,0,0,,I don't know if you're talking about walruses, if you need more time, if you want to see the answer, if you just want to, like, go home.
Dialogue: 0,0:01:41.86,0:01:48.81,中文,,0,0,0,,我不知道你是在谈论海象 如果你需要更多时间 如果你想看答案 如果你只是想 就像 回家
Dialogue: 0,0:01:48.81,0:02:00.25,英文,,0,0,0,,What are we doing?
Dialogue: 0,0:01:48.81,0:02:00.25,中文,,0,0,0,,我们在做什么
Dialogue: 0,0:02:00.25,0:02:07.87,英文,,0,0,0,,OK, I'm going to start showing a little bit of the answers, so everyone finish your conversations so we can keep talking about exciting wall resists.
Dialogue: 0,0:02:00.25,0:02:07.87,中文,,0,0,0,,我要开始展示一些答案了 所以大家结束一下谈话 这样我们就可以继续讨论令人兴奋的墙抵抗了
Dialogue: 0,0:02:07.87,0:02:09.73,英文,,0,0,0,,So here's the code that we had from before.
Dialogue: 0,0:02:07.87,0:02:09.73,中文,,0,0,0,,这是我们之前的代码
Dialogue: 0,0:02:09.73,0:02:12.23,英文,,0,0,0,,I've shoved it into the Java visualizer.
Dialogue: 0,0:02:09.73,0:02:12.23,中文,,0,0,0,,我已经把它放到了Java可视化器中
Dialogue: 0,0:02:12.23,0:02:16.54,英文,,0,0,0,,And so now that we're in the Java visualizer, I haven't told you how this thing works exactly,
Dialogue: 0,0:02:12.23,0:02:16.54,中文,,0,0,0,,现在我们在Java可视化器中 我还没有告诉你们这个东西究竟是怎么工作的
Dialogue: 0,0:02:16.54,0:02:22.01,英文,,0,0,0,,but we can try to see what the visualizer tells us about wall resists.
Dialogue: 0,0:02:16.54,0:02:22.01,中文,,0,0,0,,但我们可以尝试看看可视化器对墙抵抗有什么告诉我们的
Dialogue: 0,0:02:22.01,0:02:24.03,英文,,0,0,0,,OK, you've got to be really quiet.
Dialogue: 0,0:02:22.01,0:02:24.03,中文,,0,0,0,,你们要非常安静
Dialogue: 0,0:02:24.03,0:02:25.65,英文,,0,0,0,,Walruses don't like it when you're loud.
Dialogue: 0,0:02:24.03,0:02:25.65,中文,,0,0,0,,海象不喜欢你大声
Dialogue: 0,0:02:25.65,0:02:29.93,英文,,0,0,0,,OK, so what happens is I set walrus A. There it is.
Dialogue: 0,0:02:25.65,0:02:29.93,中文,,0,0,0,,所以发生的事情是我设置了海象 a  就在那
Dialogue: 0,0:02:29.93,0:02:31.41,英文,,0,0,0,,This is my beautiful walrus.
Dialogue: 0,0:02:29.93,0:02:31.41,中文,,0,0,0,,这是我的美丽海象
Dialogue: 0,0:02:31.41,0:02:33.49,英文,,0,0,0,,And it's got a weight, and it's got a tusk size.
Dialogue: 0,0:02:31.41,0:02:33.49,中文,,0,0,0,,它有一个重量 还有一个长牙的尺寸
Dialogue: 0,0:02:33.49,0:02:42.42,英文,,0,0,0,,And then for some reason that we haven't totally teased out yet, when I say B equals A, the picture is showing me that there are two arrows to the same walrus.
Dialogue: 0,0:02:33.49,0:02:42.42,中文,,0,0,0,,然后由于某些我们还没有完全弄清楚的原因 当我说 b 等于 a 时 图片显示有两个箭头指向同一只海象
Dialogue: 0,0:02:42.42,0:02:43.54,英文,,0,0,0,,So now what do you think?
Dialogue: 0,0:02:42.42,0:02:43.54,中文,,0,0,0,,那么现在你觉得呢
Dialogue: 0,0:02:43.54,0:02:47.32,英文,,0,0,0,,Well, if I look at this picture, there are two arrows to the same walrus.
Dialogue: 0,0:02:43.54,0:02:47.32,中文,,0,0,0,,好吧 如果我看着这张图片 有两个箭头指向同一只海象
Dialogue: 0,0:02:47.32,0:02:53.76,英文,,0,0,0,,So hopefully it's not too surprising that if I change the weight of my one and only walrus, this walrus has lost quite a lot of weight.
Dialogue: 0,0:02:47.32,0:02:53.76,中文,,0,0,0,,希望如果我改变我的唯一一只海象的重量 这只海象已经减轻了相当多的重量
Dialogue: 0,0:02:53.76,0:02:55.10,英文,,0,0,0,,It's now weight 5.
Dialogue: 0,0:02:53.76,0:02:55.10,中文,,0,0,0,,现在它的重量是 5
Dialogue: 0,0:02:55.10,0:02:59.87,英文,,0,0,0,,It's not surprising that the change to A also affected B, because there's only one walrus.
Dialogue: 0,0:02:55.10,0:02:59.87,中文,,0,0,0,,不奇怪的是 对 a 的更改也影响了 b 因为只有一只海象
Dialogue: 0,0:02:59.87,0:03:01.89,英文,,0,0,0,,It's the one and the same.
Dialogue: 0,0:02:59.87,0:03:01.89,中文,,0,0,0,,它就是同一个
Dialogue: 0,0:03:01.89,0:03:05.77,英文,,0,0,0,,So that's what happens if we have the walrus.
Dialogue: 0,0:03:01.89,0:03:05.77,中文,,0,0,0,,这就是如果我们有海象会发生什么
Dialogue: 0,0:03:05.77,0:03:11.55,英文,,0,0,0,,But this is the second part, and this is what really makes it a mystery, which is when I set x equal to 5,
Dialogue: 0,0:03:05.77,0:03:11.55,中文,,0,0,0,,但这是第二部分 这才是真正让它成为一个谜的地方 当我将 x 设为 5 时
Dialogue: 0,0:03:11.55,0:03:15.60,英文,,0,0,0,,And then I declare y equal to x. Well, this time there are two 5's.
Dialogue: 0,0:03:11.55,0:03:15.60,中文,,0,0,0,,然后我声明 y 等于 x 这一次有两个 5
Dialogue: 0,0:03:15.60,0:03:17.92,英文,,0,0,0,,So it's not like the walrus where there was just one.
Dialogue: 0,0:03:15.60,0:03:17.92,中文,,0,0,0,,不像海象那样只有一个
Dialogue: 0,0:03:17.92,0:03:19.22,英文,,0,0,0,,So what's going on here?
Dialogue: 0,0:03:17.92,0:03:19.22,中文,,0,0,0,,那么这里到底发生了什么
Dialogue: 0,0:03:19.22,0:03:23.60,英文,,0,0,0,,How come when I set x equal to 2, this time the change to x actually doesn't affect y?
Dialogue: 0,0:03:19.22,0:03:23.60,中文,,0,0,0,,为什么我把x设为2时 这次x的变化实际上不影响y呢
Dialogue: 0,0:03:23.60,0:03:25.00,英文,,0,0,0,,The 5 is still there.
Dialogue: 0,0:03:23.60,0:03:25.00,中文,,0,0,0,,这个5还在那里
Dialogue: 0,0:03:25.00,0:03:27.43,英文,,0,0,0,,So this is the mystery of the walrus.
Dialogue: 0,0:03:25.00,0:03:27.43,中文,,0,0,0,,这就是海象的奥秘
Dialogue: 0,0:03:27.43,0:03:30.99,英文,,0,0,0,,And that's where we're going to spend the first half of today trying to tease apart.
Dialogue: 0,0:03:27.43,0:03:30.99,中文,,0,0,0,,这就是我们今天上半场要努力揭开的谜题所在
Dialogue: 0,0:03:30.99,0:03:32.23,英文,,0,0,0,,It's really interesting.
Dialogue: 0,0:03:30.99,0:03:32.23,中文,,0,0,0,,这真的很有趣
Dialogue: 0,0:03:32.23,0:03:36.41,英文,,0,0,0,,And something you'll use for probably the rest of your CS career.
Dialogue: 0,0:03:32.23,0:03:36.41,中文,,0,0,0,,而且这是你在计算机科学职业生涯中可能会一直使用的东西
Dialogue: 0,0:03:36.41,0:03:41.88,英文,,0,0,0,,So what happened was, as we saw, when you change B, it actually does affect A. There's only one walrus.
Dialogue: 0,0:03:36.41,0:03:41.88,中文,,0,0,0,,发生的事情是 正如我们所看到的 当你改变 b 时 实际上确实会影响 a  只有一个海象
Dialogue: 0,0:03:41.88,0:03:42.92,英文,,0,0,0,,So why is that?
Dialogue: 0,0:03:41.88,0:03:42.92,中文,,0,0,0,,那为什么会这样呢
Dialogue: 0,0:03:42.92,0:03:45.94,英文,,0,0,0,,And how come it didn't work the same for integers?
Dialogue: 0,0:03:42.92,0:03:45.94,中文,,0,0,0,,为什么对于整数来说不起作用呢
Dialogue: 0,0:03:45.94,0:03:49.76,英文,,0,0,0,,So to figure out how this works, I'm going to have to dig a little bit into 61C stuff.
Dialogue: 0,0:03:45.94,0:03:49.76,中文,,0,0,0,,为了弄清楚这是怎么回事 我要深入一点了解61C的东西
Dialogue: 0,0:03:49.76,0:03:51.00,英文,,0,0,0,,That's the next class.
Dialogue: 0,0:03:49.76,0:03:51.00,中文,,0,0,0,,那是下一门课程
Dialogue: 0,0:03:51.00,0:03:53.10,英文,,0,0,0,,So bear with me for just a little bit.
Dialogue: 0,0:03:51.00,0:03:53.10,中文,,0,0,0,,所以请稍等片刻
Dialogue: 0,0:03:53.10,0:03:54.42,英文,,0,0,0,,It's a bit of a preview.
Dialogue: 0,0:03:53.10,0:03:54.42,中文,,0,0,0,,这是一个预览
Dialogue: 0,0:03:54.42,0:04:01.79,英文,,0,0,0,,So what happens is, on your computer, if you go all the way down to the lowest possible layer of abstraction, you're going to find a bunch of 1s and 0s.
Dialogue: 0,0:03:54.42,0:04:01.79,中文,,0,0,0,,发生的情况是 在您的计算机上 如果您一直降到最低的抽象层 您将发现一堆1和0
Dialogue: 0,0:04:01.79,0:04:07.79,英文,,0,0,0,,So somewhere buried deep in your computer, using a bunch of fancy circuits or things that I don't understand,
Dialogue: 0,0:04:01.79,0:04:07.79,中文,,0,0,0,,在你的电脑深处的某个地方 使用了一堆我不太懂的花哨电路或其他什么东西
Dialogue: 0,0:04:07.79,0:04:11.99,英文,,0,0,0,,there are a bunch of 1s and 0s and one big string, lots of 1s and 0s.
Dialogue: 0,0:04:07.79,0:04:11.99,中文,,0,0,0,,有一堆1和0 还有一个很长的字符串 很多1和0
Dialogue: 0,0:04:11.99,0:04:14.45,英文,,0,0,0,,And that's how your computer stores data.
Dialogue: 0,0:04:11.99,0:04:14.45,中文,,0,0,0,,这就是你的电脑存储数据的方式
Dialogue: 0,0:04:14.45,0:04:22.78,英文,,0,0,0,,OK, and what happens is the data that we see has to be encoded as a sequence of ones and zeros to be stored in memory, because that's what memory is.
Dialogue: 0,0:04:14.45,0:04:22.78,中文,,0,0,0,,发生的事情是我们看到的数据必须被编码为一系列的1和0 以便存储在内存中 因为这就是内存的构成
Dialogue: 0,0:04:22.78,0:04:24.44,英文,,0,0,0,,It's a bunch of ones and zeros.
Dialogue: 0,0:04:22.78,0:04:24.44,中文,,0,0,0,,它就是一堆1和0
Dialogue: 0,0:04:24.44,0:04:31.04,英文,,0,0,0,,So for example, the number 72 is often stored as 01001000.
Dialogue: 0,0:04:24.44,0:04:31.04,中文,,0,0,0,,例如 数字72经常被存储为01001000
Dialogue: 0,0:04:31.04,0:04:32.02,英文,,0,0,0,,Why is that?
Dialogue: 0,0:04:31.04,0:04:32.02,中文,,0,0,0,,为什么呢
Dialogue: 0,0:04:32.02,0:04:33.51,英文,,0,0,0,,61C will tell you why.
Dialogue: 0,0:04:32.02,0:04:33.51,中文,,0,0,0,,61C会告诉你为什么
Dialogue: 0,0:04:33.51,0:04:35.19,英文,,0,0,0,,For now, you can take my word for it.
Dialogue: 0,0:04:33.51,0:04:35.19,中文,,0,0,0,,暂时 你可以相信我的话
Dialogue: 0,0:04:35.19,0:04:37.09,英文,,0,0,0,,What about the number 205.75?
Dialogue: 0,0:04:35.19,0:04:37.09,中文,,0,0,0,,205.75 这个数字怎么样
Dialogue: 0,0:04:37.09,0:04:40.21,英文,,0,0,0,,Well, this is often stored as, you don't have to memorize this.
Dialogue: 0,0:04:37.09,0:04:40.21,中文,,0,0,0,,这通常被存储为 你不必记住这个
Dialogue: 0,0:04:40.21,0:04:41.51,英文,,0,0,0,,I won't test you on this.
Dialogue: 0,0:04:40.21,0:04:41.51,中文,,0,0,0,,我不会测试你这个的
Dialogue: 0,0:04:41.51,0:04:44.77,英文,,0,0,0,,It's encoded as 0 1 0 0 0.
Dialogue: 0,0:04:41.51,0:04:44.77,中文,,0,0,0,,它被编码为 0 1 0 0 0
Dialogue: 0,0:04:44.77,0:04:48.32,英文,,0,0,0,,OK, I'm not going to read it because I'll be out of time. Here are some other examples.
Dialogue: 0,0:04:44.77,0:04:48.32,中文,,0,0,0,,我不会读它 因为时间不够  这里有一些其他的例子
Dialogue: 0,0:04:48.32,0:04:54.78,英文,,0,0,0,,The letter H is stored as this string, which happens to be the same ones and zeros as the number 72.
Dialogue: 0,0:04:48.32,0:04:54.78,中文,,0,0,0,,字母H以这个字符串的形式存储 碰巧与数字72的那串01相同
Dialogue: 0,0:04:54.78,0:05:00.22,英文,,0,0,0,,And then the Boolean value true is often stored as a bunch of zeros followed by a 1.
Dialogue: 0,0:04:54.78,0:05:00.22,中文,,0,0,0,,然后 布尔值true通常存储为一串0后跟着一个1
Dialogue: 0,0:05:00.22,0:05:02.28,英文,,0,0,0,,That's the convention that people chose to use.
Dialogue: 0,0:05:00.22,0:05:02.28,中文,,0,0,0,,这是人们选择使用的约定
Dialogue: 0,0:05:02.28,0:05:03.67,英文,,0,0,0,,All the computers agree on it.
Dialogue: 0,0:05:02.28,0:05:03.67,中文,,0,0,0,,所有的计算机都同意这一点
Dialogue: 0,0:05:03.67,0:05:05.75,英文,,0,0,0,,So that's what we've got.
Dialogue: 0,0:05:03.67,0:05:05.75,中文,,0,0,0,,这就是我们得到的
Dialogue: 0,0:05:05.75,0:05:12.69,英文,,0,0,0,,So one thing you'll notice is right away, hang on, the 72 and the H are stored as the same sequence of ones and zeros.
Dialogue: 0,0:05:05.75,0:05:12.69,中文,,0,0,0,,你会立刻注意到一件事 等等 72和H都以相同的01序列存储
Dialogue: 0,0:05:12.69,0:05:19.75,英文,,0,0,0,,So how do I tell if my computer presents me with 01001000, which one is it?
Dialogue: 0,0:05:12.69,0:05:19.75,中文,,0,0,0,,那么 如果我的计算机给我显示01001000 它是哪一个呢
Dialogue: 0,0:05:19.75,0:05:24.03,英文,,0,0,0,,Well, the computer is going to figure out which one it is by looking at the type of the variable.
Dialogue: 0,0:05:19.75,0:05:24.03,中文,,0,0,0,,计算机会通过查看变量的类型来确定它是哪一种
Dialogue: 0,0:05:24.03,0:05:27.85,英文,,0,0,0,,So remember in Java, we had types associated with every variable.
Dialogue: 0,0:05:24.03,0:05:27.85,中文,,0,0,0,,记住 在Java中 每个变量都有关联的类型
Dialogue: 0,0:05:27.85,0:05:29.56,英文,,0,0,0,,And in fact, there are eight types.
Dialogue: 0,0:05:27.85,0:05:29.56,中文,,0,0,0,,事实上 有八种类型
Dialogue: 0,0:05:29.56,0:05:32.64,英文,,0,0,0,,There are two that are bold that you definitely have to know about.
Dialogue: 0,0:05:29.56,0:05:32.64,中文,,0,0,0,,有两种是加粗的 你绝对要知道的
Dialogue: 0,0:05:32.64,0:05:33.64,英文,,0,0,0,,Some of these we'll cover.
Dialogue: 0,0:05:32.64,0:05:33.64,中文,,0,0,0,,其中一些我们会涉及到
Dialogue: 0,0:05:33.64,0:05:34.82,英文,,0,0,0,,Some of these we kind of won't.
Dialogue: 0,0:05:33.64,0:05:34.82,中文,,0,0,0,,有一些我们可能不太涉及
Dialogue: 0,0:05:34.82,0:05:38.67,英文,,0,0,0,,But they are byte-short, int-long, float, double, boolean, char.
Dialogue: 0,0:05:34.82,0:05:38.67,中文,,0,0,0,,但它们是byte、short、int、long、float、double、boolean、char
Dialogue: 0,0:05:38.67,0:05:41.09,英文,,0,0,0,,So you'll see those as you start programming in Java.
Dialogue: 0,0:05:38.67,0:05:41.09,中文,,0,0,0,,当你开始用Java编程时 你会看到这些
Dialogue: 0,0:05:41.09,0:05:43.01,英文,,0,0,0,,These are the eight primitive types.
Dialogue: 0,0:05:41.09,0:05:43.01,中文,,0,0,0,,这些是八种基本类型
Dialogue: 0,0:05:43.01,0:05:47.11,英文,,0,0,0,,And we'll talk about what primitive means in just a little bit.
Dialogue: 0,0:05:43.01,0:05:47.11,中文,,0,0,0,,我们稍后会讨论什么是基本类型
Dialogue: 0,0:05:47.11,0:05:51.06,英文,,0,0,0,,So again, 61c, if you're interested.
Dialogue: 0,0:05:47.11,0:05:51.06,中文,,0,0,0,,如果你感兴趣的话 再次 61c
Dialogue: 0,0:05:51.06,0:05:55.14,英文,,0,0,0,,So what actually happens when I write a declaration of a variable?
Dialogue: 0,0:05:51.06,0:05:55.14,中文,,0,0,0,,当我写一个变量声明时 到底发生了什么
Dialogue: 0,0:05:55.14,0:06:02.76,英文,,0,0,0,,We already saw from last week that if you want to use a variable x, you first have to say, I declare that a variable x exists.
Dialogue: 0,0:05:55.14,0:06:02.76,中文,,0,0,0,,我们已经从上周看到 如果你想要使用一个变量x 你首先必须说 我声明一个变量x存在
Dialogue: 0,0:06:02.76,0:06:04.58,英文,,0,0,0,,So what actually happens when I do that?
Dialogue: 0,0:06:02.76,0:06:04.58,中文,,0,0,0,,那么当我这样做的时候 到底发生了什么
Dialogue: 0,0:06:04.58,0:06:12.20,英文,,0,0,0,,Well, what happens is your computer digs through that giant sequence of 1's and 0's, and it finds some sequence of 1's and 0's and says this.
Dialogue: 0,0:06:04.58,0:06:12.20,中文,,0,0,0,,情况是你的计算机在那个庞大的一串1和0中搜索 然后找到一些1和0的序列 然后说：这个是
Dialogue: 0,0:06:12.20,0:06:15.46,英文,,0,0,0,,This is the place where my x is going to live.
Dialogue: 0,0:06:12.20,0:06:15.46,中文,,0,0,0,,这是我的x要存放的地方
Dialogue: 0,0:06:15.46,0:06:20.53,英文,,0,0,0,,So for example, if I declare int x, what's going to happen is my computer is going to dig through memory.
Dialogue: 0,0:06:15.46,0:06:20.53,中文,,0,0,0,,举个例子 如果我声明 int x 那么计算机会搜索内存
Dialogue: 0,0:06:20.53,0:06:23.59,英文,,0,0,0,,It's going to find just enough ones and zeros to store the integer.
Dialogue: 0,0:06:20.53,0:06:23.59,中文,,0,0,0,,它会找到足够的1和0来存储整数
Dialogue: 0,0:06:23.59,0:06:25.09,英文,,0,0,0,,And then there it is.
Dialogue: 0,0:06:23.59,0:06:25.09,中文,,0,0,0,,然后它就在那里了
Dialogue: 0,0:06:25.09,0:06:31.41,英文,,0,0,0,,So whatever ones and zeros are in this part of memory, that is x. We gave that series of bits a name.
Dialogue: 0,0:06:25.09,0:06:31.41,中文,,0,0,0,,无论这部分内存中有什么样的1和0 那就是x 我们给了那串比特一个名字
Dialogue: 0,0:06:31.41,0:06:37.42,英文,,0,0,0,,And then same thing for y. So if I say, I declare that there is a double y, then I'll create a box of bits.
Dialogue: 0,0:06:31.41,0:06:37.42,中文,,0,0,0,,然后对于y也是一样的 如果我说 我声明有一个双 y 那么我会创建一个比特的盒子
Dialogue: 0,0:06:37.42,0:06:45.86,英文,,0,0,0,,And that box of bits corresponds to y. And in the future, if I ever say something like x equals whatever, the Java compiler will see, oh, OK, the x, I know what that is.
Dialogue: 0,0:06:37.42,0:06:45.86,中文,,0,0,0,,而那一盒比特对应着y 将来 如果我说x等于什么之类的话 Java编译器会看到 我知道x是什么
Dialogue: 0,0:06:45.86,0:06:50.60,英文,,0,0,0,,That's the thing that you named this sequence of bits right here.
Dialogue: 0,0:06:45.86,0:06:50.60,中文,,0,0,0,,就是你给这一串比特命名的东西
Dialogue: 0,0:06:50.60,0:06:57.15,英文,,0,0,0,,So that's how the Java compiler knows where to find x or y. So I think that's basically it on this slide.
Dialogue: 0,0:06:50.60,0:06:57.15,中文,,0,0,0,,这就是Java编译器知道在哪里找到x或y的方式 我觉得这基本上就是这张幻灯片上的内容
Dialogue: 0,0:06:57.15,0:06:59.47,英文,,0,0,0,,Again, stop me if you have questions.
Dialogue: 0,0:06:57.15,0:06:59.47,中文,,0,0,0,,如果你有问题的话 随时打断我
Dialogue: 0,0:06:59.47,0:07:01.89,英文,,0,0,0,,So when you declare a variable, we make this box.
Dialogue: 0,0:06:59.47,0:07:01.89,中文,,0,0,0,,当你声明一个变量时 我们就制造这个盒子
Dialogue: 0,0:07:01.89,0:07:05.88,英文,,0,0,0,,And then in this box, we'll hold the ones and zeros that correspond to that variable.
Dialogue: 0,0:07:01.89,0:07:05.88,中文,,0,0,0,,然后在这个盒子里 我们会保存与该变量相对应的一串一串的1和0
Dialogue: 0,0:07:05.88,0:07:10.50,英文,,0,0,0,,And Java will keep some sort of lookup table that says, if you ever reference x, go here.
Dialogue: 0,0:07:05.88,0:07:10.50,中文,,0,0,0,,而Java会保留某种查找表 表明如果你引用了x 就去这里
Dialogue: 0,0:07:10.50,0:07:13.27,英文,,0,0,0,,If you're ever talking about y, look over here.
Dialogue: 0,0:07:10.50,0:07:13.27,中文,,0,0,0,,如果你在谈论 y 的时候 看这边
Dialogue: 0,0:07:13.27,0:07:14.22,英文,,0,0,0,,OK.
Dialogue: 0,0:07:13.27,0:07:14.22,中文,,0,0,0,,好的
Dialogue: 0,0:07:14.22,0:07:16.40,英文,,0,0,0,,So that's what happens when you declare.
Dialogue: 0,0:07:14.22,0:07:16.40,中文,,0,0,0,,这就是声明时会发生的事情
Dialogue: 0,0:07:16.40,0:07:17.90,英文,,0,0,0,,But then what happens when I assign?
Dialogue: 0,0:07:16.40,0:07:17.90,中文,,0,0,0,,但是当我赋值时会发生什么
Dialogue: 0,0:07:17.90,0:07:24.56,英文,,0,0,0,,So here we can see if I say x equals this big old number, then what's going to happen is I have to figure out this number.
Dialogue: 0,0:07:17.90,0:07:24.56,中文,,0,0,0,,在这里 我们可以看到如果我说 x 等于这个大数字 那么会发生的是我必须计算出这个数字
Dialogue: 0,0:07:24.56,0:07:26.00,英文,,0,0,0,,What is it in ones and zeros?
Dialogue: 0,0:07:24.56,0:07:26.00,中文,,0,0,0,,它是用二进制表示的是什么
Dialogue: 0,0:07:26.00,0:07:26.90,英文,,0,0,0,,Apparently, it's this.
Dialogue: 0,0:07:26.00,0:07:26.90,中文,,0,0,0,,显然 是这样
Dialogue: 0,0:07:26.90,0:07:31.68,英文,,0,0,0,,And then I'll shove it in the ones and zeros corresponding to x. And then whatever this is,
Dialogue: 0,0:07:26.90,0:07:31.68,中文,,0,0,0,,然后我会把它塞进对应于 x 的一和零里 然后 无论这是什么
Dialogue: 0,0:07:31.68,0:07:37.30,英文,,0,0,0,,all that stuff, that goes in y. So that's what happens when you assign a variable.
Dialogue: 0,0:07:31.68,0:07:37.30,中文,,0,0,0,,所有那些东西 都放在 y 里 这就是当你给一个变量赋值时会发生的事情
Dialogue: 0,0:07:37.30,0:07:41.16,英文,,0,0,0,,OK, but maybe you and I both agree this is kind of hard to read.
Dialogue: 0,0:07:37.30,0:07:41.16,中文,,0,0,0,,但也许你我都认为这有点难以理解
Dialogue: 0,0:07:41.16,0:07:43.49,英文,,0,0,0,,When I look at these ones and zeros, my brain starts melting.
Dialogue: 0,0:07:41.16,0:07:43.49,中文,,0,0,0,,当我看着这些一和零时 我的大脑开始融化
Dialogue: 0,0:07:43.49,0:07:44.73,英文,,0,0,0,,I don't know what this is.
Dialogue: 0,0:07:43.49,0:07:44.73,中文,,0,0,0,,我不知道这是什么
Dialogue: 0,0:07:44.73,0:07:50.71,英文,,0,0,0,,So instead, just to make our lives a little bit easier, we're going to introduce something called simplified box notation.
Dialogue: 0,0:07:44.73,0:07:50.71,中文,,0,0,0,,所以 为了让我们的生活变得稍微容易一些 我们要引入一种叫做简化盒子表示法的东西
Dialogue: 0,0:07:50.71,0:07:58.39,英文,,0,0,0,,And all that that is, is instead of saying, well, to be really honest, this number in memory is this sequence of ones and zeros.
Dialogue: 0,0:07:50.71,0:07:58.39,中文,,0,0,0,,而所有这些只不过是 不再说 实际上 内存中的这个数字是这一串一和零
Dialogue: 0,0:07:58.39,0:07:59.85,英文,,0,0,0,,But I can't read that.
Dialogue: 0,0:07:58.39,0:07:59.85,中文,,0,0,0,,但我看不懂那个
Dialogue: 0,0:07:59.85,0:08:03.20,英文,,0,0,0,,You can't read that, probably, unless any robots are in the audience.
Dialogue: 0,0:07:59.85,0:08:03.20,中文,,0,0,0,,你大概看不懂那个 除非听众中有机器人
Dialogue: 0,0:08:03.20,0:08:07.22,英文,,0,0,0,,So instead, we're just going to write the human readable representation.
Dialogue: 0,0:08:03.20,0:08:07.22,中文,,0,0,0,,所以 我们就只写人类可读的表示形式
Dialogue: 0,0:08:07.22,0:08:11.36,英文,,0,0,0,,And that's good enough for our purposes.
Dialogue: 0,0:08:07.22,0:08:11.36,中文,,0,0,0,,对于我们的目的来说 那已经足够了
Dialogue: 0,0:08:11.36,0:08:13.57,英文,,0,0,0,,Great. There's a simplified box notation.
Dialogue: 0,0:08:11.36,0:08:13.57,中文,,0,0,0,,太好了  有一个简化的框表示法
Dialogue: 0,0:08:13.57,0:08:16.12,英文,,0,0,0,,More about it very soon.
Dialogue: 0,0:08:13.57,0:08:16.12,中文,,0,0,0,,马上会详细介绍
Dialogue: 0,0:08:16.12,0:08:19.66,英文,,0,0,0,,So the next thing we have to figure out is, now we know what happens when you declare a variable.
Dialogue: 0,0:08:16.12,0:08:19.66,中文,,0,0,0,,接下来我们需要弄清楚的是 现在我们知道当你声明一个变量时会发生什么
Dialogue: 0,0:08:19.66,0:08:23.61,英文,,0,0,0,,You make some space in memory and you say, this is the place where x goes.
Dialogue: 0,0:08:19.66,0:08:23.61,中文,,0,0,0,,你在内存中留出一些空间 然后说 这就是x的位置
Dialogue: 0,0:08:23.61,0:08:25.95,英文,,0,0,0,,So what about when I assign a variable?
Dialogue: 0,0:08:23.61,0:08:25.95,中文,,0,0,0,,那当我赋值一个变量的时候呢
Dialogue: 0,0:08:25.95,0:08:31.49,英文,,0,0,0,,Well, to answer that part of the puzzle, we have to talk about what I call the golden rule of equals.
Dialogue: 0,0:08:25.95,0:08:31.49,中文,,0,0,0,,好吧 要回答这个谜题的一部分 我们必须谈谈我称之为等号的黄金法则
Dialogue: 0,0:08:31.49,0:08:34.40,英文,,0,0,0,,I don't know if this is what other people call it, but that's what we call it.
Dialogue: 0,0:08:31.49,0:08:34.40,中文,,0,0,0,,我不知道其他人是否也这样称呼它 但这就是我们称呼它的方式
Dialogue: 0,0:08:34.40,0:08:39.56,英文,,0,0,0,,So the golden rule of equals says, if you ever have a statement like y equals x,
Dialogue: 0,0:08:34.40,0:08:39.56,中文,,0,0,0,,等号的黄金法则是 如果你有一个像y等于x这样的语句
Dialogue: 0,0:08:39.56,0:08:46.83,英文,,0,0,0,,All that the equal sign does is it takes all of the bits in x, the ones and zeros corresponding to whatever section of memory you named x,
Dialogue: 0,0:08:39.56,0:08:46.83,中文,,0,0,0,,等号所做的一切就是 它获取x中的所有位 对应于你命名的内存区域的1和0
Dialogue: 0,0:08:46.83,0:08:51.03,英文,,0,0,0,,and we just copy all of that stuff into y. That's it.
Dialogue: 0,0:08:46.83,0:08:51.03,中文,,0,0,0,,然后我们只是将所有这些东西复制到y中 就是这样
Dialogue: 0,0:08:51.03,0:08:52.47,英文,,0,0,0,,Nothing else fancy happens.
Dialogue: 0,0:08:51.03,0:08:52.47,中文,,0,0,0,,不会发生其他花哨的事情
Dialogue: 0,0:08:52.47,0:08:59.90,英文,,0,0,0,,You take all the bits corresponding to x, and you copy them into y. So we don't do any sort of extra creation of new objects.
Dialogue: 0,0:08:52.47,0:08:59.90,中文,,0,0,0,,把与x对应的所有位都拿过来 然后复制到y里 我们不会创建任何额外的新对象
Dialogue: 0,0:08:59.90,0:09:03.28,英文,,0,0,0,,And maybe that's starting to get into what the mystery is all about.
Dialogue: 0,0:08:59.90,0:09:03.28,中文,,0,0,0,,也许这开始涉及到谜题的真相了
Dialogue: 0,0:09:03.28,0:09:09.64,英文,,0,0,0,,But all you have to know for now is that if you say y equals x, you take all the bits from x, and you copy them into y.
Dialogue: 0,0:09:03.28,0:09:09.64,中文,,0,0,0,,但你现在只需要知道 如果你说y等于x 你就拿过来x的所有位 然后复制到y里
Dialogue: 0,0:09:09.64,0:09:17.39,英文,,0,0,0,,OK, so hopefully now that I've talked about the golden rule of equals and the way that variables are declared, the second part of this puzzle isn't so surprising.
Dialogue: 0,0:09:09.64,0:09:17.39,中文,,0,0,0,,希望现在我已经谈到等号的黄金法则和变量声明的方式 这个谜题的第二部分就不会那么令人惊讶了
Dialogue: 0,0:09:17.39,0:09:24.50,英文,,0,0,0,,When I say I declare there is an integer x, then what happens is I create a box, and that box of ones and zeros corresponds to the name x.
Dialogue: 0,0:09:17.39,0:09:24.50,中文,,0,0,0,,当我说我声明有一个整数x时 发生的是我创建了一个盒子 这个由1和0组成的盒子对应于名称x
Dialogue: 0,0:09:24.50,0:09:32.50,英文,,0,0,0,,And then I set that equal to 5, because the golden rule of equals says I take the bits on the right, whatever corresponds to 5, and then I copy it into x.
Dialogue: 0,0:09:24.50,0:09:32.50,中文,,0,0,0,,然后我把它等于5 因为等号的黄金法则说我取右边的位 即对应于5的位 然后复制到x里
Dialogue: 0,0:09:32.50,0:09:38.44,英文,,0,0,0,,And instead of writing ones and zeros, because I can't read that, I'll just write the number 5.
Dialogue: 0,0:09:32.50,0:09:38.44,中文,,0,0,0,,而不是写1和0 因为我看不懂那个 我只会写数字5
Dialogue: 0,0:09:38.44,0:09:41.12,英文,,0,0,0,,And then same thing for y. I declare a different box.
Dialogue: 0,0:09:38.44,0:09:41.12,中文,,0,0,0,,然后对于y也是同样的道理 我声明一个不同的盒子
Dialogue: 0,0:09:41.12,0:09:47.35,英文,,0,0,0,,And this box corresponds to all the 1s and 0s that I named y. So here, when I say y equals x, what do I do?
Dialogue: 0,0:09:41.12,0:09:47.35,中文,,0,0,0,,这个盒子对应于我命名为y的所有1和0 在这里 当我说y等于x时 我做什么
Dialogue: 0,0:09:47.35,0:09:48.85,英文,,0,0,0,,I copy the bits.
Dialogue: 0,0:09:47.35,0:09:48.85,中文,,0,0,0,,我复制这些位
Dialogue: 0,0:09:48.85,0:09:52.85,英文,,0,0,0,,I take all the bits in x, which happen to correspond to the number 5.
Dialogue: 0,0:09:48.85,0:09:52.85,中文,,0,0,0,,我获取 x 中所有位 它们恰好对应数字 5
Dialogue: 0,0:09:52.85,0:09:58.05,英文,,0,0,0,,I copy those bits, and I rewrite them into y. And that's why I have two copies of the number 5.
Dialogue: 0,0:09:52.85,0:09:58.05,中文,,0,0,0,,我复制这些位 然后将它们重写到 y 中 这就是为什么我有数字 5 的两份拷贝
Dialogue: 0,0:09:58.05,0:10:06.44,英文,,0,0,0,,Then when I say x equals 2, I take all the bits of 2, and I copy them into x. And that's how I get x equals 2, y equals 5.
Dialogue: 0,0:09:58.05,0:10:06.44,中文,,0,0,0,,然后当我说 x 等于 2 时 我获取 2 的所有位 然后将它们复制到 x 中 这就是我得到 x 等于 2 y 等于 5 的方式
Dialogue: 0,0:10:06.44,0:10:08.63,英文,,0,0,0,,So how come this resolves the way it is?
Dialogue: 0,0:10:06.44,0:10:08.63,中文,,0,0,0,,那么为什么会解决成这样呢
Dialogue: 0,0:10:08.63,0:10:14.45,英文,,0,0,0,,It's because of this golden rules of equals, where I just copy all the bits.
Dialogue: 0,0:10:08.63,0:10:14.45,中文,,0,0,0,,这是因为等号的黄金法则 我只是复制所有的位
Dialogue: 0,0:10:14.45,0:10:15.41,英文,,0,0,0,,Good so far?
Dialogue: 0,0:10:14.45,0:10:15.41,中文,,0,0,0,,目前为止还好吗
Dialogue: 0,0:10:15.41,0:10:22.16,英文,,0,0,0,,We talked about declaring variables, talked about allocating the ones and zeros, talked about copying all the bits.
Dialogue: 0,0:10:15.41,0:10:22.16,中文,,0,0,0,,我们讨论过声明变量 讨论过分配那些零和一 讨论过复制所有的比特
Dialogue: 0,0:10:22.16,0:10:24.62,英文,,0,0,0,,So that solves the first part of the mystery of the walrus.
Dialogue: 0,0:10:22.16,0:10:24.62,中文,,0,0,0,,这样解决了海象谜题的第一部分
Dialogue: 0,0:10:24.62,0:10:26.36,英文,,0,0,0,,Now we know how integers behave.
Dialogue: 0,0:10:24.62,0:10:26.36,中文,,0,0,0,,现在我们知道整数的行为
Dialogue: 0,0:10:26.36,0:10:29.98,英文,,0,0,0,,But it hasn't solved the second part, which is, how do walruses behave?
Dialogue: 0,0:10:26.36,0:10:29.98,中文,,0,0,0,,但这并没有解决第二部分 也就是说 海象的行为是怎样的呢
Dialogue: 0,0:10:29.98,0:10:32.69,英文,,0,0,0,,So to figure that out, we have to look at this list of types
Dialogue: 0,0:10:29.98,0:10:32.69,中文,,0,0,0,,要弄清楚这一点 我们必须看一下这个类型列表
Dialogue: 0,0:10:32.69,0:10:36.03,英文,,0,0,0,,and we see there's bite, short, int, long, float, double, boolean, char.
Dialogue: 0,0:10:32.69,0:10:36.03,中文,,0,0,0,,我们看到有位、短整型、整型、长整型、浮点型、双精度型、布尔型、字符型
Dialogue: 0,0:10:36.03,0:10:37.17,英文,,0,0,0,,There is no walrus.
Dialogue: 0,0:10:36.03,0:10:37.17,中文,,0,0,0,,没有海象
Dialogue: 0,0:10:37.17,0:10:40.27,英文,,0,0,0,,Java does not have a built in walrus type.
Dialogue: 0,0:10:37.17,0:10:40.27,中文,,0,0,0,,Java 没有内置的海象类型
Dialogue: 0,0:10:40.27,0:10:45.06,英文,,0,0,0,,Okay, maybe a point of improvement for next time, but there's no walrus type in Java.
Dialogue: 0,0:10:40.27,0:10:45.06,中文,,0,0,0,,好吧 也许下次有改进的地方 但 Java 中没有海象类型
Dialogue: 0,0:10:45.06,0:10:50.18,英文,,0,0,0,,So if you have any other type that is not one of these eight, including walruses,
Dialogue: 0,0:10:45.06,0:10:50.18,中文,,0,0,0,,如果你有任何其他类型不是这八种之一 包括海象
Dialogue: 0,0:10:50.18,0:10:56.38,英文,,0,0,0,,Tiles in your Project Zero, dogs from last time, I don't know, planets, whatever.
Dialogue: 0,0:10:50.18,0:10:56.38,中文,,0,0,0,,Project Zero 中的瓦片 上次的狗 我不知道 行星 随便什么
Dialogue: 0,0:10:56.38,0:11:02.01,英文,,0,0,0,,Anything else that is not one of these eight types is going to be what we call a reference type.
Dialogue: 0,0:10:56.38,0:11:02.01,中文,,0,0,0,,任何不是这八种类型之一的东西都被称为引用类型
Dialogue: 0,0:11:02.01,0:11:04.87,英文,,0,0,0,,And we'll dig into what that means on this slide, I guess.
Dialogue: 0,0:11:02.01,0:11:04.87,中文,,0,0,0,,我们将在这张幻灯片上深入探讨这是什么意思 我想
Dialogue: 0,0:11:04.87,0:11:06.13,英文,,0,0,0,,Okay.
Dialogue: 0,0:11:04.87,0:11:06.13,中文,,0,0,0,,好的
Dialogue: 0,0:11:06.13,0:11:10.42,英文,,0,0,0,,So anything that's not one of those eight primitive types that we list is called a reference type.
Dialogue: 0,0:11:06.13,0:11:10.42,中文,,0,0,0,,不是那八种基本类型之一的任何东西都被称为引用类型
Dialogue: 0,0:11:10.42,0:11:15.36,英文,,0,0,0,,And what happens when you instantiate an object is you create a reference to that object.
Dialogue: 0,0:11:10.42,0:11:15.36,中文,,0,0,0,,当你实例化一个对象时 实际上是创建了对该对象的引用
Dialogue: 0,0:11:15.36,0:11:16.42,英文,,0,0,0,,So what does that mean?
Dialogue: 0,0:11:15.36,0:11:16.42,中文,,0,0,0,,那意味着什么呢
Dialogue: 0,0:11:16.42,0:11:18.56,英文,,0,0,0,,It's kind of weird and vague and abstract.
Dialogue: 0,0:11:16.42,0:11:18.56,中文,,0,0,0,,这有点奇怪、模糊而抽象
Dialogue: 0,0:11:18.56,0:11:21.57,英文,,0,0,0,,So let's dig into what happens when I write this line of code.
Dialogue: 0,0:11:18.56,0:11:21.57,中文,,0,0,0,,那么 让我们深入研究当我写下这行代码时会发生什么
Dialogue: 0,0:11:21.57,0:11:23.19,英文,,0,0,0,,You've seen this line of code before.
Dialogue: 0,0:11:21.57,0:11:23.19,中文,,0,0,0,,你之前见过这行代码
Dialogue: 0,0:11:23.19,0:11:24.47,英文,,0,0,0,,I'm calling a constructor.
Dialogue: 0,0:11:23.19,0:11:24.47,中文,,0,0,0,,我在调用一个构造函数
Dialogue: 0,0:11:24.47,0:11:27.51,英文,,0,0,0,,And remember, the constructor creates a brand new walrus.
Dialogue: 0,0:11:24.47,0:11:27.51,中文,,0,0,0,,还记得 构造函数会创建一个全新的海象
Dialogue: 0,0:11:27.51,0:11:31.57,英文,,0,0,0,,So the new walrus is born into the world and then returned to us.
Dialogue: 0,0:11:27.51,0:11:31.57,中文,,0,0,0,,新的海象诞生了 然后又回到了我们这里
Dialogue: 0,0:11:31.57,0:11:33.33,英文,,0,0,0,,So how does that actually work?
Dialogue: 0,0:11:31.57,0:11:33.33,中文,,0,0,0,,那么它究竟是如何运作的呢
Dialogue: 0,0:11:33.33,0:11:37.60,英文,,0,0,0,,What does it look like when I create a brand new walrus and have it returned?
Dialogue: 0,0:11:33.33,0:11:37.60,中文,,0,0,0,,当我创建一个全新的海象并将其返回时 会是什么样子呢
Dialogue: 0,0:11:37.60,0:11:45.82,英文,,0,0,0,,So what happens when I want to create a new walrus is the Java compiler or interpreter, it needs to dig through memory and say, OK, you want a brand new walrus.
Dialogue: 0,0:11:37.60,0:11:45.82,中文,,0,0,0,,当我想要创建一个新的海象时 Java编译器或解释器需要在内存中查找并说 你想要一个全新的海象
Dialogue: 0,0:11:45.82,0:11:47.52,英文,,0,0,0,,Well, walruses are pretty big.
Dialogue: 0,0:11:45.82,0:11:47.52,中文,,0,0,0,,海象相当大
Dialogue: 0,0:11:47.52,0:11:50.72,英文,,0,0,0,,In fact, they need to store the weight, and they need to store the tusk size.
Dialogue: 0,0:11:47.52,0:11:50.72,中文,,0,0,0,,事实上 它们需要存储体重 还需要存储獠牙的大小
Dialogue: 0,0:11:50.72,0:11:52.70,英文,,0,0,0,,So they're pretty big creatures.
Dialogue: 0,0:11:50.72,0:11:52.70,中文,,0,0,0,,它们是相当大的生物
Dialogue: 0,0:11:52.70,0:11:54.58,英文,,0,0,0,,You need to store two things about them.
Dialogue: 0,0:11:52.70,0:11:54.58,中文,,0,0,0,,你需要存储关于它们的两件事
Dialogue: 0,0:11:54.58,0:12:00.94,英文,,0,0,0,,So Java is going to go through, dig through all the ones and zeros, and look for a home for my brand new walrus and say, right here.
Dialogue: 0,0:11:54.58,0:12:00.94,中文,,0,0,0,,Java将浏览所有的一和零 寻找一个家给我的全新海象 并说 就在这里
Dialogue: 0,0:12:00.94,0:12:04.51,英文,,0,0,0,,This is the place where my wonderful walrus will live.
Dialogue: 0,0:12:00.94,0:12:04.51,中文,,0,0,0,,这就是我的美妙海象将要生活的地方
Dialogue: 0,0:12:04.51,0:12:06.63,英文,,0,0,0,,So let's see that in action.
Dialogue: 0,0:12:04.51,0:12:06.63,中文,,0,0,0,,那么让我们看看它的实际效果
Dialogue: 0,0:12:06.63,0:12:08.29,英文,,0,0,0,,OK, so here it is.
Dialogue: 0,0:12:06.63,0:12:08.29,中文,,0,0,0,,就是这样
Dialogue: 0,0:12:08.29,0:12:12.32,英文,,0,0,0,,I dug through memory, and then I found a place in memory where I can put the walrus's weight.
Dialogue: 0,0:12:08.29,0:12:12.32,中文,,0,0,0,,我浏览了内存 然后找到了一个可以放置海象重量的内存位置
Dialogue: 0,0:12:12.32,0:12:13.14,英文,,0,0,0,,There it is.
Dialogue: 0,0:12:12.32,0:12:13.14,中文,,0,0,0,,就是这样
Dialogue: 0,0:12:13.14,0:12:15.28,英文,,0,0,0,,And I can put the walrus's tusk size.
Dialogue: 0,0:12:13.14,0:12:15.28,中文,,0,0,0,,而且我可以放置海象的象牙大小
Dialogue: 0,0:12:15.28,0:12:16.68,英文,,0,0,0,,There it is.
Dialogue: 0,0:12:15.28,0:12:16.68,中文,,0,0,0,,就在那里
Dialogue: 0,0:12:16.68,0:12:21.33,英文,,0,0,0,,OK, I don't know if this is a realistic task size at all, but I'll have to take the slide's word for it.
Dialogue: 0,0:12:16.68,0:12:21.33,中文,,0,0,0,,我不知道这是否是一个真实的任务大小 但我只能相信幻灯片上的话
Dialogue: 0,0:12:21.33,0:12:23.27,英文,,0,0,0,,OK, so here's another picture of it.
Dialogue: 0,0:12:21.33,0:12:23.27,中文,,0,0,0,,这是另一张它的图片
Dialogue: 0,0:12:23.27,0:12:29.39,英文,,0,0,0,,Again, your memory in your computer is just a gigantic string of billions and billions of ones and zeros.
Dialogue: 0,0:12:23.27,0:12:29.39,中文,,0,0,0,,同样 你计算机中的记忆只是数十亿个1和0的巨大字符串
Dialogue: 0,0:12:29.39,0:12:35.11,英文,,0,0,0,,And what happens is the Java interpreter goes through the memory, and it digs through, and it finds this location.
Dialogue: 0,0:12:29.39,0:12:35.11,中文,,0,0,0,,然后Java解释器会遍历内存 挖掘 找到这个位置
Dialogue: 0,0:12:35.11,0:12:36.40,英文,,0,0,0,,And it says, you know what?
Dialogue: 0,0:12:35.11,0:12:36.40,中文,,0,0,0,,它会说 你知道吗
Dialogue: 0,0:12:36.40,0:12:38.30,英文,,0,0,0,,This looks like a good place for a walrus.
Dialogue: 0,0:12:36.40,0:12:38.30,中文,,0,0,0,,这看起来是海象的好地方
Dialogue: 0,0:12:38.30,0:12:42.14,英文,,0,0,0,,And what it does is it sets some of those bits to correspond to the weight.
Dialogue: 0,0:12:38.30,0:12:42.14,中文,,0,0,0,,它的作用是将其中一些位设置为与重量相对应
Dialogue: 0,0:12:42.14,0:12:45.78,英文,,0,0,0,,So whenever you reference this particular walrus's weight, it goes right there.
Dialogue: 0,0:12:42.14,0:12:45.78,中文,,0,0,0,,所以 每当你查询这只特定海象的重量时 它就会直接指向这里
Dialogue: 0,0:12:45.78,0:12:49.02,英文,,0,0,0,,Anytime you ask about the walrus's tusk size, it goes right there.
Dialogue: 0,0:12:45.78,0:12:49.02,中文,,0,0,0,,每当你询问海象的长牙尺寸时 它就会直接指向这里
Dialogue: 0,0:12:49.02,0:12:52.99,英文,,0,0,0,,So it digs through memory, and it finds this home for the walrus.
Dialogue: 0,0:12:49.02,0:12:52.99,中文,,0,0,0,,它在内存中搜索 并找到了这只海象的家
Dialogue: 0,0:12:52.99,0:12:58.23,英文,,0,0,0,,And that's all well and good, but now we have a problem, which is, how do I know where to find this walrus?
Dialogue: 0,0:12:52.99,0:12:58.23,中文,,0,0,0,,这一切都很好 但现在我们有一个问题 那就是 我怎么知道在哪里找到这只海象呢
Dialogue: 0,0:12:58.23,0:13:00.19,英文,,0,0,0,,We can see here, memory's kind of big.
Dialogue: 0,0:12:58.23,0:13:00.19,中文,,0,0,0,,我们可以看到 内存很大
Dialogue: 0,0:13:00.19,0:13:03.56,英文,,0,0,0,,I put this walrus here, and it's like burying a treasure in the field.
Dialogue: 0,0:13:00.19,0:13:03.56,中文,,0,0,0,,我把这只海象放在这里 就像是把宝藏埋在地里
Dialogue: 0,0:13:03.56,0:13:08.24,英文,,0,0,0,,If I go to the field and I bury a treasure, and I don't write down where I put it, what's going to happen?
Dialogue: 0,0:13:03.56,0:13:08.24,中文,,0,0,0,,如果我去到田地 然后我埋了个宝藏 却没记下我放在哪儿 会怎么样
Dialogue: 0,0:13:08.24,0:13:09.96,英文,,0,0,0,,I'm going to lose the treasure forever.
Dialogue: 0,0:13:08.24,0:13:09.96,中文,,0,0,0,,我会永远失去宝藏
Dialogue: 0,0:13:09.96,0:13:13.75,英文,,0,0,0,,And walruses, they are very treasured objects, and I don't want to lose them.
Dialogue: 0,0:13:09.96,0:13:13.75,中文,,0,0,0,,而海象 它们是非常珍贵的物品 我不想失去它们
Dialogue: 0,0:13:13.75,0:13:16.15,英文,,0,0,0,,So what can I do?
Dialogue: 0,0:13:13.75,0:13:16.15,中文,,0,0,0,,那我能做什么呢
Dialogue: 0,0:13:16.15,0:13:23.98,英文,,0,0,0,,So what's going to happen next is when I created the walrus using the constructor, Java went into memory and it created this beautiful walrus.
Dialogue: 0,0:13:16.15,0:13:23.98,中文,,0,0,0,,接下来会发生什么是 当我使用构造函数创建了海象 Java 进入内存然后创建了这只漂亮的海象
Dialogue: 0,0:13:23.98,0:13:24.40,英文,,0,0,0,,Look at it.
Dialogue: 0,0:13:23.98,0:13:24.40,中文,,0,0,0,,看着它
Dialogue: 0,0:13:24.40,0:13:25.54,英文,,0,0,0,,It's gorgeous.
Dialogue: 0,0:13:24.40,0:13:25.54,中文,,0,0,0,,它太漂亮了
Dialogue: 0,0:13:25.54,0:13:29.93,英文,,0,0,0,,And then problem is we need to figure out where is the walrus?
Dialogue: 0,0:13:25.54,0:13:29.93,中文,,0,0,0,,问题是我们需要弄清楚海象在哪里
Dialogue: 0,0:13:29.93,0:13:30.73,英文,,0,0,0,,Where was the walrus?
Dialogue: 0,0:13:29.93,0:13:30.73,中文,,0,0,0,,海象在哪里
Dialogue: 0,0:13:30.73,0:13:31.69,英文,,0,0,0,,I want to visit it later.
Dialogue: 0,0:13:30.73,0:13:31.69,中文,,0,0,0,,我想以后去看看
Dialogue: 0,0:13:31.69,0:13:33.05,英文,,0,0,0,,So how do I find it?
Dialogue: 0,0:13:31.69,0:13:33.05,中文,,0,0,0,,那么我该怎么找到它呢
Dialogue: 0,0:13:33.05,0:13:35.41,英文,,0,0,0,,So what Java is going to do next is.
Dialogue: 0,0:13:33.05,0:13:35.41,中文,,0,0,0,,Java接下来要做的是什么
Dialogue: 0,0:13:35.41,0:13:42.42,英文,,0,0,0,,One way you can think of it is this new keyword is going to shout to the heavens and tell everybody the location of this brand new walrus.
Dialogue: 0,0:13:35.41,0:13:42.42,中文,,0,0,0,,你可以这样想 这个新关键字会高喊告诉所有人这只全新海象的位置
Dialogue: 0,0:13:42.42,0:13:46.34,英文,,0,0,0,,So just like when I bury treasure in the field, I got to know where to find it.
Dialogue: 0,0:13:42.42,0:13:46.34,中文,,0,0,0,,就像我在田地里埋宝藏一样 我得知道在哪找到它
Dialogue: 0,0:13:46.34,0:13:50.02,英文,,0,0,0,,When I create my brand new walrus, I need to write down somewhere where I put this walrus
Dialogue: 0,0:13:46.34,0:13:50.02,中文,,0,0,0,,当我创建我的全新海象时 我需要在某处写下我放置这个海象的地方
Dialogue: 0,0:13:50.02,0:13:54.46,英文,,0,0,0,,so I can go back and visit it and change its weight and feed it food later.
Dialogue: 0,0:13:50.02,0:13:54.46,中文,,0,0,0,,这样我以后可以回来访问它、改变它的体重并喂它食物
Dialogue: 0,0:13:54.46,0:13:55.80,英文,,0,0,0,,So how am I going to do that?
Dialogue: 0,0:13:54.46,0:13:55.80,中文,,0,0,0,,那我要怎么做呢
Dialogue: 0,0:13:55.80,0:14:00.19,英文,,0,0,0,,Well, what Java is going to do, what this new keyword is doing, is it's going to take all of these bits,
Dialogue: 0,0:13:55.80,0:14:00.19,中文,,0,0,0,,Java要做的事情 这个新关键字要做的事情 它要做的就是获取所有这些位
Dialogue: 0,0:14:00.19,0:14:04.23,英文,,0,0,0,, and you can kind of think of it as, I could put a number on each of these bits.
Dialogue: 0,0:14:00.19,0:14:04.23,中文,,0,0,0,,你可以把它想象成 我可以给每一个位都标上一个数字
Dialogue: 0,0:14:04.23,0:14:08.53,英文,,0,0,0,,I could be like, that's the first one, and that's the second one, and that's the third one, and that's the fourth one.
Dialogue: 0,0:14:04.23,0:14:08.53,中文,,0,0,0,,我可以说 那是第一个 那是第二个 那是第三个 那是第四个
Dialogue: 0,0:14:08.53,0:14:15.73,英文,,0,0,0,,And maybe, just maybe, this walrus lives at the 2, I don't know what this is, 2, 3, 8, 4, 7, 2, 3, 4, 2, 3-th bit of memory.
Dialogue: 0,0:14:08.53,0:14:15.73,中文,,0,0,0,,也许 也许 这个海象住在内存的第2、3、8、4、7、2、3、4、2、3位
Dialogue: 0,0:14:15.73,0:14:19.83,英文,,0,0,0,,OK.
Dialogue: 0,0:14:15.73,0:14:19.83,中文,,0,0,0,,好的
Dialogue: 0,0:14:19.83,0:14:23.36,英文,,0,0,0,,So what the new keyword will do is it will shout to the heavens and tell everybody,
Dialogue: 0,0:14:19.83,0:14:23.36,中文,,0,0,0,,新关键字的作用就是向宇宙大喊 告诉每个人
Dialogue: 0,0:14:23.36,0:14:28.98,英文,,0,0,0,,this walrus that you just made, it lives at bit number whatever that number is.
Dialogue: 0,0:14:23.36,0:14:28.98,中文,,0,0,0,,你刚刚创建的这只海象 它住在某个特定的位数 不管那个数字是多少
Dialogue: 0,0:14:28.98,0:14:30.77,英文,,0,0,0,,That's what the new keyword returns.
Dialogue: 0,0:14:28.98,0:14:30.77,中文,,0,0,0,,这就是新关键字的返回结果
Dialogue: 0,0:14:30.77,0:14:33.93,英文,,0,0,0,,So you can almost think of the new keyword as returning a number.
Dialogue: 0,0:14:30.77,0:14:33.93,中文,,0,0,0,,你可以把新关键字想象成返回一个数字
Dialogue: 0,0:14:33.93,0:14:35.33,英文,,0,0,0,,What number does it return?
Dialogue: 0,0:14:33.93,0:14:35.33,中文,,0,0,0,,它返回什么数字呢
Dialogue: 0,0:14:35.33,0:14:36.73,英文,,0,0,0,,It returns this number.
Dialogue: 0,0:14:35.33,0:14:36.73,中文,,0,0,0,,它返回这个数字
Dialogue: 0,0:14:36.73,0:14:37.39,英文,,0,0,0,,Why?
Dialogue: 0,0:14:36.73,0:14:37.39,中文,,0,0,0,,为什么呢
Dialogue: 0,0:14:37.39,0:14:42.36,英文,,0,0,0,,Because that is the numbered bit where my wonderful walrus lives.
Dialogue: 0,0:14:37.39,0:14:42.36,中文,,0,0,0,,因为这就是我美妙的海象所在的编号位
Dialogue: 0,0:14:42.36,0:14:44.70,英文,,0,0,0,,So this new walrus constructor does two things.
Dialogue: 0,0:14:42.36,0:14:44.70,中文,,0,0,0,,这个新的海象构造函数做了两件事
Dialogue: 0,0:14:44.70,0:14:48.90,英文,,0,0,0,,First, it allocates the memory and says, this is the home for the walrus.
Dialogue: 0,0:14:44.70,0:14:48.90,中文,,0,0,0,,首先 它分配内存并说 这是海象的家
Dialogue: 0,0:14:48.90,0:14:50.90,英文,,0,0,0,,But if I don't write it down, I'm going to lose it.
Dialogue: 0,0:14:48.90,0:14:50.90,中文,,0,0,0,,但如果我不把它写下来 我就会忘记
Dialogue: 0,0:14:50.90,0:14:53.64,英文,,0,0,0,,So the new keyword helpfully says, that's where it lives.
Dialogue: 0,0:14:50.90,0:14:53.64,中文,,0,0,0,,新关键字贴心地说 那就是它的住所
Dialogue: 0,0:14:53.64,0:14:58.56,英文,,0,0,0,,This number, if you go to that number bit in memory, you will find your walrus.
Dialogue: 0,0:14:53.64,0:14:58.56,中文,,0,0,0,,这个数字 如果你跳到内存中的那一位 你会找到你的海象
Dialogue: 0,0:14:58.56,0:14:59.40,英文,,0,0,0,,Excellent.
Dialogue: 0,0:14:58.56,0:14:59.40,中文,,0,0,0,,太好了
Dialogue: 0,0:14:59.40,0:15:00.47,英文,,0,0,0,,OK.
Dialogue: 0,0:14:59.40,0:15:00.47,中文,,0,0,0,,好的
Dialogue: 0,0:15:00.47,0:15:02.08,英文,,0,0,0,,So that's great.
Dialogue: 0,0:15:00.47,0:15:02.08,中文,,0,0,0,,那太好了
Dialogue: 0,0:15:02.08,0:15:04.04,英文,,0,0,0,,That tells me what happens when I create a new walrus.
Dialogue: 0,0:15:02.08,0:15:04.04,中文,,0,0,0,,这告诉我当我创建一只新海象时会发生什么
Dialogue: 0,0:15:04.04,0:15:08.06,英文,,0,0,0,,But like we said, if I don't write down this number, I will lose my walrus forever.
Dialogue: 0,0:15:04.04,0:15:08.06,中文,,0,0,0,,但就像我们说的 如果我不记下这个数字 我将永远失去我的海象
Dialogue: 0,0:15:08.06,0:15:10.42,英文,,0,0,0,,And I don't want to lose my walrus forever.
Dialogue: 0,0:15:08.06,0:15:10.42,中文,,0,0,0,,而我不想永远失去我的海象
Dialogue: 0,0:15:10.42,0:15:15.95,英文,,0,0,0,,So what happens next is I need somewhere to put that location that I just wrote down.
Dialogue: 0,0:15:10.42,0:15:15.95,中文,,0,0,0,,那么接下来会发生什么 我需要一个地方来存放我刚刚记下的位置
Dialogue: 0,0:15:15.95,0:15:17.11,英文,,0,0,0,,So where do I put it?
Dialogue: 0,0:15:15.95,0:15:17.11,中文,,0,0,0,,那我把它放在哪里呢
Dialogue: 0,0:15:17.11,0:15:18.41,英文,,0,0,0,,That's where this line comes in.
Dialogue: 0,0:15:17.11,0:15:18.41,中文,,0,0,0,,这就是这行代码发挥作用的地方
Dialogue: 0,0:15:18.41,0:15:23.61,英文,,0,0,0,,So when I say walrus some walrus, I am declaring that there is a variable of type walrus.
Dialogue: 0,0:15:18.41,0:15:23.61,中文,,0,0,0,,当我说海象某些海象时 我是在声明有一个海象类型的变量
Dialogue: 0,0:15:23.61,0:15:26.34,英文,,0,0,0,,But remember, there are only eight primitive types.
Dialogue: 0,0:15:23.61,0:15:26.34,中文,,0,0,0,,但请记住 只有八种基本类型
Dialogue: 0,0:15:26.34,0:15:28.72,英文,,0,0,0,,Walrus, not a built-in type in Java.
Dialogue: 0,0:15:26.34,0:15:28.72,中文,,0,0,0,,海象 不是 Java 中的内置类型
Dialogue: 0,0:15:28.72,0:15:33.74,英文,,0,0,0,,So when you declare walrus some walrus, what you're actually getting here, and if
Dialogue: 0,0:15:28.72,0:15:33.74,中文,,0,0,0,,当你声明海象某些海象时 你实际上得到的是 如果
Dialogue: 0,0:15:33.74,0:15:38.24,英文,,0,0,0,,All of this is gibberish to you, this is the one thing you need to fully understand the mystery.
Dialogue: 0,0:15:33.74,0:15:38.24,中文,,0,0,0,,如果对你来说这一切都是无稽之谈 这就是你需要完全理解的神秘之处
Dialogue: 0,0:15:38.24,0:15:45.83,英文,,0,0,0,,When I declare there is walrus on walrus, this space right here, these 64 bits, the ones and zeros, that's not actually the walrus.
Dialogue: 0,0:15:38.24,0:15:45.83,中文,,0,0,0,,当我声明这里有海象时 这里的空间 这 64 位 那些零和一 实际上并不是海象
Dialogue: 0,0:15:45.83,0:15:50.85,英文,,0,0,0,,I know it looks like a walrus, right, this looks kind of like a walrus, but it is not actually the walrus.
Dialogue: 0,0:15:45.83,0:15:50.85,中文,,0,0,0,,我知道它看起来像海象 对吧 这看起来有点像海象 但实际上并不是海象
Dialogue: 0,0:15:50.85,0:15:56.86,英文,,0,0,0,,Instead, this location is going to store the location of where the walrus actually is.
Dialogue: 0,0:15:50.85,0:15:56.86,中文,,0,0,0,,相反 这个位置将存储海象实际所在的位置
Dialogue: 0,0:15:56.86,0:15:58.76,英文,,0,0,0,,I'll say it one more time because it's so important.
Dialogue: 0,0:15:56.86,0:15:58.76,中文,,0,0,0,,我再说一遍 因为这非常重要
Dialogue: 0,0:15:58.76,0:16:03.62,英文,,0,0,0,,When I declare there is some walrus, this memory box does not actually contain the walrus.
Dialogue: 0,0:15:58.76,0:16:03.62,中文,,0,0,0,,当我声明有一些海象时 这个记忆盒实际上并不包含海象
Dialogue: 0,0:16:03.62,0:16:04.54,英文,,0,0,0,,It doesn't fit.
Dialogue: 0,0:16:03.62,0:16:04.54,中文,,0,0,0,,它不合适
Dialogue: 0,0:16:04.54,0:16:05.78,英文,,0,0,0,,Remember, the walrus was really big.
Dialogue: 0,0:16:04.54,0:16:05.78,中文,,0,0,0,,记住 海象真的很大
Dialogue: 0,0:16:05.78,0:16:09.38,英文,,0,0,0,,It had the tusk size and the weight in pounds.
Dialogue: 0,0:16:05.78,0:16:09.38,中文,,0,0,0,,它有象牙的大小和以磅为单位的重量
Dialogue: 0,0:16:09.38,0:16:11.24,英文,,0,0,0,,This is not going to fit the walrus.
Dialogue: 0,0:16:09.38,0:16:11.24,中文,,0,0,0,,这不适合海象
Dialogue: 0,0:16:11.24,0:16:14.26,英文,,0,0,0,,This space is just telling me where to find the walrus.
Dialogue: 0,0:16:11.24,0:16:14.26,中文,,0,0,0,,这个空间就是告诉我在哪里找到海象的地方
Dialogue: 0,0:16:14.26,0:16:19.11,英文,,0,0,0,,It's like a little note to myself that says, if you want to go visit your walrus, you've got to go here.
Dialogue: 0,0:16:14.26,0:16:19.11,中文,,0,0,0,,就像是给自己的一个小提示 它说 如果你想去看你的海象 你得到这里
Dialogue: 0,0:16:19.11,0:16:23.91,英文,,0,0,0,,OK, here I have assigned it to null, which is a bunch of zeros, which indicates there is no walrus.
Dialogue: 0,0:16:19.11,0:16:23.91,中文,,0,0,0,,在这里我把它赋值为null 也就是一堆零 表示这里没有海象
Dialogue: 0,0:16:23.91,0:16:25.01,英文,,0,0,0,,Kind of depressing.
Dialogue: 0,0:16:23.91,0:16:25.01,中文,,0,0,0,,有点沮丧
Dialogue: 0,0:16:25.01,0:16:26.69,英文,,0,0,0,,So let's make a walrus.
Dialogue: 0,0:16:25.01,0:16:26.69,中文,,0,0,0,,那么让我们制造一个海象
Dialogue: 0,0:16:26.69,0:16:35.01,英文,,0,0,0,,So when I say new walrus, blah, blah, blah, what happens is, well, 1,008.3, what happens is the walrus constructor, it digs through memory.
Dialogue: 0,0:16:26.69,0:16:35.01,中文,,0,0,0,,当我说新的海象 啥啥啥 发生的事情是 1008.3 发生的事情是 海象构造函数 它在内存中挖掘
Dialogue: 0,0:16:35.01,0:16:37.53,英文,,0,0,0,,It finds the glorious place for the walrus.
Dialogue: 0,0:16:35.01,0:16:37.53,中文,,0,0,0,,它找到了为海象准备的辉煌地方
Dialogue: 0,0:16:37.53,0:16:43.97,英文,,0,0,0,,And then the new keyword shouts to the world, your walrus is located right here at this bit of memory.
Dialogue: 0,0:16:37.53,0:16:43.97,中文,,0,0,0,,然后新关键字向世界大喊 你的海象就在这个内存位
Dialogue: 0,0:16:43.97,0:16:45.56,英文,,0,0,0,,And then here there's an equal sign.
Dialogue: 0,0:16:43.97,0:16:45.56,中文,,0,0,0,,然后这里有一个等号
Dialogue: 0,0:16:45.56,0:16:46.00,英文,,0,0,0,,Equal sign.
Dialogue: 0,0:16:45.56,0:16:46.00,中文,,0,0,0,,等号
Dialogue: 0,0:16:46.00,0:16:47.46,英文,,0,0,0,,What do we know about equal sign?
Dialogue: 0,0:16:46.00,0:16:47.46,中文,,0,0,0,,我们对等号了解多少
Dialogue: 0,0:16:47.46,0:16:53.33,英文,,0,0,0,,Well, the golden rule of equal says I copy the bits from the right and I assign them to the left.
Dialogue: 0,0:16:47.46,0:16:53.33,中文,,0,0,0,,好吧 等号的黄金法则说我复制右边的位并将它们分配给左边
Dialogue: 0,0:16:53.33,0:16:54.27,英文,,0,0,0,,What are the bits on the right?
Dialogue: 0,0:16:53.33,0:16:54.27,中文,,0,0,0,,右边的位是什么
Dialogue: 0,0:16:54.27,0:16:56.65,英文,,0,0,0,,Well, we know the new keyword is shouting to the world.
Dialogue: 0,0:16:54.27,0:16:56.65,中文,,0,0,0,,我们知道新关键字正在向世界大喊
Dialogue: 0,0:16:56.65,0:16:58.79,英文,,0,0,0,,It's telling everyone your new walrus.
Dialogue: 0,0:16:56.65,0:16:58.79,中文,,0,0,0,,它告诉每个人你的新海象在哪里
Dialogue: 0,0:16:58.79,0:17:00.15,英文,,0,0,0,,It lives right here in memory.
Dialogue: 0,0:16:58.79,0:17:00.15,中文,,0,0,0,,它就住在这儿 就在内存里
Dialogue: 0,0:17:00.15,0:17:01.60,英文,,0,0,0,,This is the location.
Dialogue: 0,0:17:00.15,0:17:01.60,中文,,0,0,0,,这就是位置
Dialogue: 0,0:17:01.60,0:17:07.44,英文,,0,0,0,,So I take those bits, which tell me where the walrus lives, and then I copy those bits into some walrus.
Dialogue: 0,0:17:01.60,0:17:07.44,中文,,0,0,0,,我拿到那些比特 告诉我海象住在哪里 然后我把那些比特复制到某些海象里
Dialogue: 0,0:17:07.44,0:17:10.64,英文,,0,0,0,,And now some walrus, this variable, doesn't actually hold the walrus.
Dialogue: 0,0:17:07.44,0:17:10.64,中文,,0,0,0,,现在某些海象 这个变量 实际上并没有包含海象
Dialogue: 0,0:17:10.64,0:17:11.10,英文,,0,0,0,,It doesn't fit.
Dialogue: 0,0:17:10.64,0:17:11.10,中文,,0,0,0,,它不适合
Dialogue: 0,0:17:11.10,0:17:12.44,英文,,0,0,0,,The walrus is too fat.
Dialogue: 0,0:17:11.10,0:17:12.44,中文,,0,0,0,,海象太胖了
Dialogue: 0,0:17:12.44,0:17:18.31,英文,,0,0,0,,Instead, this space, it holds the location of where my walrus actually lives in memory.
Dialogue: 0,0:17:12.44,0:17:18.31,中文,,0,0,0,,相反 这个空间实际上存放着我的海象在内存中的位置
Dialogue: 0,0:17:18.31,0:17:21.07,英文,,0,0,0,,So this sequence of ones and zeros, I know it looks like a walrus.
Dialogue: 0,0:17:18.31,0:17:21.07,中文,,0,0,0,,这一串一和零看起来像一只海象
Dialogue: 0,0:17:21.07,0:17:22.73,英文,,0,0,0,,It is not the actual walrus.
Dialogue: 0,0:17:21.07,0:17:22.73,中文,,0,0,0,,它并不是真正的海象
Dialogue: 0,0:17:22.73,0:17:27.78,英文,,0,0,0,,This tells me if I go to this location in memory, I will find the walrus that I seek.
Dialogue: 0,0:17:22.73,0:17:27.78,中文,,0,0,0,,这告诉我 如果我去内存中的这个位置 我会找到我寻找的海象
Dialogue: 0,0:17:27.78,0:17:28.40,英文,,0,0,0,,There it is.
Dialogue: 0,0:17:27.78,0:17:28.40,中文,,0,0,0,,就在那里
Dialogue: 0,0:17:28.40,0:17:33.48,英文,,0,0,0,,It's got its weight and its tusk size, and it's sitting there doing walrus things.
Dialogue: 0,0:17:28.40,0:17:33.48,中文,,0,0,0,,它有它的重量和它的长牙大小 它就坐在那里做海象的事情
Dialogue: 0,0:17:33.48,0:17:35.86,英文,,0,0,0,,I don't actually know what walruses do in their free time.
Dialogue: 0,0:17:33.48,0:17:35.86,中文,,0,0,0,,我其实不知道海象在空闲时间都做些什么
Dialogue: 0,0:17:35.86,0:17:37.17,英文,,0,0,0,,OK, maybe they read.
Dialogue: 0,0:17:35.86,0:17:37.17,中文,,0,0,0,,好吧 也许他们读了
Dialogue: 0,0:17:37.17,0:17:37.77,英文,,0,0,0,,I don't know.
Dialogue: 0,0:17:37.17,0:17:37.77,中文,,0,0,0,,我不知道
Dialogue: 0,0:17:37.77,0:17:38.98,英文,,0,0,0,,OK.
Dialogue: 0,0:17:37.77,0:17:38.98,中文,,0,0,0,,好的
Dialogue: 0,0:17:38.98,0:17:40.64,英文,,0,0,0,,Great, so that's what the golden rule of equals does.
Dialogue: 0,0:17:38.98,0:17:40.64,中文,,0,0,0,,太棒了 这就是等于的黄金法则
Dialogue: 0,0:17:40.64,0:17:44.31,英文,,0,0,0,,When I assign a new walrus, I put it into some walrus variable.
Dialogue: 0,0:17:40.64,0:17:44.31,中文,,0,0,0,,当我给一个新的海象赋值时 我把它放到某个海象变量中
Dialogue: 0,0:17:44.31,0:17:46.43,英文,,0,0,0,,And again, I cannot say this enough.
Dialogue: 0,0:17:44.31,0:17:46.43,中文,,0,0,0,,而且 我无论怎么说都不为过
Dialogue: 0,0:17:46.43,0:17:48.25,英文,,0,0,0,,It does not store the actual walrus.
Dialogue: 0,0:17:46.43,0:17:48.25,中文,,0,0,0,,它不存储实际的海象
Dialogue: 0,0:17:48.25,0:17:55.05,英文,,0,0,0,,It stores a reference or the location of where my actual walrus is if I ever want to go visit it.
Dialogue: 0,0:17:48.25,0:17:55.05,中文,,0,0,0,,它存储了我的实际海象所在的引用或位置 如果我想要去拜访它的话
Dialogue: 0,0:17:55.05,0:17:57.45,英文,,0,0,0,,OK, questions, thoughts?
Dialogue: 0,0:17:55.05,0:17:57.45,中文,,0,0,0,,有问题 有想法吗
Dialogue: 0,0:17:57.45,0:17:59.56,英文,,0,0,0,,This is probably the most important slide.
Dialogue: 0,0:17:57.45,0:17:59.56,中文,,0,0,0,,这可能是最重要的幻灯片
Dialogue: 0,0:17:59.56,0:18:02.36,英文,,0,0,0,,So if you must go to sleep, make sure you get this one.
Dialogue: 0,0:17:59.56,0:18:02.36,中文,,0,0,0,,如果你必须去睡觉 确保你掌握这一点
Dialogue: 0,0:18:02.36,0:18:04.14,英文,,0,0,0,,OK, great.
Dialogue: 0,0:18:02.36,0:18:04.14,中文,,0,0,0,,好的 很棒
Dialogue: 0,0:18:04.14,0:18:06.40,英文,,0,0,0,,So again, this is kind of hard to read.
Dialogue: 0,0:18:04.14,0:18:06.40,中文,,0,0,0,,所以 再说一次 这有点难以理解
Dialogue: 0,0:18:06.40,0:18:10.42,英文,,0,0,0,,I do not want to draw diagrams where I have to write tons and tons of 0's and 1's.
Dialogue: 0,0:18:06.40,0:18:10.42,中文,,0,0,0,,我不想画出我不得不写下大量的0和1的图表
Dialogue: 0,0:18:10.42,0:18:15.87,英文,,0,0,0,,So just to make my life a little easier, I'm going to use something called box and pointer notation.
Dialogue: 0,0:18:10.42,0:18:15.87,中文,,0,0,0,,为了让我的生活简单些 我要用一种叫做盒子和指针符号的东西
Dialogue: 0,0:18:15.87,0:18:21.01,英文,,0,0,0,,So instead of writing something like this, where it's like, this is the sequence of 1's and 0's where the walrus lives.
Dialogue: 0,0:18:15.87,0:18:21.01,中文,,0,0,0,,所以 不是写成这样 就像 这是海象所在的1和0的序列
Dialogue: 0,0:18:21.01,0:18:25.77,英文,,0,0,0,,And then at the sequence of 1's and 0's, that location, I show the width and the tusk size.
Dialogue: 0,0:18:21.01,0:18:25.77,中文,,0,0,0,,然后在1和0的序列 那个位置 我显示宽度和长牙的大小
Dialogue: 0,0:18:25.77,0:18:26.47,英文,,0,0,0,,That's too hard to read.
Dialogue: 0,0:18:25.77,0:18:26.47,中文,,0,0,0,,那样太难读了
Dialogue: 0,0:18:26.47,0:18:28.85,英文,,0,0,0,,So instead, I'm going to draw an arrow.
Dialogue: 0,0:18:26.47,0:18:28.85,中文,,0,0,0,,所以 我要画一个箭头
Dialogue: 0,0:18:28.85,0:18:32.47,英文,,0,0,0,,And what this arrow says is, in this memory box right here,
Dialogue: 0,0:18:28.85,0:18:32.47,中文,,0,0,0,,这个箭头表示的是 在这个内存盒子里
Dialogue: 0,0:18:32.47,0:18:34.94,英文,,0,0,0,,It doesn't look like it, but there's an actual number there.
Dialogue: 0,0:18:32.47,0:18:34.94,中文,,0,0,0,,看起来不像 但那里实际上有一个数字
Dialogue: 0,0:18:34.94,0:18:36.46,英文,,0,0,0,,What does that number correspond to?
Dialogue: 0,0:18:34.94,0:18:36.46,中文,,0,0,0,,那个数字对应着什么
Dialogue: 0,0:18:36.46,0:18:38.62,英文,,0,0,0,,It corresponds to a location in memory.
Dialogue: 0,0:18:36.46,0:18:38.62,中文,,0,0,0,,它对应内存中的一个位置
Dialogue: 0,0:18:38.62,0:18:43.08,英文,,0,0,0,,And if I go to that location, it's like going into the field and digging up my treasure.
Dialogue: 0,0:18:38.62,0:18:43.08,中文,,0,0,0,,如果我去那个位置 就像是走进田地挖宝藏一样
Dialogue: 0,0:18:43.08,0:18:46.06,英文,,0,0,0,,I go to that location, and I find the walrus.
Dialogue: 0,0:18:43.08,0:18:46.06,中文,,0,0,0,,我去那个位置 找到了海象
Dialogue: 0,0:18:46.06,0:18:47.63,英文,,0,0,0,,I guess walruses don't live in the dirt, do they?
Dialogue: 0,0:18:46.06,0:18:47.63,中文,,0,0,0,,我猜海象不住在土里 对吧
Dialogue: 0,0:18:47.63,0:18:51.25,英文,,0,0,0,,But I'll go to that location, and I'll find the walrus that I seek.
Dialogue: 0,0:18:47.63,0:18:51.25,中文,,0,0,0,,但我会去那个位置 找到我要找的海象
Dialogue: 0,0:18:51.25,0:18:53.17,英文,,0,0,0,,So that's what the arrow corresponds to.
Dialogue: 0,0:18:51.25,0:18:53.17,中文,,0,0,0,,所以箭头对应的就是这个
Dialogue: 0,0:18:53.17,0:18:57.81,英文,,0,0,0,,It says, this some walrus memory box doesn't actually contain the walrus.
Dialogue: 0,0:18:53.17,0:18:57.81,中文,,0,0,0,,它说 这个海象记忆盒实际上并不包含海象
Dialogue: 0,0:18:57.81,0:19:00.25,英文,,0,0,0,,It just contains the location of the walrus.
Dialogue: 0,0:18:57.81,0:19:00.25,中文,,0,0,0,,它只包含海象的位置
Dialogue: 0,0:19:00.25,0:19:02.50,英文,,0,0,0,,So that's called box and pointer notation.
Dialogue: 0,0:19:00.25,0:19:02.50,中文,,0,0,0,,所以这被称为盒子和指针表示法
Dialogue: 0,0:19:02.50,0:19:05.45,英文,,0,0,0,,And that's what you saw earlier.
Dialogue: 0,0:19:02.50,0:19:05.45,中文,,0,0,0,,这就是你之前看到的
Dialogue: 0,0:19:05.45,0:19:11.86,英文,,0,0,0,,Great, so at this point, hopefully it is no longer surprising that given what we know about reference types,
Dialogue: 0,0:19:05.45,0:19:11.86,中文,,0,0,0,,太好了 所以在这一点上 希望现在不再令人惊讶 鉴于我们对引用类型的了解
Dialogue: 0,0:19:11.86,0:19:20.30,英文,,0,0,0,,given what we know about the golden rule of equals, hopefully now we can put all the pieces together and we can finally answer the mystery of the walrus.
Dialogue: 0,0:19:11.86,0:19:20.30,中文,,0,0,0,,鉴于我们对等式的黄金法则的了解 希望现在我们可以把所有的因素放在一起 最终我们可以解开海象的神秘
Dialogue: 0,0:19:20.30,0:19:27.98,英文,,0,0,0,,And the mystery says, well, I create a new walrus, or I declare a new walrus variable, a. And again, this is so key, I cannot say it enough.
Dialogue: 0,0:19:20.30,0:19:27.98,中文,,0,0,0,,而谜底是 我创建了一个新的海象 或者我声明了一个新的海象变量 a  而且 这是如此重要 我无法再多说了
Dialogue: 0,0:19:27.98,0:19:31.45,英文,,0,0,0,,If I look at this a memory box, it does not hold the walrus.
Dialogue: 0,0:19:27.98,0:19:31.45,中文,,0,0,0,,如果我看看这个 a 记忆盒 它并不包含海象
Dialogue: 0,0:19:31.45,0:19:32.91,英文,,0,0,0,,The walrus is not going to fit in there.
Dialogue: 0,0:19:31.45,0:19:32.91,中文,,0,0,0,,海象是塞不进去的
Dialogue: 0,0:19:32.91,0:19:34.01,英文,,0,0,0,,It's too small.
Dialogue: 0,0:19:32.91,0:19:34.01,中文,,0,0,0,,它太小了
Dialogue: 0,0:19:34.01,0:19:37.97,英文,,0,0,0,,So this memory box can only hold a reference to where the walrus is.
Dialogue: 0,0:19:34.01,0:19:37.97,中文,,0,0,0,,所以这个记忆盒只能装一个指向海象位置的引用
Dialogue: 0,0:19:37.97,0:19:42.37,英文,,0,0,0,,Sometimes people call it the address of the walrus, like the walrus lives somewhere.
Dialogue: 0,0:19:37.97,0:19:42.37,中文,,0,0,0,,有时候人们会把它称为海象的地址 就像海象住在某个地方
Dialogue: 0,0:19:42.37,0:19:44.39,英文,,0,0,0,,I will write down the address where it lives.
Dialogue: 0,0:19:42.37,0:19:44.39,中文,,0,0,0,,我会把它住的地址写下来
Dialogue: 0,0:19:44.39,0:19:47.25,英文,,0,0,0,,Sometimes people will call it the location of the walrus.
Dialogue: 0,0:19:44.39,0:19:47.25,中文,,0,0,0,,有时候人们会称它为海象的位置
Dialogue: 0,0:19:47.25,0:19:51.90,英文,,0,0,0,,You could hear people say it's a pointer to the walrus, so it kind of points you in the right direction.
Dialogue: 0,0:19:47.25,0:19:51.90,中文,,0,0,0,,你可能会听人说它是指向海象的指针 所以它能帮你指出正确的方向
Dialogue: 0,0:19:51.90,0:19:53.90,英文,,0,0,0,,So lots of different things you could call it.
Dialogue: 0,0:19:51.90,0:19:53.90,中文,,0,0,0,,所以有很多不同的东西你可以叫它
Dialogue: 0,0:19:53.90,0:19:57.62,英文,,0,0,0,,But the important thing is that this A memory box, it's a reference to the walrus.
Dialogue: 0,0:19:53.90,0:19:57.62,中文,,0,0,0,,但重要的是这个 a 内存盒 它是对海象的一个引用
Dialogue: 0,0:19:57.62,0:19:58.86,英文,,0,0,0,,It's not the real thing.
Dialogue: 0,0:19:57.62,0:19:58.86,中文,,0,0,0,,它不是真的
Dialogue: 0,0:19:58.86,0:20:04.94,英文,,0,0,0,,So when I say I declare there is a walrus variable called A, I have not actually created a new walrus.
Dialogue: 0,0:19:58.86,0:20:04.94,中文,,0,0,0,,所以当我说我声明有一个名为 a 的海象变量时 我实际上并没有创建一个新的海象
Dialogue: 0,0:20:04.94,0:20:07.17,英文,,0,0,0,,No walruses exist in the world right now.
Dialogue: 0,0:20:04.94,0:20:07.17,中文,,0,0,0,,现在世界上没有海象存在
Dialogue: 0,0:20:07.17,0:20:14.01,英文,,0,0,0,,I just created a place where I could potentially write down the location of a walrus if I ever had one.
Dialogue: 0,0:20:07.17,0:20:14.01,中文,,0,0,0,,我只是创建了一个地方 如果我有海象的话 我可以潜在地写下它的位置
Dialogue: 0,0:20:14.01,0:20:17.63,英文,,0,0,0,,One tiny little note I'll make, because I think I forgot to do it earlier,
Dialogue: 0,0:20:14.01,0:20:17.63,中文,,0,0,0,,我会做一个很小的注释 因为我觉得我之前忘记做了
Dialogue: 0,0:20:17.63,0:20:22.77,英文,,0,0,0,, is that if you have not assigned A to anything, here the box doesn't have anything, it's still going to have stuff.
Dialogue: 0,0:20:17.63,0:20:22.77,中文,,0,0,0,,就是如果你还没有给 a 分配任何东西 在这里盒子什么都没有 它仍然会有东西
Dialogue: 0,0:20:22.77,0:20:25.86,英文,,0,0,0,,It's going to have some ones and zeros, maybe leftover from last time.
Dialogue: 0,0:20:22.77,0:20:25.86,中文,,0,0,0,,里面可能会有一些1和0 可能是上次遗留的
Dialogue: 0,0:20:25.86,0:20:29.68,英文,,0,0,0,,But Java is not going to let you access them, because you haven't set them to anything yet.
Dialogue: 0,0:20:25.86,0:20:29.68,中文,,0,0,0,,但Java不允许你访问它们 因为你还没有给它们设置任何值
Dialogue: 0,0:20:29.68,0:20:32.70,英文,,0,0,0,,So just putting that out there in case anyone's curious.
Dialogue: 0,0:20:29.68,0:20:32.70,中文,,0,0,0,,只是说一下 万一有人好奇
Dialogue: 0,0:20:32.70,0:20:34.68,英文,,0,0,0,,OK, now we come to the next line.
Dialogue: 0,0:20:32.70,0:20:34.68,中文,,0,0,0,,好的 现在我们来到下一行
Dialogue: 0,0:20:34.68,0:20:38.10,英文,,0,0,0,,This next line has a bunch of things that it's doing, so let's go through them one by one.
Dialogue: 0,0:20:34.68,0:20:38.10,中文,,0,0,0,,下一行有很多操作 让我们一一来看
Dialogue: 0,0:20:38.10,0:20:39.62,英文,,0,0,0,,First, I call the constructor.
Dialogue: 0,0:20:38.10,0:20:39.62,中文,,0,0,0,,首先 我调用了构造函数
Dialogue: 0,0:20:39.62,0:20:41.15,英文,,0,0,0,,What does the constructor do?
Dialogue: 0,0:20:39.62,0:20:41.15,中文,,0,0,0,,构造函数是做什么的呢
Dialogue: 0,0:20:41.15,0:20:45.63,英文,,0,0,0,,It digs through memory, and it looks through all the ones and zeros, and it says this.
Dialogue: 0,0:20:41.15,0:20:45.63,中文,,0,0,0,,它深入内存 查看所有的二进制 然后说这个
Dialogue: 0,0:20:45.63,0:20:48.53,英文,,0,0,0,,Yes, this is the place for my beautiful new walrus.
Dialogue: 0,0:20:45.63,0:20:48.53,中文,,0,0,0,,是的 这是我美丽新海象的地方
Dialogue: 0,0:20:48.53,0:20:51.97,英文,,0,0,0,,And it says these bits correspond to the walrus's tusk size.
Dialogue: 0,0:20:48.53,0:20:51.97,中文,,0,0,0,,它说这些比特对应于海象的牙齿大小
Dialogue: 0,0:20:51.97,0:20:54.29,英文,,0,0,0,,These correspond to its weight.
Dialogue: 0,0:20:51.97,0:20:54.29,中文,,0,0,0,,这些对应于它的重量
Dialogue: 0,0:20:54.29,0:20:55.38,英文,,0,0,0,,And there it is.
Dialogue: 0,0:20:54.29,0:20:55.38,中文,,0,0,0,,然后就是它了
Dialogue: 0,0:20:55.38,0:20:56.48,英文,,0,0,0,,OK, but I don't want to lose it.
Dialogue: 0,0:20:55.38,0:20:56.48,中文,,0,0,0,,但我不想丢失它
Dialogue: 0,0:20:56.48,0:21:02.91,英文,,0,0,0,,So what the new keyword is going to do is the new keyword will shout to the heavens and say, well, the walrus lives right here.
Dialogue: 0,0:20:56.48,0:21:02.91,中文,,0,0,0,,所以新关键字要做的就是向宇宙大喊 说 海象就住在这儿
Dialogue: 0,0:21:02.91,0:21:06.39,英文,,0,0,0,,It lives at the 2,380, whatever bit.
Dialogue: 0,0:21:02.91,0:21:06.39,中文,,0,0,0,,它住在2,380的某个地方
Dialogue: 0,0:21:06.39,0:21:09.14,英文,,0,0,0,,That's the number bit where the walrus lives.
Dialogue: 0,0:21:06.39,0:21:09.14,中文,,0,0,0,,那是海象住的数字位
Dialogue: 0,0:21:09.14,0:21:10.92,英文,,0,0,0,,That's what the new keyword shouts.
Dialogue: 0,0:21:09.14,0:21:10.92,中文,,0,0,0,,这就是新关键字的作用
Dialogue: 0,0:21:10.92,0:21:12.98,英文,,0,0,0,,Then what does the golden rule of equals do?
Dialogue: 0,0:21:10.92,0:21:12.98,中文,,0,0,0,,那么等于号的黄金法则是什么
Dialogue: 0,0:21:12.98,0:21:23.28,英文,,0,0,0,,It takes whatever the new keyword is shouting, which is the location of my brand new walrus, and it copies it into the variable A, which is this sequence of bits right here.
Dialogue: 0,0:21:12.98,0:21:23.28,中文,,0,0,0,,它获取新关键字正在喊的内容 也就是我的全新海象的位置 并将其复制到变量 a 中 这就是这一串位的序列
Dialogue: 0,0:21:23.28,0:21:25.87,英文,,0,0,0,,So when I run this, a bunch of different things happen.
Dialogue: 0,0:21:23.28,0:21:25.87,中文,,0,0,0,,所以当我运行这个时 会发生很多不同的事情
Dialogue: 0,0:21:25.87,0:21:27.29,英文,,0,0,0,,The new walrus got created.
Dialogue: 0,0:21:25.87,0:21:27.29,中文,,0,0,0,,新海象被创建了
Dialogue: 0,0:21:27.29,0:21:28.95,英文,,0,0,0,,Now it lives in memory somewhere.
Dialogue: 0,0:21:27.29,0:21:28.95,中文,,0,0,0,,现在它住在内存的某个地方
Dialogue: 0,0:21:28.95,0:21:31.73,英文,,0,0,0,,The new keyword shouted to the world where it lives.
Dialogue: 0,0:21:28.95,0:21:31.73,中文,,0,0,0,,新关键字向世界宣告它的存在地
Dialogue: 0,0:21:31.73,0:21:36.94,英文,,0,0,0,,And then the golden rule of equals copied the location of the walrus into A.
Dialogue: 0,0:21:31.73,0:21:36.94,中文,,0,0,0,,然后 equals 的黄金法则复制了海象的位置到 a
Dialogue: 0,0:21:36.94,0:21:38.77,英文,,0,0,0,,Okay, beautiful.
Dialogue: 0,0:21:36.94,0:21:38.77,中文,,0,0,0,,好的 漂亮
Dialogue: 0,0:21:38.77,0:21:39.65,英文,,0,0,0,,What happens next?
Dialogue: 0,0:21:38.77,0:21:39.65,中文,,0,0,0,,接下来发生了什么
Dialogue: 0,0:21:39.65,0:21:46.55,英文,,0,0,0,,Now I'm going to declare another Walrus B. And again, when I declare the Walrus B variable, I am not creating a new Walrus.
Dialogue: 0,0:21:39.65,0:21:46.55,中文,,0,0,0,,现在我要声明另一个海象 b 而且 当我声明海象 b 变量时 我并没有创建一个新的海象
Dialogue: 0,0:21:46.55,0:21:49.12,英文,,0,0,0,,Only the new keyword can do that, and the constructor.
Dialogue: 0,0:21:46.55,0:21:49.12,中文,,0,0,0,,只有新关键字能做到这一点 并且构造函数
Dialogue: 0,0:21:49.12,0:21:54.22,英文,,0,0,0,,So when I declare there is a Walrus B, all that I'm doing is I'm creating this memory box.
Dialogue: 0,0:21:49.12,0:21:54.22,中文,,0,0,0,,所以当我声明有一个海象 b 时 我所做的一切就是创建这个内存盒子
Dialogue: 0,0:21:54.22,0:21:55.10,英文,,0,0,0,,And what does it hold?
Dialogue: 0,0:21:54.22,0:21:55.10,中文,,0,0,0,,它里面装了什么
Dialogue: 0,0:21:55.10,0:21:56.30,英文,,0,0,0,,It doesn't hold the Walrus.
Dialogue: 0,0:21:55.10,0:21:56.30,中文,,0,0,0,,它不装海象
Dialogue: 0,0:21:56.30,0:21:57.49,英文,,0,0,0,,Walrus won't fit.
Dialogue: 0,0:21:56.30,0:21:57.49,中文,,0,0,0,,海象装不下
Dialogue: 0,0:21:57.49,0:21:59.59,英文,,0,0,0,,It will only hold a reference.
Dialogue: 0,0:21:57.49,0:21:59.59,中文,,0,0,0,,它只会保存一个引用
Dialogue: 0,0:21:59.59,0:22:02.15,英文,,0,0,0,,to wherever the real walrus is.
Dialogue: 0,0:21:59.59,0:22:02.15,中文,,0,0,0,,指向真正的海象在哪里
Dialogue: 0,0:22:02.15,0:22:06.45,英文,,0,0,0,,And like we said before, right now, whatever 1s and 0s are in here, you can't access it.
Dialogue: 0,0:22:02.15,0:22:06.45,中文,,0,0,0,,就像我们之前说的 现在 这里面的所有1和0 你都无法访问
Dialogue: 0,0:22:06.45,0:22:07.77,英文,,0,0,0,,Java's not going to let you.
Dialogue: 0,0:22:06.45,0:22:07.77,中文,,0,0,0,,Java不会让你失望的
Dialogue: 0,0:22:07.77,0:22:10.11,英文,,0,0,0,,So who knows what's in there?
Dialogue: 0,0:22:07.77,0:22:10.11,中文,,0,0,0,,所以谁知道里面是什么
Dialogue: 0,0:22:10.11,0:22:13.51,英文,,0,0,0,,And now comes the punchline, which is B equals A. What do we do?
Dialogue: 0,0:22:10.11,0:22:13.51,中文,,0,0,0,,现在轮到笑点了 也就是 b 等于 a  我们怎么办呢
Dialogue: 0,0:22:13.51,0:22:15.17,英文,,0,0,0,,We copy the bits.
Dialogue: 0,0:22:13.51,0:22:15.17,中文,,0,0,0,,我们复制这些位
Dialogue: 0,0:22:15.17,0:22:18.81,英文,,0,0,0,,There's no fancy walrus shenanigans going on.
Dialogue: 0,0:22:15.17,0:22:18.81,中文,,0,0,0,,没有花哨的海象花招
Dialogue: 0,0:22:18.81,0:22:23.82,英文,,0,0,0,,When I say B equals A, all I have to do is I look in A. What are the 1s and 0s in A?
Dialogue: 0,0:22:18.81,0:22:23.82,中文,,0,0,0,,当我说 b 等于 a 时 我只需要看一看 a   a 里面有哪些1和0呢
Dialogue: 0,0:22:23.82,0:22:28.92,英文,,0,0,0,,Well, the 1s and 0s in A, they tell me where to find my wonderful walrus if I ever want to visit it.
Dialogue: 0,0:22:23.82,0:22:28.92,中文,,0,0,0,, a 里面的1和0告诉我在哪里找到我美妙的海象 如果我想去看它
Dialogue: 0,0:22:28.92,0:22:37.36,英文,,0,0,0,,So I take those bits, I copy them into B, and now B holds the same sequence of 1s and 0s, which is the location of the same walrus.
Dialogue: 0,0:22:28.92,0:22:37.36,中文,,0,0,0,,所以我把那些位取出来 复制到 b 中 现在 b 保存了相同的 1 和 0 的序列 就是同一个海象的位置
Dialogue: 0,0:22:37.36,0:22:41.78,英文,,0,0,0,,So it's like two pieces of paper, and they both have the same location of the walrus.
Dialogue: 0,0:22:37.36,0:22:41.78,中文,,0,0,0,,就像两张纸一样 它们都有海象的相同位置
Dialogue: 0,0:22:41.78,0:22:51.89,英文,,0,0,0,,So if I use A to visit the walrus, or if I use B to visit the walrus, I will go to the same walrus, the one and only walrus that we've talked about all lecture.
Dialogue: 0,0:22:41.78,0:22:51.89,中文,,0,0,0,,所以如果我用 a 去访问海象 或者用 b 去访问海象 我都会去同一个海象 我们在讲课上提到的唯一的那只海象
Dialogue: 0,0:22:51.89,0:22:52.25,英文,,0,0,0,,There it is.
Dialogue: 0,0:22:51.89,0:22:52.25,中文,,0,0,0,,就在那儿
Dialogue: 0,0:22:52.25,0:22:56.03,英文,,0,0,0,,It's sitting right there with its big old weight.
Dialogue: 0,0:22:52.25,0:22:56.03,中文,,0,0,0,,它就坐在那里 带着它的沉甸甸的体重
Dialogue: 0,0:22:56.03,0:22:59.05,英文,,0,0,0,,Great, so now we've kind of solved the mystery of the walrus.
Dialogue: 0,0:22:56.03,0:22:59.05,中文,,0,0,0,,太好了 现在我们已经解决了海象的谜团
Dialogue: 0,0:22:59.05,0:23:02.69,英文,,0,0,0,,We now understand why when we use primitive types,
Dialogue: 0,0:22:59.05,0:23:02.69,中文,,0,0,0,,我们现在明白了为什么当我们使用原始类型时
Dialogue: 0,0:23:02.69,0:23:09.89,英文,,0,0,0,,so if it's byte, short, long, int, double, whatever, those eight types, then those types, you can put them directly in the memory box.
Dialogue: 0,0:23:02.69,0:23:09.89,中文,,0,0,0,,无论是 byte、short、long、int、double 不管是哪种类型 你都可以直接把它们放在内存盒子里
Dialogue: 0,0:23:09.89,0:23:11.19,英文,,0,0,0,,Remember from before?
Dialogue: 0,0:23:09.89,0:23:11.19,中文,,0,0,0,,记得以前说过的吗
Dialogue: 0,0:23:11.19,0:23:12.61,英文,,0,0,0,,Let's go find it.
Dialogue: 0,0:23:11.19,0:23:12.61,中文,,0,0,0,,让我们去找找看
Dialogue: 0,0:23:12.61,0:23:17.75,英文,,0,0,0,,x and y are ints, I can put the integer directly in the memory box because they are primitive types.
Dialogue: 0,0:23:12.61,0:23:17.75,中文,,0,0,0,,x 和 y 是整数 我可以直接把整数放进内存盒子里 因为它们是原始类型
Dialogue: 0,0:23:17.75,0:23:24.18,英文,,0,0,0,,Anything that is not one of those eight types, like a walrus or a tile or a dog, those are reference types.
Dialogue: 0,0:23:17.75,0:23:24.18,中文,,0,0,0,,任何不属于这八种类型的东西 比如海象、瓷砖或者狗 那些都是引用类型
Dialogue: 0,0:23:24.18,0:23:31.30,英文,,0,0,0,,So instead of putting the actual walrus in the box because it won't fit, we're going to put the location of where the walrus actually is.
Dialogue: 0,0:23:24.18,0:23:31.30,中文,,0,0,0,,所以 我们不会把实际的海象放进盒子里 因为它放不下 我们将放置海象实际所在的位置
Dialogue: 0,0:23:31.30,0:23:39.88,英文,,0,0,0,,And then from that, the golden rule of equals tells us that when I set a or b equal to a or y equal to x, I copy all the bits over.
Dialogue: 0,0:23:31.30,0:23:39.88,中文,,0,0,0,,然后根据等号的黄金法则 当我把 a 或 b 设为 a 或者 y 设为 x 时 我会复制所有的位
Dialogue: 0,0:23:39.88,0:23:43.16,英文,,0,0,0,,And with that, we have solved mystery of the walrus.
Dialogue: 0,0:23:39.88,0:23:43.16,中文,,0,0,0,,有了这个 我们就解决了海象之谜
Dialogue: 0,0:23:43.16,0:23:44.98,英文,,0,0,0,,Anyone have questions about the mystery?
Dialogue: 0,0:23:43.16,0:23:44.98,中文,,0,0,0,,有人对这个谜团有问题吗
Dialogue: 0,0:23:44.98,0:23:46.72,英文,,0,0,0,,Why it resolved this way?
Dialogue: 0,0:23:44.98,0:23:46.72,中文,,0,0,0,,为什么以这种方式解决
Dialogue: 0,0:23:46.72,0:23:48.92,英文,,0,0,0,,Primitive types, reference types?
Dialogue: 0,0:23:46.72,0:23:48.92,中文,,0,0,0,,原始类型 引用类型
Dialogue: 0,0:23:48.92,0:23:52.17,英文,,0,0,0,,Anything exciting going on on Zoom?
Dialogue: 0,0:23:48.92,0:23:52.17,中文,,0,0,0,,Zoom 上有什么激动人心的事情吗
Dialogue: 0,0:23:52.17,0:23:53.89,英文,,0,0,0,,Tons of exciting things going on on Zoom.
Dialogue: 0,0:23:52.17,0:23:53.89,中文,,0,0,0,,在 Zoom 上发生了很多令人兴奋的事情
Dialogue: 0,0:23:53.89,0:23:55.55,英文,,0,0,0,,OK.
Dialogue: 0,0:23:53.89,0:23:55.55,中文,,0,0,0,,好的
Dialogue: 0,0:23:55.55,0:23:56.69,英文,,0,0,0,,I will not inquire further.
Dialogue: 0,0:23:55.55,0:23:56.69,中文,,0,0,0,,我不会再进一步打听了
Dialogue: 0,0:23:56.69,0:23:57.15,英文,,0,0,0,,OK.
Dialogue: 0,0:23:56.69,0:23:57.15,中文,,0,0,0,,好的
Dialogue: 0,0:23:57.15,0:23:59.57,英文,,0,0,0,,Anything else?
Dialogue: 0,0:23:57.15,0:23:59.57,中文,,0,0,0,,还有其他事吗
Dialogue: 0,0:23:59.57,0:24:00.71,英文,,0,0,0,,OK.
Dialogue: 0,0:23:59.57,0:24:00.71,中文,,0,0,0,,好的
Dialogue: 0,0:24:00.71,0:24:01.11,英文,,0,0,0,,Cool.
Dialogue: 0,0:24:00.71,0:24:01.11,中文,,0,0,0,,好的
Dialogue: 0,0:24:01.11,0:24:02.45,英文,,0,0,0,,That's the first half of today.
Dialogue: 0,0:24:01.11,0:24:02.45,中文,,0,0,0,,今天的第一半结束了
Dialogue: 0,0:24:02.45,0:24:09.49,英文,,0,0,0,,I guess one final thing I'll note before we move on for good is the golden rule of equals also works when you have arguments.
Dialogue: 0,0:24:02.45,0:24:09.49,中文,,0,0,0,,在我们彻底结束之前 我想指出的最后一点是等号的黄金法则在有参数的情况下同样适用
Dialogue: 0,0:24:09.49,0:24:10.73,英文,,0,0,0,,So here's a little piece of code.
Dialogue: 0,0:24:09.49,0:24:10.73,中文,,0,0,0,,所以这是一小段代码
Dialogue: 0,0:24:10.73,0:24:11.75,英文,,0,0,0,,It's not super interesting.
Dialogue: 0,0:24:10.73,0:24:11.75,中文,,0,0,0,,这并不是非常有趣
Dialogue: 0,0:24:11.75,0:24:13.61,英文,,0,0,0,,It takes the average of two numbers.
Dialogue: 0,0:24:11.75,0:24:13.61,中文,,0,0,0,,它取两个数字的平均值
Dialogue: 0,0:24:13.61,0:24:19.51,英文,,0,0,0,,And the most interesting thing that happens here is, well, what happens when I call average of x and y?
Dialogue: 0,0:24:13.61,0:24:19.51,中文,,0,0,0,,这里发生的最有趣的事情是 当我调用 x 和 y 的平均值时会发生什么
Dialogue: 0,0:24:19.51,0:24:26.10,英文,,0,0,0,,How do the numbers 5.5 and 10.5 get sent over to the average function?
Dialogue: 0,0:24:19.51,0:24:26.10,中文,,0,0,0,,5.5 和 10.5 这两个数字是如何传递给平均函数的
Dialogue: 0,0:24:26.10,0:24:29.36,英文,,0,0,0,,Well, again, you don't actually see the equals
Dialogue: 0,0:24:26.10,0:24:29.36,中文,,0,0,0,,同样地 你实际上并没有在这里看到等号的显示
Dialogue: 0,0:24:29.36,0:24:39.02,英文,,0,0,0,,Explicitly here, but the golden rule of equals it still holds, and it says when I pass the argument x into average, what I will do is I will declare there is a new double called a,
Dialogue: 0,0:24:29.36,0:24:39.02,中文,,0,0,0,,但等号的黄金法则仍然有效 它表明当我将参数 x 传递给平均值时 我将声明有一个新的双精度数叫做 a
Dialogue: 0,0:24:39.02,0:24:44.02,英文,,0,0,0,,and then I will copy all the bits from x into the memory box for a. Same thing for b.
Dialogue: 0,0:24:39.02,0:24:44.02,中文,,0,0,0,,然后我将所有 x 的位复制到内存盒子 a 中 对于 b 也是同样的操作
Dialogue: 0,0:24:44.02,0:24:52.02,英文,,0,0,0,,I declare there is a double called b, and because I'm calling average with this series of bits, the 10.5, I copy that into b.
Dialogue: 0,0:24:44.02,0:24:52.02,中文,,0,0,0,,我声明有一个叫做 b 的双精度数 并且因为我用这一系列位来调用平均值 也就是 10.5 我将其复制到 b 中
Dialogue: 0,0:24:52.02,0:24:59.50,英文,,0,0,0,,So whether they are doubles or walruses or planets or dogs,
Dialogue: 0,0:24:52.02,0:24:59.50,中文,,0,0,0,,因此 无论它们是双精度数还是海象还是行星还是狗
Dialogue: 0,0:24:59.50,0:25:04.74,英文,,0,0,0,,Whenever I have an argument to a function, I will copy the bits into that argument.
Dialogue: 0,0:24:59.50,0:25:04.74,中文,,0,0,0,,每当我有一个函数的参数时 我将会把这些位复制到该参数中
Dialogue: 0,0:25:04.74,0:25:08.95,英文,,0,0,0,,So when I pass an argument, it follows the same rules as the mystery of the walrus.
Dialogue: 0,0:25:04.74,0:25:08.95,中文,,0,0,0,,当我传递一个参数时 它遵循海象之谜的相同规则
Dialogue: 0,0:25:08.95,0:25:10.35,英文,,0,0,0,,I copy the bits over.
Dialogue: 0,0:25:08.95,0:25:10.35,中文,,0,0,0,,我复制比特
Dialogue: 0,0:25:10.35,0:25:16.09,英文,,0,0,0,,There isn't explicitly an equal sign between the X and the A, but you're still copying the bits over.
Dialogue: 0,0:25:10.35,0:25:16.09,中文,,0,0,0,,在X和 a 之间没有明确的等号 但你仍然在复制比特
Dialogue: 0,0:25:16.09,0:25:18.97,英文,,0,0,0,,So just wanted to note that really quickly.
Dialogue: 0,0:25:16.09,0:25:18.97,中文,,0,0,0,,所以只是想快速指出一下
Dialogue: 0,0:25:18.97,0:25:20.21,英文,,0,0,0,,So here we see it.
Dialogue: 0,0:25:18.97,0:25:20.21,中文,,0,0,0,,所以在这里我们看到它
Dialogue: 0,0:25:20.21,0:25:21.81,英文,,0,0,0,,There's the x that faded in.
Dialogue: 0,0:25:20.21,0:25:21.81,中文,,0,0,0,,有一个逐渐出现的x
Dialogue: 0,0:25:21.81,0:25:26.08,英文,,0,0,0,,There's the y. Perhaps there will be an a and a b. There they are.
Dialogue: 0,0:25:21.81,0:25:26.08,中文,,0,0,0,,有一个y 也许会有一个 a 和一个b 它们在这里
Dialogue: 0,0:25:26.08,0:25:33.26,英文,,0,0,0,,And so the bits get copied from x to a, and they get copied from y to b. And in this case, a double is one of those primitive types.
Dialogue: 0,0:25:26.08,0:25:33.26,中文,,0,0,0,,所以位从x复制到 a  从y复制到b 在这种情况下 double是其中一个原始类型
Dialogue: 0,0:25:33.26,0:25:35.46,英文,,0,0,0,,It's one of those eight that we saw from earlier.
Dialogue: 0,0:25:33.26,0:25:35.46,中文,,0,0,0,,这是我们之前看到的八个之一
Dialogue: 0,0:25:35.46,0:25:37.60,英文,,0,0,0,,So the bits actually get copied.
Dialogue: 0,0:25:35.46,0:25:37.60,中文,,0,0,0,,所以位实际上被复制
Dialogue: 0,0:25:37.60,0:25:44.89,英文,,0,0,0,,If x, y, a, and b were walruses, if I was trying to average walruses, whatever that means, then instead of copying the 5.5 over,
Dialogue: 0,0:25:37.60,0:25:44.89,中文,,0,0,0,,如果x、y、a和b是海象 如果我试图计算海象的平均值 不管那意味着什么 那么我不会复制5.5
Dialogue: 0,0:25:44.89,0:25:54.19,英文,,0,0,0,, I would copy the location of my one walrus, and there would be two arrows, x and a, that both point at the same walrus.
Dialogue: 0,0:25:44.89,0:25:54.19,中文,,0,0,0,,而是会复制我的一个海象的位置 然后会有两个箭头 x和a 都指向同一个海象
Dialogue: 0,0:25:54.19,0:25:56.93,英文,,0,0,0,,Cool, that's parameter passing, that's arguments.
Dialogue: 0,0:25:54.19,0:25:56.93,中文,,0,0,0,,酷 这就是参数传递 就是参数
Dialogue: 0,0:25:56.93,0:25:59.15,英文,,0,0,0,,Sometimes you'll see this called pass-by-value.
Dialogue: 0,0:25:56.93,0:25:59.15,中文,,0,0,0,,有时你会看到这被称为值传递
Dialogue: 0,0:25:59.15,0:26:00.83,英文,,0,0,0,,It's like a little vocabulary term.
Dialogue: 0,0:25:59.15,0:26:00.83,中文,,0,0,0,,这就像一个小小的词汇术语
Dialogue: 0,0:26:00.83,0:26:04.29,英文,,0,0,0,,So if you ever want to show people how smart you are, you might call it pass-by-value.
Dialogue: 0,0:26:00.83,0:26:04.29,中文,,0,0,0,,所以如果你想向人们展示你有多聪明 你可能会称其为传值调用
Dialogue: 0,0:26:04.29,0:26:07.15,英文,,0,0,0,,But just noting it here, not an important detail.
Dialogue: 0,0:26:04.29,0:26:07.15,中文,,0,0,0,,但只是在这里做个注释 这不是一个重要的细节
Dialogue: 0,0:26:07.15,0:26:11.63,英文,,0,0,0,,OK, to summarize the first half of today, we talked about the golden rule of equals.
Dialogue: 0,0:26:07.15,0:26:11.63,中文,,0,0,0,,好的 总结今天上半部分 我们谈论了等号的黄金法则
Dialogue: 0,0:26:11.63,0:26:14.89,英文,,0,0,0,,And we said that in Java, there are nine types of variables.
Dialogue: 0,0:26:11.63,0:26:14.89,中文,,0,0,0,,我们说在Java中有九种类型的变量
Dialogue: 0,0:26:14.89,0:26:20.65,英文,,0,0,0,,I don't need you to memorize them, but the eight primitive types are byte, short, int, long, float, double, Boolean, char.
Dialogue: 0,0:26:14.89,0:26:20.65,中文,,0,0,0,,我不需要你记住它们 但八种基本类型是byte、short、int、long、float、double、Boolean、char
Dialogue: 0,0:26:20.65,0:26:22.03,英文,,0,0,0,,There they are.
Dialogue: 0,0:26:20.65,0:26:22.03,中文,,0,0,0,,就是这些
Dialogue: 0,0:26:22.03,0:26:26.49,英文,,0,0,0,,If your variable is of one of those eight types, they can fit directly in a memory box.
Dialogue: 0,0:26:22.03,0:26:26.49,中文,,0,0,0,,如果你的变量是这八种类型之一 它们可以直接放入一个内存盒子中
Dialogue: 0,0:26:26.49,0:26:31.09,英文,,0,0,0,,If it's not one of those eight types, like a walrus, then it is a reference type.
Dialogue: 0,0:26:26.49,0:26:31.09,中文,,0,0,0,,如果不是那八种类型之一 比如海象 那么它就是引用类型
Dialogue: 0,0:26:31.09,0:26:34.66,英文,,0,0,0,,And a reference type says, you can't actually fit the object in the box.
Dialogue: 0,0:26:31.09,0:26:34.66,中文,,0,0,0,,而引用类型表示 你实际上无法把对象塞进盒子里
Dialogue: 0,0:26:34.66,0:26:39.86,英文,,0,0,0,,You're going to write down a reference, an arrow, to where my object really lives.
Dialogue: 0,0:26:34.66,0:26:39.86,中文,,0,0,0,,你要写下一个引用 一个箭头 指向我的对象真正存在的地方
Dialogue: 0,0:26:39.86,0:26:44.64,英文,,0,0,0,,And if there is no object, what if I declare there is a walrus B, and I set it equal to null?
Dialogue: 0,0:26:39.86,0:26:44.64,中文,,0,0,0,,如果没有对象 如果我声明有一个海象 b 并且将其设置为 null 呢
Dialogue: 0,0:26:44.64,0:26:49.00,英文,,0,0,0,,I could also fill this box with zeros, and that would indicate the absence of a walrus.
Dialogue: 0,0:26:44.64,0:26:49.00,中文,,0,0,0,,我也可以用零填充这个盒子 这将表示没有海象存在
Dialogue: 0,0:26:49.00,0:26:51.34,英文,,0,0,0,,It would mean there is no walrus there.
Dialogue: 0,0:26:49.00,0:26:51.34,中文,,0,0,0,,这意味着那里没有海象
Dialogue: 0,0:26:51.34,0:26:55.86,英文,,0,0,0,,So if you ever have a reference type, you can also set it to null, indicating there is no object.
Dialogue: 0,0:26:51.34,0:26:55.86,中文,,0,0,0,,所以 如果你有一个引用类型 你也可以将其设置为 null 表示没有对象
Dialogue: 0,0:26:55.86,0:26:58.24,英文,,0,0,0,,I am not referencing anything right now.
Dialogue: 0,0:26:55.86,0:26:58.24,中文,,0,0,0,,我现在没有引用任何东西
Dialogue: 0,0:26:58.24,0:27:00.08,英文,,0,0,0,,OK, here's box and pointer notation.
Dialogue: 0,0:26:58.24,0:27:00.08,中文,,0,0,0,,这里是盒和指针表示法
Dialogue: 0,0:27:00.08,0:27:01.60,英文,,0,0,0,,You'll see it over and over again.
Dialogue: 0,0:27:00.08,0:27:01.60,中文,,0,0,0,,你会一遍又一遍地看到它
Dialogue: 0,0:27:01.60,0:27:05.12,英文,,0,0,0,,The way that we draw it is every variable gets its own box.
Dialogue: 0,0:27:01.60,0:27:05.12,中文,,0,0,0,,我们画它的方式是每个变量都有自己的盒子
Dialogue: 0,0:27:05.12,0:27:08.41,英文,,0,0,0,,And if you ever have references, you'll use arrows.
Dialogue: 0,0:27:05.12,0:27:08.41,中文,,0,0,0,,如果你有引用 你会用箭头
Dialogue: 0,0:27:08.41,0:27:11.67,英文,,0,0,0,,So don't actually write out the ones and zeros, because I can't read that.
Dialogue: 0,0:27:08.41,0:27:11.67,中文,,0,0,0,,所以不要实际写出一和零 因为我看不懂
Dialogue: 0,0:27:11.67,0:27:12.67,英文,,0,0,0,,You can't read that.
Dialogue: 0,0:27:11.67,0:27:12.67,中文,,0,0,0,,你看不懂那个
Dialogue: 0,0:27:12.67,0:27:16.03,英文,,0,0,0,,So instead, we'll draw arrows just to make things look nicer.
Dialogue: 0,0:27:12.67,0:27:16.03,中文,,0,0,0,,所以 我们会画箭头 只是为了让事情看起来更漂亮一些
Dialogue: 0,0:27:16.03,0:27:18.11,英文,,0,0,0,,And again, what is the golden rule of equals?
Dialogue: 0,0:27:16.03,0:27:18.11,中文,,0,0,0,,再说一遍 等号的黄金法则是什么
Dialogue: 0,0:27:18.11,0:27:21.11,英文,,0,0,0,,When you say b equals a, you copy the bits.
Dialogue: 0,0:27:18.11,0:27:21.11,中文,,0,0,0,,当你说 b 等于 a 时 你复制的是比特位
Dialogue: 0,0:27:21.11,0:27:24.24,英文,,0,0,0,,Copying the bits could be the number 5 getting copied.
Dialogue: 0,0:27:21.11,0:27:24.24,中文,,0,0,0,,复制比特位可能是数字 5 被复制
Dialogue: 0,0:27:24.24,0:27:25.90,英文,,0,0,0,,It could be the arrow being copied.
Dialogue: 0,0:27:24.24,0:27:25.90,中文,,0,0,0,,也可能是箭头被复制
Dialogue: 0,0:27:25.90,0:27:28.48,英文,,0,0,0,,But you always copy the bits.
Dialogue: 0,0:27:25.90,0:27:28.48,中文,,0,0,0,,但无论如何 你总是复制比特位
Dialogue: 0,0:27:28.48,0:27:29.14,英文,,0,0,0,,That's it.
Dialogue: 0,0:27:28.48,0:27:29.14,中文,,0,0,0,,就这样
Dialogue: 0,0:27:29.14,0:27:30.80,英文,,0,0,0,,Golden rule of equals.
Dialogue: 0,0:27:29.14,0:27:30.80,中文,,0,0,0,,等号的黄金法则
Dialogue: 0,0:27:30.80,0:27:32.26,英文,,0,0,0,,Mystery of the walrus.
Dialogue: 0,0:27:30.80,0:27:32.26,中文,,0,0,0,,海象的奥秘
Dialogue: 0,0:27:32.26,0:27:35.91,英文,,0,0,0,,There's a quiz, but since we started late, you can do it at home if you want.
Dialogue: 0,0:27:32.26,0:27:35.91,中文,,0,0,0,,有一个测验 但是因为我们开始晚了 如果你想的话 你可以在家做
Dialogue: 0,0:27:35.91,0:27:39.37,英文,,0,0,0,,There's a link to the answer if you're curious.
Dialogue: 0,0:27:35.91,0:27:39.37,中文,,0,0,0,,如果你好奇 有答案的链接
Dialogue: 0,0:27:39.37,0:27:41.17,英文,,0,0,0,,OK.
Dialogue: 0,0:27:39.37,0:27:41.17,中文,,0,0,0,,好的
Dialogue: 0,0:27:41.17,0:27:42.61,英文,,0,0,0,,Good so far?
Dialogue: 0,0:27:41.17,0:27:42.61,中文,,0,0,0,,目前为止还好吗
Dialogue: 0,0:27:42.61,0:27:48.06,英文,,0,0,0,,Question?
Dialogue: 0,0:27:42.61,0:27:48.06,中文,,0,0,0,,有问题吗
Dialogue: 0,0:27:48.06,0:27:48.98,英文,,0,0,0,,Ah, you got me.
Dialogue: 0,0:27:48.06,0:27:48.98,中文,,0,0,0,,啊 你抓住我了
Dialogue: 0,0:27:48.98,0:27:49.67,英文,,0,0,0,,That's a great question.
Dialogue: 0,0:27:48.98,0:27:49.67,中文,,0,0,0,,这是个好问题
Dialogue: 0,0:27:49.67,0:27:52.19,英文,,0,0,0,,The question was, what about capital I integer?
Dialogue: 0,0:27:49.67,0:27:52.19,中文,,0,0,0,,问题是 整数 I 大写怎么样
Dialogue: 0,0:27:52.19,0:27:53.71,英文,,0,0,0,,You might have seen that in homework 0.
Dialogue: 0,0:27:52.19,0:27:53.71,中文,,0,0,0,,你可能在作业 0 中见过
Dialogue: 0,0:27:53.71,0:27:55.37,英文,,0,0,0,,I'm not going to talk about it too much now.
Dialogue: 0,0:27:53.71,0:27:55.37,中文,,0,0,0,,我现在不打算讲太多
Dialogue: 0,0:27:55.37,0:27:55.83,英文,,0,0,0,,Ask me later.
Dialogue: 0,0:27:55.37,0:27:55.83,中文,,0,0,0,,等会再问我
Dialogue: 0,0:27:55.83,0:27:57.81,英文,,0,0,0,,There is a video on it that's like 10 minutes.
Dialogue: 0,0:27:55.83,0:27:57.81,中文,,0,0,0,,有一个关于它的视频 大概10分钟
Dialogue: 0,0:27:57.81,0:28:03.90,英文,,0,0,0,,But if you use capital I integer, that is an object version of the integer primitive type.
Dialogue: 0,0:27:57.81,0:28:03.90,中文,,0,0,0,,但如果你使用大写的 I 来表示整数 那就是整数原始类型的对象版本
Dialogue: 0,0:28:03.90,0:28:06.48,英文,,0,0,0,,So short answer.
Dialogue: 0,0:28:03.90,0:28:06.48,中文,,0,0,0,,所以简短回答
Dialogue: 0,0:28:06.48,0:28:13.29,英文,,0,0,0,,But it behaves more or less the same as an integer type for all intents and purposes, at least in homework 0.
Dialogue: 0,0:28:06.48,0:28:13.29,中文,,0,0,0,,但就所有目的而言 它的行为与整数类型几乎相同 至少在作业 0 中是这样
Dialogue: 0,0:28:13.29,0:28:14.45,英文,,0,0,0,,Hold on, I have more.
Dialogue: 0,0:28:13.29,0:28:14.45,中文,,0,0,0,,等等 我还有更多要说的
Dialogue: 0,0:28:14.45,0:28:15.37,英文,,0,0,0,,So don't go yet.
Dialogue: 0,0:28:14.45,0:28:15.37,中文,,0,0,0,,所以别走呢
Dialogue: 0,0:28:15.37,0:28:21.09,英文,,0,0,0,,So I'm going to talk a little bit about arrays, and then we'll go on to the second half of today, and we'll build a list.
Dialogue: 0,0:28:15.37,0:28:21.09,中文,,0,0,0,,所以我要稍微谈一下数组 然后我们将进入今天的下半场 我们将构建一个列表
Dialogue: 0,0:28:21.09,0:28:25.27,英文,,0,0,0,,So really quickly, we'll talk about arrays in way more detail in a couple of lectures.
Dialogue: 0,0:28:21.09,0:28:25.27,中文,,0,0,0,,所以很快 我们将在几堂讲座中更详细地讨论数组
Dialogue: 0,0:28:25.27,0:28:32.06,英文,,0,0,0,,But just really quickly, since you've probably seen them already, when you want to declare an array, an array is not one of the primitive types.
Dialogue: 0,0:28:25.27,0:28:32.06,中文,,0,0,0,,但是很快 你可能已经见过它们了 当你想声明一个数组时 数组不是原始类型之一
Dialogue: 0,0:28:32.06,0:28:33.30,英文,,0,0,0,,I go back and I look.
Dialogue: 0,0:28:32.06,0:28:33.30,中文,,0,0,0,,我回去看看
Dialogue: 0,0:28:33.30,0:28:34.78,英文,,0,0,0,,I look at the primitive types.
Dialogue: 0,0:28:33.30,0:28:34.78,中文,,0,0,0,,我看看原始类型
Dialogue: 0,0:28:34.78,0:28:36.30,英文,,0,0,0,,Look, no array.
Dialogue: 0,0:28:34.78,0:28:36.30,中文,,0,0,0,,看 没有数组
Dialogue: 0,0:28:36.30,0:28:41.54,英文,,0,0,0,,So if I want to make a new array, I have to use the new keyword, I have to instantiate the array
Dialogue: 0,0:28:36.30,0:28:41.54,中文,,0,0,0,,所以如果我想要创建一个新的数组 我必须使用新关键字 我必须实例化数组
Dialogue: 0,0:28:41.54,0:28:46.00,英文,,0,0,0,,just like I would any other object, and arrays also behave like reference types.
Dialogue: 0,0:28:41.54,0:28:46.00,中文,,0,0,0,,就像我对待任何其他对象一样 数组也像引用类型一样行为
Dialogue: 0,0:28:46.00,0:28:52.30,英文,,0,0,0,,So all that this slide says is if you create a new array, like I declare there is an inter-array called A,
Dialogue: 0,0:28:46.00,0:28:52.30,中文,,0,0,0,,所以这张幻灯片所说的就是 如果你创建一个新的数组 就像我声明了一个名为 a 的整型数组
Dialogue: 0,0:28:52.30,0:28:59.92,英文,,0,0,0,,the array is not going to fit in A. This is only going to fit a reference, the address of wherever my array really lives in memory.
Dialogue: 0,0:28:52.30,0:28:59.92,中文,,0,0,0,,数组是不会适合在 a 中的 这只会适合一个引用 指向我数组在内存中真正存在的地方的地址
Dialogue: 0,0:28:59.92,0:29:00.50,英文,,0,0,0,,Okay.
Dialogue: 0,0:28:59.92,0:29:00.50,中文,,0,0,0,,好的
Dialogue: 0,0:29:00.50,0:29:01.75,英文,,0,0,0,,That's all that this slide says.
Dialogue: 0,0:29:00.50,0:29:01.75,中文,,0,0,0,,这张幻灯片上就是这样了
Dialogue: 0,0:29:01.75,0:29:07.77,英文,,0,0,0,,So I declare that there's an A. When I use the new keyword, it actually creates the array and shouts the location.
Dialogue: 0,0:29:01.75,0:29:07.77,中文,,0,0,0,,所以我声明有个 a 当我使用 new 关键字时 它实际上创建了数组并指向位置
Dialogue: 0,0:29:07.77,0:29:13.18,英文,,0,0,0,,And then if I assign it, then I get this arrow pointing to wherever my wonderful array is.
Dialogue: 0,0:29:07.77,0:29:13.18,中文,,0,0,0,,然后如果我分配它 我就得到了这个箭头指向我美妙数组的位置
Dialogue: 0,0:29:13.18,0:29:20.93,英文,,0,0,0,,OK, question?
Dialogue: 0,0:29:13.18,0:29:20.93,中文,,0,0,0,,好的 有问题吗
Dialogue: 0,0:29:20.93,0:29:25.13,英文,,0,0,0,,The question was, what if you try to create an array without using this new in syntax?
Dialogue: 0,0:29:20.93,0:29:25.13,中文,,0,0,0,,问题是 如果你尝试在语法中不使用 new 来创建数组会发生什么
Dialogue: 0,0:29:25.13,0:29:29.96,英文,,0,0,0,,I'm guessing you get a syntax error, but there are some weird ways to create arrays, so I can't promise.
Dialogue: 0,0:29:25.13,0:29:29.96,中文,,0,0,0,,我猜你会得到一个语法错误 但是有一些奇怪的方法可以创建数组 所以我不能保证
Dialogue: 0,0:29:29.96,0:29:33.36,英文,,0,0,0,,But for now, if you want to create an array, do that.
Dialogue: 0,0:29:29.96,0:29:33.36,中文,,0,0,0,,但目前 如果你想创建一个数组 就这样做
Dialogue: 0,0:29:33.36,0:29:35.62,英文,,0,0,0,,Question?
Dialogue: 0,0:29:33.36,0:29:35.62,中文,,0,0,0,,问题
Dialogue: 0,0:29:35.62,0:29:36.24,英文,,0,0,0,,The brackets.
Dialogue: 0,0:29:35.62,0:29:36.24,中文,,0,0,0,,括号
Dialogue: 0,0:29:36.24,0:29:39.82,英文,,0,0,0,,This is just some Java syntax for creating an array and filling it with these items.
Dialogue: 0,0:29:36.24,0:29:39.82,中文,,0,0,0,,这只是一些用于创建数组并用这些项填充它的Java语法
Dialogue: 0,0:29:39.82,0:29:42.46,英文,,0,0,0,,So a bit more syntax trivia.
Dialogue: 0,0:29:39.82,0:29:42.46,中文,,0,0,0,,所以还有一点语法小知识
Dialogue: 0,0:29:42.46,0:29:44.56,英文,,0,0,0,,Not something I'll talk about in too much detail.
Dialogue: 0,0:29:42.46,0:29:44.56,中文,,0,0,0,,不是我会详细讨论的东西
Dialogue: 0,0:29:44.56,0:29:46.80,英文,,0,0,0,,Not something you have to memorize.
Dialogue: 0,0:29:44.56,0:29:46.80,中文,,0,0,0,,不是你必须记住的东西
Dialogue: 0,0:29:46.80,0:29:52.23,英文,,0,0,0,,Last question.
Dialogue: 0,0:29:46.80,0:29:52.23,中文,,0,0,0,,最后一个问题
Dialogue: 0,0:29:52.23,0:29:53.94,英文,,0,0,0,,Yeah, that's a really good question.
Dialogue: 0,0:29:52.23,0:29:53.94,中文,,0,0,0,,是的 这真的是一个很好的问题
Dialogue: 0,0:29:53.94,0:29:59.82,英文,,0,0,0,,And this question will really deeply test your understanding of the mystery, which is, what if I had an array of strings?
Dialogue: 0,0:29:53.94,0:29:59.82,中文,,0,0,0,,而这个问题将真正深入测试你对这个谜题的理解 那就是 如果我有一个字符串数组呢
Dialogue: 0,0:29:59.82,0:30:05.03,英文,,0,0,0,,Well, then what would happen is each of these boxes, they're not going to hold the strings, because strings are not primitive types.
Dialogue: 0,0:29:59.82,0:30:05.03,中文,,0,0,0,,好吧 那么会发生的是每个这些盒子 它们不会容纳字符串 因为字符串不是原始类型
Dialogue: 0,0:30:05.03,0:30:09.37,英文,,0,0,0,,They will hold addresses to each of the strings, because string is not one of the primitive types.
Dialogue: 0,0:30:05.03,0:30:09.37,中文,,0,0,0,,它们将保存到每个字符串的地址 因为字符串不是原始类型之一
Dialogue: 0,0:30:09.37,0:30:11.21,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:30:09.37,0:30:11.21,中文,,0,0,0,,是的 这是一个很好的问题
Dialogue: 0,0:30:11.21,0:30:15.20,英文,,0,0,0,,OK, I know you have more great questions, but I'm going to keep going to the second part.
Dialogue: 0,0:30:11.21,0:30:15.20,中文,,0,0,0,,我知道你还有更多很棒的问题 但我会继续到第二部分
Dialogue: 0,0:30:15.20,0:30:18.75,英文,,0,0,0,,OK, everyone, conversations are done?
Dialogue: 0,0:30:15.20,0:30:18.75,中文,,0,0,0,,大家 对话结束了
Dialogue: 0,0:30:18.75,0:30:22.29,英文,,0,0,0,,Okay, you have to be really quiet because I want to talk about endless and they're super exciting.
Dialogue: 0,0:30:18.75,0:30:22.29,中文,,0,0,0,,你得非常安静 因为我想谈谈无穷 它们真的很令人兴奋
Dialogue: 0,0:30:22.29,0:30:23.54,英文,,0,0,0,,Okay.
Dialogue: 0,0:30:22.29,0:30:23.54,中文,,0,0,0,,好的
Dialogue: 0,0:30:23.54,0:30:26.48,英文,,0,0,0,,So that was the first part of today, golden rule of equals.
Dialogue: 0,0:30:23.54,0:30:26.48,中文,,0,0,0,,所以这是今天的第一部分 等号的黄金法则
Dialogue: 0,0:30:26.48,0:30:31.71,英文,,0,0,0,,So I guess to quickly rewind to the first slide that I skipped over earlier, the goal for the second half of today,
Dialogue: 0,0:30:26.48,0:30:31.71,中文,,0,0,0,,所以我想迅速回到我之前略过的第一张幻灯片 今天下半场的目标
Dialogue: 0,0:30:31.71,0:30:36.47,英文,,0,0,0,,and in fact, for the next four or five lectures, is we're going to build a list.
Dialogue: 0,0:30:31.71,0:30:36.47,中文,,0,0,0,,事实上 接下来的四五节课的目标是我们要建立一个列表
Dialogue: 0,0:30:36.47,0:30:38.35,英文,,0,0,0,,Why the heck would we want to build a list?
Dialogue: 0,0:30:36.47,0:30:38.35,中文,,0,0,0,,我们为什么要建立一个列表呢
Dialogue: 0,0:30:38.35,0:30:42.63,英文,,0,0,0,,Well, the main reason is because in Java, arrays have a fixed size.
Dialogue: 0,0:30:38.35,0:30:42.63,中文,,0,0,0,,主要原因是因为在Java中 数组有固定的大小
Dialogue: 0,0:30:42.63,0:30:47.01,英文,,0,0,0,,When I declare that there is a new array of size 5, it's going to be size 5 forever.
Dialogue: 0,0:30:42.63,0:30:47.01,中文,,0,0,0,,当我声明有一个新数组 大小为5时 它将永远是大小5
Dialogue: 0,0:30:47.01,0:30:50.63,英文,,0,0,0,,And I can never add more than five things into my array.
Dialogue: 0,0:30:47.01,0:30:50.63,中文,,0,0,0,,我永远不能在我的数组里添加超过五个东西
Dialogue: 0,0:30:50.63,0:30:58.41,英文,,0,0,0,,So what if I want a list like in Python, where I can add more than five things and my list can grow as I have more data to add into it?
Dialogue: 0,0:30:50.63,0:30:58.41,中文,,0,0,0,,那么如果我想要一个像Python中那样的列表 我可以添加超过五个东西 我的列表可以随着我有更多数据添加而增长呢
Dialogue: 0,0:30:58.41,0:31:00.85,英文,,0,0,0,,To do that, I'm going to have to build a list.
Dialogue: 0,0:30:58.41,0:31:00.85,中文,,0,0,0,,为了做到这一点 我要建立一个列表
Dialogue: 0,0:31:00.85,0:31:04.25,英文,,0,0,0,,Lists are not built into Java, so we're going to have to build it ourselves.
Dialogue: 0,0:31:00.85,0:31:04.25,中文,,0,0,0,,在Java中没有内置列表 所以我们需要自己构建它
Dialogue: 0,0:31:04.25,0:31:08.76,英文,,0,0,0,,So let's go on a three-lecture journey, and let's build some lists together.
Dialogue: 0,0:31:04.25,0:31:08.76,中文,,0,0,0,,所以让我们一起进行为期三节的旅程 一起建立一些列表吧
Dialogue: 0,0:31:08.76,0:31:09.40,英文,,0,0,0,,OK.
Dialogue: 0,0:31:08.76,0:31:09.40,中文,,0,0,0,,好的
Dialogue: 0,0:31:09.40,0:31:15.52,英文,,0,0,0,,So we'll talk about our first type of list today, and then we will keep going, and we'll build more lists if you come back next time.
Dialogue: 0,0:31:09.40,0:31:15.52,中文,,0,0,0,,所以今天我们会讨论我们的第一种列表类型 然后我们会继续 如果你下次回来 我们会建立更多的列表
Dialogue: 0,0:31:15.52,0:31:17.48,英文,,0,0,0,,All right, I'm going to jump into IntelliJ.
Dialogue: 0,0:31:15.52,0:31:17.48,中文,,0,0,0,,好的 我要进入IntelliJ了
Dialogue: 0,0:31:17.48,0:31:20.14,英文,,0,0,0,,Hopefully everything is nice and readable.
Dialogue: 0,0:31:17.48,0:31:20.14,中文,,0,0,0,,希望一切都清晰可读
Dialogue: 0,0:31:20.14,0:31:21.58,英文,,0,0,0,,Yes, no.
Dialogue: 0,0:31:20.14,0:31:21.58,中文,,0,0,0,,是的 不是吗
Dialogue: 0,0:31:21.58,0:31:23.16,英文,,0,0,0,,Should I make it like bright pink or something?
Dialogue: 0,0:31:21.58,0:31:23.16,中文,,0,0,0,,我应该把它弄得像亮粉色之类的吗
Dialogue: 0,0:31:23.16,0:31:24.52,英文,,0,0,0,,OK, I think it's readable.
Dialogue: 0,0:31:23.16,0:31:24.52,中文,,0,0,0,,我觉得这是可读的
Dialogue: 0,0:31:24.52,0:31:28.20,英文,,0,0,0,,So I'm creating a new class called IntList.
Dialogue: 0,0:31:24.52,0:31:28.20,中文,,0,0,0,,所以我正在创建一个名为IntList的新类
Dialogue: 0,0:31:28.20,0:31:31.01,英文,,0,0,0,,It's not going to be immediately obvious what I'm doing first.
Dialogue: 0,0:31:28.20,0:31:31.01,中文,,0,0,0,,首先我做什么可能不会立即显而易见
Dialogue: 0,0:31:31.01,0:31:34.89,英文,,0,0,0,,Maybe if you've taken 61A, you'll have a vague flavor for where this is going.
Dialogue: 0,0:31:31.01,0:31:34.89,中文,,0,0,0,,也许如果你学过61A的话 你会对这个方向有点模糊的印象
Dialogue: 0,0:31:34.89,0:31:39.40,英文,,0,0,0,,But I'm going to say my int list object has two instance variables.
Dialogue: 0,0:31:34.89,0:31:39.40,中文,,0,0,0,,但我要说的是 我的int列表对象有两个实例变量
Dialogue: 0,0:31:39.40,0:31:43.85,英文,,0,0,0,,So every int list that I create has two attributes or instance variables.
Dialogue: 0,0:31:39.40,0:31:43.85,中文,,0,0,0,,所以我创建的每个int列表都有两个属性或实例变量
Dialogue: 0,0:31:43.85,0:31:44.95,英文,,0,0,0,,Here they are.
Dialogue: 0,0:31:43.85,0:31:44.95,中文,,0,0,0,,它们在这里
Dialogue: 0,0:31:44.95,0:31:55.90,英文,,0,0,0,,I'm going to have an integer called first, and then I'm going to have, and this is mystery of the walrus stuff, I'm going to have a reference to another int list, which I'm going to call rest.
Dialogue: 0,0:31:44.95,0:31:55.90,中文,,0,0,0,,我将有一个名为first的整数 然后我将有 这就是海象操作的神秘之处 我将有一个指向另一个int列表的引用 我将其称为rest
Dialogue: 0,0:31:55.90,0:31:58.50,英文,,0,0,0,,So this variable, can it actually hold the int list itself?
Dialogue: 0,0:31:55.90,0:31:58.50,中文,,0,0,0,,那么这个变量 它实际上能够容纳int列表本身吗
Dialogue: 0,0:31:58.50,0:31:59.10,英文,,0,0,0,,No.
Dialogue: 0,0:31:58.50,0:31:59.10,中文,,0,0,0,,不
Dialogue: 0,0:31:59.10,0:32:06.15,英文,,0,0,0,,It can hold a reference, the address, where can I find my other int list so I can go visit it and feed it?
Dialogue: 0,0:31:59.10,0:32:06.15,中文,,0,0,0,,它可以保存一个引用 也就是地址 我可以通过它找到我的另一个整数列表 这样我就可以去访问它和操作它了
Dialogue: 0,0:32:06.15,0:32:08.39,英文,,0,0,0,,Wait, I guess you can't feed int lists, I think.
Dialogue: 0,0:32:06.15,0:32:08.39,中文,,0,0,0,,等等 我想你不能给整数列表喂食 我想
Dialogue: 0,0:32:08.39,0:32:09.13,英文,,0,0,0,,OK.
Dialogue: 0,0:32:08.39,0:32:09.13,中文,,0,0,0,,好的
Dialogue: 0,0:32:09.13,0:32:11.13,英文,,0,0,0,,In any case, there's my int list.
Dialogue: 0,0:32:09.13,0:32:11.13,中文,,0,0,0,,无论如何 这就是我的整数列表
Dialogue: 0,0:32:11.13,0:32:14.40,英文,,0,0,0,,And it seems kind of bizarre, but believe it or not, we're done.
Dialogue: 0,0:32:11.13,0:32:14.40,中文,,0,0,0,,而且看起来有点奇怪 但信不信由你 我们完成了
Dialogue: 0,0:32:14.40,0:32:15.60,英文,,0,0,0,,That's our int list.
Dialogue: 0,0:32:14.40,0:32:15.60,中文,,0,0,0,,这就是我们的整数列表
Dialogue: 0,0:32:15.60,0:32:18.40,英文,,0,0,0,,And that doesn't mean you can go home, so stay in your seats.
Dialogue: 0,0:32:15.60,0:32:18.40,中文,,0,0,0,,但这并不意味着你可以回家 所以请留在座位上
Dialogue: 0,0:32:18.40,0:32:23.40,英文,,0,0,0,,But the reason why this is all we need for our int list is, well, let's start building a list together.
Dialogue: 0,0:32:18.40,0:32:23.40,中文,,0,0,0,,但这就是我们对于整数列表所需的全部 让我们一起开始构建一个列表
Dialogue: 0,0:32:23.40,0:32:24.22,英文,,0,0,0,,So here we go.
Dialogue: 0,0:32:23.40,0:32:24.22,中文,,0,0,0,,所以我们开始吧
Dialogue: 0,0:32:24.22,0:32:25.94,英文,,0,0,0,,I'm going to write public static void main.
Dialogue: 0,0:32:24.22,0:32:25.94,中文,,0,0,0,,我将写public static void main
Dialogue: 0,0:32:25.94,0:32:28.34,英文,,0,0,0,,A little trick for you.
Dialogue: 0,0:32:25.94,0:32:28.34,中文,,0,0,0,,给你一个小窍门
Dialogue: 0,0:32:28.34,0:32:29.63,英文,,0,0,0,,And we're going to start building a list.
Dialogue: 0,0:32:28.34,0:32:29.63,中文,,0,0,0,,然后我们开始构建一个列表
Dialogue: 0,0:32:29.63,0:32:37.09,英文,,0,0,0,,So I'll say I declare there is an int list variable called l. It can't hold the actual list, but it can hold a reference to a list.
Dialogue: 0,0:32:29.63,0:32:37.09,中文,,0,0,0,,所以我会说我声明有一个int列表变量叫做l 它不能保存实际的列表 但可以保存对列表的引用
Dialogue: 0,0:32:37.09,0:32:38.49,英文,,0,0,0,,So I'll declare.
Dialogue: 0,0:32:37.09,0:32:38.49,中文,,0,0,0,,所以我会声明
Dialogue: 0,0:32:38.49,0:32:41.51,英文,,0,0,0,,Or I will instantiate a brand new int list.
Dialogue: 0,0:32:38.49,0:32:41.51,中文,,0,0,0,,我将实例化一个全新的int列表
Dialogue: 0,0:32:41.51,0:32:43.43,英文,,0,0,0,,I'll assign it to L. OK.
Dialogue: 0,0:32:41.51,0:32:43.43,中文,,0,0,0,,我会把它赋值给L 好的
Dialogue: 0,0:32:43.43,0:32:44.94,英文,,0,0,0,,Well, that's not a super interesting list.
Dialogue: 0,0:32:43.43,0:32:44.94,中文,,0,0,0,,这个列表没什么特别的
Dialogue: 0,0:32:44.94,0:32:46.30,英文,,0,0,0,,I'm going to put stuff inside.
Dialogue: 0,0:32:44.94,0:32:46.30,中文,,0,0,0,,我打算往里面放东西
Dialogue: 0,0:32:46.30,0:32:50.56,英文,,0,0,0,,So I'm going to say, L, well, you've got a rest and you've got a first.
Dialogue: 0,0:32:46.30,0:32:50.56,中文,,0,0,0,,我要说 L 你有rest和first
Dialogue: 0,0:32:50.56,0:32:53.80,英文,,0,0,0,,So I'm going to set your first equal to the number 5.
Dialogue: 0,0:32:50.56,0:32:53.80,中文,,0,0,0,,我打算把你的first设置为数字5
Dialogue: 0,0:32:53.80,0:32:54.40,英文,,0,0,0,,Why?
Dialogue: 0,0:32:53.80,0:32:54.40,中文,,0,0,0,,为什么
Dialogue: 0,0:32:54.40,0:32:54.94,英文,,0,0,0,,I don't know.
Dialogue: 0,0:32:54.40,0:32:54.94,中文,,0,0,0,,我不知道
Dialogue: 0,0:32:54.94,0:32:55.94,英文,,0,0,0,,I like 5.
Dialogue: 0,0:32:54.94,0:32:55.94,中文,,0,0,0,,我喜欢5
Dialogue: 0,0:32:55.94,0:32:56.48,英文,,0,0,0,,OK.
Dialogue: 0,0:32:55.94,0:32:56.48,中文,,0,0,0,,好的
Dialogue: 0,0:32:56.48,0:32:57.34,英文,,0,0,0,,And what about your rest?
Dialogue: 0,0:32:56.48,0:32:57.34,中文,,0,0,0,,你其他的怎么样
Dialogue: 0,0:32:57.34,0:32:59.84,英文,,0,0,0,,Well, I have nothing else to add to this list at the moment.
Dialogue: 0,0:32:57.34,0:32:59.84,中文,,0,0,0,,目前我没有其他要添加到这个列表中的东西
Dialogue: 0,0:32:59.84,0:33:01.61,英文,,0,0,0,,So I'll just set it equal to null.
Dialogue: 0,0:32:59.84,0:33:01.61,中文,,0,0,0,,所以我就把它设为null
Dialogue: 0,0:33:01.61,0:33:02.31,英文,,0,0,0,,Great.
Dialogue: 0,0:33:01.61,0:33:02.31,中文,,0,0,0,,太棒了
Dialogue: 0,0:33:02.31,0:33:02.85,英文,,0,0,0,,I made a list.
Dialogue: 0,0:33:02.31,0:33:02.85,中文,,0,0,0,,我做了一个列表
Dialogue: 0,0:33:02.85,0:33:05.71,英文,,0,0,0,,It's got the number 5 inside, nothing else.
Dialogue: 0,0:33:02.85,0:33:05.71,中文,,0,0,0,,里面只有数字5 别的什么也没有
Dialogue: 0,0:33:05.71,0:33:06.79,英文,,0,0,0,,OK.
Dialogue: 0,0:33:05.71,0:33:06.79,中文,,0,0,0,,好的
Dialogue: 0,0:33:06.79,0:33:09.97,英文,,0,0,0,,I see you are not satisfied, so I will add more things to the list.
Dialogue: 0,0:33:06.79,0:33:09.97,中文,,0,0,0,,我看你不满意 所以我会添加更多东西到列表中
Dialogue: 0,0:33:09.97,0:33:11.61,英文,,0,0,0,,So this time, I'm going to say L.rest.
Dialogue: 0,0:33:09.97,0:33:11.61,中文,,0,0,0,,所以这次 我要说L.rest
Dialogue: 0,0:33:11.61,0:33:12.57,英文,,0,0,0,,You know what?
Dialogue: 0,0:33:11.61,0:33:12.57,中文,,0,0,0,,你知道吗
Dialogue: 0,0:33:12.57,0:33:13.77,英文,,0,0,0,,I don't like that being null.
Dialogue: 0,0:33:12.57,0:33:13.77,中文,,0,0,0,,我不喜欢那个为空
Dialogue: 0,0:33:13.77,0:33:15.61,英文,,0,0,0,,I want to have more stuff in my list.
Dialogue: 0,0:33:13.77,0:33:15.61,中文,,0,0,0,,我想在我的列表中有更多的东西
Dialogue: 0,0:33:15.61,0:33:19.66,英文,,0,0,0,,So I'm going to set L.rest equal to another int list object.
Dialogue: 0,0:33:15.61,0:33:19.66,中文,,0,0,0,,所以我要将 L.rest 设置为另一个 int 列表对象
Dialogue: 0,0:33:19.66,0:33:22.16,英文,,0,0,0,,So I've created my second int list object.
Dialogue: 0,0:33:19.66,0:33:22.16,中文,,0,0,0,,所以我创建了我的第二个 int 列表对象
Dialogue: 0,0:33:22.16,0:33:23.32,英文,,0,0,0,,And I'm going to say L.rest.
Dialogue: 0,0:33:22.16,0:33:23.32,中文,,0,0,0,,我要说 L.rest
Dialogue: 0,0:33:23.32,0:33:23.88,英文,,0,0,0,,Oops.
Dialogue: 0,0:33:23.32,0:33:23.88,中文,,0,0,0,,哎呀
Dialogue: 0,0:33:23.88,0:33:29.06,英文,,0,0,0,,L.rest, well, you are an int list object, and you have a first, and you have a rest.
Dialogue: 0,0:33:23.88,0:33:29.06,中文,,0,0,0,,L.rest 你是一个 int 列表对象 你有一个第一个 还有一个 rest
Dialogue: 0,0:33:29.06,0:33:33.11,英文,,0,0,0,,So I'm going to say your first is 10, and your rest is null.
Dialogue: 0,0:33:29.06,0:33:33.11,中文,,0,0,0,,所以我要说你的第一个是 10 你的 rest 是 null
Dialogue: 0,0:33:33.11,0:33:35.69,英文,,0,0,0,,Now I have a list with two items, 5 and 10.
Dialogue: 0,0:33:33.11,0:33:35.69,中文,,0,0,0,,现在我有一个包含两个项目的列表 5和10
Dialogue: 0,0:33:35.69,0:33:36.67,英文,,0,0,0,,But I want more.
Dialogue: 0,0:33:35.69,0:33:36.67,中文,,0,0,0,,但我想要更多
Dialogue: 0,0:33:36.67,0:33:39.09,英文,,0,0,0,,So I'm going to say l.rest.rest.
Dialogue: 0,0:33:36.67,0:33:39.09,中文,,0,0,0,,所以我要说 l.rest.rest
Dialogue: 0,0:33:39.09,0:33:40.91,英文,,0,0,0,,You are a brand new end list.
Dialogue: 0,0:33:39.09,0:33:40.91,中文,,0,0,0,,你是一个崭新的结束列表
Dialogue: 0,0:33:40.91,0:33:41.57,英文,,0,0,0,,Great.
Dialogue: 0,0:33:40.91,0:33:41.57,中文,,0,0,0,,太好了
Dialogue: 0,0:33:41.57,0:33:43.09,英文,,0,0,0,,And then l.rest.rest.
Dialogue: 0,0:33:41.57,0:33:43.09,中文,,0,0,0,,然后 l.rest.rest
Dialogue: 0,0:33:43.09,0:33:45.09,英文,,0,0,0,,OK, your first item is 15.
Dialogue: 0,0:33:43.09,0:33:45.09,中文,,0,0,0,,你的第一个项目是15
Dialogue: 0,0:33:45.09,0:33:45.99,英文,,0,0,0,,Oops.
Dialogue: 0,0:33:45.09,0:33:45.99,中文,,0,0,0,,糟糕
Dialogue: 0,0:33:45.99,0:33:48.27,英文,,0,0,0,,And then your rest is null.
Dialogue: 0,0:33:45.99,0:33:48.27,中文,,0,0,0,,然后你的休息是null
Dialogue: 0,0:33:48.27,0:33:48.85,英文,,0,0,0,,OK.
Dialogue: 0,0:33:48.27,0:33:48.85,中文,,0,0,0,,好的
Dialogue: 0,0:33:48.85,0:33:51.75,英文,,0,0,0,,And I look at this, and I'm starting to get a headache.
Dialogue: 0,0:33:48.85,0:33:51.75,中文,,0,0,0,,我看着这个 开始感到头痛
Dialogue: 0,0:33:51.75,0:33:52.83,英文,,0,0,0,,I don't know about you.
Dialogue: 0,0:33:51.75,0:33:52.83,中文,,0,0,0,,我不知道你
Dialogue: 0,0:33:52.83,0:33:55.45,英文,,0,0,0,,So I don't know what is going on anymore.
Dialogue: 0,0:33:52.83,0:33:55.45,中文,,0,0,0,,所以我不知道发生了什么
Dialogue: 0,0:33:55.45,0:34:00.49,英文,,0,0,0,,So I'm going to jump into my helpful Java visualizer to tell me all about what's happening.
Dialogue: 0,0:33:55.45,0:34:00.49,中文,,0,0,0,,所以我要跳进我的有用的Java可视化工具 告诉我所有正在发生的事情
Dialogue: 0,0:34:00.49,0:34:03.37,英文,,0,0,0,,This is the code from earlier, just a lot brighter.
Dialogue: 0,0:34:00.49,0:34:03.37,中文,,0,0,0,,这是之前的代码 只是亮了很多
Dialogue: 0,0:34:03.37,0:34:06.54,英文,,0,0,0,,And I'm going to look at this in pictures to see what's going on.
Dialogue: 0,0:34:03.37,0:34:06.54,中文,,0,0,0,,我要用图片来看看发生了什么
Dialogue: 0,0:34:06.54,0:34:07.48,英文,,0,0,0,,So here I go.
Dialogue: 0,0:34:06.54,0:34:07.48,中文,,0,0,0,,所以 我开始了
Dialogue: 0,0:34:07.48,0:34:10.22,英文,,0,0,0,,I'm going to create my new int list.
Dialogue: 0,0:34:07.48,0:34:10.22,中文,,0,0,0,,我要创建我的新整数列表
Dialogue: 0,0:34:10.22,0:34:11.32,英文,,0,0,0,,There it is.
Dialogue: 0,0:34:10.22,0:34:11.32,中文,,0,0,0,,就是这样
Dialogue: 0,0:34:11.32,0:34:12.30,英文,,0,0,0,,Beautiful.
Dialogue: 0,0:34:11.32,0:34:12.30,中文,,0,0,0,,漂亮
Dialogue: 0,0:34:12.30,0:34:13.42,英文,,0,0,0,,L points at the int list.
Dialogue: 0,0:34:12.30,0:34:13.42,中文,,0,0,0,,L指向整数列表
Dialogue: 0,0:34:13.42,0:34:18.17,英文,,0,0,0,,It's got a default value for first and a default value for null.
Dialogue: 0,0:34:13.42,0:34:18.17,中文,,0,0,0,,它为first设置了默认值 并为null设置了默认值
Dialogue: 0,0:34:18.17,0:34:21.97,英文,,0,0,0,,Then I set L.first equal to 5, L.rest equal to null.
Dialogue: 0,0:34:18.17,0:34:21.97,中文,,0,0,0,,然后我将L.first设置为5 L.rest设置为null
Dialogue: 0,0:34:21.97,0:34:22.71,英文,,0,0,0,,It's great.
Dialogue: 0,0:34:21.97,0:34:22.71,中文,,0,0,0,,这太棒了
Dialogue: 0,0:34:22.71,0:34:24.46,英文,,0,0,0,,There's my one-item list.
Dialogue: 0,0:34:22.71,0:34:24.46,中文,,0,0,0,,这是我的一个项目列表
Dialogue: 0,0:34:24.46,0:34:25.22,英文,,0,0,0,,But I want more.
Dialogue: 0,0:34:24.46,0:34:25.22,中文,,0,0,0,,但我想要更多
Dialogue: 0,0:34:25.22,0:34:26.80,英文,,0,0,0,,So I'm going to say l.rest.
Dialogue: 0,0:34:25.22,0:34:26.80,中文,,0,0,0,,所以我要说l.rest
Dialogue: 0,0:34:26.80,0:34:27.84,英文,,0,0,0,,Actually, you know what?
Dialogue: 0,0:34:26.80,0:34:27.84,中文,,0,0,0,,其实 你知道吗
Dialogue: 0,0:34:27.84,0:34:28.92,英文,,0,0,0,,I don't think it should be null.
Dialogue: 0,0:34:27.84,0:34:28.92,中文,,0,0,0,,我觉得它不应该是空的
Dialogue: 0,0:34:28.92,0:34:31.68,英文,,0,0,0,,I think it should be a reference to another in list.
Dialogue: 0,0:34:28.92,0:34:31.68,中文,,0,0,0,,我觉得它应该是列表中的另一个引用
Dialogue: 0,0:34:31.68,0:34:34.58,英文,,0,0,0,,This tells me where to find the next item in the list.
Dialogue: 0,0:34:31.68,0:34:34.58,中文,,0,0,0,,这告诉我在列表中找下一个项目的位置
Dialogue: 0,0:34:34.58,0:34:39.05,英文,,0,0,0,,And that next item is going to have a first of 10 and a rest of null.
Dialogue: 0,0:34:34.58,0:34:39.05,中文,,0,0,0,,而且下一个项目将有一个首项为10 其余为空
Dialogue: 0,0:34:39.05,0:34:40.63,英文,,0,0,0,,Looks good, but I want more.
Dialogue: 0,0:34:39.05,0:34:40.63,中文,,0,0,0,,看起来不错 但我想要更多
Dialogue: 0,0:34:40.63,0:34:45.16,英文,,0,0,0,,So I'm going to say l.rest.rest.
Dialogue: 0,0:34:40.63,0:34:45.16,中文,,0,0,0,,所以我会说 l.rest.rest
Dialogue: 0,0:34:45.16,0:34:47.80,英文,,0,0,0,,So that's l, follow the arrow, .rest.
Dialogue: 0,0:34:45.16,0:34:47.80,中文,,0,0,0,,所以那就是 l 跟着箭头 .rest
Dialogue: 0,0:34:47.80,0:34:49.20,英文,,0,0,0,,That's this attribute right here.
Dialogue: 0,0:34:47.80,0:34:49.20,中文,,0,0,0,,这就是这个属性
Dialogue: 0,0:34:49.20,0:34:51.18,英文,,0,0,0,,Takes me to this int list, .rest.
Dialogue: 0,0:34:49.20,0:34:51.18,中文,,0,0,0,,带我到这个整数列表 .rest
Dialogue: 0,0:34:51.18,0:34:51.92,英文,,0,0,0,,You know what?
Dialogue: 0,0:34:51.18,0:34:51.92,中文,,0,0,0,,你知道吗
Dialogue: 0,0:34:51.92,0:34:54.52,英文,,0,0,0,,I want this memory box, which is currently null.
Dialogue: 0,0:34:51.92,0:34:54.52,中文,,0,0,0,,我想要这个内存框 目前是空的
Dialogue: 0,0:34:54.52,0:34:57.80,英文,,0,0,0,,I want this to point to a brand new int list.
Dialogue: 0,0:34:54.52,0:34:57.80,中文,,0,0,0,,我想让它指向一个全新的整数列表
Dialogue: 0,0:34:57.80,0:34:58.72,英文,,0,0,0,,There it is.
Dialogue: 0,0:34:57.80,0:34:58.72,中文,,0,0,0,,就是这样
Dialogue: 0,0:34:58.72,0:35:01.48,英文,,0,0,0,,And I'm going to fill in the first there with 15.
Dialogue: 0,0:34:58.72,0:35:01.48,中文,,0,0,0,,然后我会在第一个位置填入15
Dialogue: 0,0:35:01.48,0:35:02.28,英文,,0,0,0,,OK, it looks great.
Dialogue: 0,0:35:01.48,0:35:02.28,中文,,0,0,0,,看起来不错
Dialogue: 0,0:35:02.28,0:35:03.46,英文,,0,0,0,,There's my three-item list.
Dialogue: 0,0:35:02.28,0:35:03.46,中文,,0,0,0,,这是我的三项列表
Dialogue: 0,0:35:03.46,0:35:06.64,英文,,0,0,0,,It's got 5, 10, 15.
Dialogue: 0,0:35:03.46,0:35:06.64,中文,,0,0,0,,它有5、10、15
Dialogue: 0,0:35:06.64,0:35:09.18,英文,,0,0,0,,OK, so where's my slide?
Dialogue: 0,0:35:06.64,0:35:09.18,中文,,0,0,0,,那我的幻灯片在哪里
Dialogue: 0,0:35:09.18,0:35:11.00,英文,,0,0,0,,OK, so I don't know.
Dialogue: 0,0:35:09.18,0:35:11.00,中文,,0,0,0,,我不知道
Dialogue: 0,0:35:11.00,0:35:12.16,英文,,0,0,0,,Maybe you like that.
Dialogue: 0,0:35:11.00,0:35:12.16,中文,,0,0,0,,也许你喜欢那样
Dialogue: 0,0:35:12.16,0:35:13.55,英文,,0,0,0,,Maybe you didn't like that.
Dialogue: 0,0:35:12.16,0:35:13.55,中文,,0,0,0,,也许你不喜欢那样
Dialogue: 0,0:35:13.55,0:35:15.03,英文,,0,0,0,,To me, it's a little bit ugly.
Dialogue: 0,0:35:13.55,0:35:15.03,中文,,0,0,0,,对我来说 有点丑
Dialogue: 0,0:35:15.03,0:35:16.23,英文,,0,0,0,,Maybe you like programming like this.
Dialogue: 0,0:35:15.03,0:35:16.23,中文,,0,0,0,,也许你喜欢这样编程
Dialogue: 0,0:35:16.23,0:35:21.57,英文,,0,0,0,,To me, I'm like, if I want to make a list with 50 items, have fun with that.
Dialogue: 0,0:35:16.23,0:35:21.57,中文,,0,0,0,,对我来说 我觉得 如果我想列出 50 个项目 那就够受的了
Dialogue: 0,0:35:21.57,0:35:24.37,英文,,0,0,0,,So I'm going to clean this up just a little bit.
Dialogue: 0,0:35:21.57,0:35:24.37,中文,,0,0,0,,所以我要稍微整理一下这个
Dialogue: 0,0:35:24.37,0:35:27.77,英文,,0,0,0,,And I'm going to try building the list backwards to see if it's any cleaner.
Dialogue: 0,0:35:24.37,0:35:27.77,中文,,0,0,0,,我打算尝试反向构建列表 看看会不会更整洁些
Dialogue: 0,0:35:27.77,0:35:28.49,英文,,0,0,0,,So let's go backwards.
Dialogue: 0,0:35:27.77,0:35:28.49,中文,,0,0,0,,那我们就倒着来吧
Dialogue: 0,0:35:28.49,0:35:30.24,英文,,0,0,0,,I'm going to say public.
Dialogue: 0,0:35:28.49,0:35:30.24,中文,,0,0,0,,我要说公共的
Dialogue: 0,0:35:30.24,0:35:32.80,英文,,0,0,0,,IntList, I'm going to make a new constructor.
Dialogue: 0,0:35:30.24,0:35:32.80,中文,,0,0,0,,IntList 我要创建一个新的构造函数
Dialogue: 0,0:35:32.80,0:35:35.84,英文,,0,0,0,,This is a blueprint for how to create new IntList objects.
Dialogue: 0,0:35:32.80,0:35:35.84,中文,,0,0,0,,这是创建新IntList对象的蓝图
Dialogue: 0,0:35:35.84,0:35:37.93,英文,,0,0,0,,And I'll say it takes in two arguments.
Dialogue: 0,0:35:35.84,0:35:37.93,中文,,0,0,0,,我会说它接受两个参数
Dialogue: 0,0:35:37.93,0:35:40.97,英文,,0,0,0,,And I'll use those two arguments to set the first and the rest.
Dialogue: 0,0:35:37.93,0:35:40.97,中文,,0,0,0,,我将使用这两个参数设置第一个和其余的部分
Dialogue: 0,0:35:40.97,0:35:48.68,英文,,0,0,0,,So I'll say first equals f, rest equals r. This way, if I want to create a new IntList, I can use this constructor that has been provided.
Dialogue: 0,0:35:40.97,0:35:48.68,中文,,0,0,0,,所以我会说first等于f rest等于r 这样 如果我想创建一个新的IntList 我可以使用已经提供的这个构造函数
Dialogue: 0,0:35:48.68,0:35:53.38,英文,,0,0,0,,So let's try to use this, and I'll build a list backwards this time for reasons that will become clear very soon.
Dialogue: 0,0:35:48.68,0:35:53.38,中文,,0,0,0,,所以让我们尝试使用这个 并且我将以这种方式向后构建一个列表 原因很快就会变得很清楚
Dialogue: 0,0:35:53.38,0:35:54.28,英文,,0,0,0,,Don't worry.
Dialogue: 0,0:35:53.38,0:35:54.28,中文,,0,0,0,,别担心
Dialogue: 0,0:35:54.28,0:35:56.70,英文,,0,0,0,,So I'll make a new int list, take some two arguments.
Dialogue: 0,0:35:54.28,0:35:56.70,中文,,0,0,0,,所以我会创建一个新的整数列表 需要两个参数
Dialogue: 0,0:35:56.70,0:35:59.96,英文,,0,0,0,,So I'll give it a number, 15 this time, because I'm building backwards.
Dialogue: 0,0:35:56.70,0:35:59.96,中文,,0,0,0,,所以我会给它一个数字 这次是15 因为我是倒着构建的
Dialogue: 0,0:35:59.96,0:36:01.40,英文,,0,0,0,,And I'll say the rest, it's null.
Dialogue: 0,0:35:59.96,0:36:01.40,中文,,0,0,0,,然后我会说剩下的 是空的
Dialogue: 0,0:36:01.40,0:36:02.92,英文,,0,0,0,,I have nothing else for now.
Dialogue: 0,0:36:01.40,0:36:02.92,中文,,0,0,0,,目前我没有别的了
Dialogue: 0,0:36:02.92,0:36:04.34,英文,,0,0,0,,That's one item list.
Dialogue: 0,0:36:02.92,0:36:04.34,中文,,0,0,0,,这是一个项目列表
Dialogue: 0,0:36:04.34,0:36:04.66,英文,,0,0,0,,It's got 15.
Dialogue: 0,0:36:04.34,0:36:04.66,中文,,0,0,0,,它有15
Dialogue: 0,0:36:04.66,0:36:06.80,英文,,0,0,0,,I look at this, and I say, you know what?
Dialogue: 0,0:36:04.66,0:36:06.80,中文,,0,0,0,,我看着这个 然后我说 你知道吗
Dialogue: 0,0:36:06.80,0:36:07.91,英文,,0,0,0,,I changed my mind.
Dialogue: 0,0:36:06.80,0:36:07.91,中文,,0,0,0,,我改变了主意
Dialogue: 0,0:36:07.91,0:36:11.45,英文,,0,0,0,,I actually want L to be an int list with two items.
Dialogue: 0,0:36:07.91,0:36:11.45,中文,,0,0,0,,我其实想要 L 是一个包含两个项目的整数列表
Dialogue: 0,0:36:11.45,0:36:14.27,英文,,0,0,0,,So I'm going to set L equal to a new int list.
Dialogue: 0,0:36:11.45,0:36:14.27,中文,,0,0,0,,所以我要把 L 设置为一个新的整数列表
Dialogue: 0,0:36:14.27,0:36:16.97,英文,,0,0,0,,And this time, the first item is going to be 10.
Dialogue: 0,0:36:14.27,0:36:16.97,中文,,0,0,0,,而这一次 第一个项目将是 10
Dialogue: 0,0:36:16.97,0:36:17.95,英文,,0,0,0,,What about the rest?
Dialogue: 0,0:36:16.97,0:36:17.95,中文,,0,0,0,,那剩下的呢
Dialogue: 0,0:36:17.95,0:36:18.97,英文,,0,0,0,,What is everything else?
Dialogue: 0,0:36:17.95,0:36:18.97,中文,,0,0,0,,一切其他的是什么
Dialogue: 0,0:36:18.97,0:36:22.24,英文,,0,0,0,,Well, everything else is my list of 15, which is right there.
Dialogue: 0,0:36:18.97,0:36:22.24,中文,,0,0,0,,其他的都是我的 15 的列表 就在那里
Dialogue: 0,0:36:22.24,0:36:27.06,英文,,0,0,0,,So I'll say, everything else, that's L. OK, great.
Dialogue: 0,0:36:22.24,0:36:27.06,中文,,0,0,0,,所以我要说 其他一切 那就是 L 太好了
Dialogue: 0,0:36:27.06,0:36:30.76,英文,,0,0,0,,But I want more, so I'm going to say, actually, I changed my mind again.
Dialogue: 0,0:36:27.06,0:36:30.76,中文,,0,0,0,,但我想要更多 所以我要说 其实 我又改变主意了
Dialogue: 0,0:36:30.76,0:36:35.88,英文,,0,0,0,,I want L to be a reference to a new list with the front item being 5.
Dialogue: 0,0:36:30.76,0:36:35.88,中文,,0,0,0,,我想要 L 是指向一个新列表的引用 其中前面的项是 5
Dialogue: 0,0:36:35.88,0:36:37.94,英文,,0,0,0,,And the rest, what is everything else in this list?
Dialogue: 0,0:36:35.88,0:36:37.94,中文,,0,0,0,,剩下的呢 在这个列表中是什么
Dialogue: 0,0:36:37.94,0:36:43.84,英文,,0,0,0,,Well, it's whatever L used to point to, which is the letter L. Great.
Dialogue: 0,0:36:37.94,0:36:43.84,中文,,0,0,0,,就是 L 曾经指向的那些 也就是字母 L 太好了
Dialogue: 0,0:36:43.84,0:36:45.73,英文,,0,0,0,,So that works just fine, too.
Dialogue: 0,0:36:43.84,0:36:45.73,中文,,0,0,0,,所以那也很顺利
Dialogue: 0,0:36:45.73,0:36:47.79,英文,,0,0,0,,Again, it might look a little bit confusing.
Dialogue: 0,0:36:45.73,0:36:47.79,中文,,0,0,0,,再次 可能看起来有点混乱
Dialogue: 0,0:36:47.79,0:36:51.97,英文,,0,0,0,,So I will hop into our ever-faithful Java visualizer to see what's going on.
Dialogue: 0,0:36:47.79,0:36:51.97,中文,,0,0,0,,所以我会跳到我们永远忠实的Java可视化器中去看看发生了什么
Dialogue: 0,0:36:51.97,0:36:52.91,英文,,0,0,0,,There it is.
Dialogue: 0,0:36:51.97,0:36:52.91,中文,,0,0,0,,就是这样
Dialogue: 0,0:36:52.91,0:36:56.92,英文,,0,0,0,,So again, I declare, and I create this new int list.
Dialogue: 0,0:36:52.91,0:36:56.92,中文,,0,0,0,,所以 我声明一下 我创建了这个新的整数列表
Dialogue: 0,0:36:56.92,0:36:58.78,英文,,0,0,0,,There it is, 15 null.
Dialogue: 0,0:36:56.92,0:36:58.78,中文,,0,0,0,,就是这样 15个null
Dialogue: 0,0:36:58.78,0:36:59.92,英文,,0,0,0,,Then I say, you know what?
Dialogue: 0,0:36:58.78,0:36:59.92,中文,,0,0,0,,然后我说 你知道吗
Dialogue: 0,0:36:59.92,0:37:00.82,英文,,0,0,0,,I changed my mind.
Dialogue: 0,0:36:59.92,0:37:00.82,中文,,0,0,0,,我改变主意了
Dialogue: 0,0:37:00.82,0:37:07.92,英文,,0,0,0,,I want L to point to a new int list, with the front being 10, the first item, and the rest being L. What is L?
Dialogue: 0,0:37:00.82,0:37:07.92,中文,,0,0,0,,我想让L指向一个新的整数列表 其中前面是10 第一个项目 其余的是L L是什么
Dialogue: 0,0:37:07.92,0:37:10.87,英文,,0,0,0,,L is a reference to this thing that already exists.
Dialogue: 0,0:37:07.92,0:37:10.87,中文,,0,0,0,,L是对已经存在的东西的引用
Dialogue: 0,0:37:10.87,0:37:18.61,英文,,0,0,0,,So if I step through, first, rest, and eventually I get, so this is the crucial step right here.
Dialogue: 0,0:37:10.87,0:37:18.61,中文,,0,0,0,,如果我逐步执行 首先 剩余部分 最终我得到 这里是关键步骤
Dialogue: 0,0:37:18.61,0:37:21.47,英文,,0,0,0,,L gets reassigned to a new int list right here.
Dialogue: 0,0:37:18.61,0:37:21.47,中文,,0,0,0,,L在这里被重新赋值为一个新的int列表
Dialogue: 0,0:37:21.47,0:37:22.85,英文,,0,0,0,,That's the one they just created.
Dialogue: 0,0:37:21.47,0:37:22.85,中文,,0,0,0,,这就是他们刚刚创建的那个
Dialogue: 0,0:37:22.85,0:37:23.87,英文,,0,0,0,,First is 10.
Dialogue: 0,0:37:22.85,0:37:23.87,中文,,0,0,0,,首先是10
Dialogue: 0,0:37:23.87,0:37:24.99,英文,,0,0,0,,And what is rest?
Dialogue: 0,0:37:23.87,0:37:24.99,中文,,0,0,0,,那么剩余部分是什么呢
Dialogue: 0,0:37:24.99,0:37:26.59,英文,,0,0,0,,Rest is the 15.
Dialogue: 0,0:37:24.99,0:37:26.59,中文,,0,0,0,,剩余部分是15
Dialogue: 0,0:37:26.59,0:37:29.14,英文,,0,0,0,,That's what L used to point to.
Dialogue: 0,0:37:26.59,0:37:29.14,中文,,0,0,0,,这就是 L 以前指向的地方
Dialogue: 0,0:37:29.14,0:37:31.66,英文,,0,0,0,,OK, I'll do it one more time just for giggles.
Dialogue: 0,0:37:29.14,0:37:31.66,中文,,0,0,0,,我再做一次 就是为了好玩
Dialogue: 0,0:37:31.66,0:37:33.64,英文,,0,0,0,,So what happens this time?
Dialogue: 0,0:37:31.66,0:37:33.64,中文,,0,0,0,,那么这次会发生什么
Dialogue: 0,0:37:33.64,0:37:35.33,英文,,0,0,0,,I create first rest.
Dialogue: 0,0:37:33.64,0:37:35.33,中文,,0,0,0,,我首先创建了 rest
Dialogue: 0,0:37:35.33,0:37:36.95,英文,,0,0,0,,There's my brand new int list.
Dialogue: 0,0:37:35.33,0:37:36.95,中文,,0,0,0,,这是我的全新整数列表
Dialogue: 0,0:37:36.95,0:37:38.73,英文,,0,0,0,,And then here's the key step.
Dialogue: 0,0:37:36.95,0:37:38.73,中文,,0,0,0,,然后这是关键的一步
Dialogue: 0,0:37:38.73,0:37:41.81,英文,,0,0,0,,I say, well, L, you used to point to the 10.
Dialogue: 0,0:37:38.73,0:37:41.81,中文,,0,0,0,,我说 L 你过去指向的是 10
Dialogue: 0,0:37:41.81,0:37:42.91,英文,,0,0,0,,I don't like that anymore.
Dialogue: 0,0:37:41.81,0:37:42.91,中文,,0,0,0,,我不再喜欢那个了
Dialogue: 0,0:37:42.91,0:37:46.45,英文,,0,0,0,,I'm going to point you to the new int list, which has a first of five.
Dialogue: 0,0:37:42.91,0:37:46.45,中文,,0,0,0,,我将指向新的整数列表 其中第一个是五
Dialogue: 0,0:37:46.45,0:37:49.63,英文,,0,0,0,,And the rest is whatever L used to point to.
Dialogue: 0,0:37:46.45,0:37:49.63,中文,,0,0,0,,其余的就是以前L所指向的
Dialogue: 0,0:37:49.63,0:37:52.07,英文,,0,0,0,,So that's me building the list backwards.
Dialogue: 0,0:37:49.63,0:37:52.07,中文,,0,0,0,,这就是我反向构建列表的方式
Dialogue: 0,0:37:52.07,0:37:53.77,英文,,0,0,0,,And I still got the same list.
Dialogue: 0,0:37:52.07,0:37:53.77,中文,,0,0,0,,而且我仍然得到了同样的列表
Dialogue: 0,0:37:53.77,0:37:55.72,英文,,0,0,0,,OK, looks great.
Dialogue: 0,0:37:53.77,0:37:55.72,中文,,0,0,0,,看起来很棒
Dialogue: 0,0:37:55.72,0:37:57.79,英文,,0,0,0,,Questions, thoughts?
Dialogue: 0,0:37:55.72,0:37:57.79,中文,,0,0,0,,有问题吗 想法
Dialogue: 0,0:37:57.79,0:38:00.92,英文,,0,0,0,,OK, so this list, it works perfectly fine.
Dialogue: 0,0:37:57.79,0:38:00.92,中文,,0,0,0,,这个列表 它完全正常工作
Dialogue: 0,0:38:00.92,0:38:03.72,英文,,0,0,0,,If you wanted to, you could go out and use this list in the world.
Dialogue: 0,0:38:00.92,0:38:03.72,中文,,0,0,0,,如果你想的话 你可以拿着这个列表出去在世界上使用
Dialogue: 0,0:38:03.72,0:38:07.58,英文,,0,0,0,,But I'm going to say this list is a little bit featureless.
Dialogue: 0,0:38:03.72,0:38:07.58,中文,,0,0,0,,但我要说这个列表有点简陋
Dialogue: 0,0:38:07.58,0:38:14.30,英文,,0,0,0,,Because imagine if I took this code right here, and I gave this to the outside world, and I said, all right,
Dialogue: 0,0:38:07.58,0:38:14.30,中文,,0,0,0,,因为想象一下 如果我拿这段代码 然后把它给外部世界 然后我说 好
Dialogue: 0,0:38:14.30,0:38:15.56,英文,,0,0,0,,That's what you got to use for your list.
Dialogue: 0,0:38:14.30,0:38:15.56,中文,,0,0,0,,这就是你们要用来做列表的东西
Dialogue: 0,0:38:15.56,0:38:17.38,英文,,0,0,0,,This is the Java built-in list.
Dialogue: 0,0:38:15.56,0:38:17.38,中文,,0,0,0,,这就是 Java 内置的列表
Dialogue: 0,0:38:17.38,0:38:20.17,英文,,0,0,0,,Well, what if a user wants to figure out the size of the list?
Dialogue: 0,0:38:17.38,0:38:20.17,中文,,0,0,0,,那么 如果一个用户想要弄清楚列表的大小呢
Dialogue: 0,0:38:20.17,0:38:23.01,英文,,0,0,0,,What if the user wants the 10th item in their list?
Dialogue: 0,0:38:20.17,0:38:23.01,中文,,0,0,0,,如果用户想要他们列表中的第10个项目怎么办
Dialogue: 0,0:38:23.01,0:38:25.49,英文,,0,0,0,,What if the user wants to add items, delete items?
Dialogue: 0,0:38:23.01,0:38:25.49,中文,,0,0,0,,如果用户想要添加项目 删除项目怎么办
Dialogue: 0,0:38:25.49,0:38:33.38,英文,,0,0,0,,They're going to have to figure it all out themselves, because this class that I have published to the world, it does not have any of those features.
Dialogue: 0,0:38:25.49,0:38:33.38,中文,,0,0,0,,他们将不得不自己解决所有这些问题 因为我向世界发布的这个类没有任何这些功能
Dialogue: 0,0:38:33.38,0:38:40.12,英文,,0,0,0,,So then it'd be up to the user to make their own calculations for the size of the list, adding things to the list.
Dialogue: 0,0:38:33.38,0:38:40.12,中文,,0,0,0,,所以用户将需要自己计算列表的大小 并将事物添加到列表中
Dialogue: 0,0:38:40.12,0:38:40.68,英文,,0,0,0,,I don't like that.
Dialogue: 0,0:38:40.12,0:38:40.68,中文,,0,0,0,,我不喜欢这样
Dialogue: 0,0:38:40.68,0:38:43.07,英文,,0,0,0,,I want to make life easy for my users.
Dialogue: 0,0:38:40.68,0:38:43.07,中文,,0,0,0,,我想让我的用户的生活变得更容易
Dialogue: 0,0:38:43.07,0:38:49.05,英文,,0,0,0,,So I'm going to add a couple more methods just to help my users be able to use this list.
Dialogue: 0,0:38:43.07,0:38:49.05,中文,,0,0,0,,所以我将添加几种方法来帮助我的用户能够使用这个列表
Dialogue: 0,0:38:49.05,0:38:51.03,英文,,0,0,0,,So let's go ahead and do that.
Dialogue: 0,0:38:49.05,0:38:51.03,中文,,0,0,0,,那么我们继续并且做到这一点
Dialogue: 0,0:38:51.03,0:38:54.61,英文,,0,0,0,,Certainly, I don't want my users to have to calculate the size of the list themselves.
Dialogue: 0,0:38:51.03,0:38:54.61,中文,,0,0,0,,当然 我不希望我的用户自己计算列表的大小
Dialogue: 0,0:38:54.61,0:38:58.14,英文,,0,0,0,,So let's give the users a size method.
Dialogue: 0,0:38:54.61,0:38:58.14,中文,,0,0,0,,那么让我们给用户一个大小方法
Dialogue: 0,0:38:58.14,0:38:59.50,英文,,0,0,0,,It's going to return an integer.
Dialogue: 0,0:38:58.14,0:38:59.50,中文,,0,0,0,,它将返回一个整数
Dialogue: 0,0:38:59.50,0:39:01.79,英文,,0,0,0,,OK, great.
Dialogue: 0,0:38:59.50,0:39:01.79,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:39:01.79,0:39:04.95,英文,,0,0,0,,So I'll write a comment just to remind myself what's going on here.
Dialogue: 0,0:39:01.79,0:39:04.95,中文,,0,0,0,,所以我会写一个注释只是为了提醒自己这里发生了什么
Dialogue: 0,0:39:04.95,0:39:09.63,英文,,0,0,0,,So I'll say, returns the size of the list using recursion.
Dialogue: 0,0:39:04.95,0:39:09.63,中文,,0,0,0,,所以我会说 使用递归返回列表的大小
Dialogue: 0,0:39:09.63,0:39:10.53,英文,,0,0,0,,Why recursion?
Dialogue: 0,0:39:09.63,0:39:10.53,中文,,0,0,0,,为什么要用递归
Dialogue: 0,0:39:10.53,0:39:11.94,英文,,0,0,0,,Because I want to practice it together.
Dialogue: 0,0:39:10.53,0:39:11.94,中文,,0,0,0,,因为我想一起练习它
Dialogue: 0,0:39:11.94,0:39:13.90,英文,,0,0,0,,So let's do some recursion.
Dialogue: 0,0:39:11.94,0:39:13.90,中文,,0,0,0,,那么我们就来做一些递归
Dialogue: 0,0:39:13.90,0:39:16.72,英文,,0,0,0,,So remember, how does recursion work?
Dialogue: 0,0:39:13.90,0:39:16.72,中文,,0,0,0,,所以记住 递归是如何工作的呢
Dialogue: 0,0:39:16.72,0:39:19.30,英文,,0,0,0,,Well, first, I got to think of my base case.
Dialogue: 0,0:39:16.72,0:39:19.30,中文,,0,0,0,,首先 我要考虑我的基本情况
Dialogue: 0,0:39:19.30,0:39:24.52,英文,,0,0,0,,The base case is, what is the simplest possible list I can think of that I could call size on?
Dialogue: 0,0:39:19.30,0:39:24.52,中文,,0,0,0,,基本情况是 我能想到的可能是最简单的列表 我可以调用它的大小吗
Dialogue: 0,0:39:24.52,0:39:30.77,英文,,0,0,0,,Well, I don't know about you, but I feel like a very simple list would be a list where the rest is null.
Dialogue: 0,0:39:24.52,0:39:30.77,中文,,0,0,0,,我不知道你怎么想 但我觉得一个非常简单的列表可能是一个其余部分为null的列表
Dialogue: 0,0:39:30.77,0:39:33.43,英文,,0,0,0,,If the rest is null, it's a very small list.
Dialogue: 0,0:39:30.77,0:39:33.43,中文,,0,0,0,,如果剩下的是空的 那就是一个非常小的列表
Dialogue: 0,0:39:33.43,0:39:37.61,英文,,0,0,0,,How big is a list if the rest is null?
Dialogue: 0,0:39:33.43,0:39:37.61,中文,,0,0,0,,如果剩下的是空的 列表有多大
Dialogue: 0,0:39:37.61,0:39:39.03,英文,,0,0,0,,Audience participation.
Dialogue: 0,0:39:37.61,0:39:39.03,中文,,0,0,0,,观众参与
Dialogue: 0,0:39:39.03,0:39:40.69,英文,,0,0,0,,How big is the list?
Dialogue: 0,0:39:39.03,0:39:40.69,中文,,0,0,0,,列表有多大
Dialogue: 0,0:39:40.69,0:39:40.99,英文,,0,0,0,,One.
Dialogue: 0,0:39:40.69,0:39:40.99,中文,,0,0,0,,一个
Dialogue: 0,0:39:40.99,0:39:41.88,英文,,0,0,0,,OK, amazing.
Dialogue: 0,0:39:40.99,0:39:41.88,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:39:41.88,0:39:44.50,英文,,0,0,0,,So I'll return one if the rest is null.
Dialogue: 0,0:39:41.88,0:39:44.50,中文,,0,0,0,,所以如果剩下的是空的 我会返回一个
Dialogue: 0,0:39:44.50,0:39:47.14,英文,,0,0,0,,Otherwise, my list has more than one thing.
Dialogue: 0,0:39:44.50,0:39:47.14,中文,,0,0,0,,否则 我的列表里有不止一样东西
Dialogue: 0,0:39:47.14,0:39:49.14,英文,,0,0,0,,So how do I know how big the list is?
Dialogue: 0,0:39:47.14,0:39:49.14,中文,,0,0,0,,那我怎么知道列表有多大呢
Dialogue: 0,0:39:49.14,0:39:50.84,英文,,0,0,0,,Well, I want to use recursion.
Dialogue: 0,0:39:49.14,0:39:50.84,中文,,0,0,0,,我想要使用递归
Dialogue: 0,0:39:50.84,0:39:55.38,英文,,0,0,0,,So I want to be able to call size again on the rest of my list.
Dialogue: 0,0:39:50.84,0:39:55.38,中文,,0,0,0,,所以我想要能够在我的列表的其余部分上再次调用 size
Dialogue: 0,0:39:55.38,0:39:56.74,英文,,0,0,0,,So how do I do that?
Dialogue: 0,0:39:55.38,0:39:56.74,中文,,0,0,0,,那我该怎么做呢
Dialogue: 0,0:39:56.74,0:39:58.87,英文,,0,0,0,,Well, I could say,
Dialogue: 0,0:39:56.74,0:39:58.87,中文,,0,0,0,,我可以说
Dialogue: 0,0:39:58.87,0:40:01.79,英文,,0,0,0,,Hmm, well, how big is the rest of my list?
Dialogue: 0,0:39:58.87,0:40:01.79,中文,,0,0,0,,那么 我的列表的其余部分有多大呢
Dialogue: 0,0:40:01.79,0:40:02.47,英文,,0,0,0,,I don't know.
Dialogue: 0,0:40:01.79,0:40:02.47,中文,,0,0,0,,我不知道
Dialogue: 0,0:40:02.47,0:40:03.65,英文,,0,0,0,,But look right there.
Dialogue: 0,0:40:02.47,0:40:03.65,中文,,0,0,0,,但是看右边
Dialogue: 0,0:40:03.65,0:40:06.09,英文,,0,0,0,,I could just call size on the rest of my list.
Dialogue: 0,0:40:03.65,0:40:06.09,中文,,0,0,0,,我可以直接在我的列表的其余部分调用size
Dialogue: 0,0:40:06.09,0:40:08.77,英文,,0,0,0,,So I'll say, the rest of my list, I don't know how big you are.
Dialogue: 0,0:40:06.09,0:40:08.77,中文,,0,0,0,,所以我会说 我的列表的其余部分 我不知道你有多大
Dialogue: 0,0:40:08.77,0:40:10.53,英文,,0,0,0,,But I'm just going to call size on you.
Dialogue: 0,0:40:08.77,0:40:10.53,中文,,0,0,0,,但我只是会在你身上调用size
Dialogue: 0,0:40:10.53,0:40:12.75,英文,,0,0,0,,And you're going to tell me how big you are.
Dialogue: 0,0:40:10.53,0:40:12.75,中文,,0,0,0,,然后你会告诉我你有多大
Dialogue: 0,0:40:12.75,0:40:14.01,英文,,0,0,0,,And am I done?
Dialogue: 0,0:40:12.75,0:40:14.01,中文,,0,0,0,,我完成了吗
Dialogue: 0,0:40:14.01,0:40:14.37,英文,,0,0,0,,Not quite.
Dialogue: 0,0:40:14.01,0:40:14.37,中文,,0,0,0,,不太对
Dialogue: 0,0:40:14.37,0:40:15.06,英文,,0,0,0,,There's one thing.
Dialogue: 0,0:40:14.37,0:40:15.06,中文,,0,0,0,,有一点要注意
Dialogue: 0,0:40:15.06,0:40:19.52,英文,,0,0,0,,Because however big the rest of my list is, how big is the total list?
Dialogue: 0,0:40:15.06,0:40:19.52,中文,,0,0,0,,因为无论我的列表中有多少其他项 总列表有多大
Dialogue: 0,0:40:19.52,0:40:24.52,英文,,0,0,0,,It's one bigger, because I have to count my item plus the size of everybody else.
Dialogue: 0,0:40:19.52,0:40:24.52,中文,,0,0,0,,总列表要再加一 因为我得数我的这一项再加上其他所有项的大小
Dialogue: 0,0:40:24.52,0:40:30.95,英文,,0,0,0,,So I will return one plus the size of however big everybody else the rest of my list is.
Dialogue: 0,0:40:24.52,0:40:30.95,中文,,0,0,0,,所以我会返回一加上其他所有项的大小 也就是我的列表有多大
Dialogue: 0,0:40:30.95,0:40:32.57,英文,,0,0,0,,So that's my recursive size method.
Dialogue: 0,0:40:30.95,0:40:32.57,中文,,0,0,0,,这就是我的递归大小方法
Dialogue: 0,0:40:32.57,0:40:38.60,英文,,0,0,0,,As we said last time, if you feel more comfortable saying something like this dot rest dot size, you can do so.
Dialogue: 0,0:40:32.57,0:40:38.60,中文,,0,0,0,,就像上次说的那样 如果你更习惯像这样写：this.rest.size 你也可以这样做
Dialogue: 0,0:40:38.60,0:40:42.00,英文,,0,0,0,,This year is kind of optional, but more of a Java syntax thing.
Dialogue: 0,0:40:38.60,0:40:42.00,中文,,0,0,0,,今年是可选的 但更像是Java语法的一部分
Dialogue: 0,0:40:42.00,0:40:44.68,英文,,0,0,0,,OK, so this size method, it looks great.
Dialogue: 0,0:40:42.00,0:40:44.68,中文,,0,0,0,,所以这个size方法 看起来很棒
Dialogue: 0,0:40:44.68,0:40:48.16,英文,,0,0,0,,I'm going to go into the visualizer so we can witness it together.
Dialogue: 0,0:40:44.68,0:40:48.16,中文,,0,0,0,,我要进入可视化工具 这样我们可以一起看到
Dialogue: 0,0:40:48.16,0:40:49.62,英文,,0,0,0,,So I'm going to create my list.
Dialogue: 0,0:40:48.16,0:40:49.62,中文,,0,0,0,,所以我要创建我的列表
Dialogue: 0,0:40:49.62,0:40:51.46,英文,,0,0,0,,OK, that's a lot of scrolling.
Dialogue: 0,0:40:49.62,0:40:51.46,中文,,0,0,0,,这是很多滚动
Dialogue: 0,0:40:51.46,0:40:53.49,英文,,0,0,0,,I'm going to create my list.
Dialogue: 0,0:40:51.46,0:40:53.49,中文,,0,0,0,,我要创建我的列表
Dialogue: 0,0:40:53.49,0:40:55.57,英文,,0,0,0,,Eventually, it will be created.
Dialogue: 0,0:40:53.49,0:40:55.57,中文,,0,0,0,,最终 它将被创建
Dialogue: 0,0:40:55.57,0:40:57.75,英文,,0,0,0,,OK, now it's time to call size.
Dialogue: 0,0:40:55.57,0:40:57.75,中文,,0,0,0,,现在是调用size的时候了
Dialogue: 0,0:40:57.75,0:40:59.09,英文,,0,0,0,,So here I'm calling size.
Dialogue: 0,0:40:57.75,0:40:59.09,中文,,0,0,0,,所以这里我正在调用size
Dialogue: 0,0:40:59.09,0:40:59.69,英文,,0,0,0,,Well, what happens?
Dialogue: 0,0:40:59.09,0:40:59.69,中文,,0,0,0,,那么 会发生什么呢
Dialogue: 0,0:40:59.69,0:41:02.87,英文,,0,0,0,,I start at the very front, and I say, is my rest null?
Dialogue: 0,0:40:59.69,0:41:02.87,中文,,0,0,0,,我从最前面开始 然后我说 我的rest是null吗
Dialogue: 0,0:41:02.87,0:41:03.47,英文,,0,0,0,,I look.
Dialogue: 0,0:41:02.87,0:41:03.47,中文,,0,0,0,,我看看
Dialogue: 0,0:41:03.47,0:41:04.47,英文,,0,0,0,,There's an arrow.
Dialogue: 0,0:41:03.47,0:41:04.47,中文,,0,0,0,,有一个箭头
Dialogue: 0,0:41:04.47,0:41:05.45,英文,,0,0,0,,It is definitely not null.
Dialogue: 0,0:41:04.47,0:41:05.45,中文,,0,0,0,,它绝对不是null
Dialogue: 0,0:41:05.45,0:41:06.87,英文,,0,0,0,,So I'll skip this case.
Dialogue: 0,0:41:05.45,0:41:06.87,中文,,0,0,0,,所以我会跳过这个案例
Dialogue: 0,0:41:06.87,0:41:09.21,英文,,0,0,0,,And I will return 1 plus.
Dialogue: 0,0:41:06.87,0:41:09.21,中文,,0,0,0,,然后我会返回1加
Dialogue: 0,0:41:09.21,0:41:10.53,英文,,0,0,0,,however big my buddy is.
Dialogue: 0,0:41:09.21,0:41:10.53,中文,,0,0,0,,不管我的伙伴有多大
Dialogue: 0,0:41:10.53,0:41:13.45,英文,,0,0,0,,So I'll go over to my buddy, and I'll say, how big are you?
Dialogue: 0,0:41:10.53,0:41:13.45,中文,,0,0,0,,所以我会走到我朋友那里 然后我会说 你有多大
Dialogue: 0,0:41:13.45,0:41:14.56,英文,,0,0,0,,And the buddy will say, I don't know.
Dialogue: 0,0:41:13.45,0:41:14.56,中文,,0,0,0,,然后朋友会说 我不知道
Dialogue: 0,0:41:14.56,0:41:16.12,英文,,0,0,0,,Let's call size to find out.
Dialogue: 0,0:41:14.56,0:41:16.12,中文,,0,0,0,,让我们调用size来找出
Dialogue: 0,0:41:16.12,0:41:18.68,英文,,0,0,0,,And the buddy thinks, is my rest null?
Dialogue: 0,0:41:16.12,0:41:18.68,中文,,0,0,0,,然后朋友想 我的休息是null吗
Dialogue: 0,0:41:18.68,0:41:19.02,英文,,0,0,0,,No.
Dialogue: 0,0:41:18.68,0:41:19.02,中文,,0,0,0,,不是.
Dialogue: 0,0:41:19.02,0:41:23.64,英文,,0,0,0,,OK, so I got to ask my buddy to the right, the 15, how big are you?
Dialogue: 0,0:41:19.02,0:41:23.64,中文,,0,0,0,,好的,我得问问我右边的朋友,15号,你有多大?
Dialogue: 0,0:41:23.64,0:41:25.00,英文,,0,0,0,,So I go over here.
Dialogue: 0,0:41:23.64,0:41:25.00,中文,,0,0,0,,所以我过来.
Dialogue: 0,0:41:25.00,0:41:27.15,英文,,0,0,0,,You see how I'm calling size over and over again?
Dialogue: 0,0:41:25.00,0:41:27.15,中文,,0,0,0,,你看我一遍又一遍地调用尺寸吗?
Dialogue: 0,0:41:27.15,0:41:28.57,英文,,0,0,0,,Now I'm calling size on.
Dialogue: 0,0:41:27.15,0:41:28.57,中文,,0,0,0,,现在我正在调用大小.
Dialogue: 0,0:41:28.57,0:41:32.53,英文,,0,0,0,,The arrow tells me on this int node right here, int list.
Dialogue: 0,0:41:28.57,0:41:32.53,中文,,0,0,0,,箭头告诉我在这个整数节点上,整数列表.
Dialogue: 0,0:41:32.53,0:41:33.83,英文,,0,0,0,,It's got first to 15.
Dialogue: 0,0:41:32.53,0:41:33.83,中文,,0,0,0,,它有第一个到15
Dialogue: 0,0:41:33.83,0:41:36.51,英文,,0,0,0,,And it looks at its rest and says, yeah, my rest is null.
Dialogue: 0,0:41:33.83,0:41:36.51,中文,,0,0,0,,它看着它的休息 说 是的 我的休息是空的
Dialogue: 0,0:41:36.51,0:41:37.55,英文,,0,0,0,,I'm a tiny list.
Dialogue: 0,0:41:36.51,0:41:37.55,中文,,0,0,0,,我是一个微小的列表
Dialogue: 0,0:41:37.55,0:41:39.62,英文,,0,0,0,,I have no further items.
Dialogue: 0,0:41:37.55,0:41:39.62,中文,,0,0,0,,我没有更多的项目
Dialogue: 0,0:41:39.62,0:41:41.80,英文,,0,0,0,,So my size is 1.
Dialogue: 0,0:41:39.62,0:41:41.80,中文,,0,0,0,,所以我的大小是1
Dialogue: 0,0:41:41.80,0:41:42.92,英文,,0,0,0,,So it returns 1.
Dialogue: 0,0:41:41.80,0:41:42.92,中文,,0,0,0,,所以它返回1
Dialogue: 0,0:41:42.92,0:41:44.00,英文,,0,0,0,,It shouts to the world.
Dialogue: 0,0:41:42.92,0:41:44.00,中文,,0,0,0,,它向世界大喊
Dialogue: 0,0:41:44.00,0:41:46.26,英文,,0,0,0,,And it tells its buddy, hey, I'm of size 1.
Dialogue: 0,0:41:44.00,0:41:46.26,中文,,0,0,0,,然后它告诉它的伙伴 嘿 我大小为1
Dialogue: 0,0:41:46.26,0:41:48.44,英文,,0,0,0,,And the buddy says, OK, well, you're 1.
Dialogue: 0,0:41:46.26,0:41:48.44,中文,,0,0,0,,然后朋友说 你是1
Dialogue: 0,0:41:48.44,0:41:50.04,英文,,0,0,0,,I have one more item.
Dialogue: 0,0:41:48.44,0:41:50.04,中文,,0,0,0,,我有一个额外的项目
Dialogue: 0,0:41:50.04,0:41:52.02,英文,,0,0,0,,1 plus 1 is 2.
Dialogue: 0,0:41:50.04,0:41:52.02,中文,,0,0,0,,1加1等于2
Dialogue: 0,0:41:52.02,0:41:54.52,英文,,0,0,0,,OK, wonderful 61B knowledge.
Dialogue: 0,0:41:52.02,0:41:54.52,中文,,0,0,0,,很棒的61B知识
Dialogue: 0,0:41:54.52,0:41:55.64,英文,,0,0,0,,1 plus 1 is 2.
Dialogue: 0,0:41:54.52,0:41:55.64,中文,,0,0,0,,1加1等于2
Dialogue: 0,0:41:55.64,0:41:58.00,英文,,0,0,0,,And so this item returns 2.
Dialogue: 0,0:41:55.64,0:41:58.00,中文,,0,0,0,,所以这个项目返回2
Dialogue: 0,0:41:58.00,0:42:01.12,英文,,0,0,0,,Then I go back here to my original first list.
Dialogue: 0,0:41:58.00,0:42:01.12,中文,,0,0,0,,然后我回到我的原始第一个列表
Dialogue: 0,0:42:01.12,0:42:03.49,英文,,0,0,0,,And it says, well, my buddy said they were 2.
Dialogue: 0,0:42:01.12,0:42:03.49,中文,,0,0,0,,它说 我的哥们说它们是2
Dialogue: 0,0:42:03.49,0:42:05.17,英文,,0,0,0,,And I have one extra item.
Dialogue: 0,0:42:03.49,0:42:05.17,中文,,0,0,0,,我多了一样东西
Dialogue: 0,0:42:05.17,0:42:08.73,英文,,0,0,0,,So that gives me a total of three.
Dialogue: 0,0:42:05.17,0:42:08.73,中文,,0,0,0,,所以总共就有三个了
Dialogue: 0,0:42:08.73,0:42:10.97,英文,,0,0,0,,That's my recursive size method.
Dialogue: 0,0:42:08.73,0:42:10.97,中文,,0,0,0,,这就是我的递归大小方法
Dialogue: 0,0:42:10.97,0:42:12.61,英文,,0,0,0,,OK, questions, thoughts?
Dialogue: 0,0:42:10.97,0:42:12.61,中文,,0,0,0,,好的 问题 想法
Dialogue: 0,0:42:12.61,0:42:15.63,英文,,0,0,0,,I have two more functions to show you, so don't go home yet.
Dialogue: 0,0:42:12.61,0:42:15.63,中文,,0,0,0,,我还有两个函数要给你看 所以别走呀
Dialogue: 0,0:42:15.63,0:42:18.96,英文,,0,0,0,,OK, so this size method, it works perfectly fine.
Dialogue: 0,0:42:15.63,0:42:18.96,中文,,0,0,0,,这个大小方法 完全没问题
Dialogue: 0,0:42:18.96,0:42:21.26,英文,,0,0,0,,Now users don't have to write their own size method.
Dialogue: 0,0:42:18.96,0:42:21.26,中文,,0,0,0,,现在用户不必自己编写大小方法
Dialogue: 0,0:42:21.26,0:42:24.74,英文,,0,0,0,,They can just use the one that I've provided to them, which is quite nice.
Dialogue: 0,0:42:21.26,0:42:24.74,中文,,0,0,0,,他们可以直接使用我提供给他们的方法 这非常方便
Dialogue: 0,0:42:24.74,0:42:29.80,英文,,0,0,0,,But just to see what happened if I didn't want to use recursion, I'm going to write a different method.
Dialogue: 0,0:42:24.74,0:42:29.80,中文,,0,0,0,,但是 为了看看如果我不想使用递归会发生什么 我将编写一个不同的方法
Dialogue: 0,0:42:29.80,0:42:31.67,英文,,0,0,0,,It's still going to return the size.
Dialogue: 0,0:42:29.80,0:42:31.67,中文,,0,0,0,,它仍然会返回大小
Dialogue: 0,0:42:31.67,0:42:36.77,英文,,0,0,0,,But I'm going to have it returns the size of the list using no recursion.
Dialogue: 0,0:42:31.67,0:42:36.77,中文,,0,0,0,,但我将使其不使用递归返回列表的大小
Dialogue: 0,0:42:36.77,0:42:40.69,英文,,0,0,0,,So this time, I want to do it iteratively just to see what the pattern looks like.
Dialogue: 0,0:42:36.77,0:42:40.69,中文,,0,0,0,,所以这一次 我想以迭代的方式来看看模式是什么样子的
Dialogue: 0,0:42:40.69,0:42:41.89,英文,,0,0,0,,So how would this work?
Dialogue: 0,0:42:40.69,0:42:41.89,中文,,0,0,0,,那么这会是怎样工作的呢
Dialogue: 0,0:42:41.89,0:42:47.77,英文,,0,0,0,,Well, common thing I'm going to do is I'm going to write or declare a new int list pointer.
Dialogue: 0,0:42:41.89,0:42:47.77,中文,,0,0,0,,我通常要做的事情就是写或声明一个新的整数列表指针
Dialogue: 0,0:42:47.77,0:42:50.43,英文,,0,0,0,,Is this creating a brand new int list with a number inside?
Dialogue: 0,0:42:47.77,0:42:50.43,中文,,0,0,0,,这是在创建一个带有数字的全新整数列表吗
Dialogue: 0,0:42:50.43,0:42:51.11,英文,,0,0,0,,No.
Dialogue: 0,0:42:50.43,0:42:51.11,中文,,0,0,0,,不是
Dialogue: 0,0:42:51.11,0:42:55.58,英文,,0,0,0,,All that this will fit is an arrow that points at one of the int lists.
Dialogue: 0,0:42:51.11,0:42:55.58,中文,,0,0,0,,所有这将适合的是一个指向其中一个整数列表的箭头
Dialogue: 0,0:42:55.58,0:42:58.10,英文,,0,0,0,,And what I'm going to try to do is use this little pointer.
Dialogue: 0,0:42:55.58,0:42:58.10,中文,,0,0,0,,而我要尝试做的就是使用这个小指针
Dialogue: 0,0:42:58.10,0:42:59.26,英文,,0,0,0,,It's like my little finger.
Dialogue: 0,0:42:58.10,0:42:59.26,中文,,0,0,0,,就像我的小指一样
Dialogue: 0,0:42:59.26,0:43:01.76,英文,,0,0,0,,I'm going to count like 1, 2, 3.
Dialogue: 0,0:42:59.26,0:43:01.76,中文,,0,0,0,,我会数1、2、3
Dialogue: 0,0:43:01.76,0:43:04.44,英文,,0,0,0,,So I'll use this little pointer to scan through the list.
Dialogue: 0,0:43:01.76,0:43:04.44,中文,,0,0,0,,那么我将使用这个小指针来扫描列表
Dialogue: 0,0:43:04.44,0:43:06.81,英文,,0,0,0,,So I'm going to start it at the current item.
Dialogue: 0,0:43:04.44,0:43:06.81,中文,,0,0,0,,所以我会从当前项目开始
Dialogue: 0,0:43:06.81,0:43:07.55,英文,,0,0,0,,What's the current item?
Dialogue: 0,0:43:06.81,0:43:07.55,中文,,0,0,0,,当前项目是什么
Dialogue: 0,0:43:07.55,0:43:08.89,英文,,0,0,0,,How do I find the current item?
Dialogue: 0,0:43:07.55,0:43:08.89,中文,,0,0,0,,我如何找到当前项目
Dialogue: 0,0:43:08.89,0:43:10.63,英文,,0,0,0,,The current item is this.
Dialogue: 0,0:43:08.89,0:43:10.63,中文,,0,0,0,,当前项目就是这个
Dialogue: 0,0:43:10.63,0:43:11.59,英文,,0,0,0,,for an item.
Dialogue: 0,0:43:10.63,0:43:11.59,中文,,0,0,0,,对于一个项目
Dialogue: 0,0:43:11.59,0:43:16.76,英文,,0,0,0,,Then I'll say, OK, well, while p is not equal to null, so if I scan all the way through,
Dialogue: 0,0:43:11.59,0:43:16.76,中文,,0,0,0,,然后我会说 好的 那么 当 p 不等于 null 时 所以如果我一直扫描到最后
Dialogue: 0,0:43:16.76,0:43:21.20,英文,,0,0,0,,I'm going to keep scanning till I fall off the end or my finger goes to the end of the list.
Dialogue: 0,0:43:16.76,0:43:21.20,中文,,0,0,0,,我会继续扫描直到我掉到末尾或者我的手指到达列表的末尾
Dialogue: 0,0:43:21.20,0:43:23.56,英文,,0,0,0,,And I'll say p equals p dot rest.
Dialogue: 0,0:43:21.20,0:43:23.56,中文,,0,0,0,,然后我会说 p 等于 p 点 rest
Dialogue: 0,0:43:23.56,0:43:27.62,英文,,0,0,0,,So that's taking this p and incrementing it all the way through the list.
Dialogue: 0,0:43:23.56,0:43:27.62,中文,,0,0,0,,所以这就是取这个 p 一直递增它穿过整个列表
Dialogue: 0,0:43:27.62,0:43:29.72,英文,,0,0,0,,And as I go, I want to keep track of my size.
Dialogue: 0,0:43:27.62,0:43:29.72,中文,,0,0,0,,随着我的进行 我想要追踪我的大小
Dialogue: 0,0:43:29.72,0:43:33.21,英文,,0,0,0,,So I'll say, size, you start at 0.
Dialogue: 0,0:43:29.72,0:43:33.21,中文,,0,0,0,,所以我会说 大小 你从0开始
Dialogue: 0,0:43:33.21,0:43:37.23,英文,,0,0,0,,Every time I find a new int list, I'm going to take total size.
Dialogue: 0,0:43:33.21,0:43:37.23,中文,,0,0,0,,每次我找到一个新的 int 列表 我都会取总大小
Dialogue: 0,0:43:37.23,0:43:38.68,英文,,0,0,0,,I'm going to add 1 to it.
Dialogue: 0,0:43:37.23,0:43:38.68,中文,,0,0,0,,我会加1到它上面
Dialogue: 0,0:43:38.68,0:43:42.02,英文,,0,0,0,,And then when I'm done, I'll return total size.
Dialogue: 0,0:43:38.68,0:43:42.02,中文,,0,0,0,,然后当我完成时 我会返回总大小
Dialogue: 0,0:43:42.02,0:43:43.62,英文,,0,0,0,,OK, looks great.
Dialogue: 0,0:43:42.02,0:43:43.62,中文,,0,0,0,,看起来不错
Dialogue: 0,0:43:43.62,0:43:45.89,英文,,0,0,0,,For time reasons, I'm not going to demo it in full detail.
Dialogue: 0,0:43:43.62,0:43:45.89,中文,,0,0,0,,因为时间原因 我不打算完全演示它的细节
Dialogue: 0,0:43:45.89,0:43:48.35,英文,,0,0,0,,There is a visualizer link if you're curious.
Dialogue: 0,0:43:45.89,0:43:48.35,中文,,0,0,0,,如果你好奇的话 有一个可视化链接
Dialogue: 0,0:43:48.35,0:43:50.21,英文,,0,0,0,,But you can play with it a little bit.
Dialogue: 0,0:43:48.35,0:43:50.21,中文,,0,0,0,,但你可以稍微玩一下
Dialogue: 0,0:43:50.21,0:43:56.70,英文,,0,0,0,,And what you'll see is, if you look at the P, it's starting at 5.
Dialogue: 0,0:43:50.21,0:43:56.70,中文,,0,0,0,,你会发现 如果你看P 它从5开始
Dialogue: 0,0:43:56.70,0:43:58.38,英文,,0,0,0,,And then we skip over.
Dialogue: 0,0:43:56.70,0:43:58.38,中文,,0,0,0,,然后我们跳过去
Dialogue: 0,0:43:58.38,0:44:00.54,英文,,0,0,0,,Now it's pointing at the 10.
Dialogue: 0,0:43:58.38,0:44:00.54,中文,,0,0,0,,现在它指向10
Dialogue: 0,0:44:00.54,0:44:01.50,英文,,0,0,0,,Then I skip over.
Dialogue: 0,0:44:00.54,0:44:01.50,中文,,0,0,0,,然后我跳过去
Dialogue: 0,0:44:01.50,0:44:02.92,英文,,0,0,0,,Now it's pointing at the 15.
Dialogue: 0,0:44:01.50,0:44:02.92,中文,,0,0,0,,现在它指向15了
Dialogue: 0,0:44:02.92,0:44:04.67,英文,,0,0,0,,So that's iterative size.
Dialogue: 0,0:44:02.92,0:44:04.67,中文,,0,0,0,,所以这是迭代大小
Dialogue: 0,0:44:04.67,0:44:09.67,英文,,0,0,0,,Okay, maybe stuff you've seen before, but we'll code it anyway just for completeness.
Dialogue: 0,0:44:04.67,0:44:09.67,中文,,0,0,0,,也许是你以前见过的东西 但我们还是会编码一下 只是为了完整性
Dialogue: 0,0:44:09.67,0:44:11.99,英文,,0,0,0,,Okay, final thing before we all go home.
Dialogue: 0,0:44:09.67,0:44:11.99,中文,,0,0,0,,我们回家之前的最后一件事
Dialogue: 0,0:44:11.99,0:44:14.93,英文,,0,0,0,,This one's a little bit challenging, so we'll try and do it together.
Dialogue: 0,0:44:11.99,0:44:14.93,中文,,0,0,0,,这个有点挑战性 所以我们会尝试一起做
Dialogue: 0,0:44:14.93,0:44:17.44,英文,,0,0,0,,If I don't get through it, you can think about it at home.
Dialogue: 0,0:44:14.93,0:44:17.44,中文,,0,0,0,,如果我没有完成它 你可以回家考虑一下
Dialogue: 0,0:44:17.44,0:44:23.02,英文,,0,0,0,,One thing I want to give to my users is I want to let them be able to get items from my list.
Dialogue: 0,0:44:17.44,0:44:23.02,中文,,0,0,0,,我想给我的用户一样东西 我想让他们能够从我的列表中获取项目
Dialogue: 0,0:44:23.02,0:44:27.74,英文,,0,0,0,,I don't want the user to write something like L dot rest dot rest dot rest dot rest dot rest dot first.
Dialogue: 0,0:44:23.02,0:44:27.74,中文,,0,0,0,,我不希望用户写类似 L 点 rest 点 rest 点 rest 点 rest 点 rest 点 first 这样的东西
Dialogue: 0,0:44:27.74,0:44:28.84,英文,,0,0,0,,It's kind of annoying.
Dialogue: 0,0:44:27.74,0:44:28.84,中文,,0,0,0,,有点烦人
Dialogue: 0,0:44:28.84,0:44:34.36,英文,,0,0,0,,I want to be able to give the user a way to access the fifth element of their list.
Dialogue: 0,0:44:28.84,0:44:34.36,中文,,0,0,0,,我想让用户能够访问他们的列表中的第五个元素
Dialogue: 0,0:44:34.36,0:44:37.20,英文,,0,0,0,,So I'm going to write a method called get.
Dialogue: 0,0:44:34.36,0:44:37.20,中文,,0,0,0,,所以我要写一个叫做 get 的方法
Dialogue: 0,0:44:37.20,0:44:38.70,英文,,0,0,0,,So let's write the method called get.
Dialogue: 0,0:44:37.20,0:44:38.70,中文,,0,0,0,,那么让我们写一个叫做 get 的方法
Dialogue: 0,0:44:38.70,0:44:39.94,英文,,0,0,0,,Wait a minute, you can't go home yet.
Dialogue: 0,0:44:38.70,0:44:39.94,中文,,0,0,0,,等一下 你还不能回家
Dialogue: 0,0:44:39.94,0:44:41.10,英文,,0,0,0,,I haven't written get yet.
Dialogue: 0,0:44:39.94,0:44:41.10,中文,,0,0,0,,我还没写get呢
Dialogue: 0,0:44:41.10,0:44:50.55,英文,,0,0,0,,So I'm going to write get, and I'm going to write a little comment just to remind myself this returns the i-th item in the list.
Dialogue: 0,0:44:41.10,0:44:50.55,中文,,0,0,0,,所以我要写get 并且我会写一个小注释 提醒自己这返回列表中的第i个项
Dialogue: 0,0:44:50.55,0:44:51.99,英文,,0,0,0,,I'm going to write it recursively.
Dialogue: 0,0:44:50.55,0:44:51.99,中文,,0,0,0,,我打算用递归的方式写
Dialogue: 0,0:44:51.99,0:44:55.76,英文,,0,0,0,,If you want to write it iteratively, you can, but I want to practice some recursion together.
Dialogue: 0,0:44:51.99,0:44:55.76,中文,,0,0,0,,如果你想用迭代的方式写 也可以 但我想和大家一起练习一下递归
Dialogue: 0,0:44:55.76,0:44:58.36,英文,,0,0,0,,So let's write get recursively.
Dialogue: 0,0:44:55.76,0:44:58.36,中文,,0,0,0,,那我们就递归地写get吧
Dialogue: 0,0:44:58.36,0:45:00.42,英文,,0,0,0,,What is the base case of get?
Dialogue: 0,0:44:58.36,0:45:00.42,中文,,0,0,0,,get的基本情况是什么
Dialogue: 0,0:45:00.42,0:45:04.79,英文,,0,0,0,,What is the easiest possible thing to get given a list?
Dialogue: 0,0:45:00.42,0:45:04.79,中文,,0,0,0,,在给定列表的情况下 能得到的最简单的东西是什么
Dialogue: 0,0:45:04.79,0:45:06.07,英文,,0,0,0,,Well,
Dialogue: 0,0:45:04.79,0:45:06.07,中文,,0,0,0,,好吧
Dialogue: 0,0:45:06.07,0:45:12.07,英文,,0,0,0,,I look at my list, the easiest possible thing to get would probably be the first thing, because it's right there.
Dialogue: 0,0:45:06.07,0:45:12.07,中文,,0,0,0,,我看了一下我的清单 最容易得到的可能就是第一件事情 因为它就在那儿
Dialogue: 0,0:45:12.07,0:45:18.50,英文,,0,0,0,,So if the thing being requested is the zero with item, zero indexing, then what do I return?
Dialogue: 0,0:45:12.07,0:45:18.50,中文,,0,0,0,,所以如果被请求的东西是零号项目 零索引 那我应该返回什么呢
Dialogue: 0,0:45:18.50,0:45:20.72,英文,,0,0,0,,I just return my own first item.
Dialogue: 0,0:45:18.50,0:45:20.72,中文,,0,0,0,,我只需返回我的第一个项目
Dialogue: 0,0:45:20.72,0:45:24.36,英文,,0,0,0,,I could also say this.first if you wanted to, same thing.
Dialogue: 0,0:45:20.72,0:45:24.36,中文,,0,0,0,,如果你想的话 我也可以说this.first 一样的东西
Dialogue: 0,0:45:24.36,0:45:30.65,英文,,0,0,0,,Otherwise, and this is the part that's a little bit tricky, so blink and you'll miss it.
Dialogue: 0,0:45:24.36,0:45:30.65,中文,,0,0,0,,否则 这就是有点棘手的部分 所以眨眼你就会错过
Dialogue: 0,0:45:30.65,0:45:32.05,英文,,0,0,0,,So now what do I do?
Dialogue: 0,0:45:30.65,0:45:32.05,中文,,0,0,0,,那么现在我该怎么办
Dialogue: 0,0:45:32.05,0:45:36.93,英文,,0,0,0,,How do I recursively call get if the item that they want is not the zeroth item?
Dialogue: 0,0:45:32.05,0:45:36.93,中文,,0,0,0,,如果他们想要的项目不是零号项目 我怎么递归调用获取
Dialogue: 0,0:45:36.93,0:45:44.15,英文,,0,0,0,,So one way to think about this is if I look at my list, and I like drawing pictures or something like this, I look and I say, what if I want item number 10?
Dialogue: 0,0:45:36.93,0:45:44.15,中文,,0,0,0,,那么一种思考方式是 如果我看着我的列表 我喜欢画画或者类似的东西 我看着说 如果我想要第10个项目呢
Dialogue: 0,0:45:44.15,0:45:45.59,英文,,0,0,0,,So I'm like, I'm here.
Dialogue: 0,0:45:44.15,0:45:45.59,中文,,0,0,0,,所以我就像 我在这里
Dialogue: 0,0:45:45.59,0:45:49.90,英文,,0,0,0,,I want the thing 10 people behind me, or 10 items behind me.
Dialogue: 0,0:45:45.59,0:45:49.90,中文,,0,0,0,,我想要的是在我身后的第10个人 或者在我身后的第10个项目
Dialogue: 0,0:45:49.90,0:45:53.90,英文,,0,0,0,,Well, whatever is 10 behind me, if I ask my buddy,
Dialogue: 0,0:45:49.90,0:45:53.90,中文,,0,0,0,,无论在我身后的是什么 如果我问我的朋友
Dialogue: 0,0:45:53.90,0:45:55.92,英文,,0,0,0,,Is it 10 behind my buddy?
Dialogue: 0,0:45:53.90,0:45:55.92,中文,,0,0,0,,它是在我朋友的后面10个吗
Dialogue: 0,0:45:55.92,0:45:56.12,英文,,0,0,0,,No.
Dialogue: 0,0:45:55.92,0:45:56.12,中文,,0,0,0,,不是
Dialogue: 0,0:45:56.12,0:45:58.06,英文,,0,0,0,,How far away is it from my buddy?
Dialogue: 0,0:45:56.12,0:45:58.06,中文,,0,0,0,,离我朋友有多远
Dialogue: 0,0:45:58.06,0:45:59.12,英文,,0,0,0,,It's 9 behind them.
Dialogue: 0,0:45:58.06,0:45:59.12,中文,,0,0,0,,它在他们后面9个
Dialogue: 0,0:45:59.12,0:46:00.92,英文,,0,0,0,,So I'll say that one more time.
Dialogue: 0,0:45:59.12,0:46:00.92,中文,,0,0,0,,我再说一遍
Dialogue: 0,0:46:00.92,0:46:05.69,英文,,0,0,0,,Whatever is 10 behind me is 9 items behind my buddy.
Dialogue: 0,0:46:00.92,0:46:05.69,中文,,0,0,0,,在我后面10个的任何东西 对我朋友来说是后面9个
Dialogue: 0,0:46:05.69,0:46:08.65,英文,,0,0,0,,And then my buddy is going to be 8 items behind their buddy.
Dialogue: 0,0:46:05.69,0:46:08.65,中文,,0,0,0,,然后我的朋友会在他们的朋友后面8个
Dialogue: 0,0:46:08.65,0:46:13.53,英文,,0,0,0,,And then when this 15 asks the person next to it, it's going to be 7 behind them, and so forth.
Dialogue: 0,0:46:08.65,0:46:13.53,中文,,0,0,0,,接着 当这个15询问旁边的人时 它会在他们后面7个 以此类推
Dialogue: 0,0:46:13.53,0:46:16.63,英文,,0,0,0,,So the punchline is, if I want to recursively call get,
Dialogue: 0,0:46:13.53,0:46:16.63,中文,,0,0,0,,所以 如果我想递归调用get
Dialogue: 0,0:46:16.63,0:46:23.62,英文,,0,0,0,,I'm going to call get on the rest of the list, but I can't say, hey, whatever's 10 behind me, my buddy, what's 10 behind you?
Dialogue: 0,0:46:16.63,0:46:23.62,中文,,0,0,0,,我要调用剩下的列表上的 get 方法 但我不能说 嘿 离我还有 10 个的 我的朋友 你身后还有 10 个吗
Dialogue: 0,0:46:23.62,0:46:26.36,英文,,0,0,0,,I should ask my buddy, what's 9 behind them?
Dialogue: 0,0:46:23.62,0:46:26.36,中文,,0,0,0,,我应该问问我的朋友 他们身后还有 9 个吗
Dialogue: 0,0:46:26.36,0:46:31.71,英文,,0,0,0,,So instead of getting their i-th item, I'm going to get their i minus 1-th item.
Dialogue: 0,0:46:26.36,0:46:31.71,中文,,0,0,0,,所以 我不是获取他们的第 i 个项目 而是获取他们的第 i 减 1 个项目
Dialogue: 0,0:46:31.71,0:46:33.19,英文,,0,0,0,,So let's give that a shot, see if it works.
Dialogue: 0,0:46:31.71,0:46:33.19,中文,,0,0,0,,所以让我们试试看 看看它是否有效
Dialogue: 0,0:46:33.19,0:46:37.07,英文,,0,0,0,,If it doesn't work, you can play with the visualizer and get familiar with it.
Dialogue: 0,0:46:33.19,0:46:37.07,中文,,0,0,0,,如果不起作用 你可以玩一下可视化工具 熟悉一下
Dialogue: 0,0:46:37.07,0:46:39.15,英文,,0,0,0,,But I can get, say, the second item in the list.
Dialogue: 0,0:46:37.07,0:46:39.15,中文,,0,0,0,,但我可以获取 比如说 列表中的第二个项目
Dialogue: 0,0:46:39.15,0:46:41.26,英文,,0,0,0,,Hopefully, I'll get 15.
Dialogue: 0,0:46:39.15,0:46:41.26,中文,,0,0,0,,希望我能拿到 15
Dialogue: 0,0:46:41.26,0:46:42.24,英文,,0,0,0,,Maybe not.
Dialogue: 0,0:46:41.26,0:46:42.24,中文,,0,0,0,,也许不是
Dialogue: 0,0:46:42.24,0:46:43.44,英文,,0,0,0,,You're also antsy.
Dialogue: 0,0:46:42.24,0:46:43.44,中文,,0,0,0,,你也很坐立不安
Dialogue: 0,0:46:43.44,0:46:47.88,英文,,0,0,0,,And if I call l.get1, then I can get 10.
Dialogue: 0,0:46:43.44,0:46:47.88,中文,,0,0,0,,如果我调用l.get1 那我就能得到10
Dialogue: 0,0:46:47.88,0:46:50.67,英文,,0,0,0,,OK, it's 2 o'clock, and you are all super antsy.
Dialogue: 0,0:46:47.88,0:46:50.67,中文,,0,0,0,,现在是2点 你们都很坐立不安
Dialogue: 0,0:46:50.67,0:46:53.69,英文,,0,0,0,,So you can all go.
Dialogue: 0,0:46:50.67,0:46:53.69,中文,,0,0,0,,所以你们都可以走了
Dialogue: 0,0:46:53.69,0:46:55.43,英文,,0,0,0,,If you want more practice, there's more.
Dialogue: 0,0:46:53.69,0:46:55.43,中文,,0,0,0,,如果你想要更多练习 还有更多
Dialogue: 0,0:46:55.43,0:46:55.99,英文,,0,0,0,,OK, bye.
Dialogue: 0,0:46:55.43,0:46:55.99,中文,,0,0,0,,好的 再见
