[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 3
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1152
PlayResY: 720

[Aegisub Project Garbage]
Export Encoding: Unicode (UTF-8)
Audio File: D:/python_code/video_tool/video_tool/result/Lecture 5 - Lists 3 DLLists and Arrays.mp4
Video File: D:/python_code/video_tool/video_tool/result/Lecture 5 - Lists 3 DLLists and Arrays.mp4
Video AR Mode: 4
Video AR Value: 1.600000
Video Zoom Percent: 0.500000
Scroll Position: 1546
Active Line: 1534
Video Position: 57565

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,13,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,90,100,0,0,1,1.33333,1.33333,2,6,6,7,1
Style: 英文,Arial,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,90,100,0,0,1,1.33333,1.33333,2,1,1,5,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,90,100,0,0,1,1.33333,1.33333,2,2,2,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:00:07.52,0:00:08.97,英文,,0,0,0,,OK, here we go.
Dialogue: 0,0:00:07.52,0:00:08.97,中文,,0,0,0,,好的 我们开始吧
Dialogue: 0,0:00:08.97,0:00:11.75,英文,,0,0,0,,I'm finally going to start on time one of these days.
Dialogue: 0,0:00:08.97,0:00:11.75,中文,,0,0,0,,我终于有一天会准时开始的
Dialogue: 0,0:00:11.75,0:00:14.41,英文,,0,0,0,,Maybe, kind of, sort of.
Dialogue: 0,0:00:11.75,0:00:14.41,中文,,0,0,0,,或许 有点 可能吧
Dialogue: 0,0:00:14.41,0:00:19.92,英文,,0,0,0,,It's 1.10 and five seconds.
Dialogue: 0,0:00:14.41,0:00:19.92,中文,,0,0,0,,现在是1点10分零五秒
Dialogue: 0,0:00:19.92,0:00:21.14,英文,,0,0,0,,OK.
Dialogue: 0,0:00:19.92,0:00:21.14,中文,,0,0,0,,好的
Dialogue: 0,0:00:21.14,0:00:23.42,英文,,0,0,0,,I'm going to start talking.
Dialogue: 0,0:00:21.14,0:00:23.42,中文,,0,0,0,,我要开始说话了
Dialogue: 0,0:00:23.42,0:00:25.08,英文,,0,0,0,,People can finish their conversations.
Dialogue: 0,0:00:23.42,0:00:25.08,中文,,0,0,0,,大家可以结束他们的谈话
Dialogue: 0,0:00:25.08,0:00:26.10,英文,,0,0,0,,OK.
Dialogue: 0,0:00:25.08,0:00:26.10,中文,,0,0,0,,好的
Dialogue: 0,0:00:26.10,0:00:27.97,英文,,0,0,0,,This is what happened last time.
Dialogue: 0,0:00:26.10,0:00:27.97,中文,,0,0,0,,上次发生了这样的事情
Dialogue: 0,0:00:27.97,0:00:29.93,英文,,0,0,0,,And then I'll start talking about what happened this time.
Dialogue: 0,0:00:27.97,0:00:29.93,中文,,0,0,0,,然后我会开始讲述这次发生的事情
Dialogue: 0,0:00:29.93,0:00:31.81,英文,,0,0,0,,So then you'll have to start listening.
Dialogue: 0,0:00:29.93,0:00:31.81,中文,,0,0,0,,你得开始听了
Dialogue: 0,0:00:31.81,0:00:37.98,英文,,0,0,0,,So last time, we made this series of six non-obvious improvements to our int list.
Dialogue: 0,0:00:31.81,0:00:37.98,中文,,0,0,0,,上次 我们对我们的整数列表进行了一系列不明显的改进
Dialogue: 0,0:00:37.98,0:00:39.56,英文,,0,0,0,,So we started with the int list.
Dialogue: 0,0:00:37.98,0:00:39.56,中文,,0,0,0,,我们从整数列表开始
Dialogue: 0,0:00:39.56,0:00:47.00,英文,,0,0,0,,We said this was a naked recursive data structure, which means that you have to reach directly into the recursive linked list
Dialogue: 0,0:00:39.56,0:00:47.00,中文,,0,0,0,,我们说过这是一个裸递归数据结构 这意味着你必须直接访问递归链表
Dialogue: 0,0:00:47.00,0:00:48.68,英文,,0,0,0,,to perform any operations.
Dialogue: 0,0:00:47.00,0:00:48.68,中文,,0,0,0,,执行任何操作
Dialogue: 0,0:00:48.68,0:00:58.69,英文,,0,0,0,,And then using these six improvements, we built this SList object, which you can think of as some sort of middleman that gives the user something to interact with.
Dialogue: 0,0:00:48.68,0:00:58.69,中文,,0,0,0,,然后利用这六项改进 我们构建了这个 SList 对象 你可以将其视为某种中间人 为用户提供了一些可以交互的东西
Dialogue: 0,0:00:58.69,0:01:07.75,英文,,0,0,0,,So instead of the user reaching directly into the link list and changing the links themselves, the user can walk up to this middleman and say, hey, can you add this item for me?
Dialogue: 0,0:00:58.69,0:01:07.75,中文,,0,0,0,,用户不是直接操作链表并更改链接 而是可以走到这个中间人跟前 说 嘿 能不能帮我添加这个项目
Dialogue: 0,0:01:07.75,0:01:10.13,英文,,0,0,0,,Or can you tell me what the first item is?
Dialogue: 0,0:01:07.75,0:01:10.13,中文,,0,0,0,,或者告诉我第一个项目是什么
Dialogue: 0,0:01:10.13,0:01:11.65,英文,,0,0,0,,Or tell me what the size is?
Dialogue: 0,0:01:10.13,0:01:11.65,中文,,0,0,0,,或者告诉我尺寸是多少
Dialogue: 0,0:01:11.65,0:01:13.27,英文,,0,0,0,,And this middleman will do the job for you.
Dialogue: 0,0:01:11.65,0:01:13.27,中文,,0,0,0,,而这个中间人会替你完成这项工作
Dialogue: 0,0:01:13.27,0:01:15.77,英文,,0,0,0,,So it's a nice little object that
Dialogue: 0,0:01:13.27,0:01:15.77,中文,,0,0,0,,这是一个很棒的小对象
Dialogue: 0,0:01:15.77,0:01:24.19,英文,,0,0,0,,And it gives the user an interface to interact with this list object.
Dialogue: 0,0:01:15.77,0:01:24.19,中文,,0,0,0,,它为用户提供了与此列表对象交互的界面
Dialogue: 0,0:01:24.19,0:01:25.55,英文,,0,0,0,,That's what happened last time.
Dialogue: 0,0:01:24.19,0:01:25.55,中文,,0,0,0,,就是上次发生的事情
Dialogue: 0,0:01:25.55,0:01:28.39,英文,,0,0,0,,So there are some problems with what we did last time.
Dialogue: 0,0:01:25.55,0:01:28.39,中文,,0,0,0,,我们上次做的事情存在一些问题
Dialogue: 0,0:01:28.39,0:01:29.55,英文,,0,0,0,,So we'll fix a couple today.
Dialogue: 0,0:01:28.39,0:01:29.55,中文,,0,0,0,,我们今天会解决一些问题
Dialogue: 0,0:01:29.55,0:01:36.65,英文,,0,0,0,,So one of the problems is that turns out adding to the back of a link list or an S list, it's kind of slow.
Dialogue: 0,0:01:29.55,0:01:36.65,中文,,0,0,0,,其中一个问题是 添加到链表或S列表的末尾 速度有点慢
Dialogue: 0,0:01:36.65,0:01:38.59,英文,,0,0,0,,And well, why is it slow?
Dialogue: 0,0:01:36.65,0:01:38.59,中文,,0,0,0,,那么 为什么会慢呢
Dialogue: 0,0:01:38.59,0:01:41.57,英文,,0,0,0,,Well, let's see what happens when you want to add to the end of the list.
Dialogue: 0,0:01:38.59,0:01:41.57,中文,,0,0,0,,好吧 让我们看看当你想要添加到列表末尾时会发生什么
Dialogue: 0,0:01:41.57,0:01:46.33,英文,,0,0,0,,Well, first I have to start at the Sentinel, which is that faithful companion node always standing at the front of the line.
Dialogue: 0,0:01:41.57,0:01:46.33,中文,,0,0,0,,首先 我必须从哨兵开始 这是那个始终站在队列最前面的忠实伙伴节点
Dialogue: 0,0:01:46.33,0:01:49.93,英文,,0,0,0,,Then I have to scan the entire list until I find the last item.
Dialogue: 0,0:01:46.33,0:01:49.93,中文,,0,0,0,,然后我必须扫描整个列表 直到找到最后一项
Dialogue: 0,0:01:49.93,0:01:53.20,英文,,0,0,0,,And only then can I add something to the end.
Dialogue: 0,0:01:49.93,0:01:53.20,中文,,0,0,0,,只有在那之后我才能添加东西到末尾
Dialogue: 0,0:01:53.20,0:01:54.96,英文,,0,0,0,,This function might be kind of slow.
Dialogue: 0,0:01:53.20,0:01:54.96,中文,,0,0,0,,这个函数可能有点慢
Dialogue: 0,0:01:54.96,0:02:02.03,英文,,0,0,0,,If my list is a billion items long, I'm going to have to scan a billion items every time I want to add something.
Dialogue: 0,0:01:54.96,0:02:02.03,中文,,0,0,0,,如果我的列表有十亿个项目 每次想添加东西都要扫描十亿个项目
Dialogue: 0,0:02:02.03,0:02:05.81,英文,,0,0,0,,So our next improvement is, how do we make that fast?
Dialogue: 0,0:02:02.03,0:02:05.81,中文,,0,0,0,,我们下一个改进是 我们怎么让这个变快呢
Dialogue: 0,0:02:05.81,0:02:12.38,英文,,0,0,0,,Right now, if I want to add last, I have to go to the Sentinel, I have to scan through the whole list, and then add something.
Dialogue: 0,0:02:05.81,0:02:12.38,中文,,0,0,0,,现在 如果我想添加到最后 我必须去哨兵那里 我必须遍历整个列表 然后再添加一些东西
Dialogue: 0,0:02:12.38,0:02:15.86,英文,,0,0,0,,So how do I make that faster?
Dialogue: 0,0:02:12.38,0:02:15.86,中文,,0,0,0,,那我怎么让它变得更快呢
Dialogue: 0,0:02:15.86,0:02:20.06,英文,,0,0,0,,And I think back, this is kind of familiar because we had the same problem with size.
Dialogue: 0,0:02:15.86,0:02:20.06,中文,,0,0,0,,我回想起来 这有点熟悉 因为我们之前遇到过同样的尺寸问题
Dialogue: 0,0:02:20.06,0:02:24.00,英文,,0,0,0,,Remember when we wrote our recursive secret language of the God's version of size?
Dialogue: 0,0:02:20.06,0:02:24.00,中文,,0,0,0,,还记得我们写递归秘密语言的时候吗 上帝版的尺寸
Dialogue: 0,0:02:24.00,0:02:30.11,英文,,0,0,0,,And what we had to do was we had to count the number of items every single time we wanted to compute size.
Dialogue: 0,0:02:24.00,0:02:30.11,中文,,0,0,0,,当时我们不得不每次想要计算尺寸时都要数一数项的数量
Dialogue: 0,0:02:30.11,0:02:31.59,英文,,0,0,0,,So how do we solve that?
Dialogue: 0,0:02:30.11,0:02:31.59,中文,,0,0,0,,那我们怎么解决这个问题呢
Dialogue: 0,0:02:31.59,0:02:36.27,英文,,0,0,0,,Well, the way we solve size being slow is we just kept track of the size as we went.
Dialogue: 0,0:02:31.59,0:02:36.27,中文,,0,0,0,,解决尺寸慢的方法就是我们在前进的过程中一直跟踪尺寸
Dialogue: 0,0:02:36.27,0:02:39.57,英文,,0,0,0,,So every time the size updates, we just change this variable.
Dialogue: 0,0:02:36.27,0:02:39.57,中文,,0,0,0,,每次尺寸更新时 我们只需改变这个变量
Dialogue: 0,0:02:39.57,0:02:43.75,英文,,0,0,0,,When someone wants the size, we just look at this number and give them that number.
Dialogue: 0,0:02:39.57,0:02:43.75,中文,,0,0,0,,有人想知道尺寸时 我们只需看这个数字然后告诉他们那个数字
Dialogue: 0,0:02:43.75,0:02:50.26,英文,,0,0,0,,So maybe inspired by that idea, maybe you see where this is going, maybe
Dialogue: 0,0:02:43.75,0:02:50.26,中文,,0,0,0,,也许受到这个想法的启发 也许你能看出这是什么意思 也许
Dialogue: 0,0:02:50.26,0:02:53.64,英文,,0,0,0,,I will just add a pointer to the end.
Dialogue: 0,0:02:50.26,0:02:53.64,中文,,0,0,0,,我只会在末尾添加一个指针
Dialogue: 0,0:02:53.64,0:03:01.47,英文,,0,0,0,,So this way, instead of having to scan from the front all the way to the back every single time I want to add something, I can just zoom to the end.
Dialogue: 0,0:02:53.64,0:03:01.47,中文,,0,0,0,,这样 每次我想要添加东西时 我就不必从前面一直扫描到后面 我只需跳到末尾
Dialogue: 0,0:03:01.47,0:03:04.45,英文,,0,0,0,,And if I want to add something, I will simply add it there.
Dialogue: 0,0:03:01.47,0:03:04.45,中文,,0,0,0,,如果我想添加东西 我就会简单地在那里添加
Dialogue: 0,0:03:04.45,0:03:07.82,英文,,0,0,0,,So the question for you now, just to throw it to you all, is
Dialogue: 0,0:03:04.45,0:03:07.82,中文,,0,0,0,,那么现在对你们的问题是
Dialogue: 0,0:03:07.82,0:03:09.64,英文,,0,0,0,,Does this solve our problem for add last?
Dialogue: 0,0:03:07.82,0:03:09.64,中文,,0,0,0,,这解决了我们的添加到最后的问题吗
Dialogue: 0,0:03:09.64,0:03:11.18,英文,,0,0,0,,So can we go home now?
Dialogue: 0,0:03:09.64,0:03:11.18,中文,,0,0,0,,那我们现在可以回家了吗
Dialogue: 0,0:03:11.18,0:03:19.52,英文,,0,0,0,,Is it the case that all of our sthos operations are now going to be very fast, even if my list blows up to billions and billions of items?
Dialogue: 0,0:03:11.18,0:03:19.52,中文,,0,0,0,,是这样的吗 我们所有的 sthos 操作现在都会非常快 即使我的列表变得非常非常大
Dialogue: 0,0:03:19.52,0:03:21.92,英文,,0,0,0,,So are we totally good?
Dialogue: 0,0:03:19.52,0:03:21.92,中文,,0,0,0,,那我们完全没问题了吗
Dialogue: 0,0:03:21.92,0:03:23.78,英文,,0,0,0,,Is add going to be slow?
Dialogue: 0,0:03:21.92,0:03:23.78,中文,,0,0,0,,添加会慢吗
Dialogue: 0,0:03:23.78,0:03:25.84,英文,,0,0,0,,Is get going to be slow?
Dialogue: 0,0:03:23.78,0:03:25.84,中文,,0,0,0,,获取会慢吗
Dialogue: 0,0:03:25.84,0:03:27.72,英文,,0,0,0,,Is remove going to be slow?
Dialogue: 0,0:03:25.84,0:03:27.72,中文,,0,0,0,,移除会慢吗
Dialogue: 0,0:03:27.72,0:03:29.12,英文,,0,0,0,,So you can stop and ponder.
Dialogue: 0,0:03:27.72,0:03:29.12,中文,,0,0,0,,那你可以停下来思考一下
Dialogue: 0,0:03:29.12,0:03:31.32,英文,,0,0,0,,I'll kind of talk through how I'd solve this.
Dialogue: 0,0:03:29.12,0:03:31.32,中文,,0,0,0,,我会大致谈谈我会如何解决这个问题
Dialogue: 0,0:03:31.32,0:03:34.32,英文,,0,0,0,,You can try and guess ahead of time what your answer would be.
Dialogue: 0,0:03:31.32,0:03:34.32,中文,,0,0,0,,你可以提前猜测一下你的答案会是什么
Dialogue: 0,0:03:34.32,0:03:36.11,英文,,0,0,0,,So let's see.
Dialogue: 0,0:03:34.32,0:03:36.11,中文,,0,0,0,,那么我们来看看
Dialogue: 0,0:03:36.11,0:03:44.01,英文,,0,0,0,,We know that add is probably OK now, because the way I'd add is I would just skip to the last pointer, and then I would add another item on.
Dialogue: 0,0:03:36.11,0:03:44.01,中文,,0,0,0,,我们知道现在添加可能是可以的 因为我添加的方式是我只需跳到最后一个指针 然后再添加另一个项目
Dialogue: 0,0:03:44.01,0:03:44.91,英文,,0,0,0,,So that seems OK.
Dialogue: 0,0:03:44.01,0:03:44.91,中文,,0,0,0,,这看起来没问题
Dialogue: 0,0:03:44.91,0:03:47.33,英文,,0,0,0,,It doesn't seem like I have to scan the whole list anymore.
Dialogue: 0,0:03:44.91,0:03:47.33,中文,,0,0,0,,看起来我不再需要扫描整个列表了
Dialogue: 0,0:03:47.33,0:03:48.57,英文,,0,0,0,,What about getLast?
Dialogue: 0,0:03:47.33,0:03:48.57,中文,,0,0,0,,getLast呢
Dialogue: 0,0:03:48.57,0:03:50.22,英文,,0,0,0,,How would I get the thing at the end?
Dialogue: 0,0:03:48.57,0:03:50.22,中文,,0,0,0,,我怎么才能得到最后的东西
Dialogue: 0,0:03:50.22,0:03:55.68,英文,,0,0,0,,Well, again, I can just follow this last pointer, skip to the end of the list, and grab that last thing.
Dialogue: 0,0:03:50.22,0:03:55.68,中文,,0,0,0,,再说一遍 我只需跟随这个最后的指针 跳到列表的末尾 然后抓取那最后的东西
Dialogue: 0,0:03:55.68,0:03:57.14,英文,,0,0,0,,What about size?
Dialogue: 0,0:03:55.68,0:03:57.14,中文,,0,0,0,,尺寸呢
Dialogue: 0,0:03:57.14,0:03:58.28,英文,,0,0,0,,Well, size is still right there.
Dialogue: 0,0:03:57.14,0:03:58.28,中文,,0,0,0,,尺寸还在那儿
Dialogue: 0,0:03:58.28,0:04:00.90,英文,,0,0,0,,It's a number. It's also not one of the answer choices.
Dialogue: 0,0:03:58.28,0:04:00.90,中文,,0,0,0,,那是一个数字  它也不是答案选项之一
Dialogue: 0,0:04:00.90,0:04:02.67,英文,,0,0,0,,So that leaves remove.
Dialogue: 0,0:04:00.90,0:04:02.67,中文,,0,0,0,,所以只剩下移除了
Dialogue: 0,0:04:02.67,0:04:04.95,英文,,0,0,0,,How do you remove something from this list?
Dialogue: 0,0:04:02.67,0:04:04.95,中文,,0,0,0,,怎么从这个列表中删除东西
Dialogue: 0,0:04:04.95,0:04:08.18,英文,,0,0,0,,And is it still fast?
Dialogue: 0,0:04:04.95,0:04:08.18,中文,,0,0,0,,它还是快吗
Dialogue: 0,0:04:08.18,0:04:11.82,英文,,0,0,0,,So let's dig into what remove is doing.
Dialogue: 0,0:04:08.18,0:04:11.82,中文,,0,0,0,,那我们来看看 remove 在做什么
Dialogue: 0,0:04:11.82,0:04:19.79,英文,,0,0,0,,We know that if you want to remove something, at first it might seem like, well, remove seems perfectly fine, because I have this pointer to the last element.
Dialogue: 0,0:04:11.82,0:04:19.79,中文,,0,0,0,,我们知道 如果你想要删除某些东西 一开始可能会觉得 remove 看起来挺好的 因为我有指向最后一个元素的指针
Dialogue: 0,0:04:19.79,0:04:27.24,英文,,0,0,0,,So if I want to delete something, I'll just take my big deletion death ray, and I'll point at the last item, and I'll go, phew, and it's all gone.
Dialogue: 0,0:04:19.79,0:04:27.24,中文,,0,0,0,,如果我想删除一些东西 我只需拿出我的大删除死光线 然后指向最后一个项目 然后说“噗” 一切都消失了
Dialogue: 0,0:04:27.24,0:04:29.18,英文,,0,0,0,,And then the 50 will go away.
Dialogue: 0,0:04:27.24,0:04:29.18,中文,,0,0,0,,然后 50 就会消失
Dialogue: 0,0:04:29.18,0:04:34.72,英文,,0,0,0,,But that's not totally enough, because as soon as I take this 50 and I delete it,
Dialogue: 0,0:04:29.18,0:04:34.72,中文,,0,0,0,,但这还不够 因为一旦我拿起这个 50 并删除它
Dialogue: 0,0:04:34.72,0:04:37.64,英文,,0,0,0,,That doesn't mean I'm totally done with removing the last item.
Dialogue: 0,0:04:34.72,0:04:37.64,中文,,0,0,0,,这并不意味着我完全完成了删除最后一个项目
Dialogue: 0,0:04:37.64,0:04:42.23,英文,,0,0,0,,I still have to update this last pointer to tell me where the new last item is.
Dialogue: 0,0:04:37.64,0:04:42.23,中文,,0,0,0,,我还得更新这个最后指针 告诉我新的最后一个项目在哪儿
Dialogue: 0,0:04:42.23,0:04:48.97,英文,,0,0,0,,So it's not enough just to take this 50 and be like, you're gone, because then your list is not going to have a last pointer.
Dialogue: 0,0:04:42.23,0:04:48.97,中文,,0,0,0,,仅仅拿走这个50是不够的 因为那样你的列表就不会有一个最后指针
Dialogue: 0,0:04:48.97,0:04:54.20,英文,,0,0,0,,You also have to update the last pointer to point it to the item before it, which here is 9.
Dialogue: 0,0:04:48.97,0:04:54.20,中文,,0,0,0,,你还得更新最后指针 将它指向前一个项目 这里是9
Dialogue: 0,0:04:54.20,0:04:55.90,英文,,0,0,0,,So how would you do that?
Dialogue: 0,0:04:54.20,0:04:55.90,中文,,0,0,0,,那你会怎么做呢
Dialogue: 0,0:04:55.90,0:04:59.04,英文,,0,0,0,,Well, at first it says, OK, well, I will drop the 50.
Dialogue: 0,0:04:55.90,0:04:59.04,中文,,0,0,0,,首先它说 好吧 我会放弃这个50
Dialogue: 0,0:04:59.04,0:05:00.32,英文,,0,0,0,,But then how do you find this 9?
Dialogue: 0,0:04:59.04,0:05:00.32,中文,,0,0,0,,但是你如何找到这个9呢
Dialogue: 0,0:05:00.32,0:05:09.08,英文,,0,0,0,,It turns out the only way to get to this 9 is start at the beginning and scan all the way through your millions of items until you reach the 9.
Dialogue: 0,0:05:00.32,0:05:09.08,中文,,0,0,0,,原来 达到这个 9 的唯一方法是从头开始扫描 一直扫描到你数百万的项目 直到找到这个 9
Dialogue: 0,0:05:09.08,0:05:15.45,英文,,0,0,0,,So it turns out remove is still slow, because it's not enough just to nuke this 50 out of existence.
Dialogue: 0,0:05:09.08,0:05:15.45,中文,,0,0,0,,结果发现 删除仍然很慢 因为仅仅消除这 50 并不足够
Dialogue: 0,0:05:15.45,0:05:17.55,英文,,0,0,0,,You have to find the second to last item.
Dialogue: 0,0:05:15.45,0:05:17.55,中文,,0,0,0,,你必须找到倒数第二个项目
Dialogue: 0,0:05:17.55,0:05:20.73,英文,,0,0,0,,And finding the second to last item turns out to be slow.
Dialogue: 0,0:05:17.55,0:05:20.73,中文,,0,0,0,,而找到倒数第二个项目原来是慢的
Dialogue: 0,0:05:20.73,0:05:22.67,英文,,0,0,0,,You've got to scan all the way through.
Dialogue: 0,0:05:20.73,0:05:22.67,中文,,0,0,0,,你得一直扫描到底
Dialogue: 0,0:05:22.67,0:05:24.77,英文,,0,0,0,,So I know what you're thinking of.
Dialogue: 0,0:05:22.67,0:05:24.77,中文,,0,0,0,,我知道你在想什么
Dialogue: 0,0:05:24.77,0:05:29.61,英文,,0,0,0,,Now you're thinking, well, what if I just added a second to last pointer?
Dialogue: 0,0:05:24.77,0:05:29.61,中文,,0,0,0,,现在你可能在想 如果我只添加一个倒数第二个指针呢
Dialogue: 0,0:05:29.61,0:05:35.26,英文,,0,0,0,,So not only do I keep track of where the last item is, I also keep track of where the second to last item is.
Dialogue: 0,0:05:29.61,0:05:35.26,中文,,0,0,0,,我不仅要追踪最后一项的位置 还要追踪倒数第二项的位置
Dialogue: 0,0:05:35.26,0:05:40.70,英文,,0,0,0,,Well, then you have a problem, because as soon as the 50 goes away, what is the new second to last item?
Dialogue: 0,0:05:35.26,0:05:40.70,中文,,0,0,0,,那么你有一个问题 因为一旦50消失 新的倒数第二项是什么
Dialogue: 0,0:05:40.70,0:05:41.66,英文,,0,0,0,,It's the 3.
Dialogue: 0,0:05:40.70,0:05:41.66,中文,,0,0,0,,就是3
Dialogue: 0,0:05:41.66,0:05:42.96,英文,,0,0,0,,How do you find the 3?
Dialogue: 0,0:05:41.66,0:05:42.96,中文,,0,0,0,,你如何找到3
Dialogue: 0,0:05:42.96,0:05:44.76,英文,,0,0,0,,You have to scan all the way again.
Dialogue: 0,0:05:42.96,0:05:44.76,中文,,0,0,0,,你得再次扫描全部
Dialogue: 0,0:05:44.76,0:05:46.86,英文,,0,0,0,,So it turns out, if you
Dialogue: 0,0:05:44.76,0:05:46.86,中文,,0,0,0,,事实证明 如果你
Dialogue: 0,0:05:46.86,0:05:51.59,英文,,0,0,0,,kind of work this case over and over again, you'll realize that the last pointer isn't enough.
Dialogue: 0,0:05:46.86,0:05:51.59,中文,,0,0,0,,反复处理这个情况 你会意识到仅仅追踪最后一个指针是不够的
Dialogue: 0,0:05:51.59,0:05:56.55,英文,,0,0,0,,And if you try to add a second to last pointer, it's not going to be enough, because you have to update that as well.
Dialogue: 0,0:05:51.59,0:05:56.55,中文,,0,0,0,,如果你试图添加一个倒数第二个指针 这是不够的 因为你还必须更新它
Dialogue: 0,0:05:56.55,0:05:59.71,英文,,0,0,0,,If you add a third to last pointer, that's still not going to be enough.
Dialogue: 0,0:05:56.55,0:05:59.71,中文,,0,0,0,,如果你再添加一个倒数第三个指针 仍然不够
Dialogue: 0,0:05:59.71,0:06:05.95,英文,,0,0,0,,So it turns out that just adding one extra value, like the size, is not going to do it for us.
Dialogue: 0,0:05:59.71,0:06:05.95,中文,,0,0,0,,结果是 仅仅添加一个额外的值 比如大小 对我们来说是不够的
Dialogue: 0,0:06:05.95,0:06:06.49,英文,,0,0,0,,OK.
Dialogue: 0,0:06:05.95,0:06:06.49,中文,,0,0,0,,好的
Dialogue: 0,0:06:06.49,0:06:13.08,英文,,0,0,0,,Are we all convinced that the last pointer, while it solves our add last problem, it creates a remove last problem?
Dialogue: 0,0:06:06.49,0:06:13.08,中文,,0,0,0,,我们都认为最后一个指针解决了我们的添加最后一个问题 但它却创建了一个移除最后一个的问题 是吗
Dialogue: 0,0:06:13.08,0:06:16.30,英文,,0,0,0,,Because I've got to find the new last element.
Dialogue: 0,0:06:13.08,0:06:16.30,中文,,0,0,0,,因为我得找到新的最后一个元素
Dialogue: 0,0:06:16.30,0:06:17.61,英文,,0,0,0,,OK.
Dialogue: 0,0:06:16.30,0:06:17.61,中文,,0,0,0,,好的
Dialogue: 0,0:06:17.61,0:06:22.37,英文,,0,0,0,,So if y'all believe me, then now we're going to put in one extra improvement to solve the problem.
Dialogue: 0,0:06:17.61,0:06:22.37,中文,,0,0,0,,如果你们相信我 那么现在我们要加一个额外的改进来解决这个问题
Dialogue: 0,0:06:22.37,0:06:30.42,英文,,0,0,0,,So one of the final improvements we're going to do with our S-list is to say, actually, finding this 3 was really hard.
Dialogue: 0,0:06:22.37,0:06:30.42,中文,,0,0,0,,我们对我们的 S 列表做的最后一个改进是说 实际上 找到这个 3 真的很难
Dialogue: 0,0:06:30.42,0:06:35.90,英文,,0,0,0,,And finding the line was hard, because I had to start at the beginning and scan through possibly millions of elements.
Dialogue: 0,0:06:30.42,0:06:35.90,中文,,0,0,0,,找到这一行也很困难 因为我不得不从头开始扫描可能有数百万个元素
Dialogue: 0,0:06:35.90,0:06:50.04,英文,,0,0,0,,And so the key aha moment is that if every element not only pointed to the person behind it in line, but also the person in front of it in line, then suddenly I don't have to start at the beginning and scan all the way to the end.
Dialogue: 0,0:06:35.90,0:06:50.04,中文,,0,0,0,,所以关键的顿悟时刻是如果每个元素不仅指向后面的人 而且还指向前面的人 那么突然间我就不必从头开始扫描到最后了
Dialogue: 0,0:06:50.04,0:06:52.87,英文,,0,0,0,,I could start at the end and also scan backwards.
Dialogue: 0,0:06:50.04,0:06:52.87,中文,,0,0,0,,我可以从最后开始 也可以向后扫描
Dialogue: 0,0:06:52.87,0:06:56.03,英文,,0,0,0,,And if I do that, suddenly I have a structure like this.
Dialogue: 0,0:06:52.87,0:06:56.03,中文,,0,0,0,,如果我这样做 突然间我就有了这样的一个结构
Dialogue: 0,0:06:56.03,0:07:02.39,英文,,0,0,0,,Every item has a reference to this is the person before me in line, and this is the person after me in line.
Dialogue: 0,0:06:56.03,0:07:02.39,中文,,0,0,0,,每个项目都有一个引用 这是我在队列中的前面的人 这是我在队列中的后面的人
Dialogue: 0,0:07:02.39,0:07:06.19,英文,,0,0,0,,And if I do this, then I get a structure called a doubly-linked list.
Dialogue: 0,0:07:02.39,0:07:06.19,中文,,0,0,0,,如果我这样做 那么我得到的是一个被称为双向链表的结构
Dialogue: 0,0:07:06.19,0:07:08.93,英文,,0,0,0,,And sometimes we'll rename this to a D-list.
Dialogue: 0,0:07:06.19,0:07:08.93,中文,,0,0,0,,有时我们会将其重命名为D列表
Dialogue: 0,0:07:08.93,0:07:11.65,英文,,0,0,0,,So in case you were wondering, what does the S-list stand for?
Dialogue: 0,0:07:08.93,0:07:11.65,中文,,0,0,0,,如果你想知道 S列表代表什么
Dialogue: 0,0:07:11.65,0:07:13.81,英文,,0,0,0,,The SL stands for singly-linked.
Dialogue: 0,0:07:11.65,0:07:13.81,中文,,0,0,0,,SL代表单向链表
Dialogue: 0,0:07:13.81,0:07:15.89,英文,,0,0,0,,The DL stands for doubly-linked.
Dialogue: 0,0:07:13.81,0:07:15.89,中文,,0,0,0,,DL代表双向链表
Dialogue: 0,0:07:15.89,0:07:16.94,英文,,0,0,0,,Now you know.
Dialogue: 0,0:07:15.89,0:07:16.94,中文,,0,0,0,,现在你知道了
Dialogue: 0,0:07:16.94,0:07:18.00,英文,,0,0,0,,OK.
Dialogue: 0,0:07:16.94,0:07:18.00,中文,,0,0,0,,好的
Dialogue: 0,0:07:18.00,0:07:19.46,英文,,0,0,0,,So that's our next improvement.
Dialogue: 0,0:07:18.00,0:07:19.46,中文,,0,0,0,,那就是我们的下一个改进
Dialogue: 0,0:07:19.46,0:07:26.16,英文,,0,0,0,,Instead of having every node only point to who's next, we will also have every node reference the node that comes before it.
Dialogue: 0,0:07:19.46,0:07:26.16,中文,,0,0,0,,不再让每个节点只指向下一个节点 我们还将让每个节点引用它前面的节点
Dialogue: 0,0:07:26.16,0:07:29.92,英文,,0,0,0,,And now, suddenly, our add last problem, well,
Dialogue: 0,0:07:26.16,0:07:29.92,中文,,0,0,0,,而现在 突然间 我们的添加最后一个问题解决了
Dialogue: 0,0:07:29.92,0:07:31.15,英文,,0,0,0,,We still have the last pointer.
Dialogue: 0,0:07:29.92,0:07:31.15,中文,,0,0,0,,我们仍然有最后的指针
Dialogue: 0,0:07:31.15,0:07:32.21,英文,,0,0,0,,Everything is good.
Dialogue: 0,0:07:31.15,0:07:32.21,中文,,0,0,0,,一切都很好
Dialogue: 0,0:07:32.21,0:07:34.13,英文,,0,0,0,,But that removed last problem from before.
Dialogue: 0,0:07:32.21,0:07:34.13,中文,,0,0,0,,但是那个之前的移除最后一个问题
Dialogue: 0,0:07:34.13,0:07:38.23,英文,,0,0,0,,We're trying to scan all the way from the front to the second to the last item was slow.
Dialogue: 0,0:07:34.13,0:07:38.23,中文,,0,0,0,,我们尝试从前面扫描到倒数第二个项目很慢
Dialogue: 0,0:07:38.23,0:07:43.07,英文,,0,0,0,,Suddenly, that's not so much of a problem, because you can start at the end and ask the nine, hey, who comes before you?
Dialogue: 0,0:07:38.23,0:07:43.07,中文,,0,0,0,,突然间 这不再是什么大问题 因为你可以从末尾开始 问9说 嘿 你前面是谁
Dialogue: 0,0:07:43.07,0:07:45.63,英文,,0,0,0,,And the nine looks, and it says, oh, the three's before me.
Dialogue: 0,0:07:43.07,0:07:45.63,中文,,0,0,0,,9看了看 它说 哦 3在我前面
Dialogue: 0,0:07:45.63,0:07:46.61,英文,,0,0,0,,And you're all good.
Dialogue: 0,0:07:45.63,0:07:46.61,中文,,0,0,0,,这样你就没问题了
Dialogue: 0,0:07:46.61,0:07:49.81,英文,,0,0,0,,You did not have to scan the whole list.
Dialogue: 0,0:07:46.61,0:07:49.81,中文,,0,0,0,,你不必扫描整个列表
Dialogue: 0,0:07:49.81,0:07:50.71,英文,,0,0,0,,Nice.
Dialogue: 0,0:07:49.81,0:07:50.71,中文,,0,0,0,,不错
Dialogue: 0,0:07:50.71,0:07:53.35,英文,,0,0,0,,So that's the doubly linked list.
Dialogue: 0,0:07:50.71,0:07:53.35,中文,,0,0,0,,这就是双向链表
Dialogue: 0,0:07:53.35,0:07:57.79,英文,,0,0,0,,And if you wanted to implement it starting here, you would be totally good to implement it.
Dialogue: 0,0:07:53.35,0:07:57.79,中文,,0,0,0,,如果你想从这里开始实现它 你完全可以实现它
Dialogue: 0,0:07:57.79,0:08:04.98,英文,,0,0,0,,But there is one really subtle problem that you're not totally going to feel unless you really start to program this.
Dialogue: 0,0:07:57.79,0:08:04.98,中文,,0,0,0,,但有一个非常微妙的问题 除非你真的开始编程 否则你不太会感觉到它
Dialogue: 0,0:08:04.98,0:08:09.34,英文,,0,0,0,,So I'll reveal it to you, but it's definitely not an obvious fact at all.
Dialogue: 0,0:08:04.98,0:08:09.34,中文,,0,0,0,,我会告诉你 但这绝对不是一个明显的事实
Dialogue: 0,0:08:09.34,0:08:14.27,英文,,0,0,0,,But there's something a little bit annoying, which is you remember that special case from last time where we said
Dialogue: 0,0:08:09.34,0:08:14.27,中文,,0,0,0,,但有点烦人 你记得上次我们说的那个特殊情况吗
Dialogue: 0,0:08:14.27,0:08:19.93,英文,,0,0,0,,Well, when you want to add to the end of the list, sometimes the list is no and sometimes the list is not no.
Dialogue: 0,0:08:14.27,0:08:19.93,中文,,0,0,0,,当你想要添加到列表的末尾时 有时列表是空的 有时列表不是空的
Dialogue: 0,0:08:19.93,0:08:21.85,英文,,0,0,0,,And now there's like two different cases.
Dialogue: 0,0:08:19.93,0:08:21.85,中文,,0,0,0,,现在有两种不同的情况了
Dialogue: 0,0:08:21.85,0:08:27.03,英文,,0,0,0,,And whenever there's two different cases, you're gonna have code that's complicated and has edge cases.
Dialogue: 0,0:08:21.85,0:08:27.03,中文,,0,0,0,,每当有两种不同的情况时 你会有一个复杂的代码 并且有一些边缘情况
Dialogue: 0,0:08:27.03,0:08:29.43,英文,,0,0,0,,Well, it turns out if you tried to coat this,
Dialogue: 0,0:08:27.03,0:08:29.43,中文,,0,0,0,,事实证明 如果你试图给这个涂层
Dialogue: 0,0:08:29.43,0:08:37.42,英文,,0,0,0,,you'd run into a similar issue, which is this last attribute sometimes is going to point at the sentinel, which remember, it's a dummy value.
Dialogue: 0,0:08:29.43,0:08:37.42,中文,,0,0,0,,你会遇到一个类似的问题 就是这个最后的属性有时会指向哨兵 记住 这是一个虚拟值
Dialogue: 0,0:08:37.42,0:08:38.90,英文,,0,0,0,,It's a faithful companion.
Dialogue: 0,0:08:37.42,0:08:38.90,中文,,0,0,0,,它是一个忠实的伙伴
Dialogue: 0,0:08:38.90,0:08:40.88,英文,,0,0,0,,We do not care what its value is.
Dialogue: 0,0:08:38.90,0:08:40.88,中文,,0,0,0,,我们不关心它的值是什么
Dialogue: 0,0:08:40.88,0:08:44.16,英文,,0,0,0,,It is just sitting there to make sure the list is never empty.
Dialogue: 0,0:08:40.88,0:08:44.16,中文,,0,0,0,,它只是坐在那里 确保列表永远不为空
Dialogue: 0,0:08:44.16,0:08:49.96,英文,,0,0,0,,So sometimes the last points at the sentinel, whose value we don't care about, and that happens when the size is zero.
Dialogue: 0,0:08:44.16,0:08:49.96,中文,,0,0,0,,有时候 最后会指向哨兵 我们不关心它的值 当大小为零时就会发生这种情况
Dialogue: 0,0:08:49.96,0:08:53.92,英文,,0,0,0,,But sometimes, last is going to point at an actual node with data.
Dialogue: 0,0:08:49.96,0:08:53.92,中文,,0,0,0,,但有时 最后会指向一个实际带有数据的节点
Dialogue: 0,0:08:53.92,0:08:54.48,英文,,0,0,0,,And guess what?
Dialogue: 0,0:08:53.92,0:08:54.48,中文,,0,0,0,,你猜猜
Dialogue: 0,0:08:54.48,0:08:56.95,英文,,0,0,0,,This, again, splits us into two cases.
Dialogue: 0,0:08:54.48,0:08:56.95,中文,,0,0,0,,这样一来 我们又分成了两种情况
Dialogue: 0,0:08:56.95,0:09:05.27,英文,,0,0,0,,And if you tried writing a doubly-linked list like this, your code would have tons of code that's like, if the last point's at the sentinel, do this special thing.
Dialogue: 0,0:08:56.95,0:09:05.27,中文,,0,0,0,,如果你试着像这样写一个双向链表 你的代码会有很多像这样的代码 如果最后一个指向哨兵节点 就做这个特殊的事情
Dialogue: 0,0:09:05.27,0:09:09.92,英文,,0,0,0,,Otherwise, if the last point's at an actual node with data, do this other thing.
Dialogue: 0,0:09:05.27,0:09:09.92,中文,,0,0,0,,否则 如果最后一个指向一个实际带数据的节点 就做另一件事
Dialogue: 0,0:09:09.92,0:09:14.94,英文,,0,0,0,,And all of your functions would be twice as long, because you have to write for two separate cases.
Dialogue: 0,0:09:09.92,0:09:14.94,中文,,0,0,0,,而且你所有的函数都会变得两倍长 因为你要为两种情况分别编写代码
Dialogue: 0,0:09:14.94,0:09:16.24,英文,,0,0,0,,And that's kind of annoying.
Dialogue: 0,0:09:14.94,0:09:16.24,中文,,0,0,0,,这有点烦人
Dialogue: 0,0:09:16.24,0:09:19.76,英文,,0,0,0,,Code that's complicated, it's hard to write, it's hard to debug.
Dialogue: 0,0:09:16.24,0:09:19.76,中文,,0,0,0,,复杂的代码 写起来很困难 调试起来也很困难
Dialogue: 0,0:09:19.76,0:09:26.60,英文,,0,0,0,,I want one harmonious, unified story I can tell about what this last pointer reference is.
Dialogue: 0,0:09:19.76,0:09:26.60,中文,,0,0,0,,我想要一个和谐统一的故事 我可以讲述关于这个最后的指针引用是什么
Dialogue: 0,0:09:26.60,0:09:31.93,英文,,0,0,0,,Right now I have to say, well, sometimes it's the sentinel node, and sometimes you're going to find a real node there.
Dialogue: 0,0:09:26.60,0:09:31.93,中文,,0,0,0,,现在我不得不说 有时它是哨兵节点 有时你会在那里找到一个真实的节点
Dialogue: 0,0:09:31.93,0:09:33.15,英文,,0,0,0,,But I don't like that.
Dialogue: 0,0:09:31.93,0:09:33.15,中文,,0,0,0,,但我不喜欢这样
Dialogue: 0,0:09:33.15,0:09:38.49,英文,,0,0,0,,I want to unify this into something that is one harmonious story.
Dialogue: 0,0:09:33.15,0:09:38.49,中文,,0,0,0,,我想把这个统一成一个和谐的故事
Dialogue: 0,0:09:38.49,0:09:39.75,英文,,0,0,0,,So what is that story?
Dialogue: 0,0:09:38.49,0:09:39.75,中文,,0,0,0,,那么这个故事是什么呢
Dialogue: 0,0:09:39.75,0:09:41.13,英文,,0,0,0,,There's actually a couple of options.
Dialogue: 0,0:09:39.75,0:09:41.13,中文,,0,0,0,,实际上有几个选择
Dialogue: 0,0:09:41.13,0:09:42.51,英文,,0,0,0,,So here's a story.
Dialogue: 0,0:09:41.13,0:09:42.51,中文,,0,0,0,,这是一个故事
Dialogue: 0,0:09:42.51,0:09:52.94,英文,,0,0,0,,One possible story is to say, well, instead of just having one sentinel, I could have two sentinels, because now I have a reference to the front of the list and a reference to the back of the list.
Dialogue: 0,0:09:42.51,0:09:52.94,中文,,0,0,0,,有一个可能的故事是这样说的 不只是有一个哨兵 我可以有两个哨兵 因为现在我有一个指向列表前面的引用 和一个指向列表后面的引用
Dialogue: 0,0:09:52.94,0:09:59.66,英文,,0,0,0,,So I could have one faithful companion standing at the front of the line to make sure there's always someone at the front of the line.
Dialogue: 0,0:09:52.94,0:09:59.66,中文,,0,0,0,,我可以有一个忠实的同伴站在队列前面 确保队列前面始终有人
Dialogue: 0,0:09:59.66,0:10:01.12,英文,,0,0,0,,The list is never null.
Dialogue: 0,0:09:59.66,0:10:01.12,中文,,0,0,0,,列表永远不会是null
Dialogue: 0,0:10:01.12,0:10:10.21,英文,,0,0,0,,And I could also have someone stand at the back of the line, and this way, this last pointer, which has been renamed sent back here, that's going to never be a real node.
Dialogue: 0,0:10:01.12,0:10:10.21,中文,,0,0,0,,而且我还可以让有人站在队列后面 这样 这最后的指针 它已经被重新命名为sent back 它永远不会是一个真正的节点
Dialogue: 0,0:10:10.21,0:10:14.15,英文,,0,0,0,,It's always going to be this faithful companion standing at the back of the line.
Dialogue: 0,0:10:10.21,0:10:14.15,中文,,0,0,0,,它总是会是这个忠实的同伴站在队列后面
Dialogue: 0,0:10:14.15,0:10:18.11,英文,,0,0,0,,And anytime you want to add something, you'll add them between the two sentinels.
Dialogue: 0,0:10:14.15,0:10:18.11,中文,,0,0,0,,任何时候你想添加东西 你都会把它们添加在这两个哨兵之间
Dialogue: 0,0:10:18.11,0:10:20.57,英文,,0,0,0,,So that's a possible structure that works.
Dialogue: 0,0:10:18.11,0:10:20.57,中文,,0,0,0,,这是一个可能的结构 是可行的
Dialogue: 0,0:10:20.57,0:10:22.27,英文,,0,0,0,,And now you have a very harmonious story.
Dialogue: 0,0:10:20.57,0:10:22.27,中文,,0,0,0,,现在你有一个非常和谐的故事
Dialogue: 0,0:10:22.27,0:10:34.80,英文,,0,0,0,,The invariant, if you remember that little term from last time, the invariant we can use is that the sent back or sentinel back reference, it always points at our second faithful companion in the back.
Dialogue: 0,0:10:22.27,0:10:34.80,中文,,0,0,0,,不变量 如果你还记得上次的小名词 我们可以使用的不变量是 被送回或标志回引用 它总是指向我们在后面的第二个忠实的伙伴
Dialogue: 0,0:10:34.80,0:10:38.04,英文,,0,0,0,,So if you like this, you could do this on your project.
Dialogue: 0,0:10:34.80,0:10:38.04,中文,,0,0,0,,如果你喜欢这个 你可以在你的项目上这样做
Dialogue: 0,0:10:38.04,0:10:39.44,英文,,0,0,0,,And why am I mentioning the project?
Dialogue: 0,0:10:38.04,0:10:39.44,中文,,0,0,0,,为什么我要提到项目呢
Dialogue: 0,0:10:39.44,0:10:42.16,英文,,0,0,0,,Because you're going to build this.
Dialogue: 0,0:10:39.44,0:10:42.16,中文,,0,0,0,,因为你要构建这个
Dialogue: 0,0:10:42.16,0:10:43.74,英文,,0,0,0,,That's one possible option.
Dialogue: 0,0:10:42.16,0:10:43.74,中文,,0,0,0,,这是一个可能的选择
Dialogue: 0,0:10:43.74,0:10:47.71,英文,,0,0,0,,But here's another option, which at first is going to seem extremely weird.
Dialogue: 0,0:10:43.74,0:10:47.71,中文,,0,0,0,,但这里有另一种选择 一开始会显得非常奇怪
Dialogue: 0,0:10:47.71,0:10:53.21,英文,,0,0,0,,But it turns out that this is arguably one of the best ways to build a doubly linked list.
Dialogue: 0,0:10:47.71,0:10:53.21,中文,,0,0,0,,但事实证明 这可能是构建双向链表的最佳方式之一
Dialogue: 0,0:10:53.21,0:11:03.01,英文,,0,0,0,,So this is the answer that's like, if you go to the top of the mountain, you climb the mountain, and you ask the monk of linked lists, and you ask them, what is truly the greatest linked list you could build?
Dialogue: 0,0:10:53.21,0:11:03.01,中文,,0,0,0,,这就是答案 就好像你去山顶 爬上山 问链表的僧人 问他们 你可以构建的最好的链表是什么
Dialogue: 0,0:11:03.01,0:11:05.05,英文,,0,0,0,,This is the kind of answer the monk would give you.
Dialogue: 0,0:11:03.01,0:11:05.05,中文,,0,0,0,,这就是僧人会给你的答案的类型
Dialogue: 0,0:11:05.05,0:11:08.47,英文,,0,0,0,,And so the answer you get is that, well,
Dialogue: 0,0:11:05.05,0:11:08.47,中文,,0,0,0,,你得到的答案是 嗯
Dialogue: 0,0:11:08.47,0:11:10.79,英文,,0,0,0,,Actually, let's just have one sentinel.
Dialogue: 0,0:11:08.47,0:11:10.79,中文,,0,0,0,,实际上 我们只需要一个哨兵
Dialogue: 0,0:11:10.79,0:11:14.50,英文,,0,0,0,,And this way, we're going to build a linked list that's circular.
Dialogue: 0,0:11:10.79,0:11:14.50,中文,,0,0,0,,这样 我们将构建一个循环的链表
Dialogue: 0,0:11:14.50,0:11:16.76,英文,,0,0,0,,And suddenly, you're looking at the monk and you're saying, what are you talking about?
Dialogue: 0,0:11:14.50,0:11:16.76,中文,,0,0,0,,突然间 你在看着这个僧人 你在说 你在说什么
Dialogue: 0,0:11:16.76,0:11:18.34,英文,,0,0,0,,What do you mean circular linked list?
Dialogue: 0,0:11:16.76,0:11:18.34,中文,,0,0,0,,你是说循环链表是什么意思
Dialogue: 0,0:11:18.34,0:11:24.48,英文,,0,0,0,,And so the monk says, if the list is empty, then the sentinel's next item is the sentinel itself.
Dialogue: 0,0:11:18.34,0:11:24.48,中文,,0,0,0,,和尚说 如果链表是空的 那么哨兵的下一个项目就是哨兵本身
Dialogue: 0,0:11:24.48,0:11:27.80,英文,,0,0,0,,And the Sentinel's previous item is the Sentinel itself.
Dialogue: 0,0:11:24.48,0:11:27.80,中文,,0,0,0,,哨兵的上一个项目是哨兵本身
Dialogue: 0,0:11:27.80,0:11:28.69,英文,,0,0,0,,Now you're getting mad at the monkey.
Dialogue: 0,0:11:27.80,0:11:28.69,中文,,0,0,0,,现在你在责怪猴子了
Dialogue: 0,0:11:28.69,0:11:34.25,英文,,0,0,0,,You're like, I climbed all the way up here to talk to you about linked lists and you're telling me about all this circular crap what's going on.
Dialogue: 0,0:11:28.69,0:11:34.25,中文,,0,0,0,,你就像是 我爬上来跟你讨论链表 你却跟我说这些循环的废话 到底怎么了
Dialogue: 0,0:11:34.25,0:11:39.48,英文,,0,0,0,,So what's happening here is if your list is not empty, then we start at the Sentinel.
Dialogue: 0,0:11:34.25,0:11:39.48,中文,,0,0,0,,这里发生的是 如果你的列表不是空的 那么我们从哨兵开始
Dialogue: 0,0:11:39.48,0:11:43.00,英文,,0,0,0,,And if we follow the next pointers, we'll go to the next item, which is 3.
Dialogue: 0,0:11:39.48,0:11:43.00,中文,,0,0,0,,如果我们跟随下一个指针 我们将到达下一个项目 这个项目是3
Dialogue: 0,0:11:43.00,0:11:45.04,英文,,0,0,0,,Then the next item, which is 9.
Dialogue: 0,0:11:43.00,0:11:45.04,中文,,0,0,0,,然后是下一个项目 它是9
Dialogue: 0,0:11:45.04,0:11:50.66,英文,,0,0,0,,And then the next item after that, because that's the last item in the list, it wraps back around to the sentinel.
Dialogue: 0,0:11:45.04,0:11:50.66,中文,,0,0,0,,然后接下来的项目 因为那是列表中的最后一个项目 它又回到了哨兵
Dialogue: 0,0:11:50.66,0:11:56.45,英文,,0,0,0,,And as you scan this list, if you wrap all the way back around to the sentinel, then you know you've reached the end.
Dialogue: 0,0:11:50.66,0:11:56.45,中文,,0,0,0,,当你扫描这个列表时 如果你又回到了哨兵 那么你就知道你已经到了末尾
Dialogue: 0,0:11:56.45,0:11:58.69,英文,,0,0,0,,So it's kind of like the world is round.
Dialogue: 0,0:11:56.45,0:11:58.69,中文,,0,0,0,,这有点像世界是圆的
Dialogue: 0,0:11:58.69,0:12:04.47,英文,,0,0,0,,If you start here and you start walking east, you're going to walk right back over
Dialogue: 0,0:11:58.69,0:12:04.47,中文,,0,0,0,,如果你从这里开始向东走 你会走回来的
Dialogue: 0,0:12:04.47,0:12:06.71,英文,,0,0,0,,Here in, I don't know, a couple of years or something.
Dialogue: 0,0:12:04.47,0:12:06.71,中文,,0,0,0,,这里 在 我不知道 几年后或者什么的
Dialogue: 0,0:12:06.71,0:12:10.26,英文,,0,0,0,,So you can think of it as it's kind of like the world is round.
Dialogue: 0,0:12:06.71,0:12:10.26,中文,,0,0,0,,你可以把它想象成世界是圆的
Dialogue: 0,0:12:10.26,0:12:16.71,英文,,0,0,0,,If I start here and I keep following the next pointers, I'll eventually end up back at the one and only sentinel.
Dialogue: 0,0:12:10.26,0:12:16.71,中文,,0,0,0,,如果我从这里开始 然后一直按照下一个指针走 最终我会回到唯一的哨兵
Dialogue: 0,0:12:16.71,0:12:21.67,英文,,0,0,0,,Same thing if I start at the sentinel and I go backwards, I will eventually also end up at the sentinel.
Dialogue: 0,0:12:16.71,0:12:21.67,中文,,0,0,0,,如果我从哨兵开始然后往回走 最终也会回到哨兵
Dialogue: 0,0:12:21.67,0:12:28.18,英文,,0,0,0,,So this approach, while at first it seems really bizarre and strange, it turns out it's a really beautiful idea.
Dialogue: 0,0:12:21.67,0:12:28.18,中文,,0,0,0,,这个方法 一开始可能看起来很奇怪 但事实证明这是一个非常巧妙的想法
Dialogue: 0,0:12:28.18,0:12:32.76,英文,,0,0,0,,And this way we can just use a single sentinel to represent this entire linked list.
Dialogue: 0,0:12:28.18,0:12:32.76,中文,,0,0,0,,这样我们就可以只用一个哨兵来表示整个链表
Dialogue: 0,0:12:32.76,0:12:35.70,英文,,0,0,0,,So it's pretty beautiful for project one.
Dialogue: 0,0:12:32.76,0:12:35.70,中文,,0,0,0,,对于项目一来说 这相当美妙
Dialogue: 0,0:12:35.70,0:12:36.76,英文,,0,0,0,,It's up to you what you want to do.
Dialogue: 0,0:12:35.70,0:12:36.76,中文,,0,0,0,,你想做什么就随你
Dialogue: 0,0:12:36.76,0:12:39.98,英文,,0,0,0,,If you don't like this, you can always go with having two separate sentinels.
Dialogue: 0,0:12:36.76,0:12:39.98,中文,,0,0,0,,如果你不喜欢这个 你总是可以选择使用两个单独的哨兵
Dialogue: 0,0:12:39.98,0:12:47.38,英文,,0,0,0,,But if you really want to understand the wisdom of the monk and figure out what the greatest linked list is, then this is something you can try.
Dialogue: 0,0:12:39.98,0:12:47.38,中文,,0,0,0,,但是如果你真的想要理解和搞明白这位僧侣的智慧 并弄清楚最伟大的链表是什么 那么这是你可以尝试的事情
Dialogue: 0,0:12:47.38,0:12:51.45,英文,,0,0,0,,OK, questions, thoughts about the wisdom of the monk?
Dialogue: 0,0:12:47.38,0:12:51.45,中文,,0,0,0,,对于这位僧侣的智慧有什么问题或想法吗
Dialogue: 0,0:12:51.45,0:12:53.85,英文,,0,0,0,,OK. Cool.
Dialogue: 0,0:12:51.45,0:12:53.85,中文,,0,0,0,,好的  很酷
Dialogue: 0,0:12:53.85,0:12:55.67,英文,,0,0,0,,So that was our last improvement.
Dialogue: 0,0:12:53.85,0:12:55.67,中文,,0,0,0,,那就是我们最后的改进了
Dialogue: 0,0:12:55.67,0:13:04.58,英文,,0,0,0,,So one thing we mentioned was that if you add the previous pointers so that the list is doubly linked, there are lots of ugly special cases.
Dialogue: 0,0:12:55.67,0:13:04.58,中文,,0,0,0,,我们提到的一件事是 如果你添加了前置指针 使列表成为双向链表 会有很多丑陋的特殊情况
Dialogue: 0,0:13:04.58,0:13:07.66,英文,,0,0,0,,That sentinel on the back, it could point to the real node.
Dialogue: 0,0:13:04.58,0:13:07.66,中文,,0,0,0,,那个位于后面的哨兵 它可以指向真实的节点
Dialogue: 0,0:13:07.66,0:13:09.15,英文,,0,0,0,,It could point to the sentinel node.
Dialogue: 0,0:13:07.66,0:13:09.15,中文,,0,0,0,,它可以指向哨兵节点
Dialogue: 0,0:13:09.15,0:13:10.07,英文,,0,0,0,,That's annoying.
Dialogue: 0,0:13:09.15,0:13:10.07,中文,,0,0,0,,真烦人
Dialogue: 0,0:13:10.07,0:13:23.41,英文,,0,0,0,,So to solve it, you could either do two sentinels and then add the items in between as they show up, or you can make your linked list circular so that there is one sentinel that's standing guard that's saying, this is where the list starts and ends.
Dialogue: 0,0:13:10.07,0:13:23.41,中文,,0,0,0,,为了解决这个问题 你可以要么使用两个哨兵 然后在它们之间添加项目 要么可以使你的链表循环 这样就会有一个哨兵站岗 它在说 这就是列表的起点和终点
Dialogue: 0,0:13:23.41,0:13:25.45,英文,,0,0,0,,And if you want to walk the list, you walk in a circle.
Dialogue: 0,0:13:23.41,0:13:25.45,中文,,0,0,0,,如果你想遍历列表 你就要走圆圈
Dialogue: 0,0:13:25.45,0:13:30.51,英文,,0,0,0,,And whenever you get back to where you started, then you know you've scanned the entire list.
Dialogue: 0,0:13:25.45,0:13:30.51,中文,,0,0,0,,每当你回到起点时 你就知道你已经扫描完整个列表了
Dialogue: 0,0:13:30.51,0:13:31.91,英文,,0,0,0,,Pretty cool.
Dialogue: 0,0:13:30.51,0:13:31.91,中文,,0,0,0,,挺酷的
Dialogue: 0,0:13:31.91,0:13:33.95,英文,,0,0,0,,Okay, that was improvement number eight.
Dialogue: 0,0:13:31.91,0:13:33.95,中文,,0,0,0,,这是第八项改进
Dialogue: 0,0:13:33.95,0:13:41.04,英文,,0,0,0,,So, we haven't totally built like a state-of-the-art linked list structure that you could go out and gift to the world, but we made some pretty good progress.
Dialogue: 0,0:13:33.95,0:13:41.04,中文,,0,0,0,,我们还没有完全构建出像是可以拿出去送给世界的最先进的链表结构 但我们取得了一些相当不错的进展
Dialogue: 0,0:13:41.04,0:13:49.74,英文,,0,0,0,,We started with our tiny little int list, and we made these sequences of improvements, six from last time, two so far today,
Dialogue: 0,0:13:41.04,0:13:49.74,中文,,0,0,0,,我们从我们那微小的 int 列表开始 然后我们做了一系列的改进 上次是六个 今天到目前为止是两个
Dialogue: 0,0:13:49.74,0:13:57.74,英文,,0,0,0,, and this gave us our doubly linked list that has fast operations for adding to the front, adding to the back, removing from the front to the back.
Dialogue: 0,0:13:49.74,0:13:57.74,中文,,0,0,0,,这让我们得到了我们的双向链表 它具有快速的添加到前面、添加到后面、从前到后删除的操作
Dialogue: 0,0:13:57.74,0:13:59.11,英文,,0,0,0,,Cool.
Dialogue: 0,0:13:57.74,0:13:59.11,中文,,0,0,0,,酷
Dialogue: 0,0:13:59.11,0:14:05.74,英文,,0,0,0,,OK, there will be more coming later, but any questions about or any thoughts about these eight improvements before we keep going?
Dialogue: 0,0:13:59.11,0:14:05.74,中文,,0,0,0,,稍后会有更多的内容 但在我们继续之前 有关这八项改进的任何问题或想法吗
Dialogue: 0,0:14:05.74,0:14:09.09,英文,,0,0,0,,It's good to keep them in mind because you'll be doing them in project one.
Dialogue: 0,0:14:05.74,0:14:09.09,中文,,0,0,0,,记住它们是很重要的 因为你将在项目一中使用它们
Dialogue: 0,0:14:09.09,0:14:11.73,英文,,0,0,0,,OK.
Dialogue: 0,0:14:09.09,0:14:11.73,中文,,0,0,0,,好的
Dialogue: 0,0:14:11.73,0:14:17.01,英文,,0,0,0,,OK, I'll make one final improvement, and then we will abandon SLLists and DLLists forever.
Dialogue: 0,0:14:11.73,0:14:17.01,中文,,0,0,0,,我会做最后一个改进 然后我们将永远放弃 SLLists 和 DLLists
Dialogue: 0,0:14:17.01,0:14:23.12,英文,,0,0,0,,So one final problem that we have is that our list only supports integers.
Dialogue: 0,0:14:17.01,0:14:23.12,中文,,0,0,0,,我们还面临一个最后的问题 那就是我们的列表只支持整数
Dialogue: 0,0:14:23.12,0:14:26.60,英文,,0,0,0,,So for example, I go down here, and this list works great.
Dialogue: 0,0:14:23.12,0:14:26.60,中文,,0,0,0,,比如说 我在这里往下走 这个列表运行得很好
Dialogue: 0,0:14:26.60,0:14:27.80,英文,,0,0,0,,This is from last time.
Dialogue: 0,0:14:26.60,0:14:27.80,中文,,0,0,0,,这是上次的
Dialogue: 0,0:14:27.80,0:14:28.60,英文,,0,0,0,,And I can add numbers.
Dialogue: 0,0:14:27.80,0:14:28.60,中文,,0,0,0,,我可以添加数字
Dialogue: 0,0:14:28.60,0:14:29.30,英文,,0,0,0,,I can add 10.
Dialogue: 0,0:14:28.60,0:14:29.30,中文,,0,0,0,,我可以添加10
Dialogue: 0,0:14:29.30,0:14:30.50,英文,,0,0,0,,I can add 15.
Dialogue: 0,0:14:29.30,0:14:30.50,中文,,0,0,0,,我可以添加15
Dialogue: 0,0:14:30.50,0:14:33.28,英文,,0,0,0,,I can add 100. And everything works great.
Dialogue: 0,0:14:30.50,0:14:33.28,中文,,0,0,0,,我可以添加100  一切都运行得很好
Dialogue: 0,0:14:33.28,0:14:37.34,英文,,0,0,0,,But here, I'll prove it to you that it works great, since I have a bit of time.
Dialogue: 0,0:14:33.28,0:14:37.34,中文,,0,0,0,,但是我现在有点时间 我会向你证明它确实运行得很好
Dialogue: 0,0:14:37.34,0:14:38.16,英文,,0,0,0,,OK, so it's going to build.
Dialogue: 0,0:14:37.34,0:14:38.16,中文,,0,0,0,,它会开始构建
Dialogue: 0,0:14:38.16,0:14:40.76,英文,,0,0,0,,Eventually, it's going to show you that this works fine.
Dialogue: 0,0:14:38.16,0:14:40.76,中文,,0,0,0,,最终 它会向你展示这运行得很好
Dialogue: 0,0:14:40.76,0:14:44.27,英文,,0,0,0,,But if I try adding strings, then it's going to be a problem.
Dialogue: 0,0:14:40.76,0:14:44.27,中文,,0,0,0,,但如果我尝试添加字符串 那就会有问题
Dialogue: 0,0:14:44.27,0:14:46.45,英文,,0,0,0,,So let's make a list of strings.
Dialogue: 0,0:14:44.27,0:14:46.45,中文,,0,0,0,,那我们来创建一个字符串列表
Dialogue: 0,0:14:46.45,0:14:49.75,英文,,0,0,0,,Does anyone have a favorite phrase or song lyric title?
Dialogue: 0,0:14:46.45,0:14:49.75,中文,,0,0,0,,有人有最喜欢的短语或歌曲歌词标题吗
Dialogue: 0,0:14:49.75,0:14:51.73,英文,,0,0,0,,What do you want?
Dialogue: 0,0:14:49.75,0:14:51.73,中文,,0,0,0,,你想要什么
Dialogue: 0,0:14:51.73,0:14:53.07,英文,,0,0,0,,What the dog do?
Dialogue: 0,0:14:51.73,0:14:53.07,中文,,0,0,0,,狗在干什么
Dialogue: 0,0:14:53.07,0:14:54.46,英文,,0,0,0,,What the dog do?
Dialogue: 0,0:14:53.07,0:14:54.46,中文,,0,0,0,,狗在干什么
Dialogue: 0,0:14:54.46,0:14:56.24,英文,,0,0,0,,Did I get that right?
Dialogue: 0,0:14:54.46,0:14:56.24,中文,,0,0,0,,我说对了吗
Dialogue: 0,0:14:56.24,0:14:57.60,英文,,0,0,0,,OK.
Dialogue: 0,0:14:56.24,0:14:57.60,中文,,0,0,0,,好的
Dialogue: 0,0:14:57.60,0:14:59.24,英文,,0,0,0,,Well, hopefully, I got it right.
Dialogue: 0,0:14:57.60,0:14:59.24,中文,,0,0,0,,希望我说对了
Dialogue: 0,0:14:59.24,0:15:00.50,英文,,0,0,0,,OK.
Dialogue: 0,0:14:59.24,0:15:00.50,中文,,0,0,0,,好的
Dialogue: 0,0:15:00.50,0:15:02.50,英文,,0,0,0,,So I try it.
Dialogue: 0,0:15:00.50,0:15:02.50,中文,,0,0,0,,我试试
Dialogue: 0,0:15:02.50,0:15:05.01,英文,,0,0,0,,What the dog doing?
Dialogue: 0,0:15:02.50,0:15:05.01,中文,,0,0,0,,狗在干嘛
Dialogue: 0,0:15:05.01,0:15:06.13,英文,,0,0,0,,Doing.
Dialogue: 0,0:15:05.01,0:15:06.13,中文,,0,0,0,,在干嘛
Dialogue: 0,0:15:06.13,0:15:07.35,英文,,0,0,0,,Ah.
Dialogue: 0,0:15:06.13,0:15:07.35,中文,,0,0,0,,啊
Dialogue: 0,0:15:07.35,0:15:08.01,英文,,0,0,0,,No G at the end.
Dialogue: 0,0:15:07.35,0:15:08.01,中文,,0,0,0,,末尾不要G
Dialogue: 0,0:15:08.01,0:15:09.79,英文,,0,0,0,,OK, got it.
Dialogue: 0,0:15:08.01,0:15:09.79,中文,,0,0,0,,好的 知道了
Dialogue: 0,0:15:09.79,0:15:10.75,英文,,0,0,0,,Real G's move in silence.
Dialogue: 0,0:15:09.79,0:15:10.75,中文,,0,0,0,,真正的G都悄悄地移动
Dialogue: 0,0:15:10.75,0:15:12.09,英文,,0,0,0,,OK, great.
Dialogue: 0,0:15:10.75,0:15:12.09,中文,,0,0,0,,好的 太好了
Dialogue: 0,0:15:12.09,0:15:14.29,英文,,0,0,0,,So there we go.
Dialogue: 0,0:15:12.09,0:15:14.29,中文,,0,0,0,,那么 我们开始吧
Dialogue: 0,0:15:14.29,0:15:25.52,英文,,0,0,0,,Well, suddenly there's a bit of a problem, which is, hmm, it says, I expected you to give me an integer, because the addLast method, the function signature says, I want an integer.
Dialogue: 0,0:15:14.29,0:15:25.52,中文,,0,0,0,,突然出现了点问题 就是 它说 我希望你给我一个整数 因为 addLast 方法 函数签名说的是 我要一个整数
Dialogue: 0,0:15:25.52,0:15:26.90,英文,,0,0,0,,But you're giving me a string.
Dialogue: 0,0:15:25.52,0:15:26.90,中文,,0,0,0,,但是你给我一个字符串
Dialogue: 0,0:15:26.90,0:15:28.58,英文,,0,0,0,,You're giving me do it.
Dialogue: 0,0:15:26.90,0:15:28.58,中文,,0,0,0,,你给我做这个
Dialogue: 0,0:15:28.58,0:15:29.46,英文,,0,0,0,,And I don't accept that.
Dialogue: 0,0:15:28.58,0:15:29.46,中文,,0,0,0,,而我不接受这个
Dialogue: 0,0:15:29.46,0:15:31.00,英文,,0,0,0,,I want an integer.
Dialogue: 0,0:15:29.46,0:15:31.00,中文,,0,0,0,,我要一个整数
Dialogue: 0,0:15:31.00,0:15:32.30,英文,,0,0,0,,So we have a problem.
Dialogue: 0,0:15:31.00,0:15:32.30,中文,,0,0,0,,我们有一个问题
Dialogue: 0,0:15:32.30,0:15:33.66,英文,,0,0,0,,And how do we fix this?
Dialogue: 0,0:15:32.30,0:15:33.66,中文,,0,0,0,,那我们怎么解决这个问题呢
Dialogue: 0,0:15:33.66,0:15:36.90,英文,,0,0,0,,Seems like this S list only supports integers.
Dialogue: 0,0:15:33.66,0:15:36.90,中文,,0,0,0,,看起来这个 S 列表只支持整数
Dialogue: 0,0:15:36.90,0:15:39.05,英文,,0,0,0,,But I want to give it strings or maybe other objects.
Dialogue: 0,0:15:36.90,0:15:39.05,中文,,0,0,0,,但我想给它字符串或者其他对象
Dialogue: 0,0:15:39.05,0:15:41.59,英文,,0,0,0,,Maybe I want to list up all my walruses or something.
Dialogue: 0,0:15:39.05,0:15:41.59,中文,,0,0,0,,也许我想列出所有我的海象或其他东西
Dialogue: 0,0:15:41.59,0:15:52.96,英文,,0,0,0,,So Well, one solution that we hopefully all agree is not very good or clean is I could just take this code, I could copy-paste it, and then I could change all the ints to a string.
Dialogue: 0,0:15:41.59,0:15:52.96,中文,,0,0,0,,一个解决方案 我们希望大家都同意不太好或干净的解决方案是 我可以只是拷贝粘贴这段代码 然后把所有的 int 改成字符串
Dialogue: 0,0:15:52.96,0:15:54.52,英文,,0,0,0,,Okay, does that work?
Dialogue: 0,0:15:52.96,0:15:54.52,中文,,0,0,0,,好的 这样可以吗
Dialogue: 0,0:15:54.52,0:15:59.20,英文,,0,0,0,,Technically, is that kind of annoying because now you have two copies of the same code?
Dialogue: 0,0:15:54.52,0:15:59.20,中文,,0,0,0,,从技术上讲 这有点烦人 因为现在你有两份相同的代码副本
Dialogue: 0,0:15:59.20,0:16:00.60,英文,,0,0,0,,Yeah, that's kind of annoying.
Dialogue: 0,0:15:59.20,0:16:00.60,中文,,0,0,0,,是的 这有点烦人
Dialogue: 0,0:16:00.60,0:16:13.09,英文,,0,0,0,,So it turns out Java does have a way to make this cleaner, which is we're going to go in, and instead of using an integer, we're going to do something called generics, which is we're going to defer type selection to later.
Dialogue: 0,0:16:00.60,0:16:13.09,中文,,0,0,0,,事实证明 Java 确实有一种方法可以使代码更清晰 就是我们要进去 而不是使用整数 我们要使用一种叫做泛型的东西 也就是我们将推迟类型选择到以后
Dialogue: 0,0:16:13.09,0:16:19.96,英文,,0,0,0,,At first, this is going to seem mysterious, and I'm going to introduce a little bit of brand new syntax, which you can peek at here.
Dialogue: 0,0:16:13.09,0:16:19.96,中文,,0,0,0,,起初 这会显得有点神秘 我会介绍一点全新的语法 你可以在这里偷偷看一下
Dialogue: 0,0:16:19.96,0:16:21.48,英文,,0,0,0,,But don't worry about it.
Dialogue: 0,0:16:19.96,0:16:21.48,中文,,0,0,0,,但别担心
Dialogue: 0,0:16:21.48,0:16:23.52,英文,,0,0,0,,We will explain it all soon.
Dialogue: 0,0:16:21.48,0:16:23.52,中文,,0,0,0,,我们很快会解释这一切
Dialogue: 0,0:16:23.52,0:16:35.17,英文,,0,0,0,,OK, so instead of using an integer, I'm actually going to write this SLList not using integers, but using a type that the user is going to decide when they create this object.
Dialogue: 0,0:16:23.52,0:16:35.17,中文,,0,0,0,,不再使用整数 我实际上要编写这个 SLList 不使用整数 而是使用用户在创建此对象时将要决定的类型
Dialogue: 0,0:16:35.17,0:16:37.61,英文,,0,0,0,,So I'm going to add a placeholder to represent.
Dialogue: 0,0:16:35.17,0:16:37.61,中文,,0,0,0,,我要添加一个占位符来表示
Dialogue: 0,0:16:37.61,0:16:44.62,英文,,0,0,0,,I don't know what the user wants yet, but whatever the user wants, I'll figure it out and replace it with this placeholder.
Dialogue: 0,0:16:37.61,0:16:44.62,中文,,0,0,0,,我还不知道用户想要什么 但无论用户想要什么 我都会找到并用这个占位符替换掉
Dialogue: 0,0:16:44.62,0:16:50.50,英文,,0,0,0,,So I'm going to add two of these angle brackets here, and I'm going to add a placeholder word.
Dialogue: 0,0:16:44.62,0:16:50.50,中文,,0,0,0,,我要在这里添加两个尖括号 并且我要添加一个占位词
Dialogue: 0,0:16:50.50,0:16:52.98,英文,,0,0,0,,This could be literally anything.
Dialogue: 0,0:16:50.50,0:16:52.98,中文,,0,0,0,,这可以是任何东西
Dialogue: 0,0:16:52.98,0:16:53.70,英文,,0,0,0,,That is safe for work.
Dialogue: 0,0:16:52.98,0:16:53.70,中文,,0,0,0,,这是适合工作的
Dialogue: 0,0:16:53.70,0:16:56.40,英文,,0,0,0,,So what do you want?
Dialogue: 0,0:16:53.70,0:16:56.40,中文,,0,0,0,,那么你想要什么
Dialogue: 0,0:16:56.40,0:16:58.89,英文,,0,0,0,,One word.
Dialogue: 0,0:16:56.40,0:16:58.89,中文,,0,0,0,,就一个字
Dialogue: 0,0:16:58.89,0:17:00.39,英文,,0,0,0,,Pineapple.
Dialogue: 0,0:16:58.89,0:17:00.39,中文,,0,0,0,,菠萝
Dialogue: 0,0:17:00.39,0:17:02.87,英文,,0,0,0,,It's funny someone said cheese, because they used cheese last semester.
Dialogue: 0,0:17:00.39,0:17:02.87,中文,,0,0,0,,有趣的是有人说起奶酪 因为他们上学期用过奶酪
Dialogue: 0,0:17:02.87,0:17:06.49,英文,,0,0,0,,OK, so I don't know why that's so exciting, but they did.
Dialogue: 0,0:17:02.87,0:17:06.49,中文,,0,0,0,,我不知道为什么那么激动 但他们确实这么说
Dialogue: 0,0:17:06.49,0:17:08.15,英文,,0,0,0,,OK.
Dialogue: 0,0:17:06.49,0:17:08.15,中文,,0,0,0,,好的
Dialogue: 0,0:17:08.15,0:17:11.55,英文,,0,0,0,,It's because it's cheese.
Dialogue: 0,0:17:08.15,0:17:11.55,中文,,0,0,0,,那是因为那是奶酪
Dialogue: 0,0:17:11.55,0:17:13.21,英文,,0,0,0,,Well, we don't have a TA called cheese anymore.
Dialogue: 0,0:17:11.55,0:17:13.21,中文,,0,0,0,,我们不再有一个叫奶酪的助教了
Dialogue: 0,0:17:13.21,0:17:14.17,英文,,0,0,0,,OK.
Dialogue: 0,0:17:13.21,0:17:14.17,中文,,0,0,0,,好的
Dialogue: 0,0:17:14.17,0:17:15.29,英文,,0,0,0,,No, Justin.
Dialogue: 0,0:17:14.17,0:17:15.29,中文,,0,0,0,,不 贾斯汀
Dialogue: 0,0:17:15.29,0:17:15.87,英文,,0,0,0,,Get with the times.
Dialogue: 0,0:17:15.29,0:17:15.87,中文,,0,0,0,,跟上时代
Dialogue: 0,0:17:15.87,0:17:18.47,英文,,0,0,0,,OK, so.
Dialogue: 0,0:17:15.87,0:17:18.47,中文,,0,0,0,,好的
Dialogue: 0,0:17:18.47,0:17:22.52,英文,,0,0,0,,OK, anyway, so we added our placeholder word called pineapple.
Dialogue: 0,0:17:18.47,0:17:22.52,中文,,0,0,0,,总之 我们添加了一个叫做“pineapple”的占位符词
Dialogue: 0,0:17:22.52,0:17:31.49,英文,,0,0,0,,And so the idea here is that within this class, before we were defining things to be integers, for example, all of our nodes had an item that was of type int.
Dialogue: 0,0:17:22.52,0:17:31.49,中文,,0,0,0,,这里的想法是 在这个类中 我们在定义事物为整数之前 例如 我们所有的节点都有一个类型为int的项
Dialogue: 0,0:17:31.49,0:17:35.95,英文,,0,0,0,,But that's no longer true, because the user might choose to make pineapple something else.
Dialogue: 0,0:17:31.49,0:17:35.95,中文,,0,0,0,,但这不再是真的了 因为用户可能选择将pineapple变成其他类型
Dialogue: 0,0:17:35.95,0:17:39.19,英文,,0,0,0,,Could be an integer, could be a string, could be a walrus.
Dialogue: 0,0:17:35.95,0:17:39.19,中文,,0,0,0,,可能是整数 也可能是字符串 也可能是海象
Dialogue: 0,0:17:39.19,0:17:45.25,英文,,0,0,0,,So what I'll do is instead of saying public int item, I'll say public pineapple, and that's a placeholder.
Dialogue: 0,0:17:39.19,0:17:45.25,中文,,0,0,0,,我要做的是 而不是说public int item 我会说public pineapple 这是一个占位符
Dialogue: 0,0:17:45.25,0:17:46.07,英文,,0,0,0,,And I can keep going.
Dialogue: 0,0:17:45.25,0:17:46.07,中文,,0,0,0,,我可以继续
Dialogue: 0,0:17:46.07,0:17:49.56,英文,,0,0,0,,So whenever someone creates a node, they're not going to pass in an integer.
Dialogue: 0,0:17:46.07,0:17:49.56,中文,,0,0,0,,每当有人创建一个节点 他们不会传递一个整数
Dialogue: 0,0:17:49.56,0:17:53.52,英文,,0,0,0,,They're going to pass in a pineapple, which is some placeholder word.
Dialogue: 0,0:17:49.56,0:17:53.52,中文,,0,0,0,,他们会传递一个pineapple 这是一个占位符词
Dialogue: 0,0:17:53.52,0:17:54.66,英文,,0,0,0,,And we keep going.
Dialogue: 0,0:17:53.52,0:17:54.66,中文,,0,0,0,,我们继续前进
Dialogue: 0,0:17:54.66,0:17:56.86,英文,,0,0,0,,So size, that's still a number.
Dialogue: 0,0:17:54.66,0:17:56.86,中文,,0,0,0,,所以大小 那仍然是一个数字
Dialogue: 0,0:17:56.86,0:17:59.14,英文,,0,0,0,,Sizes are still numbers, not pineapples.
Dialogue: 0,0:17:56.86,0:17:59.14,中文,,0,0,0,,尺寸仍然是数字 不是菠萝
Dialogue: 0,0:17:59.14,0:18:04.12,英文,,0,0,0,,When someone creates a new SLList, it has a pineapple instead of an integer.
Dialogue: 0,0:17:59.14,0:18:04.12,中文,,0,0,0,,当有人创建一个新的 SLList 时 它有一个菠萝 而不是一个整数
Dialogue: 0,0:18:04.12,0:18:08.48,英文,,0,0,0,,OK, this time the sentinel can't be 0, because we don't know what type pineapple is.
Dialogue: 0,0:18:04.12,0:18:08.48,中文,,0,0,0,,这次哨兵不能是 0 因为我们不知道菠萝是什么类型
Dialogue: 0,0:18:08.48,0:18:14.89,英文,,0,0,0,,So I'm just going to put null to indicate the absence of an object, or the absence of a pineapple, whatever that is.
Dialogue: 0,0:18:08.48,0:18:14.89,中文,,0,0,0,,我只是会放一个 null 来表示对象的缺失 或者菠萝的缺失 不管那是什么
Dialogue: 0,0:18:14.89,0:18:18.05,英文,,0,0,0,,And I hope you're having lots of fun. So what happens next?
Dialogue: 0,0:18:14.89,0:18:18.05,中文,,0,0,0,,希望你玩得很开心  那么接下来会发生什么呢
Dialogue: 0,0:18:18.05,0:18:20.47,英文,,0,0,0,,When I add first, I add a pineapple.
Dialogue: 0,0:18:18.05,0:18:20.47,中文,,0,0,0,,当我添加第一个时 我加了一个菠萝
Dialogue: 0,0:18:20.47,0:18:23.71,英文,,0,0,0,,When I get first, I return the pineapple.
Dialogue: 0,0:18:20.47,0:18:23.71,中文,,0,0,0,,拿到第一个的时候 我返回菠萝
Dialogue: 0,0:18:23.71,0:18:26.11,英文,,0,0,0,,When I add last, it takes the pineapple.
Dialogue: 0,0:18:23.71,0:18:26.11,中文,,0,0,0,,在最后添加的时候 它拿走了菠萝
Dialogue: 0,0:18:26.11,0:18:27.43,英文,,0,0,0,,Great.
Dialogue: 0,0:18:26.11,0:18:27.43,中文,,0,0,0,,很好
Dialogue: 0,0:18:27.43,0:18:28.39,英文,,0,0,0,,What about size?
Dialogue: 0,0:18:27.43,0:18:28.39,中文,,0,0,0,,尺寸呢
Dialogue: 0,0:18:28.39,0:18:29.91,英文,,0,0,0,,Still the same as last time.
Dialogue: 0,0:18:28.39,0:18:29.91,中文,,0,0,0,,仍然和上次一样
Dialogue: 0,0:18:29.91,0:18:33.33,英文,,0,0,0,,And this time, well, at least the code is no longer yelling at me.
Dialogue: 0,0:18:29.91,0:18:33.33,中文,,0,0,0,,而且这次 至少代码不再对我大喊大叫了
Dialogue: 0,0:18:33.33,0:18:34.71,英文,,0,0,0,,It's still got some warnings.
Dialogue: 0,0:18:33.33,0:18:34.71,中文,,0,0,0,,仍然有一些警告
Dialogue: 0,0:18:34.71,0:18:37.66,英文,,0,0,0,,But it seems like I did my generics job right.
Dialogue: 0,0:18:34.71,0:18:37.66,中文,,0,0,0,,但好像我把泛型的工作做对了
Dialogue: 0,0:18:37.66,0:18:45.08,英文,,0,0,0,,So the first thing you do, you use these little curly brackets or angled brackets to say, I want to use this placeholder.
Dialogue: 0,0:18:37.66,0:18:45.08,中文,,0,0,0,,你做的第一件事 就是使用这些小花括号或尖括号来表示 我想使用这个占位符
Dialogue: 0,0:18:45.08,0:18:50.04,英文,,0,0,0,,And everywhere you have a type that you don't know yet, this is the type that the user hasn't told me.
Dialogue: 0,0:18:45.08,0:18:50.04,中文,,0,0,0,,而且无论你有一个你还不知道的类型 这就是用户还没有告诉我的类型
Dialogue: 0,0:18:50.04,0:18:51.00,英文,,0,0,0,,Is it an integer?
Dialogue: 0,0:18:50.04,0:18:51.00,中文,,0,0,0,,它是一个整数吗
Dialogue: 0,0:18:51.00,0:18:51.88,英文,,0,0,0,,Is it a walrus?
Dialogue: 0,0:18:51.00,0:18:51.88,中文,,0,0,0,,是海象吗
Dialogue: 0,0:18:51.88,0:18:52.66,英文,,0,0,0,,Is it a planet?
Dialogue: 0,0:18:51.88,0:18:52.66,中文,,0,0,0,,是行星吗
Dialogue: 0,0:18:52.66,0:18:53.50,英文,,0,0,0,,I don't know.
Dialogue: 0,0:18:52.66,0:18:53.50,中文,,0,0,0,,我不知道
Dialogue: 0,0:18:53.50,0:18:55.60,英文,,0,0,0,,So I'll put pineapple as a placeholder.
Dialogue: 0,0:18:53.50,0:18:55.60,中文,,0,0,0,,我会把菠萝放在这里作为一个占位符
Dialogue: 0,0:18:55.60,0:18:56.74,英文,,0,0,0,,And then we come down here.
Dialogue: 0,0:18:55.60,0:18:56.74,中文,,0,0,0,,然后我们下来
Dialogue: 0,0:18:56.74,0:18:59.32,英文,,0,0,0,,This is where the user is actually using the list.
Dialogue: 0,0:18:56.74,0:18:59.32,中文,,0,0,0,,这就是用户实际上在使用列表的地方
Dialogue: 0,0:18:59.32,0:19:04.81,英文,,0,0,0,,So this time, when the user uses the list, it's no longer enough to say, I want to build an S list.
Dialogue: 0,0:18:59.32,0:19:04.81,中文,,0,0,0,,这一次 当用户使用列表时 不能再简单地说 我想建立一个S列表
Dialogue: 0,0:19:04.81,0:19:08.41,英文,,0,0,0,,Now Java's complaining, and it says, an S list of what?
Dialogue: 0,0:19:04.81,0:19:08.41,中文,,0,0,0,,现在Java在抱怨 它说 一个什么样的S列表
Dialogue: 0,0:19:08.41,0:19:09.25,英文,,0,0,0,,Be more specific.
Dialogue: 0,0:19:08.41,0:19:09.25,中文,,0,0,0,,更具体点
Dialogue: 0,0:19:09.25,0:19:10.75,英文,,0,0,0,,Tell me what the pineapple is.
Dialogue: 0,0:19:09.25,0:19:10.75,中文,,0,0,0,,告诉我菠萝是什么
Dialogue: 0,0:19:10.75,0:19:14.08,英文,,0,0,0,,So in this case, I wanted to build the S list of strings.
Dialogue: 0,0:19:10.75,0:19:14.08,中文,,0,0,0,,在这种情况下 我想要构建字符串的 S 列表
Dialogue: 0,0:19:14.08,0:19:18.00,英文,,0,0,0,,So I'll use the same angled brackets to say, I don't just want any.
Dialogue: 0,0:19:14.08,0:19:18.00,中文,,0,0,0,,我会使用相同的尖括号来表示 我不只是想要任何
Dialogue: 0,0:19:18.00,0:19:21.00,英文,,0,0,0,,S-list, I want an S-list of strings.
Dialogue: 0,0:19:18.00,0:19:21.00,中文,,0,0,0,,S 列表 我想要一个字符串的 S 列表
Dialogue: 0,0:19:21.00,0:19:22.50,英文,,0,0,0,,And then same thing on the right side.
Dialogue: 0,0:19:21.00,0:19:22.50,中文,,0,0,0,,然后右边也是一样的
Dialogue: 0,0:19:22.50,0:19:24.26,英文,,0,0,0,,I don't just want any old S-list.
Dialogue: 0,0:19:22.50,0:19:24.26,中文,,0,0,0,,我不只是想要任何老旧的 S 列表
Dialogue: 0,0:19:24.26,0:19:26.12,英文,,0,0,0,,I want S-lists of string.
Dialogue: 0,0:19:24.26,0:19:26.12,中文,,0,0,0,,我想要字符串的 S 列表
Dialogue: 0,0:19:26.12,0:19:40.29,英文,,0,0,0,,And what happens now is you can almost think of this angled bracket as like a fancy kind of argument passing, because what Java's going to do now is it's going to take this word string, go up here, and then replace every single instance of pineapple with the word string.
Dialogue: 0,0:19:26.12,0:19:40.29,中文,,0,0,0,,现在发生的是 你几乎可以将这个尖括号看作是一种高级的参数传递 因为 Java 现在要做的是 它将取这个字符串 然后将每一个 pineapple 实例替换为字符串
Dialogue: 0,0:19:40.29,0:19:43.85,英文,,0,0,0,,And that's going to give you an S-list that supports strings.
Dialogue: 0,0:19:40.29,0:19:43.85,中文,,0,0,0,,这样就会得到一个支持字符串的 S 列表
Dialogue: 0,0:19:43.85,0:19:47.69,英文,,0,0,0,,And if you don't like this S list with strings, well, you can actually make more S lists.
Dialogue: 0,0:19:43.85,0:19:47.69,中文,,0,0,0,,如果你不喜欢带字符串的这个 S 列表 那么 你实际上可以再创建更多的 S 列表
Dialogue: 0,0:19:47.69,0:19:50.71,英文,,0,0,0,,So I'll make an S list with integers.
Dialogue: 0,0:19:47.69,0:19:50.71,中文,,0,0,0,,我会创建一个带整数的 S 列表
Dialogue: 0,0:19:50.71,0:19:52.33,英文,,0,0,0,,And that's totally OK, too.
Dialogue: 0,0:19:50.71,0:19:52.33,中文,,0,0,0,,这完全没问题
Dialogue: 0,0:19:52.33,0:19:54.03,英文,,0,0,0,,So I can have two S lists.
Dialogue: 0,0:19:52.33,0:19:54.03,中文,,0,0,0,,我可以有两个 S 列表
Dialogue: 0,0:19:54.03,0:19:56.93,英文,,0,0,0,,One could be of integers, and one could be of strings.
Dialogue: 0,0:19:54.03,0:19:56.93,中文,,0,0,0,,一个可以是整数 另一个可以是字符串
Dialogue: 0,0:19:56.93,0:19:58.59,英文,,0,0,0,,That's totally fine, too.
Dialogue: 0,0:19:56.93,0:19:58.59,中文,,0,0,0,,这也完全没问题
Dialogue: 0,0:19:58.59,0:20:00.09,英文,,0,0,0,,OK.
Dialogue: 0,0:19:58.59,0:20:00.09,中文,,0,0,0,,好的
Dialogue: 0,0:20:00.09,0:20:00.59,英文,,0,0,0,,Is it fine?
Dialogue: 0,0:20:00.09,0:20:00.59,中文,,0,0,0,,没问题吧
Dialogue: 0,0:20:00.59,0:20:01.77,英文,,0,0,0,,Why is it complaining?
Dialogue: 0,0:20:00.59,0:20:01.77,中文,,0,0,0,,为什么在抱怨
Dialogue: 0,0:20:01.77,0:20:03.37,英文,,0,0,0,,I don't know.
Dialogue: 0,0:20:01.77,0:20:03.37,中文,,0,0,0,,我不知道
Dialogue: 0,0:20:03.37,0:20:04.09,英文,,0,0,0,,I'll look at it later.
Dialogue: 0,0:20:03.37,0:20:04.09,中文,,0,0,0,,我等会再看看
Dialogue: 0,0:20:04.09,0:20:04.92,英文,,0,0,0,,Oh, L2.
Dialogue: 0,0:20:04.09,0:20:04.92,中文,,0,0,0,,哦 L2
Dialogue: 0,0:20:04.92,0:20:06.68,英文,,0,0,0,,OK.
Dialogue: 0,0:20:04.92,0:20:06.68,中文,,0,0,0,,好的
Dialogue: 0,0:20:06.68,0:20:07.66,英文,,0,0,0,,OK.
Dialogue: 0,0:20:06.68,0:20:07.66,中文,,0,0,0,,好的
Dialogue: 0,0:20:07.66,0:20:08.02,英文,,0,0,0,,Great.
Dialogue: 0,0:20:07.66,0:20:08.02,中文,,0,0,0,,太好了
Dialogue: 0,0:20:08.02,0:20:11.02,英文,,0,0,0,,Questions about generics, how they work, thoughts?
Dialogue: 0,0:20:08.02,0:20:11.02,中文,,0,0,0,,泛型的问题 它们是如何工作的 有什么想法
Dialogue: 0,0:20:11.02,0:20:12.12,英文,,0,0,0,,Oh, there's a lot of questions.
Dialogue: 0,0:20:11.02,0:20:12.12,中文,,0,0,0,,哦 有很多问题
Dialogue: 0,0:20:12.12,0:20:17.20,英文,,0,0,0,,OK.
Dialogue: 0,0:20:12.12,0:20:17.20,中文,,0,0,0,,好的
Dialogue: 0,0:20:17.20,0:20:18.84,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:20:17.20,0:20:18.84,中文,,0,0,0,,是的 这是个很棒的问题
Dialogue: 0,0:20:18.84,0:20:20.98,英文,,0,0,0,,I believe the answer is no.
Dialogue: 0,0:20:18.84,0:20:20.98,中文,,0,0,0,,我相信答案是否定的
Dialogue: 0,0:20:20.98,0:20:22.66,英文,,0,0,0,,I could briefly try it out.
Dialogue: 0,0:20:20.98,0:20:22.66,中文,,0,0,0,,我可以简单试一下
Dialogue: 0,0:20:22.66,0:20:24.80,英文,,0,0,0,,The question was, what if I don't specify?
Dialogue: 0,0:20:22.66,0:20:24.80,中文,,0,0,0,,问题是 如果我不指定呢
Dialogue: 0,0:20:24.80,0:20:26.06,英文,,0,0,0,,Can I put multiple types?
Dialogue: 0,0:20:24.80,0:20:26.06,中文,,0,0,0,,我可以放多个类型吗
Dialogue: 0,0:20:26.06,0:20:27.68,英文,,0,0,0,,I think you can't.
Dialogue: 0,0:20:26.06,0:20:27.68,中文,,0,0,0,,我觉得你不能
Dialogue: 0,0:20:27.68,0:20:32.25,英文,,0,0,0,,You cannot if you don't specify three types, but you can use objects.
Dialogue: 0,0:20:27.68,0:20:32.25,中文,,0,0,0,,如果你不指定三种类型 就不能 但你可以使用对象
Dialogue: 0,0:20:32.25,0:20:37.19,英文,,0,0,0,,Yeah, so maybe come back next time when we talk about inheritance, and we'll talk about the object class.
Dialogue: 0,0:20:32.25,0:20:37.19,中文,,0,0,0,,是的 也许下次我们讨论继承时 我们会谈论对象类
Dialogue: 0,0:20:37.19,0:20:39.37,英文,,0,0,0,,But in general, it's not recommended.
Dialogue: 0,0:20:37.19,0:20:39.37,中文,,0,0,0,,但一般来说 不推荐这样做
Dialogue: 0,0:20:39.37,0:20:42.17,英文,,0,0,0,,It creates kind of strange Java code.
Dialogue: 0,0:20:39.37,0:20:42.17,中文,,0,0,0,,它创建了有点奇怪的Java代码
Dialogue: 0,0:20:42.17,0:20:43.87,英文,,0,0,0,,Great question, though. Any others?
Dialogue: 0,0:20:42.17,0:20:43.87,中文,,0,0,0,,不过 问题很棒  还有其他的吗
Dialogue: 0,0:20:43.87,0:20:47.98,英文,,0,0,0,,OK, one more.
Dialogue: 0,0:20:43.87,0:20:47.98,中文,,0,0,0,,好的 再来一个
Dialogue: 0,0:20:47.98,0:20:49.02,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:20:47.98,0:20:49.02,中文,,0,0,0,,是的 那是一个很棒的问题
Dialogue: 0,0:20:49.02,0:20:50.95,英文,,0,0,0,,It's not one I'm going to go into too much detail.
Dialogue: 0,0:20:49.02,0:20:50.95,中文,,0,0,0,,我不会详细讨论它
Dialogue: 0,0:20:50.95,0:20:54.13,英文,,0,0,0,,There's a long video from Josh, if you're curious, so just ask me.
Dialogue: 0,0:20:50.95,0:20:54.13,中文,,0,0,0,,如果你好奇 Josh有一个长视频 就问我吧
Dialogue: 0,0:20:54.13,0:20:56.91,英文,,0,0,0,,If you put the primitive type int, it's going to get confused.
Dialogue: 0,0:20:54.13,0:20:56.91,中文,,0,0,0,,如果你放入原始类型int 它会感到困惑
Dialogue: 0,0:20:56.91,0:21:02.07,英文,,0,0,0,,It wants the object version of integers.
Dialogue: 0,0:20:56.91,0:21:02.07,中文,,0,0,0,,它需要整数的对象版本
Dialogue: 0,0:21:02.07,0:21:03.96,英文,,0,0,0,,If that made no sense, don't worry about it.
Dialogue: 0,0:21:02.07,0:21:03.96,中文,,0,0,0,,如果这一点讲不通 不用担心
Dialogue: 0,0:21:03.96,0:21:08.20,英文,,0,0,0,,Just capitalize integer, and everything will be OK.
Dialogue: 0,0:21:03.96,0:21:08.20,中文,,0,0,0,,只需将整数大写 一切都会没问题的
Dialogue: 0,0:21:08.20,0:21:09.06,英文,,0,0,0,,Yeah, after class.
Dialogue: 0,0:21:08.20,0:21:09.06,中文,,0,0,0,,是的 下课后
Dialogue: 0,0:21:09.06,0:21:09.78,英文,,0,0,0,,Great question, though.
Dialogue: 0,0:21:09.06,0:21:09.78,中文,,0,0,0,,问题很棒 不过
Dialogue: 0,0:21:09.78,0:21:16.86,英文,,0,0,0,,OK, I'll take one more.
Dialogue: 0,0:21:09.78,0:21:16.86,中文,,0,0,0,,好的 我再答一个
Dialogue: 0,0:21:16.86,0:21:22.82,英文,,0,0,0,,Yeah, that was a great question, which is, how do you make sure that the dummy thing in the Sentinel node matches the type provided?
Dialogue: 0,0:21:16.86,0:21:22.82,中文,,0,0,0,,是的 那是一个很棒的问题 就是 你如何确保 Sentinel 节点中的虚拟东西与提供的类型匹配呢
Dialogue: 0,0:21:22.82,0:21:26.82,英文,,0,0,0,,So I chose to use null, which is kind of like the absence of anything.
Dialogue: 0,0:21:22.82,0:21:26.82,中文,,0,0,0,,我选择使用 null 这有点像是什么都没有
Dialogue: 0,0:21:26.82,0:21:30.65,英文,,0,0,0,,So in this case, null happens to be compatible with any reference type out there.
Dialogue: 0,0:21:26.82,0:21:30.65,中文,,0,0,0,,在这种情况下 null 恰好与任何引用类型兼容
Dialogue: 0,0:21:30.65,0:21:32.93,英文,,0,0,0,,Because remember, there are nine types in Java.
Dialogue: 0,0:21:30.65,0:21:32.93,中文,,0,0,0,,因为记住 在 Java 中有九种类型
Dialogue: 0,0:21:32.93,0:21:36.27,英文,,0,0,0,,Anything that's not the eight primitive types will be a reference type.
Dialogue: 0,0:21:32.93,0:21:36.27,中文,,0,0,0,,任何不是八种基本类型的东西都将是引用类型
Dialogue: 0,0:21:36.27,0:21:41.29,英文,,0,0,0,,And if it's a reference type, I can just assign it to null, which indicates that nothing exists there.
Dialogue: 0,0:21:36.27,0:21:41.29,中文,,0,0,0,,如果它是引用类型 我只需将其赋值为 null 这表示那里没有任何内容
Dialogue: 0,0:21:41.29,0:21:42.93,英文,,0,0,0,,If that didn't make sense, it's also okay.
Dialogue: 0,0:21:41.29,0:21:42.93,中文,,0,0,0,,如果这没让你明白 也没关系
Dialogue: 0,0:21:42.93,0:21:44.42,英文,,0,0,0,,You can come talk afterwards.
Dialogue: 0,0:21:42.93,0:21:44.42,中文,,0,0,0,,之后你可以过来聊聊
Dialogue: 0,0:21:44.42,0:21:48.78,英文,,0,0,0,,Not like a critical thing you have to know for the project.
Dialogue: 0,0:21:44.42,0:21:48.78,中文,,0,0,0,,不像是项目中必须知道的关键事情
Dialogue: 0,0:21:48.78,0:21:50.36,英文,,0,0,0,,But still a great question.
Dialogue: 0,0:21:48.78,0:21:50.36,中文,,0,0,0,,但还是一个很棒的问题
Dialogue: 0,0:21:50.36,0:21:51.92,英文,,0,0,0,,Okay.
Dialogue: 0,0:21:50.36,0:21:51.92,中文,,0,0,0,,好的
Dialogue: 0,0:21:51.92,0:21:53.36,英文,,0,0,0,,Great, so now I have two lists.
Dialogue: 0,0:21:51.92,0:21:53.36,中文,,0,0,0,,很好 现在我有两个列表
Dialogue: 0,0:21:53.36,0:21:57.54,英文,,0,0,0,,I was able to use different types, and I did not have to copy-paste my code.
Dialogue: 0,0:21:53.36,0:21:57.54,中文,,0,0,0,,我能够使用不同类型 并且不需要复制粘贴我的代码
Dialogue: 0,0:21:57.54,0:21:58.36,英文,,0,0,0,,Big win.
Dialogue: 0,0:21:57.54,0:21:58.36,中文,,0,0,0,,大获成功
Dialogue: 0,0:21:58.36,0:22:03.78,英文,,0,0,0,,One final little note, in newer versions of Java, you'll see IntelliJ has helpfully graded this out.
Dialogue: 0,0:21:58.36,0:22:03.78,中文,,0,0,0,,最后 有个小提示 在较新版本的Java中 你会发现IntelliJ已经很贴心地将这个梯形变暗了
Dialogue: 0,0:22:03.78,0:22:05.14,英文,,0,0,0,,So Java's pretty smart.
Dialogue: 0,0:22:03.78,0:22:05.14,中文,,0,0,0,,所以Java相当聪明
Dialogue: 0,0:22:05.14,0:22:10.31,英文,,0,0,0,,If you leave out the type on the right-hand side, Java still knows what you're talking about, and it's still OK.
Dialogue: 0,0:22:05.14,0:22:10.31,中文,,0,0,0,,如果你在右侧不指定类型 Java仍然知道你在说什么 并且也没问题
Dialogue: 0,0:22:10.31,0:22:14.83,英文,,0,0,0,,So if you don't add the word integer a second time, Java's pretty smart, and it says,
Dialogue: 0,0:22:10.31,0:22:14.83,中文,,0,0,0,,如果你不再加上第二次的整数这个词 Java还是很聪明的 它会说
Dialogue: 0,0:22:14.83,0:22:21.84,英文,,0,0,0,,You already told me you wanted an S as an integer, so I'll just assume that you meant to put the word integer here, but you got lazy.
Dialogue: 0,0:22:14.83,0:22:21.84,中文,,0,0,0,,你已经告诉我你想要一个S作为整数 我会假设你是想在这里加上整数这个词 但你懒了
Dialogue: 0,0:22:21.84,0:22:26.85,英文,,0,0,0,,So if you want to be lazy, that syntax is also totally OK.
Dialogue: 0,0:22:21.84,0:22:26.85,中文,,0,0,0,,如果你想偷懒 那种语法也完全没问题
Dialogue: 0,0:22:26.85,0:22:29.77,英文,,0,0,0,,at least in newer versions of Java.
Dialogue: 0,0:22:26.85,0:22:29.77,中文,,0,0,0,,至少在较新版本的Java中是这样的
Dialogue: 0,0:22:29.77,0:22:33.09,英文,,0,0,0,,Slides use bleep, blorp just to prove that any word works.
Dialogue: 0,0:22:29.77,0:22:33.09,中文,,0,0,0,,幻灯片用嘟嘟声 哔哔声只是为了证明任何词都可以
Dialogue: 0,0:22:33.09,0:22:34.27,英文,,0,0,0,,You used pineapple.
Dialogue: 0,0:22:33.09,0:22:34.27,中文,,0,0,0,,你用了菠萝
Dialogue: 0,0:22:34.27,0:22:35.49,英文,,0,0,0,,Last semester, you used cheese.
Dialogue: 0,0:22:34.27,0:22:35.49,中文,,0,0,0,,上学期 你用了奶酪
Dialogue: 0,0:22:35.49,0:22:38.05,英文,,0,0,0,,So anything works.
Dialogue: 0,0:22:35.49,0:22:38.05,中文,,0,0,0,,任何东西都可以
Dialogue: 0,0:22:38.05,0:22:39.80,英文,,0,0,0,,This actually answers some of the questions from earlier.
Dialogue: 0,0:22:38.05,0:22:39.80,中文,,0,0,0,,这实际上回答了之前的一些问题
Dialogue: 0,0:22:39.80,0:22:41.44,英文,,0,0,0,,So if you're curious, it's on the slide.
Dialogue: 0,0:22:39.80,0:22:41.44,中文,,0,0,0,,如果你好奇的话 就在幻灯片上
Dialogue: 0,0:22:41.44,0:22:43.04,英文,,0,0,0,,So we'll spend more time with this later.
Dialogue: 0,0:22:41.44,0:22:43.04,中文,,0,0,0,,我们稍后会花更多时间在这上面
Dialogue: 0,0:22:43.04,0:22:50.24,英文,,0,0,0,,But basically, the idea is at the very top, use the little angle brackets to say pineapple is my golden placeholder word.
Dialogue: 0,0:22:43.04,0:22:50.24,中文,,0,0,0,,但基本上 这个想法就是在顶部使用小角括号来表示菠萝是我的金色占位符
Dialogue: 0,0:22:50.24,0:22:52.66,英文,,0,0,0,,And then anywhere in that code that
Dialogue: 0,0:22:50.24,0:22:52.66,中文,,0,0,0,,然后在代码中的任何地方
Dialogue: 0,0:22:52.66,0:22:54.80,英文,,0,0,0,,Blueprint that tells you how SLLists work.
Dialogue: 0,0:22:52.66,0:22:54.80,中文,,0,0,0,,蓝图告诉你 SLList 是如何工作的
Dialogue: 0,0:22:54.80,0:22:59.44,英文,,0,0,0,,You're going to use Pineapple as a placeholder for any type that you don't know right now.
Dialogue: 0,0:22:54.80,0:22:59.44,中文,,0,0,0,,你将使用 Pineapple 作为任何你现在不知道的类型的占位符
Dialogue: 0,0:22:59.44,0:23:08.83,英文,,0,0,0,,And then when you declare, I want a new list, then you're going to use the angle brackets to say, any place the implementer of the list said Pineapple, please put in the word double.
Dialogue: 0,0:22:59.44,0:23:08.83,中文,,0,0,0,,然后当你声明 我想要一个新的列表 然后你将使用尖括号来表示 任何地方列表的实现者说 Pineapple 请放入双词
Dialogue: 0,0:23:08.83,0:23:13.53,英文,,0,0,0,,And that'll give me my glorious SLList or DLList of doubles.
Dialogue: 0,0:23:08.83,0:23:13.53,中文,,0,0,0,,这样就会给我一个辉煌的 SLList 或 DLList 的双词
Dialogue: 0,0:23:13.53,0:23:15.54,英文,,0,0,0,,OK.
Dialogue: 0,0:23:13.53,0:23:15.54,中文,,0,0,0,,好的
Dialogue: 0,0:23:15.54,0:23:16.62,英文,,0,0,0,,Great.
Dialogue: 0,0:23:15.54,0:23:16.62,中文,,0,0,0,,太好了
Dialogue: 0,0:23:16.62,0:23:18.88,英文,,0,0,0,,End of first half of today.
Dialogue: 0,0:23:16.62,0:23:18.88,中文,,0,0,0,,今天上半场结束
Dialogue: 0,0:23:18.88,0:23:22.20,英文,,0,0,0,,Anything else you want to know about the first half, your last chance?
Dialogue: 0,0:23:18.88,0:23:22.20,中文,,0,0,0,,关于上半场还有其他你想知道的吗 这是你最后的机会
Dialogue: 0,0:23:22.20,0:23:25.41,英文,,0,0,0,,Otherwise, I'm going to talk a bunch about arrays.
Dialogue: 0,0:23:22.20,0:23:25.41,中文,,0,0,0,,要不然 我会大谈一堆关于数组的事情
Dialogue: 0,0:23:25.41,0:23:31.08,英文,,0,0,0,,So sometimes at this point, I guess maybe I'll talk about the motivation first.
Dialogue: 0,0:23:25.41,0:23:31.08,中文,,0,0,0,,有时候在这一点上 我想也许我会先谈谈动力
Dialogue: 0,0:23:31.08,0:23:44.63,英文,,0,0,0,,So far, we spent like, what, one and a half, two lectures, and we started from the list, and we worked our way all the way up to the glorious DLList that accepts different types and has all these fancy little sentinels and all that stuff.
Dialogue: 0,0:23:31.08,0:23:44.63,中文,,0,0,0,,到目前为止 我们花了 什么 一节半 两节课的时间 我们从列表开始 一直工作到接受不同类型并拥有所有这些花哨小哨兵等等的光荣 DLList
Dialogue: 0,0:23:44.63,0:23:51.50,英文,,0,0,0,,So that is one way to start from scratch and build a wonderful functioning list that we can give to users.
Dialogue: 0,0:23:44.63,0:23:51.50,中文,,0,0,0,,这是一种从零开始构建一个我们可以提供给用户的出色功能列表的方法
Dialogue: 0,0:23:51.50,0:23:53.40,英文,,0,0,0,,But that's not the only way.
Dialogue: 0,0:23:51.50,0:23:53.40,中文,,0,0,0,,但这不是唯一的方法
Dialogue: 0,0:23:53.40,0:24:00.88,英文,,0,0,0,,So starting from right now, we're actually going to wipe that all away, start from scratch, and we're going to build a totally new type of list.
Dialogue: 0,0:23:53.40,0:24:00.88,中文,,0,0,0,,从现在开始 我们实际上要将所有这些都清除掉 从头开始 我们将建立一个全新的列表类型
Dialogue: 0,0:24:00.88,0:24:02.78,英文,,0,0,0,,It's still going to have the same operations.
Dialogue: 0,0:24:00.88,0:24:02.78,中文,,0,0,0,,它仍然会有相同的操作
Dialogue: 0,0:24:02.78,0:24:06.02,英文,,0,0,0,,It is still a sequence of items with a front and a back.
Dialogue: 0,0:24:02.78,0:24:06.02,中文,,0,0,0,,它仍然是一个具有前端和后端的项目序列
Dialogue: 0,0:24:06.02,0:24:07.58,英文,,0,0,0,,I can still add items.
Dialogue: 0,0:24:06.02,0:24:07.58,中文,,0,0,0,,我仍然可以添加项目
Dialogue: 0,0:24:07.58,0:24:09.06,英文,,0,0,0,,I can still get items.
Dialogue: 0,0:24:07.58,0:24:09.06,中文,,0,0,0,,我仍然可以获取项目
Dialogue: 0,0:24:09.06,0:24:16.45,英文,,0,0,0,,But instead of using nodes and links as the underlying data structure, I'm going to use a radius as the underlying data structure.
Dialogue: 0,0:24:09.06,0:24:16.45,中文,,0,0,0,,但是 我将使用半径作为底层数据结构 而不是使用节点和链接
Dialogue: 0,0:24:16.45,0:24:21.13,英文,,0,0,0,,So that's our goal for the next one, one and a half or so lectures.
Dialogue: 0,0:24:16.45,0:24:21.13,中文,,0,0,0,,这是我们下一个、一个半左右的讲座的目标
Dialogue: 0,0:24:21.13,0:24:22.39,英文,,0,0,0,,OK.
Dialogue: 0,0:24:21.13,0:24:22.39,中文,,0,0,0,,好的
Dialogue: 0,0:24:22.39,0:24:27.05,英文,,0,0,0,,So I guess before we do that, I should first talk a little bit about what is an array anyway?
Dialogue: 0,0:24:22.39,0:24:27.05,中文,,0,0,0,,我想在我们做这个之前 我应该先谈一下数组到底是什么
Dialogue: 0,0:24:27.05,0:24:35.76,英文,,0,0,0,,We've kind of sort of been using them, but let's really spend half an hour making sure we all understand deeply what an array is in the first place.
Dialogue: 0,0:24:27.05,0:24:35.76,中文,,0,0,0,,我们有点在用它们 但让我们真正花半个小时确保我们都深刻理解数组是什么
Dialogue: 0,0:24:35.76,0:24:43.96,英文,,0,0,0,,So first part of this is stuff we've already seen, which is anytime you declare a variable, you tell Java, I declare there is an integer called x.
Dialogue: 0,0:24:35.76,0:24:43.96,中文,,0,0,0,,这个的第一部分是我们已经见过的东西 也就是每当你声明一个变量时 你告诉Java 我声明了一个叫做x的整数
Dialogue: 0,0:24:43.96,0:24:47.12,英文,,0,0,0,,Or I declare there is a walrus called W1.
Dialogue: 0,0:24:43.96,0:24:47.12,中文,,0,0,0,,或者我声明了一个叫做w1的海象
Dialogue: 0,0:24:47.12,0:24:55.53,英文,,0,0,0,,Java is going to allocate a little box of memory and say, anytime you want to talk about x, you're talking about the ones and zeros in this memory box.
Dialogue: 0,0:24:47.12,0:24:55.53,中文,,0,0,0,,Java会分配一小块内存并说 每当你想谈论x时 你都在谈论这个内存盒子里的01
Dialogue: 0,0:24:55.53,0:24:59.97,英文,,0,0,0,,Or for W1, anytime you're talking about W1, you're talking about this memory box.
Dialogue: 0,0:24:55.53,0:24:59.97,中文,,0,0,0,,或者对于w1 每当你谈论w1时 你就在谈论这个记忆盒子
Dialogue: 0,0:24:59.97,0:25:10.23,英文,,0,0,0,,And remember, the key idea from lecture 3 or whatever number was that these variables w1 and w2, these reference types, they don't actually hold the walrus.
Dialogue: 0,0:24:59.97,0:25:10.23,中文,,0,0,0,,记住 从第3节课或者其他编号的关键思想是 这些变量w1和w2 这些引用类型 它们实际上并不持有海象
Dialogue: 0,0:25:10.23,0:25:11.17,英文,,0,0,0,,What do they hold?
Dialogue: 0,0:25:10.23,0:25:11.17,中文,,0,0,0,,那么它们持有什么
Dialogue: 0,0:25:11.17,0:25:14.27,英文,,0,0,0,,They hold the address of where the walrus is.
Dialogue: 0,0:25:11.17,0:25:14.27,中文,,0,0,0,,它们持有海象所在的地址
Dialogue: 0,0:25:14.27,0:25:20.76,英文,,0,0,0,,So if you ever want to go visit the walrus, then in w2, someone leaves a little note saying, your walrus lives here.
Dialogue: 0,0:25:14.27,0:25:20.76,中文,,0,0,0,,如果你想去看海象 那么在w2中 有人留下了一张小纸条 上面写着 你的海象住在这里
Dialogue: 0,0:25:20.76,0:25:26.56,英文,,0,0,0,,You go there, and you'll find this walrus with size 30, 5.6, whatever.
Dialogue: 0,0:25:20.76,0:25:26.56,中文,,0,0,0,,你去那里 你会发现这只大小为30 5.6的海象 或者其他什么
Dialogue: 0,0:25:26.56,0:25:31.52,英文,,0,0,0,,OK, it turns out, so that's all review, it turns out arrays are also kind of like objects.
Dialogue: 0,0:25:26.56,0:25:31.52,中文,,0,0,0,,事实证明 这都是复习 事实证明数组也有点像对象
Dialogue: 0,0:25:31.52,0:25:38.46,英文,,0,0,0,,But the only difference here is that instead of a named series of memory boxes, we have a numbered sequence of boxes.
Dialogue: 0,0:25:31.52,0:25:38.46,中文,,0,0,0,,但这里唯一的区别是 我们有一系列编号的盒子 而不是一系列命名的内存盒子
Dialogue: 0,0:25:38.46,0:25:39.48,英文,,0,0,0,,What does that mean?
Dialogue: 0,0:25:38.46,0:25:39.48,中文,,0,0,0,,这是什么意思
Dialogue: 0,0:25:39.48,0:25:42.70,英文,,0,0,0,,So remember in the walrus, the walrus had a bunch of attributes.
Dialogue: 0,0:25:39.48,0:25:42.70,中文,,0,0,0,,记住 在海象中 海象有一堆属性
Dialogue: 0,0:25:42.70,0:25:45.08,英文,,0,0,0,,Those were the instance variables that we made.
Dialogue: 0,0:25:42.70,0:25:45.08,中文,,0,0,0,,那些就是我们创建的实例变量
Dialogue: 0,0:25:45.08,0:25:46.63,英文,,0,0,0,,So I could ask, for example,
Dialogue: 0,0:25:45.08,0:25:46.63,中文,,0,0,0,,我可以问 例如
Dialogue: 0,0:25:46.63,0:25:48.15,英文,,0,0,0,,Walrus W2.
Dialogue: 0,0:25:46.63,0:25:48.15,中文,,0,0,0,,海象 w2
Dialogue: 0,0:25:48.15,0:25:54.37,英文,,0,0,0,,In other words, if I go to W2 and I visit my friendly walrus, you have a weight, and it's 30.
Dialogue: 0,0:25:48.15,0:25:54.37,中文,,0,0,0,,换句话说 如果我去 w2 拜访我的好友海象 你有一个重量 是 30
Dialogue: 0,0:25:54.37,0:25:57.17,英文,,0,0,0,,So this number has like a name associated with it.
Dialogue: 0,0:25:54.37,0:25:57.17,中文,,0,0,0,,这个数字有一个与之相关联的名称
Dialogue: 0,0:25:57.17,0:26:01.10,英文,,0,0,0,,Or I could ask this walrus friend, you have a tusk size. It's 5.6.
Dialogue: 0,0:25:57.17,0:26:01.10,中文,,0,0,0,,或者我可以问问这只海象朋友 你有一个巨大的牙齿尺寸  是5.6
Dialogue: 0,0:26:01.10,0:26:04.34,英文,,0,0,0,,And so that's another number associated with the walrus.
Dialogue: 0,0:26:01.10,0:26:04.34,中文,,0,0,0,,这就是与海象相关联的另一个数字
Dialogue: 0,0:26:04.34,0:26:05.94,英文,,0,0,0,,It's a piece of data with the name.
Dialogue: 0,0:26:04.34,0:26:05.94,中文,,0,0,0,,这是一个具有名称的数据片段
Dialogue: 0,0:26:05.94,0:26:07.46,英文,,0,0,0,,And I called it tusk size.
Dialogue: 0,0:26:05.94,0:26:07.46,中文,,0,0,0,,我把它叫做牙齿尺寸
Dialogue: 0,0:26:07.46,0:26:08.92,英文,,0,0,0,,I called it weight.
Dialogue: 0,0:26:07.46,0:26:08.92,中文,,0,0,0,,我把它称为重量
Dialogue: 0,0:26:08.92,0:26:11.30,英文,,0,0,0,,By contrast, in an array,
Dialogue: 0,0:26:08.92,0:26:11.30,中文,,0,0,0,,相比之下 在数组中
Dialogue: 0,0:26:11.30,0:26:16.99,英文,,0,0,0,,All of our memory boxes don't have names, like task size and weight, but they have numbers.
Dialogue: 0,0:26:11.30,0:26:16.99,中文,,0,0,0,,我们所有的内存盒子都没有名称 比如任务大小和重量 但它们有编号
Dialogue: 0,0:26:16.99,0:26:25.33,英文,,0,0,0,,So for example, I could say, this array, I want the fifth item of the array, or I want the 10th item of the array, or I want the first item of the array.
Dialogue: 0,0:26:16.99,0:26:25.33,中文,,0,0,0,,比如 我可以说 这个数组 我想要数组的第五个项目 或者第十个项目 或者第一个项目
Dialogue: 0,0:26:25.33,0:26:32.02,英文,,0,0,0,,So in that case, instead of using names to refer to specific memory boxes, I'm going to use numbers.
Dialogue: 0,0:26:25.33,0:26:32.02,中文,,0,0,0,,在这种情况下 我将使用数字而不是名称来指代特定的内存盒子
Dialogue: 0,0:26:32.02,0:26:38.30,英文,,0,0,0,,And I'll use brackets to indicate that I'm talking about the array instead of dot notation, which is how I asked the walrus
Dialogue: 0,0:26:32.02,0:26:38.30,中文,,0,0,0,,我会使用方括号来表明我在谈论数组 而不是用点符号 那是我问海象
Dialogue: 0,0:26:38.30,0:26:39.44,英文,,0,0,0,,for its tusk size.
Dialogue: 0,0:26:38.30,0:26:39.44,中文,,0,0,0,,它的牙齿大小时使用的
Dialogue: 0,0:26:39.44,0:26:42.36,英文,,0,0,0,,But ultimately, an array is just like an object.
Dialogue: 0,0:26:39.44,0:26:42.36,中文,,0,0,0,,但最终 数组其实就像一个对象
Dialogue: 0,0:26:42.36,0:26:49.46,英文,,0,0,0,,So if you think of this walrus as it's this object living in memory, there's enough space to write down the tusk size.
Dialogue: 0,0:26:42.36,0:26:49.46,中文,,0,0,0,,如果你把这只海象想象成内存中的一个对象的话 就有足够的空间来记录它的长牙大小
Dialogue: 0,0:26:49.46,0:26:53.30,英文,,0,0,0,,There's enough space to write down, what was it, the weight or whatever.
Dialogue: 0,0:26:49.46,0:26:53.30,中文,,0,0,0,,有足够的空间来记录 是什么来着 重量还是别的什么
Dialogue: 0,0:26:53.30,0:27:02.46,英文,,0,0,0,,Well, the array is kind of the same thing, which is when you declare that there is an array, then Java allocates a bunch of memory for a bunch of variables side by side by side.
Dialogue: 0,0:26:53.30,0:27:02.46,中文,,0,0,0,,数组也差不多 当你声明有一个数组时 Java就会为一堆变量分配一大块内存 依次排列在一起
Dialogue: 0,0:27:02.46,0:27:06.79,英文,,0,0,0,,So if you say, I want an array of five integers, what will Java do?
Dialogue: 0,0:27:02.46,0:27:06.79,中文,,0,0,0,,如果你说 我想要一个包含五个整数的数组 Java会怎么做呢
Dialogue: 0,0:27:06.79,0:27:07.95,英文,,0,0,0,,It will go into memory.
Dialogue: 0,0:27:06.79,0:27:07.95,中文,,0,0,0,,它会进入内存
Dialogue: 0,0:27:07.95,0:27:12.07,英文,,0,0,0,,It will dig around and find a space for five integers side by side.
Dialogue: 0,0:27:07.95,0:27:12.07,中文,,0,0,0,,它会在内存中找到一块足够容纳五个整数排在一起的空间
Dialogue: 0,0:27:12.07,0:27:14.75,英文,,0,0,0,,And it will say, any time you're talking about the array, here it is.
Dialogue: 0,0:27:12.07,0:27:14.75,中文,,0,0,0,,然后它会说 每当你谈论这个数组时 它就在这里
Dialogue: 0,0:27:14.75,0:27:17.75,英文,,0,0,0,,It's five integers side by side.
Dialogue: 0,0:27:14.75,0:27:17.75,中文,,0,0,0,,这是五个整数并排
Dialogue: 0,0:27:17.75,0:27:22.41,英文,,0,0,0,,At this point, sometimes people stop and ask, so what was the whole point of building lists?
Dialogue: 0,0:27:17.75,0:27:22.41,中文,,0,0,0,,有时候在这一点上 人们会停下来问 构建列表到底有什么意义呢
Dialogue: 0,0:27:22.41,0:27:24.03,英文,,0,0,0,,Why not just use arrays the whole time?
Dialogue: 0,0:27:22.41,0:27:24.03,中文,,0,0,0,,为什么不一直使用数组呢
Dialogue: 0,0:27:24.03,0:27:27.69,英文,,0,0,0,,Well, the main problem in Java is that arrays have a fixed length.
Dialogue: 0,0:27:24.03,0:27:27.69,中文,,0,0,0,,Java中的主要问题是数组的长度是固定的
Dialogue: 0,0:27:27.69,0:27:36.38,英文,,0,0,0,,So as soon as I say, this array has length 5, well, Java has already gone through all the trouble of digging up a space for 5 integers.
Dialogue: 0,0:27:27.69,0:27:36.38,中文,,0,0,0,,一旦我说 这个数组的长度是5 Java已经费了很大的劲挖了一个装下5个整数的地方
Dialogue: 0,0:27:36.38,0:27:37.48,英文,,0,0,0,,And that will never change.
Dialogue: 0,0:27:36.38,0:27:37.48,中文,,0,0,0,,而且那永远都不会改变
Dialogue: 0,0:27:37.48,0:27:38.88,英文,,0,0,0,,It will sit there forever.
Dialogue: 0,0:27:37.48,0:27:38.88,中文,,0,0,0,,它将永远坐在那里
Dialogue: 0,0:27:38.88,0:27:40.56,英文,,0,0,0,,You can't be like, oh, actually, I changed my mind.
Dialogue: 0,0:27:38.88,0:27:40.56,中文,,0,0,0,,你不能就像 哦 其实 我改变了主意
Dialogue: 0,0:27:40.56,0:27:41.74,英文,,0,0,0,,I want more memory.
Dialogue: 0,0:27:40.56,0:27:41.74,中文,,0,0,0,,我想要更多的内存
Dialogue: 0,0:27:41.74,0:27:44.72,英文,,0,0,0,,Java's going to say, I gave you 5 integers like you asked.
Dialogue: 0,0:27:41.74,0:27:44.72,中文,,0,0,0,,Java要说 我给了你5个整数 就像你要求的那样
Dialogue: 0,0:27:44.72,0:27:46.20,英文,,0,0,0,,Don't ask me for more.
Dialogue: 0,0:27:44.72,0:27:46.20,中文,,0,0,0,,不要再问我要更多了
Dialogue: 0,0:27:46.20,0:27:50.62,英文,,0,0,0,,This new array that you've created, it's got 5 integers and no more.
Dialogue: 0,0:27:46.20,0:27:50.62,中文,,0,0,0,,你创建的这个新数组 有5个整数 没有更多了
Dialogue: 0,0:27:50.62,0:27:56.11,英文,,0,0,0,,So any time you ask for an array, you get a bunch of memory boxes of the same type, side by side by side.
Dialogue: 0,0:27:50.62,0:27:56.11,中文,,0,0,0,,每次你要求一个数组 你都会得到一堆相同类型的内存盒 一排又一排
Dialogue: 0,0:27:56.11,0:27:58.11,英文,,0,0,0,,And you can almost think of it like an object.
Dialogue: 0,0:27:56.11,0:27:58.11,中文,,0,0,0,,而且你几乎可以把它想象成一个对象
Dialogue: 0,0:27:58.11,0:28:07.46,英文,,0,0,0,,Instead of having named instances like tusk size and weight, all the variables are, all the instance variables or whatever are, or whatever.
Dialogue: 0,0:27:58.11,0:28:07.46,中文,,0,0,0,,不是像tusk size和weight这样有名字的实例 所有的变量 所有的实例变量或者其他什么的 都是或者其他什么的
Dialogue: 0,0:28:07.46,0:28:08.72,英文,,0,0,0,,I should be more specific.
Dialogue: 0,0:28:07.46,0:28:08.72,中文,,0,0,0,,我应该更具体一些
Dialogue: 0,0:28:08.72,0:28:11.92,英文,,0,0,0,,All the elements of the array are indexed by number.
Dialogue: 0,0:28:08.72,0:28:11.92,中文,,0,0,0,,数组的所有元素都是按编号索引的
Dialogue: 0,0:28:11.92,0:28:14.43,英文,,0,0,0,,OK, so maybe all this seems a little vague.
Dialogue: 0,0:28:11.92,0:28:14.43,中文,,0,0,0,,好吧 也许所有这些看起来有点模糊
Dialogue: 0,0:28:14.43,0:28:18.85,英文,,0,0,0,,We'll show you a specific example in like one slide or two.
Dialogue: 0,0:28:14.43,0:28:18.85,中文,,0,0,0,,我们将在一两张幻灯片中向你展示一个具体的示例
Dialogue: 0,0:28:18.85,0:28:24.17,英文,,0,0,0,,I guess one more thing I will note is that arrays secretly have one instance variable.
Dialogue: 0,0:28:18.85,0:28:24.17,中文,,0,0,0,,我想我还要注意的一件事是 数组暗地里有一个实例变量
Dialogue: 0,0:28:24.17,0:28:27.38,英文,,0,0,0,,So unlike classes, which you can have all sorts of things like, you know,
Dialogue: 0,0:28:24.17,0:28:27.38,中文,,0,0,0,,不像类 你可以拥有各种各样的东西 你懂的
Dialogue: 0,0:28:27.38,0:28:36.06,英文,,0,0,0,,Tile in Project Zero can have a position or whatever, an x and y. Well, arrays do have one attribute which we can access, which is its length.
Dialogue: 0,0:28:27.38,0:28:36.06,中文,,0,0,0,,在 Project Zero 中 瓦片可以有一个位置或其他 一个 x 和 y 数组确实有一个我们可以访问的属性 那就是它的长度
Dialogue: 0,0:28:36.06,0:28:37.37,英文,,0,0,0,,But that's the only attribute.
Dialogue: 0,0:28:36.06,0:28:37.37,中文,,0,0,0,,但那是唯一的属性
Dialogue: 0,0:28:37.37,0:28:39.01,英文,,0,0,0,,And arrays don't have methods.
Dialogue: 0,0:28:37.37,0:28:39.01,中文,,0,0,0,,而且数组没有方法
Dialogue: 0,0:28:39.01,0:28:45.51,英文,,0,0,0,,So unlike your dog, which you can call makeNoise on and it makes a noise, well, the arrays, they don't have any methods.
Dialogue: 0,0:28:39.01,0:28:45.51,中文,,0,0,0,,不像你的狗 你可以调用 makeNoise 它就会发出声音 数组 它们没有任何方法
Dialogue: 0,0:28:45.51,0:28:48.26,英文,,0,0,0,,So you cannot ask arrays to make noise.
Dialogue: 0,0:28:45.51,0:28:48.26,中文,,0,0,0,,你不能让数组发出声音
Dialogue: 0,0:28:48.26,0:28:49.50,英文,,0,0,0,,OK.
Dialogue: 0,0:28:48.26,0:28:49.50,中文,,0,0,0,,好的
Dialogue: 0,0:28:49.50,0:28:52.94,英文,,0,0,0,,So now I'm going to start just blasting a bunch of syntax at you.
Dialogue: 0,0:28:49.50,0:28:52.94,中文,,0,0,0,,现在我要开始向你介绍一堆语法了
Dialogue: 0,0:28:52.94,0:28:53.52,英文,,0,0,0,,I'm sorry.
Dialogue: 0,0:28:52.94,0:28:53.52,中文,,0,0,0,,对不起
Dialogue: 0,0:28:53.52,0:28:54.52,英文,,0,0,0,,It's kind of a lot.
Dialogue: 0,0:28:53.52,0:28:54.52,中文,,0,0,0,,有点多
Dialogue: 0,0:28:54.52,0:28:56.22,英文,,0,0,0,,But it's OK.
Dialogue: 0,0:28:54.52,0:28:56.22,中文,,0,0,0,,但没关系
Dialogue: 0,0:28:56.22,0:28:57.54,英文,,0,0,0,,We'll get through it together.
Dialogue: 0,0:28:56.22,0:28:57.54,中文,,0,0,0,,我们会一起度过的
Dialogue: 0,0:28:57.54,0:28:58.26,英文,,0,0,0,,OK.
Dialogue: 0,0:28:57.54,0:28:58.26,中文,,0,0,0,,好的
Dialogue: 0,0:28:58.26,0:28:59.52,英文,,0,0,0,,So how do you create an array?
Dialogue: 0,0:28:58.26,0:28:59.52,中文,,0,0,0,,那么你怎么创建一个数组呢
Dialogue: 0,0:28:59.52,0:29:06.83,英文,,0,0,0,,The most classic way to do it, and if you are not an array expert, this is the way I recommend always, is use the new keyword.
Dialogue: 0,0:28:59.52,0:29:06.83,中文,,0,0,0,,最经典的方法是 如果你不是一个数组专家 我总是建议使用 new 关键字
Dialogue: 0,0:29:06.83,0:29:12.35,英文,,0,0,0,,Because we just said arrays are objects, just like walruses or planets or tiles.
Dialogue: 0,0:29:06.83,0:29:12.35,中文,,0,0,0,,因为我们刚刚说过数组就像是对象一样 就像海象或行星或瓷砖一样
Dialogue: 0,0:29:12.35,0:29:15.75,英文,,0,0,0,,So if you want a brand new array, you can use the new keyword.
Dialogue: 0,0:29:12.35,0:29:15.75,中文,,0,0,0,,如果你想要一个全新的数组 你可以使用 new 关键字
Dialogue: 0,0:29:15.75,0:29:16.53,英文,,0,0,0,,Why is that?
Dialogue: 0,0:29:15.75,0:29:16.53,中文,,0,0,0,,为什么这样呢
Dialogue: 0,0:29:16.53,0:29:18.27,英文,,0,0,0,,Well, let's read this line of code.
Dialogue: 0,0:29:16.53,0:29:18.27,中文,,0,0,0,,好吧 让我们看一下这行代码
Dialogue: 0,0:29:18.27,0:29:22.31,英文,,0,0,0,,So first it says, I want an integer array with three elements.
Dialogue: 0,0:29:18.27,0:29:22.31,中文,,0,0,0,,它首先说 我想要一个有三个元素的整数数组
Dialogue: 0,0:29:22.31,0:29:28.88,英文,,0,0,0,,In other words, Java is going to go into memory, dig up space for three integers to live side by side as neighbors in harmony.
Dialogue: 0,0:29:22.31,0:29:28.88,中文,,0,0,0,,换句话说 Java 将会进入内存 为三个整数挖掘空间 让它们和睦地相邻生活
Dialogue: 0,0:29:28.88,0:29:33.80,英文,,0,0,0,,And then the new keyword, just like it did last time, it will scream and shout to the world,
Dialogue: 0,0:29:28.88,0:29:33.80,中文,,0,0,0,,然后 new 关键字 就像上次一样 它会对全世界大喊大叫
Dialogue: 0,0:29:33.80,0:29:39.42,英文,,0,0,0,,You know that new trio of integers that you just created, the neighbors that are living next to each other?
Dialogue: 0,0:29:33.80,0:29:39.42,中文,,0,0,0,,你知道你刚创建的那组新整数吗 就是住在一起的邻居吗
Dialogue: 0,0:29:39.42,0:29:40.60,英文,,0,0,0,,This is where they live.
Dialogue: 0,0:29:39.42,0:29:40.60,中文,,0,0,0,,这就是他们的住址
Dialogue: 0,0:29:40.60,0:29:44.49,英文,,0,0,0,,The new keyword shouts the address of where this integer array lives.
Dialogue: 0,0:29:40.60,0:29:44.49,中文,,0,0,0,,新关键字大声喊出了这个整数数组的住址
Dialogue: 0,0:29:44.49,0:29:48.47,英文,,0,0,0,,And then that golden rule of equals from last time copies the bits.
Dialogue: 0,0:29:44.49,0:29:48.47,中文,,0,0,0,,然后上次介绍的那个黄金法则复制了比特
Dialogue: 0,0:29:48.47,0:29:49.95,英文,,0,0,0,,And what bits are being copied?
Dialogue: 0,0:29:48.47,0:29:49.95,中文,,0,0,0,,而复制的是哪些比特呢
Dialogue: 0,0:29:49.95,0:29:54.91,英文,,0,0,0,,It's the address of where you're going to find your brand new shiny integer array.
Dialogue: 0,0:29:49.95,0:29:54.91,中文,,0,0,0,,就是你崭新的整数数组的住址
Dialogue: 0,0:29:54.91,0:29:57.04,英文,,0,0,0,,And we'll copy that into x.
Dialogue: 0,0:29:54.91,0:29:57.04,中文,,0,0,0,,我们将其复制到 x 中
Dialogue: 0,0:29:57.04,0:29:59.14,英文,,0,0,0,,So what happens is you get the new array.
Dialogue: 0,0:29:57.04,0:29:59.14,中文,,0,0,0,,发生的情况是你得到了新的数组
Dialogue: 0,0:29:59.14,0:30:01.88,英文,,0,0,0,,Each of those integers gets filled with some default value.
Dialogue: 0,0:29:59.14,0:30:01.88,中文,,0,0,0,,这些整数中的每一个都会填充一些默认值
Dialogue: 0,0:30:01.88,0:30:03.94,英文,,0,0,0,,And then what do we copy into x?
Dialogue: 0,0:30:01.88,0:30:03.94,中文,,0,0,0,,那我们拷贝到 x 里面的是什么
Dialogue: 0,0:30:03.94,0:30:09.56,英文,,0,0,0,,x does not have space to actually fit the array, because an array is not one of those eight primitive types.
Dialogue: 0,0:30:03.94,0:30:09.56,中文,,0,0,0,,x 没有空间来容纳数组 因为数组不是那八种基本类型之一
Dialogue: 0,0:30:09.56,0:30:11.52,英文,,0,0,0,,So instead, what does x actually hold?
Dialogue: 0,0:30:09.56,0:30:11.52,中文,,0,0,0,,实际上 x 持有什么
Dialogue: 0,0:30:11.52,0:30:14.10,英文,,0,0,0,,What is the golden rule of equals assigned to x?
Dialogue: 0,0:30:11.52,0:30:14.10,中文,,0,0,0,,x 被赋予 equals 的黄金法则是什么
Dialogue: 0,0:30:14.10,0:30:18.29,英文,,0,0,0,,Not the actual array that's sitting somewhere else with the three integers side by side.
Dialogue: 0,0:30:14.10,0:30:18.29,中文,,0,0,0,,不是实际的数组 那个在别处 三个整数并排着
Dialogue: 0,0:30:18.29,0:30:25.01,英文,,0,0,0,,x holds a reference that says, if you want to go visit your integers, go there, and you can visit your integer friends.
Dialogue: 0,0:30:18.29,0:30:25.01,中文,,0,0,0,,x 拥有一个引用 它说 如果你想要访问你的整数 去那里 你就可以访问你的整数朋友了
Dialogue: 0,0:30:25.01,0:30:28.37,英文,,0,0,0,,OK, so to me, this first one makes the most sense.
Dialogue: 0,0:30:25.01,0:30:28.37,中文,,0,0,0,,对我来说 这第一个是最有意义的
Dialogue: 0,0:30:28.37,0:30:30.03,英文,,0,0,0,,Java has a couple of shortcuts.
Dialogue: 0,0:30:28.37,0:30:30.03,中文,,0,0,0,,Java 有一些快捷方式
Dialogue: 0,0:30:30.03,0:30:35.91,英文,,0,0,0,,So if you're like an array power user or something, then you could use one of the second two types of syntax.
Dialogue: 0,0:30:30.03,0:30:35.91,中文,,0,0,0,,如果你像一个数组高手或者什么的 那么你可以使用第二种或第三种语法
Dialogue: 0,0:30:35.91,0:30:39.05,英文,,0,0,0,,I won't talk about them in too much detail because they're a little bit strange.
Dialogue: 0,0:30:35.91,0:30:39.05,中文,,0,0,0,,我不会详细讨论它们 因为它们有点奇怪
Dialogue: 0,0:30:39.05,0:30:44.48,英文,,0,0,0,,But basically, the idea here is that if you want to, you could also pre-fill the array with items.
Dialogue: 0,0:30:39.05,0:30:44.48,中文,,0,0,0,,但基本上 这里的想法是 如果你想的话 你也可以预先填充数组项
Dialogue: 0,0:30:44.48,0:30:47.90,英文,,0,0,0,,So here, we're pre-filling a five
Dialogue: 0,0:30:44.48,0:30:47.90,中文,,0,0,0,,在这里 我们预先填充了五个
Dialogue: 0,0:30:47.90,0:30:50.30,英文,,0,0,0,,Length array with five items.
Dialogue: 0,0:30:47.90,0:30:50.30,中文,,0,0,0,,长度为五个项目的数组
Dialogue: 0,0:30:50.30,0:30:53.70,英文,,0,0,0,,And here we're doing it again, but we're doing even more shortcuts.
Dialogue: 0,0:30:50.30,0:30:53.70,中文,,0,0,0,,而且这里我们再次这样做 但我们做了更多的快捷方式
Dialogue: 0,0:30:53.70,0:30:55.74,英文,,0,0,0,,So we omit the word new altogether.
Dialogue: 0,0:30:53.70,0:30:55.74,中文,,0,0,0,,我们完全省略了单词new
Dialogue: 0,0:30:55.74,0:30:56.98,英文,,0,0,0,,But it's secretly still there.
Dialogue: 0,0:30:55.74,0:30:56.98,中文,,0,0,0,,但它其实还在那里
Dialogue: 0,0:30:56.98,0:31:00.09,英文,,0,0,0,,So if you're not super comfortable with it, I like the first one.
Dialogue: 0,0:30:56.98,0:31:00.09,中文,,0,0,0,,如果你对此不是非常熟悉 我喜欢第一个
Dialogue: 0,0:31:00.09,0:31:07.81,英文,,0,0,0,,But if you want to be a shortcut user, I guess you could also use one of the other ones.
Dialogue: 0,0:31:00.09,0:31:07.81,中文,,0,0,0,,但如果你想成为一个快捷键用户 我想你也可以使用其他的一个
Dialogue: 0,0:31:07.81,0:31:09.03,英文,,0,0,0,,That's some syntax.
Dialogue: 0,0:31:07.81,0:31:09.03,中文,,0,0,0,,那就是一些语法
Dialogue: 0,0:31:09.03,0:31:12.01,英文,,0,0,0,,Here's some code we're going to run through to see how arrays work.
Dialogue: 0,0:31:09.03,0:31:12.01,中文,,0,0,0,,这里有一些我们要运行的代码 来看看数组是如何工作的
Dialogue: 0,0:31:12.01,0:31:13.91,英文,,0,0,0,,So let's do it.
Dialogue: 0,0:31:12.01,0:31:13.91,中文,,0,0,0,,那我们就开始吧
Dialogue: 0,0:31:13.91,0:31:14.73,英文,,0,0,0,,OK.
Dialogue: 0,0:31:13.91,0:31:14.73,中文,,0,0,0,,好的
Dialogue: 0,0:31:14.73,0:31:16.13,英文,,0,0,0,,Sorry, that was a bit anticlimactic.
Dialogue: 0,0:31:14.73,0:31:16.13,中文,,0,0,0,,抱歉 那有点令人失望
Dialogue: 0,0:31:16.13,0:31:17.63,英文,,0,0,0,,I couldn't think of anything else to say.
Dialogue: 0,0:31:16.13,0:31:17.63,中文,,0,0,0,,我想不出其他的话要说了
Dialogue: 0,0:31:17.63,0:31:18.34,英文,,0,0,0,,All right, so let's do it.
Dialogue: 0,0:31:17.63,0:31:18.34,中文,,0,0,0,,那我们就开始吧
Dialogue: 0,0:31:18.34,0:31:20.28,英文,,0,0,0,,This is the ArrayBasics class.
Dialogue: 0,0:31:18.34,0:31:20.28,中文,,0,0,0,,这就是ArrayBasics类
Dialogue: 0,0:31:20.28,0:31:23.06,英文,,0,0,0,,So we're going to start at the very beginning and work our way through.
Dialogue: 0,0:31:20.28,0:31:23.06,中文,,0,0,0,,我们要从头开始 然后一步步进行
Dialogue: 0,0:31:23.06,0:31:29.51,英文,,0,0,0,,First line says I declare there is an inter-array reference called Z. So what's going to happen?
Dialogue: 0,0:31:23.06,0:31:29.51,中文,,0,0,0,,第一行说我声明了一个名为Z的数组引用 那么会发生什么呢
Dialogue: 0,0:31:29.51,0:31:33.17,英文,,0,0,0,,Am I going to create enough space for a bunch of integers to live side by side?
Dialogue: 0,0:31:29.51,0:31:33.17,中文,,0,0,0,,我会为一堆整数创建足够的空间吗
Dialogue: 0,0:31:33.17,0:31:36.15,英文,,0,0,0,,No, because I have not called the new keyword yet.
Dialogue: 0,0:31:33.17,0:31:36.15,中文,,0,0,0,,不会 因为我还没有调用new关键字
Dialogue: 0,0:31:36.15,0:31:42.46,英文,,0,0,0,,If I don't call the new keyword, I am not actually creating space for a bunch of integers to live side by side.
Dialogue: 0,0:31:36.15,0:31:42.46,中文,,0,0,0,,如果我不调用new关键字 我实际上并没有为一堆整数创建空间
Dialogue: 0,0:31:42.46,0:31:44.28,英文,,0,0,0,,I am just creating space.
Dialogue: 0,0:31:42.46,0:31:44.28,中文,,0,0,0,,我只是创建了空间
Dialogue: 0,0:31:44.28,0:31:46.14,英文,,0,0,0,,for a reference to an integer.
Dialogue: 0,0:31:44.28,0:31:46.14,中文,,0,0,0,,用于整数的引用
Dialogue: 0,0:31:46.14,0:31:55.79,英文,,0,0,0,,So I guess Java Visualizer is not showing it to me because I've assigned it to null right now, which means I haven't actually created any integer array.
Dialogue: 0,0:31:46.14,0:31:55.79,中文,,0,0,0,,我猜 Java Visualizer 没有显示给我 因为我现在把它赋值为 null 这意味着我实际上还没有创建任何整数数组
Dialogue: 0,0:31:55.79,0:31:57.09,英文,,0,0,0,,So that's OK.
Dialogue: 0,0:31:55.79,0:31:57.09,中文,,0,0,0,,没问题
Dialogue: 0,0:31:57.09,0:32:07.00,英文,,0,0,0,,And then here, next step, I declare there is an integer array reference called x and called y. So now I have x, y, and z. And all of these memory boxes, what do they hold?
Dialogue: 0,0:31:57.09,0:32:07.00,中文,,0,0,0,,然后这里 在下一步 我声明有一个整数数组引用叫做 x 和叫做 y 现在我有 x、y 和 z 所有这些内存框 它们装载的是什么
Dialogue: 0,0:32:07.00,0:32:08.57,英文,,0,0,0,,They don't hold actual arrays.
Dialogue: 0,0:32:07.00,0:32:08.57,中文,,0,0,0,,它们不装载实际的数组
Dialogue: 0,0:32:08.57,0:32:10.89,英文,,0,0,0,,They all hold references to arrays.
Dialogue: 0,0:32:08.57,0:32:10.89,中文,,0,0,0,,它们都装载着数组的引用
Dialogue: 0,0:32:10.89,0:32:16.41,英文,,0,0,0,,OK, here comes the first interesting line where something actually happens, which is this line.
Dialogue: 0,0:32:10.89,0:32:16.41,中文,,0,0,0,,这里来了第一条有趣的代码 也就是这一行
Dialogue: 0,0:32:16.41,0:32:22.02,英文,,0,0,0,,This line says, on the right-hand side, I declare there is a new integer
Dialogue: 0,0:32:16.41,0:32:22.02,中文,,0,0,0,,这一行说 在右边 我声明有一个新的整数数组
Dialogue: 0,0:32:22.02,0:32:26.58,英文,,0,0,0,,array, instantiate a new integer array with elements 1, 2, 3, 4, and 5.
Dialogue: 0,0:32:22.02,0:32:26.58,中文,,0,0,0,,数组 用元素1、2、3、4和5实例化一个新的整数数组
Dialogue: 0,0:32:26.58,0:32:27.72,英文,,0,0,0,,Java's pretty smart.
Dialogue: 0,0:32:26.58,0:32:27.72,中文,,0,0,0,,Java相当聪明
Dialogue: 0,0:32:27.72,0:32:32.29,英文,,0,0,0,,It can count to 5 and realize, oh, you want an array of 5 and only 5 elements.
Dialogue: 0,0:32:27.72,0:32:32.29,中文,,0,0,0,,它可以数到5并意识到 哦 你想要一个有5个元素且只有5个元素的数组
Dialogue: 0,0:32:32.29,0:32:33.91,英文,,0,0,0,,So Java digs into memory.
Dialogue: 0,0:32:32.29,0:32:33.91,中文,,0,0,0,,Java深入内存
Dialogue: 0,0:32:33.91,0:32:38.65,英文,,0,0,0,,It finds a wonderful space for these 5 integers to live side by side in harmony.
Dialogue: 0,0:32:33.91,0:32:38.65,中文,,0,0,0,,它找到了一个美妙的空间 让这5个整数和谐地并排生活
Dialogue: 0,0:32:38.65,0:32:44.18,英文,,0,0,0,,And then the new keyword shouts to the world, those 5 new integers, they live right here.
Dialogue: 0,0:32:38.65,0:32:44.18,中文,,0,0,0,,然后new关键字向世界大声宣告 这5个新整数 它们就住在这里
Dialogue: 0,0:32:44.18,0:32:50.28,英文,,0,0,0,,And then the golden rule of equals copies that address into x. So after that line,
Dialogue: 0,0:32:44.18,0:32:50.28,中文,,0,0,0,,然后等号的黄金法则将该地址复制到x中 在那一行之后
Dialogue: 0,0:32:50.28,0:32:51.68,英文,,0,0,0,,What do we see?
Dialogue: 0,0:32:50.28,0:32:51.68,中文,,0,0,0,,我们看到了什么
Dialogue: 0,0:32:51.68,0:32:53.12,英文,,0,0,0,,Notice these five numbers?
Dialogue: 0,0:32:51.68,0:32:53.12,中文,,0,0,0,,注意这五个数字
Dialogue: 0,0:32:53.12,0:32:59.43,英文,,0,0,0,,We didn't shove them into x. They don't fit in the memory box for x. Instead in x, what actually fits there is like an arrow.
Dialogue: 0,0:32:53.12,0:32:59.43,中文,,0,0,0,,我们没有把它们塞进 x 它们不适应 x 的内存盒子 相反 在 x 中 实际适应的是像箭头一样的东西
Dialogue: 0,0:32:59.43,0:33:00.21,英文,,0,0,0,,It's a reference.
Dialogue: 0,0:32:59.43,0:33:00.21,中文,,0,0,0,,这是一个引用
Dialogue: 0,0:33:00.21,0:33:06.55,英文,,0,0,0,,It tells you, if you want to go visit your five elements, go to this address, and you'll find it.
Dialogue: 0,0:33:00.21,0:33:06.55,中文,,0,0,0,,它告诉你 如果你想访问你的五个元素 就去这个地址 你会找到它
Dialogue: 0,0:33:06.55,0:33:07.89,英文,,0,0,0,,OK, what happens next?
Dialogue: 0,0:33:06.55,0:33:07.89,中文,,0,0,0,,接下来发生了什么
Dialogue: 0,0:33:07.89,0:33:17.64,英文,,0,0,0,,y equals x, classic mystery of the walrus moment, because what happens is I take all the bits from x, and I copy them into y. What are the bits in x?
Dialogue: 0,0:33:07.89,0:33:17.64,中文,,0,0,0,,y 等于 x 这是经典的海象时刻 因为发生的事情是我从 x 中取出所有的位 然后复制到 y 中 x 中的位是什么
Dialogue: 0,0:33:17.64,0:33:20.64,英文,,0,0,0,,Not the actual array, but a reference to the array.
Dialogue: 0,0:33:17.64,0:33:20.64,中文,,0,0,0,,这不是实际的数组 而是数组的一个引用
Dialogue: 0,0:33:20.64,0:33:30.97,英文,,0,0,0,,So if I say y equals x, I take that arrow, I copy the same arrow into y, and now both of x and y, they have the same node, which is go to this place to visit the array.
Dialogue: 0,0:33:20.64,0:33:30.97,中文,,0,0,0,,如果我说 y 等于 x 我拿这个箭头 我把同样的箭头复制到 y 现在 x 和 y 都有了相同的节点 它是去这个地方访问数组
Dialogue: 0,0:33:30.97,0:33:33.13,英文,,0,0,0,,So they're both referencing the same one.
Dialogue: 0,0:33:30.97,0:33:33.13,中文,,0,0,0,,它们都引用同一个
Dialogue: 0,0:33:33.13,0:33:35.11,英文,,0,0,0,,Okay, what happens next?
Dialogue: 0,0:33:33.13,0:33:35.11,中文,,0,0,0,,接下来会发生什么
Dialogue: 0,0:33:35.11,0:33:37.85,英文,,0,0,0,,It seems like now whoever wrote this code has changed their mind.
Dialogue: 0,0:33:35.11,0:33:37.85,中文,,0,0,0,,看起来现在写这段代码的人改变了主意
Dialogue: 0,0:33:37.85,0:33:44.32,英文,,0,0,0,,They said, you know what, I don't want x to be pointing at this series of five numbers, I want it to point at this one.
Dialogue: 0,0:33:37.85,0:33:44.32,中文,,0,0,0,,他们说 你知道吗 我不想让 x 指向这一系列的五个数字 我想让它指向这个
Dialogue: 0,0:33:44.32,0:33:50.14,英文,,0,0,0,,So what they've done is they're going to create a brand new sequence of five arrays, or sequence of five arrays,
Dialogue: 0,0:33:44.32,0:33:50.14,中文,,0,0,0,,他们做的是他们将创建一个全新的包含五个数组的序列 或者说五个数组的序列,
Dialogue: 0,0:33:50.14,0:33:52.90,英文,,0,0,0,,a brand new array of five integers.
Dialogue: 0,0:33:50.14,0:33:52.90,中文,,0,0,0,,一个全新的包含五个整数的数组
Dialogue: 0,0:33:52.90,0:33:54.93,英文,,0,0,0,,And this time, it's these five integers.
Dialogue: 0,0:33:52.90,0:33:54.93,中文,,0,0,0,,而这一次 就是这五个整数
Dialogue: 0,0:33:54.93,0:33:59.57,英文,,0,0,0,,And again, Java's going to dig through memory, find a new place for these five integers to live.
Dialogue: 0,0:33:54.93,0:33:59.57,中文,,0,0,0,,再一次 Java将深入内存 为这五个整数找到一个新的住所
Dialogue: 0,0:33:59.57,0:34:02.29,英文,,0,0,0,,The new keyword will shout to the world where you find it.
Dialogue: 0,0:33:59.57,0:34:02.29,中文,,0,0,0,,新关键字会大声宣告给世界你在哪里找到它
Dialogue: 0,0:34:02.29,0:34:10.56,英文,,0,0,0,,And then the equals will copy the bits, which is the location of this new array, into x. So we're going to overwrite x. It used to have this arrow.
Dialogue: 0,0:34:02.29,0:34:10.56,中文,,0,0,0,,然后等号会复制位 也就是这个新数组的位置 到 x 我们要覆盖 x 它以前有这个箭头
Dialogue: 0,0:34:10.56,0:34:15.86,英文,,0,0,0,,We're going to delete that arrow and give it this brand new arrow to this brand new array.
Dialogue: 0,0:34:10.56,0:34:15.86,中文,,0,0,0,,我们要删除那个箭头 给它这个全新数组的全新箭头
Dialogue: 0,0:34:15.86,0:34:17.13,英文,,0,0,0,,OK.
Dialogue: 0,0:34:15.86,0:34:17.13,中文,,0,0,0,,好的
Dialogue: 0,0:34:17.13,0:34:18.83,英文,,0,0,0,,OK, I can sense you're getting bored.
Dialogue: 0,0:34:17.13,0:34:18.83,中文,,0,0,0,,我能感觉到你有点无聊了
Dialogue: 0,0:34:18.83,0:34:22.59,英文,,0,0,0,,I know integer arrays are not the most exciting thing, but we've got to do it.
Dialogue: 0,0:34:18.83,0:34:22.59,中文,,0,0,0,,我知道整数数组可能不是最令人兴奋的东西 但我们必须这么做
Dialogue: 0,0:34:22.59,0:34:25.02,英文,,0,0,0,,So at this point, someone has changed their mind again.
Dialogue: 0,0:34:22.59,0:34:25.02,中文,,0,0,0,,在这一点上 有人再次改变了主意
Dialogue: 0,0:34:25.02,0:34:26.32,英文,,0,0,0,,And they said, you know what?
Dialogue: 0,0:34:25.02,0:34:26.32,中文,,0,0,0,,然后他们说 你知道吗
Dialogue: 0,0:34:26.32,0:34:28.80,英文,,0,0,0,,I don't like y pointing at this 1, 2, 3, 4, 5.
Dialogue: 0,0:34:26.32,0:34:28.80,中文,,0,0,0,,我不喜欢y指向这个1, 2, 3, 4, 5
Dialogue: 0,0:34:28.80,0:34:36.36,英文,,0,0,0,,I'm going to change y so that it points to, or has a reference to, a brand new integer array of length 3.
Dialogue: 0,0:34:28.80,0:34:36.36,中文,,0,0,0,,我要改变y 让它指向 或者引用 一个全新的长度为3的整数数组
Dialogue: 0,0:34:36.36,0:34:38.22,英文,,0,0,0,,So what am I going to do on the right-hand side?
Dialogue: 0,0:34:36.36,0:34:38.22,中文,,0,0,0,,那么在右边我要做什么呢
Dialogue: 0,0:34:38.22,0:34:40.54,英文,,0,0,0,,Create a new integer array of length 3.
Dialogue: 0,0:34:38.22,0:34:40.54,中文,,0,0,0,,创建一个长度为3的新整数数组
Dialogue: 0,0:34:40.54,0:34:41.40,英文,,0,0,0,,Dig through memory.
Dialogue: 0,0:34:40.54,0:34:41.40,中文,,0,0,0,,深入内存
Dialogue: 0,0:34:41.40,0:34:44.23,英文,,0,0,0,,Find the three places where my integers will go.
Dialogue: 0,0:34:41.40,0:34:44.23,中文,,0,0,0,,找到三个整数将要放置的位置
Dialogue: 0,0:34:44.23,0:34:46.11,英文,,0,0,0,,New keyword will shout it to the world.
Dialogue: 0,0:34:44.23,0:34:46.11,中文,,0,0,0,,新关键字会把它大声告诉全世界
Dialogue: 0,0:34:46.11,0:34:52.21,英文,,0,0,0,,The equals will copy the reference, not the actual three numbers, into y. And so we've seen that before.
Dialogue: 0,0:34:46.11,0:34:52.21,中文,,0,0,0,,等号会复制引用 而不是实际的三个数字 到y中 我们之前已经见过了
Dialogue: 0,0:34:52.21,0:34:57.99,英文,,0,0,0,,But something interesting happened, which is if you go from here to here, the 1, 2, 3, 4, 5,
Dialogue: 0,0:34:52.21,0:34:57.99,中文,,0,0,0,,但有件有趣的事情发生了 就是如果你从这里到这里 那么1、2、3、4、5
Dialogue: 0,0:34:57.99,0:34:58.87,英文,,0,0,0,,You ready for this?
Dialogue: 0,0:34:57.99,0:34:58.87,中文,,0,0,0,,你准备好了吗
Dialogue: 0,0:34:58.87,0:34:59.81,英文,,0,0,0,,It's gone.
Dialogue: 0,0:34:58.87,0:34:59.81,中文,,0,0,0,,不见了
Dialogue: 0,0:34:59.81,0:35:00.61,英文,,0,0,0,,It's gone.
Dialogue: 0,0:34:59.81,0:35:00.61,中文,,0,0,0,,不见了
Dialogue: 0,0:35:00.61,0:35:01.40,英文,,0,0,0,,Why is it gone?
Dialogue: 0,0:35:00.61,0:35:01.40,中文,,0,0,0,,为什么不见了
Dialogue: 0,0:35:01.40,0:35:07.24,英文,,0,0,0,,Well, that's because there was only one remaining reference to the 1, 2, 3, 4, 5.
Dialogue: 0,0:35:01.40,0:35:07.24,中文,,0,0,0,,那是因为只剩下一个对1、2、3、4、5的引用了
Dialogue: 0,0:35:07.24,0:35:19.73,英文,,0,0,0,,If I wanted to know where to find these five numbers sitting side by side, there was only one way to do it, which was I had to go to y and look at the number written in y, follow that pointer, go to the address.
Dialogue: 0,0:35:07.24,0:35:19.73,中文,,0,0,0,,如果我想知道这五个数字是怎么排列在一起的 唯一的方法就是去y那里看看在y里写的数字 然后按照那个指针 去到那个地址
Dialogue: 0,0:35:19.73,0:35:24.27,英文,,0,0,0,,That was the only remaining way that the user could find this array.
Dialogue: 0,0:35:19.73,0:35:24.27,中文,,0,0,0,,那是用户能找到这个数组的唯一方法
Dialogue: 0,0:35:24.27,0:35:36.26,英文,,0,0,0,,So as soon as I take this value, which I wrote down, and I replace it with something else, namely a pointer to this brand new array, the one and only remaining reference to the 1, 2, 3, 4, 5 is gone.
Dialogue: 0,0:35:24.27,0:35:36.26,中文,,0,0,0,,一旦我拿到这个值 我写下来 然后用别的东西替换掉 也就是用一个指向这个全新数组的指针替换掉 那么对1、2、3、4、5的最后一个引用就消失了
Dialogue: 0,0:35:36.26,0:35:39.64,英文,,0,0,0,,And what that means is this 1, 2, 3, 4, 5 is gone forever.
Dialogue: 0,0:35:36.26,0:35:39.64,中文,,0,0,0,,那意味着1、2、3、4、5永远消失了
Dialogue: 0,0:35:39.64,0:35:41.31,英文,,0,0,0,,You can never access it again.
Dialogue: 0,0:35:39.64,0:35:41.31,中文,,0,0,0,,你永远无法再访问它
Dialogue: 0,0:35:41.31,0:35:46.61,英文,,0,0,0,,The garbage collector will come by and consume it because there is no more reference to it.
Dialogue: 0,0:35:41.31,0:35:46.61,中文,,0,0,0,,垃圾收集器会过来把它清理掉 因为没有对它的引用了
Dialogue: 0,0:35:46.61,0:35:57.74,英文,,0,0,0,,So it's kind of like, if you had a little piece of paper telling you where the magic treasure is buried, and you decide to throw the paper away, or your dog ate your paper, well then, suddenly you have no idea where the treasure is.
Dialogue: 0,0:35:46.61,0:35:57.74,中文,,0,0,0,,这有点像 如果你有一张小纸条告诉你魔法宝藏埋在哪里 然后你决定扔掉那张纸 或者你的狗吃了你的纸 那么 突然间你就不知道宝藏在哪里了
Dialogue: 0,0:35:57.74,0:35:59.86,英文,,0,0,0,,So the treasure might as well not exist.
Dialogue: 0,0:35:57.74,0:35:59.86,中文,,0,0,0,,宝藏倒不如说根本不存在
Dialogue: 0,0:35:59.86,0:36:01.46,英文,,0,0,0,,You have no idea where to find it.
Dialogue: 0,0:35:59.86,0:36:01.46,中文,,0,0,0,,你根本不知道在哪里找到它
Dialogue: 0,0:36:01.46,0:36:04.36,英文,,0,0,0,,Your one remaining note telling you where it is is gone.
Dialogue: 0,0:36:01.46,0:36:04.36,中文,,0,0,0,,告诉你宝藏位置的最后一个笔记也消失了
Dialogue: 0,0:36:04.36,0:36:07.70,英文,,0,0,0,,So the treasure will be consumed by the garbage collector.
Dialogue: 0,0:36:04.36,0:36:07.70,中文,,0,0,0,,宝藏会被垃圾收集器清除
Dialogue: 0,0:36:07.70,0:36:09.76,英文,,0,0,0,,There's no way to get it again.
Dialogue: 0,0:36:07.70,0:36:09.76,中文,,0,0,0,,没有办法再获取它了
Dialogue: 0,0:36:09.76,0:36:11.94,英文,,0,0,0,,OK, I guess the number is 1, 2, 3, 4, 5.
Dialogue: 0,0:36:09.76,0:36:11.94,中文,,0,0,0,,好吧 我猜数字是1、2、3、4、5
Dialogue: 0,0:36:11.94,0:36:13.66,英文,,0,0,0,,Where are treasure in this case?
Dialogue: 0,0:36:11.94,0:36:13.66,中文,,0,0,0,,在这种情况下 宝藏在哪里
Dialogue: 0,0:36:13.66,0:36:14.70,英文,,0,0,0,,All right.
Dialogue: 0,0:36:13.66,0:36:14.70,中文,,0,0,0,,好的
Dialogue: 0,0:36:14.70,0:36:18.29,英文,,0,0,0,,Line 15 is almost too silly to talk about, so I won't.
Dialogue: 0,0:36:14.70,0:36:18.29,中文,,0,0,0,,第15行几乎太愚蠢了 我不会谈论它
Dialogue: 0,0:36:18.29,0:36:20.91,英文,,0,0,0,,They wanted to create a new array of size 0.
Dialogue: 0,0:36:18.29,0:36:20.91,中文,,0,0,0,,他们想要创建一个大小为0的新数组
Dialogue: 0,0:36:20.91,0:36:23.49,英文,,0,0,0,,I have no idea why you'd do it, but I guess you can.
Dialogue: 0,0:36:20.91,0:36:23.49,中文,,0,0,0,,我完全不知道你为什么要这样做 但我想你可以
Dialogue: 0,0:36:23.49,0:36:24.83,英文,,0,0,0,,Kind of weird, though.
Dialogue: 0,0:36:23.49,0:36:24.83,中文,,0,0,0,,虽然有点奇怪
Dialogue: 0,0:36:24.83,0:36:29.76,英文,,0,0,0,,Okay, this one's kind of interesting, which is, here, I'm going to ask for x.length.
Dialogue: 0,0:36:24.83,0:36:29.76,中文,,0,0,0,,好吧 这个有点有意思 就是 我要问 x 的长度
Dialogue: 0,0:36:29.76,0:36:36.68,英文,,0,0,0,,In other words, I'm going to go to the object referenced by x. So I'm going to go to my friends, the five integers, and I'm going to ask them for their length.
Dialogue: 0,0:36:29.76,0:36:36.68,中文,,0,0,0,,换句话说 我要去 x 引用的对象 我要去我的朋友们 这五个整数 然后问他们他们的长度
Dialogue: 0,0:36:36.68,0:36:39.35,英文,,0,0,0,,And on this picture, there is no field called length.
Dialogue: 0,0:36:36.68,0:36:39.35,中文,,0,0,0,,在这个图片上 没有叫做长度的字段
Dialogue: 0,0:36:39.35,0:36:43.15,英文,,0,0,0,,It's not like the walrus, where the tusk size was written right there.
Dialogue: 0,0:36:39.35,0:36:43.15,中文,,0,0,0,,就像海象那样 海象牙的大小就写在那里
Dialogue: 0,0:36:43.15,0:36:47.03,英文,,0,0,0,,But it turns out arrays, they have a secret instance variable.
Dialogue: 0,0:36:43.15,0:36:47.03,中文,,0,0,0,,但是事实证明 数组 它们有一个秘密的实例变量
Dialogue: 0,0:36:47.03,0:36:47.91,英文,,0,0,0,,It's top secret.
Dialogue: 0,0:36:47.03,0:36:47.91,中文,,0,0,0,,这是绝密
Dialogue: 0,0:36:47.91,0:36:49.97,英文,,0,0,0,,You can't even see it on the visualizer.
Dialogue: 0,0:36:47.91,0:36:49.97,中文,,0,0,0,,在可视化器上甚至都看不到它
Dialogue: 0,0:36:49.97,0:36:51.19,英文,,0,0,0,,It's called length.
Dialogue: 0,0:36:49.97,0:36:51.19,中文,,0,0,0,,它叫做长度
Dialogue: 0,0:36:51.19,0:36:55.38,英文,,0,0,0,,And if you access it, it tells you the length of the array.
Dialogue: 0,0:36:51.19,0:36:55.38,中文,,0,0,0,,如果你访问它 它会告诉你数组的长度
Dialogue: 0,0:36:55.38,0:36:57.30,英文,,0,0,0,,And what do I do? I copy the bits over.
Dialogue: 0,0:36:55.38,0:36:57.30,中文,,0,0,0,,那我该怎么办呢  我将位复制过去
Dialogue: 0,0:36:57.30,0:36:59.78,英文,,0,0,0,,It's an integer, so I just copy the integer 5.
Dialogue: 0,0:36:57.30,0:36:59.78,中文,,0,0,0,,这是一个整数 我只是复制整数5
Dialogue: 0,0:36:59.78,0:37:01.57,英文,,0,0,0,,Not a reference, just an int.
Dialogue: 0,0:36:59.78,0:37:01.57,中文,,0,0,0,,不是引用 只是一个整数
Dialogue: 0,0:37:01.57,0:37:06.04,英文,,0,0,0,,I copy it into this variable xl, and it turns out to be the number 5.
Dialogue: 0,0:37:01.57,0:37:06.04,中文,,0,0,0,,我将其复制到这个变量 xl 中 结果是数字 5
Dialogue: 0,0:37:06.04,0:37:10.50,英文,,0,0,0,,OK, here comes the fun part, which is that was all with integers.
Dialogue: 0,0:37:06.04,0:37:10.50,中文,,0,0,0,,现在开始有趣的部分 那就是这都是用整数完成的
Dialogue: 0,0:37:10.50,0:37:12.44,英文,,0,0,0,,Now I'm going to do it with strings.
Dialogue: 0,0:37:10.50,0:37:12.44,中文,,0,0,0,,现在我要用字符串做同样的事情
Dialogue: 0,0:37:12.44,0:37:21.40,英文,,0,0,0,,So at first, it seems like the idea is the same, which is I create, I find a place for six string objects, whatever that might be, the new keyword.
Dialogue: 0,0:37:12.44,0:37:21.40,中文,,0,0,0,,起初 看起来想法是一样的 也就是我创建 找到六个字符串对象的位置 不管那是什么 用 new 关键字
Dialogue: 0,0:37:21.40,0:37:24.49,英文,,0,0,0,,Then I assign it to this variable s, which I declare.
Dialogue: 0,0:37:21.40,0:37:24.49,中文,,0,0,0,,然后我将其赋值给我声明的这个变量 s
Dialogue: 0,0:37:24.49,0:37:28.53,英文,,0,0,0,,But hold on, because I think back to my eight primitive types.
Dialogue: 0,0:37:24.49,0:37:28.53,中文,,0,0,0,,但是等等 因为我想到了我的八个基本类型
Dialogue: 0,0:37:28.53,0:37:29.33,英文,,0,0,0,,They were like, what?
Dialogue: 0,0:37:28.53,0:37:29.33,中文,,0,0,0,,他们就像 什么
Dialogue: 0,0:37:29.33,0:37:30.73,英文,,0,0,0,,Byte, long, int, short.
Dialogue: 0,0:37:29.33,0:37:30.73,中文,,0,0,0,,字节 长 整型 短
Dialogue: 0,0:37:30.73,0:37:32.73,英文,,0,0,0,,Do you know the 8-primitive types from scratch?
Dialogue: 0,0:37:30.73,0:37:32.73,中文,,0,0,0,,你知道从零开始的八种基本类型吗
Dialogue: 0,0:37:32.73,0:37:34.35,英文,,0,0,0,,Do you know the 8-primitive types from memory?
Dialogue: 0,0:37:32.73,0:37:34.35,中文,,0,0,0,,你记得八种基本类型吗
Dialogue: 0,0:37:34.35,0:37:36.10,英文,,0,0,0,,Byte, long, int, short.
Dialogue: 0,0:37:34.35,0:37:36.10,中文,,0,0,0,,字节 长 整型 短
Dialogue: 0,0:37:36.10,0:37:38.06,英文,,0,0,0,,What am I missing?
Dialogue: 0,0:37:36.10,0:37:38.06,中文,,0,0,0,,我漏掉了什么
Dialogue: 0,0:37:38.06,0:37:44.01,英文,,0,0,0,,Double, Boolean, float.
Dialogue: 0,0:37:38.06,0:37:44.01,中文,,0,0,0,,双精度 布尔 浮点
Dialogue: 0,0:37:44.01,0:37:44.63,英文,,0,0,0,,OK, we got seven.
Dialogue: 0,0:37:44.01,0:37:44.63,中文,,0,0,0,,我们得到七个
Dialogue: 0,0:37:44.63,0:37:45.21,英文,,0,0,0,,That's pretty good.
Dialogue: 0,0:37:44.63,0:37:45.21,中文,,0,0,0,,这还不错
Dialogue: 0,0:37:45.21,0:37:46.73,英文,,0,0,0,,OK, passing grade.
Dialogue: 0,0:37:45.21,0:37:46.73,中文,,0,0,0,,好的 及格了
Dialogue: 0,0:37:46.73,0:37:48.47,英文,,0,0,0,,OK, char, nice.
Dialogue: 0,0:37:46.73,0:37:48.47,中文,,0,0,0,,好的 字符 不错
Dialogue: 0,0:37:48.47,0:37:49.69,英文,,0,0,0,,OK.
Dialogue: 0,0:37:48.47,0:37:49.69,中文,,0,0,0,,好的
Dialogue: 0,0:37:49.69,0:37:50.11,英文,,0,0,0,,Nice.
Dialogue: 0,0:37:49.69,0:37:50.11,中文,,0,0,0,,不错
Dialogue: 0,0:37:50.11,0:37:50.51,英文,,0,0,0,,All right.
Dialogue: 0,0:37:50.11,0:37:50.51,中文,,0,0,0,,好的
Dialogue: 0,0:37:50.51,0:37:54.59,英文,,0,0,0,,Anyway, string, notably not one of the eight we talked about.
Dialogue: 0,0:37:50.51,0:37:54.59,中文,,0,0,0,,总之 字符串 显然不是我们谈论过的八种类型之一
Dialogue: 0,0:37:54.59,0:37:56.25,英文,,0,0,0,,Also, you don't have to memorize those eight.
Dialogue: 0,0:37:54.59,0:37:56.25,中文,,0,0,0,,而且 你不必记住那八种
Dialogue: 0,0:37:56.25,0:38:03.54,英文,,0,0,0,,But notably, string is not one of the eight we talked about, which means if it's not one of those eight primitive types, it's a reference type.
Dialogue: 0,0:37:56.25,0:38:03.54,中文,,0,0,0,,但值得注意的是 字符串不是我们谈论过的八种类型之一 这意味着如果不是那八种基本类型之一 它就是引用类型
Dialogue: 0,0:38:03.54,0:38:07.00,英文,,0,0,0,,And if it's a reference type, it doesn't fit in one of our memory boxes.
Dialogue: 0,0:38:03.54,0:38:07.00,中文,,0,0,0,,而且 如果它是引用类型 它就不适合我们的内存盒子之一
Dialogue: 0,0:38:07.00,0:38:13.18,英文,,0,0,0,,So instead of putting an actual string and shoving the string into this box, what does this box actually hold?
Dialogue: 0,0:38:07.00,0:38:13.18,中文,,0,0,0,,与其将实际字符串放入并将字符串推入此框中 这个框实际上装着什么
Dialogue: 0,0:38:13.18,0:38:15.04,英文,,0,0,0,,It's like any other reference type.
Dialogue: 0,0:38:13.18,0:38:15.04,中文,,0,0,0,,它就像任何其他引用类型一样
Dialogue: 0,0:38:15.04,0:38:16.62,英文,,0,0,0,,It doesn't hold the string itself.
Dialogue: 0,0:38:15.04,0:38:16.62,中文,,0,0,0,,它不包含字符串本身
Dialogue: 0,0:38:16.62,0:38:18.24,英文,,0,0,0,,It holds a reference.
Dialogue: 0,0:38:16.62,0:38:18.24,中文,,0,0,0,,它保存一个引用
Dialogue: 0,0:38:18.24,0:38:21.28,英文,,0,0,0,,to where you're going to find the actual string in memory.
Dialogue: 0,0:38:18.24,0:38:21.28,中文,,0,0,0,,指向你要在内存中找到实际字符串的位置
Dialogue: 0,0:38:21.28,0:38:22.57,英文,,0,0,0,,So let's see that in action.
Dialogue: 0,0:38:21.28,0:38:22.57,中文,,0,0,0,,那我们来看看它的实际效果
Dialogue: 0,0:38:22.57,0:38:27.37,英文,,0,0,0,,So at line 19, I say s, your fourth element is going to be ketchup.
Dialogue: 0,0:38:22.57,0:38:27.37,中文,,0,0,0,,在第19行 我说 s 你的第四个元素会是 ketchup
Dialogue: 0,0:38:27.37,0:38:30.51,英文,,0,0,0,,But remember, string is not one of the 8 primitive types.
Dialogue: 0,0:38:27.37,0:38:30.51,中文,,0,0,0,,但要记住 字符串不是8种基本类型之一
Dialogue: 0,0:38:30.51,0:38:34.13,英文,,0,0,0,,So when I go here, I cannot actually put the string ketchup in there.
Dialogue: 0,0:38:30.51,0:38:34.13,中文,,0,0,0,,当我在这里时 我实际上不能把字符串 ketchup 放在那里
Dialogue: 0,0:38:34.13,0:38:35.23,英文,,0,0,0,,It's not going to fit.
Dialogue: 0,0:38:34.13,0:38:35.23,中文,,0,0,0,,它是放不下的
Dialogue: 0,0:38:35.23,0:38:40.25,英文,,0,0,0,,Instead, I'm going to put a reference to Ketchup wherever else it is.
Dialogue: 0,0:38:35.23,0:38:40.25,中文,,0,0,0,,不过, 我要在其他地方放一个对Ketchup的引用
Dialogue: 0,0:38:40.25,0:38:44.76,英文,,0,0,0,,So you can almost think of it, if you like, to say string, it's one of the object types.
Dialogue: 0,0:38:40.25,0:38:44.76,中文,,0,0,0,,你可以把它想象成说字符串, 它是对象类型之一
Dialogue: 0,0:38:44.76,0:38:45.94,英文,,0,0,0,,It's a reference type.
Dialogue: 0,0:38:44.76,0:38:45.94,中文,,0,0,0,,它是引用类型
Dialogue: 0,0:38:45.94,0:38:50.22,英文,,0,0,0,,So when I say Ketchup, I'm almost like creating a new string object somewhere in memory.
Dialogue: 0,0:38:45.94,0:38:50.22,中文,,0,0,0,,当我说Ketchup时, 我几乎就像是在内存中创建了一个新的字符串对象
Dialogue: 0,0:38:50.22,0:38:57.56,英文,,0,0,0,,I'm finding somewhere in memory to put the letters of Ketchup, and then I shout the location of that, and then I copy the address in here.
Dialogue: 0,0:38:50.22,0:38:57.56,中文,,0,0,0,,我在内存中找一个地方来放Ketchup的字母, 然后我喊出那个位置, 然后我把地址复制到这里
Dialogue: 0,0:38:57.56,0:39:00.78,英文,,0,0,0,,So you can almost think of it like there's a secret new keyword here.
Dialogue: 0,0:38:57.56,0:39:00.78,中文,,0,0,0,,你可以把它想象成这里有一个秘密的新关键字
Dialogue: 0,0:39:00.78,0:39:03.17,英文,,0,0,0,,We just don't write it because it'd be kind of tedious.
Dialogue: 0,0:39:00.78,0:39:03.17,中文,,0,0,0,,我们之不写它, 是因为那样会有点乏味
Dialogue: 0,0:39:03.17,0:39:05.75,英文,,0,0,0,,OK, so we'll do it one more time on this line.
Dialogue: 0,0:39:03.17,0:39:05.75,中文,,0,0,0,,那我们在这一行再做一次
Dialogue: 0,0:39:05.75,0:39:07.63,英文,,0,0,0,,This thing evaluates to some number.
Dialogue: 0,0:39:05.75,0:39:07.63,中文,,0,0,0,,这个东西评估为某个数字
Dialogue: 0,0:39:07.63,0:39:09.05,英文,,0,0,0,,We assign it to muffins.
Dialogue: 0,0:39:07.63,0:39:09.05,中文,,0,0,0,,我们把它赋值给松饼
Dialogue: 0,0:39:09.05,0:39:15.21,英文,,0,0,0,,And so again, the word muffins doesn't fit in the box, but we can have a reference to muffins somewhere else.
Dialogue: 0,0:39:09.05,0:39:15.21,中文,,0,0,0,,再次 松饼这个词不适合放在盒子里 但是我们可以在别的地方引用松饼
Dialogue: 0,0:39:15.21,0:39:16.40,英文,,0,0,0,,OK.
Dialogue: 0,0:39:15.21,0:39:16.40,中文,,0,0,0,,好的
Dialogue: 0,0:39:16.40,0:39:17.04,英文,,0,0,0,,Almost done.
Dialogue: 0,0:39:16.40,0:39:17.04,中文,,0,0,0,,快完成了
Dialogue: 0,0:39:17.04,0:39:20.26,英文,,0,0,0,,I know, this code was so long for like a 20-line piece of code.
Dialogue: 0,0:39:17.04,0:39:20.26,中文,,0,0,0,,我知道 这段代码太长了 就像是一个 20 行的代码那样
Dialogue: 0,0:39:20.26,0:39:21.92,英文,,0,0,0,,So what have I done now?
Dialogue: 0,0:39:20.26,0:39:21.92,中文,,0,0,0,,那现在我干了什么
Dialogue: 0,0:39:21.92,0:39:25.08,英文,,0,0,0,,I've assigned b as a reference to 9, 10, 11.
Dialogue: 0,0:39:21.92,0:39:25.08,中文,,0,0,0,,我把 b 指向了 9、10、11
Dialogue: 0,0:39:25.08,0:39:25.84,英文,,0,0,0,,Great.
Dialogue: 0,0:39:25.08,0:39:25.84,中文,,0,0,0,,太好了
Dialogue: 0,0:39:25.84,0:39:27.84,英文,,0,0,0,,And then, well, what the heck is this?
Dialogue: 0,0:39:25.84,0:39:27.84,中文,,0,0,0,,然后 这到底是什么
Dialogue: 0,0:39:27.84,0:39:33.08,英文,,0,0,0,,This is a function that helps you copy elements of an array from one to another.
Dialogue: 0,0:39:27.84,0:39:33.08,中文,,0,0,0,,这是一个帮助你将一个数组的元素复制到另一个数组的函数
Dialogue: 0,0:39:33.08,0:39:37.28,英文,,0,0,0,,I always forget what order these arguments are in, so I'll just make my best guess.
Dialogue: 0,0:39:33.08,0:39:37.28,中文,,0,0,0,,我总是忘记这些参数的顺序 我就随便猜猜吧
Dialogue: 0,0:39:37.28,0:39:39.56,英文,,0,0,0,,And if I'm wrong, I guess you can all laugh at me.
Dialogue: 0,0:39:37.28,0:39:39.56,中文,,0,0,0,,如果我猜错了 我想你们都可以笑话我
Dialogue: 0,0:39:39.56,0:39:41.94,英文,,0,0,0,,So I believe the way this works is,
Dialogue: 0,0:39:39.56,0:39:41.94,中文,,0,0,0,,我相信这是怎么运作的,
Dialogue: 0,0:39:41.94,0:39:42.79,英文,,0,0,0,,There's five arguments.
Dialogue: 0,0:39:41.94,0:39:42.79,中文,,0,0,0,,有五个参数.
Dialogue: 0,0:39:42.79,0:39:44.27,英文,,0,0,0,,I always forget which ones are which.
Dialogue: 0,0:39:42.79,0:39:44.27,中文,,0,0,0,,我总是忘记哪个是哪个.
Dialogue: 0,0:39:44.27,0:39:45.39,英文,,0,0,0,,You can always look it up.
Dialogue: 0,0:39:44.27,0:39:45.39,中文,,0,0,0,,你总是可以查找的.
Dialogue: 0,0:39:45.39,0:39:47.87,英文,,0,0,0,,We're not going to force you to memorize this, because I don't remember it.
Dialogue: 0,0:39:45.39,0:39:47.87,中文,,0,0,0,,我们不会强迫你记住这个 因为我自己也记不住.
Dialogue: 0,0:39:47.87,0:39:56.04,英文,,0,0,0,,But I believe what happens is the first argument says, I want to copy from B. I want to copy starting at index 0.
Dialogue: 0,0:39:47.87,0:39:56.04,中文,,0,0,0,,但我相信发生的是第一个参数表示 我想要从B复制 我想要从索引0开始复制.
Dialogue: 0,0:39:56.04,0:39:57.18,英文,,0,0,0,,There's the 9.
Dialogue: 0,0:39:56.04,0:39:57.18,中文,,0,0,0,,这里是9.
Dialogue: 0,0:39:57.18,0:40:00.96,英文,,0,0,0,,Then I want to copy to x, which is the array right here.
Dialogue: 0,0:39:57.18,0:40:00.96,中文,,0,0,0,,然后我想要复制到x 就是这个数组在这里
Dialogue: 0,0:40:00.96,0:40:02.47,英文,,0,0,0,,And I want to copy
Dialogue: 0,0:40:00.96,0:40:02.47,中文,,0,0,0,,而且我想要复制
Dialogue: 0,0:40:02.47,0:40:04.47,英文,,0,0,0,,starting at index 3.
Dialogue: 0,0:40:02.47,0:40:04.47,中文,,0,0,0,,从索引3开始
Dialogue: 0,0:40:04.47,0:40:05.61,英文,,0,0,0,,Did I get this right?
Dialogue: 0,0:40:04.47,0:40:05.61,中文,,0,0,0,,我理解对了吗
Dialogue: 0,0:40:05.61,0:40:07.27,英文,,0,0,0,,And I want to copy two things.
Dialogue: 0,0:40:05.61,0:40:07.27,中文,,0,0,0,,而且我想要复制两样东西
Dialogue: 0,0:40:07.27,0:40:09.61,英文,,0,0,0,,So what does that mean?
Dialogue: 0,0:40:07.27,0:40:09.61,中文,,0,0,0,,那是什么意思
Dialogue: 0,0:40:09.61,0:40:13.15,英文,,0,0,0,,It means I want to copy these two things from here to here.
Dialogue: 0,0:40:09.61,0:40:13.15,中文,,0,0,0,,这意味着我想要把这两样东西从这里复制到这里
Dialogue: 0,0:40:13.15,0:40:15.31,英文,,0,0,0,,If I got it right, those will be replaced with a 9 and a 10.
Dialogue: 0,0:40:13.15,0:40:15.31,中文,,0,0,0,,如果我没弄错的话 这些将被替换为9和10
Dialogue: 0,0:40:15.31,0:40:17.01,英文,,0,0,0,,OK, good.
Dialogue: 0,0:40:15.31,0:40:17.01,中文,,0,0,0,,好的 很好
Dialogue: 0,0:40:17.01,0:40:18.59,英文,,0,0,0,,OK, maybe I should have practiced this lecture.
Dialogue: 0,0:40:17.01,0:40:18.59,中文,,0,0,0,,也许我应该练习一下这堂课
Dialogue: 0,0:40:18.59,0:40:21.45,英文,,0,0,0,,OK, so that's what happens with array copy.
Dialogue: 0,0:40:18.59,0:40:21.45,中文,,0,0,0,,这就是数组复制发生的事情
Dialogue: 0,0:40:21.45,0:40:24.53,英文,,0,0,0,,It's a fancy way to copy elements from one to the other.
Dialogue: 0,0:40:21.45,0:40:24.53,中文,,0,0,0,,这是一种将元素从一个复制到另一个的花哨方式
Dialogue: 0,0:40:24.53,0:40:27.41,英文,,0,0,0,,OK, all these arrows, let's go reflect.
Dialogue: 0,0:40:24.53,0:40:27.41,中文,,0,0,0,,所有这些箭头 让我们去反射
Dialogue: 0,0:40:27.41,0:40:28.37,英文,,0,0,0,,Where's my reflection?
Dialogue: 0,0:40:27.41,0:40:28.37,中文,,0,0,0,,我的倒影在哪里
Dialogue: 0,0:40:28.37,0:40:31.07,英文,,0,0,0,,OK, there's the arrows from before, if you're curious.
Dialogue: 0,0:40:28.37,0:40:31.07,中文,,0,0,0,,好 之前的箭头在这 如果你好奇的话
Dialogue: 0,0:40:31.07,0:40:33.77,英文,,0,0,0,,So what the heck was this system.arrayCopy?
Dialogue: 0,0:40:31.07,0:40:33.77,中文,,0,0,0,,这个system.arrayCopy到底是什么鬼
Dialogue: 0,0:40:33.77,0:40:37.28,英文,,0,0,0,,What it does is it's a fancier way to copy arrays.
Dialogue: 0,0:40:33.77,0:40:37.28,中文,,0,0,0,,它其实是个更高级的数组复制方式
Dialogue: 0,0:40:37.28,0:40:44.10,英文,,0,0,0,,So if you don't like it, you could just write a for loop to copy an array, write a while loop by hand, and just be like array.
Dialogue: 0,0:40:37.28,0:40:44.10,中文,,0,0,0,,如果你不喜欢 完全可以用for循环来复制数组 或者手写一个while循环 就像直接操作数组那样
Dialogue: 0,0:40:44.10,0:40:50.61,英文,,0,0,0,,The second array, sub j, is equal to the first array, sub i, and then you increment i and j. That's totally fine, too.
Dialogue: 0,0:40:44.10,0:40:50.61,中文,,0,0,0,,第二个数组的j位置等于第一个数组的i位置 然后递增i和j 这样做也挺好
Dialogue: 0,0:40:50.61,0:40:56.70,英文,,0,0,0,,But if you want to be an array power user, you can use this fantasy array syntax, which is a little bit faster.
Dialogue: 0,0:40:50.61,0:40:56.70,中文,,0,0,0,,但如果你想成为数组高手 可以使用这种更快的幻想数组语法
Dialogue: 0,0:40:56.70,0:41:00.72,英文,,0,0,0,,And what it will do is it says, start at b,
Dialogue: 0,0:40:56.70,0:41:00.72,中文,,0,0,0,,它会这么做：从b开始
Dialogue: 0,0:41:00.72,0:41:04.34,英文,,0,0,0,,Element 0, copy to x starting at element 3.
Dialogue: 0,0:41:00.72,0:41:04.34,中文,,0,0,0,,从元素 3 开始复制到 x
Dialogue: 0,0:41:04.34,0:41:09.53,英文,,0,0,0,,So don't copy into the beginning of x, but copy somewhere in the middle of x. And how many things to copy?
Dialogue: 0,0:41:04.34,0:41:09.53,中文,,0,0,0,,不要复制到 x 的开头 而是在 x 的中间某处复制 要复制多少东西
Dialogue: 0,0:41:09.53,0:41:10.63,英文,,0,0,0,,Copy two of them.
Dialogue: 0,0:41:09.53,0:41:10.63,中文,,0,0,0,,复制其中的两个
Dialogue: 0,0:41:10.63,0:41:13.67,英文,,0,0,0,,When I stare at this, I never, ever remember this.
Dialogue: 0,0:41:10.63,0:41:13.67,中文,,0,0,0,,每次我盯着这个东西看的时候 我都永远记不住这个
Dialogue: 0,0:41:13.67,0:41:16.86,英文,,0,0,0,,And it's OK to look it up, because it's hard to remember.
Dialogue: 0,0:41:13.67,0:41:16.86,中文,,0,0,0,,查一下也没关系 因为很难记住
Dialogue: 0,0:41:16.86,0:41:22.74,英文,,0,0,0,,OK, it's not a Java memorization class, but if you ever see a system.array copy, that's what it looks like.
Dialogue: 0,0:41:16.86,0:41:22.74,中文,,0,0,0,,好吧 这不是 Java 的背诵课 但如果你见过 system.array copy 那就是它的样子
Dialogue: 0,0:41:22.74,0:41:27.18,英文,,0,0,0,,One question you might have is, why even bother array copying?
Dialogue: 0,0:41:22.74,0:41:27.18,中文,,0,0,0,,你可能会问 为什么还要搞这个数组复制呢
Dialogue: 0,0:41:27.18,0:41:29.08,英文,,0,0,0,,What is the point of copying an array?
Dialogue: 0,0:41:27.18,0:41:29.08,中文,,0,0,0,,复制数组有什么意义呢
Dialogue: 0,0:41:29.08,0:41:34.49,英文,,0,0,0,,Well, one possibility of why you might want to copy an array is, let's go find a picture.
Dialogue: 0,0:41:29.08,0:41:34.49,中文,,0,0,0,,你可能想复制一个数组的一个可能性是 我们来找一张图片吧
Dialogue: 0,0:41:34.49,0:41:39.93,英文,,0,0,0,,So do you remember when we said y equals x and there were two references to the same array?
Dialogue: 0,0:41:34.49,0:41:39.93,中文,,0,0,0,,你还记得我们说过 y 等于 x 的时候有两个引用指向同一个数组吗
Dialogue: 0,0:41:39.93,0:41:44.39,英文,,0,0,0,,Well, maybe, for some reason, maybe you want to give this array to another function.
Dialogue: 0,0:41:39.93,0:41:44.39,中文,,0,0,0,,也许 出于某种原因 你想把这个数组传递给另一个函数
Dialogue: 0,0:41:44.39,0:41:48.83,英文,,0,0,0,,And you want to say, I'm going to give this data to someone else and let them do something with it.
Dialogue: 0,0:41:44.39,0:41:48.83,中文,,0,0,0,,你想说 我会把这些数据给别人 让他们用它做点什么
Dialogue: 0,0:41:48.83,0:41:52.57,英文,,0,0,0,,Maybe they want to add to it or compute something with it.
Dialogue: 0,0:41:48.83,0:41:52.57,中文,,0,0,0,,也许他们想要对其进行添加或计算某些内容
Dialogue: 0,0:41:52.57,0:41:58.54,英文,,0,0,0,,If I pass this array to the other function, I'm giving them the only copy of this array.
Dialogue: 0,0:41:52.57,0:41:58.54,中文,,0,0,0,,如果我把这个数组传递给另一个函数 那么我就是把这个数组的唯一副本给了他们
Dialogue: 0,0:41:58.54,0:42:03.84,英文,,0,0,0,,Because when I pass the value to the other function, I'm not actually passing a copy of the array.
Dialogue: 0,0:41:58.54,0:42:03.84,中文,,0,0,0,,因为当我把值传递给另一个函数时 我实际上并没有传递数组的副本
Dialogue: 0,0:42:03.84,0:42:06.82,英文,,0,0,0,,I'm passing an arrow, a reference to the same array.
Dialogue: 0,0:42:03.84,0:42:06.82,中文,,0,0,0,,我传递的是一个箭头 一个指向同一个数组的引用
Dialogue: 0,0:42:06.82,0:42:11.52,英文,,0,0,0,,So what that means is I'm giving someone else my precious array, and they might come and mess it up.
Dialogue: 0,0:42:06.82,0:42:11.52,中文,,0,0,0,,这意味着我在把我的宝贵数组交给别人的时候 他们可能会乱搞它
Dialogue: 0,0:42:11.52,0:42:15.36,英文,,0,0,0,,And if they mess it up, then I have no way to get my original array back.
Dialogue: 0,0:42:11.52,0:42:15.36,中文,,0,0,0,,如果他们搞乱了 那么我就没有办法找回我的原始数组了
Dialogue: 0,0:42:15.36,0:42:20.59,英文,,0,0,0,,So if you don't want that, maybe something you would do is you'd make a copy of this array first.
Dialogue: 0,0:42:15.36,0:42:20.59,中文,,0,0,0,,如果你不想要那样的结果 也许你可以在给其他可能搞砸一切的函数之前先复制这个数组
Dialogue: 0,0:42:20.59,0:42:28.75,英文,,0,0,0,,And then instead of giving your original precious array to some other function that might mess everything up, you can instead give a copy of your array.
Dialogue: 0,0:42:20.59,0:42:28.75,中文,,0,0,0,,然后 不是把你原来宝贵的数组给其他可能把一切都搞砸的函数 你可以给一个数组的复制品
Dialogue: 0,0:42:28.75,0:42:33.23,英文,,0,0,0,,And then even if the other function messes up the copy of the array, it's OK.
Dialogue: 0,0:42:28.75,0:42:33.23,中文,,0,0,0,,然后即使其他函数弄乱了数组的副本 也没关系
Dialogue: 0,0:42:33.23,0:42:34.68,英文,,0,0,0,,You still have your original.
Dialogue: 0,0:42:33.23,0:42:34.68,中文,,0,0,0,,你还保留着你的原始版本
Dialogue: 0,0:42:34.68,0:42:37.76,英文,,0,0,0,,So that's one possible reason why you might want to copy arrays.
Dialogue: 0,0:42:34.68,0:42:37.76,中文,,0,0,0,,这就是为什么你可能想要复制数组的一个可能原因
Dialogue: 0,0:42:37.76,0:42:40.60,英文,,0,0,0,,Maybe you're just very bored and enjoy copying arrays.
Dialogue: 0,0:42:37.76,0:42:40.60,中文,,0,0,0,,也许你只是很无聊 喜欢复制数组
Dialogue: 0,0:42:40.60,0:42:41.67,英文,,0,0,0,,I don't know.
Dialogue: 0,0:42:40.60,0:42:41.67,中文,,0,0,0,,我不知道
Dialogue: 0,0:42:41.67,0:42:43.57,英文,,0,0,0,,OK, look, we're almost done.
Dialogue: 0,0:42:41.67,0:42:43.57,中文,,0,0,0,,看 我们快要完成了
Dialogue: 0,0:42:43.57,0:42:46.83,英文,,0,0,0,,So let's talk really quickly about 2D arrays.
Dialogue: 0,0:42:43.57,0:42:46.83,中文,,0,0,0,,那么让我们很快地谈一谈二维数组
Dialogue: 0,0:42:46.83,0:42:47.97,英文,,0,0,0,,Oh my god, that's a lot of code.
Dialogue: 0,0:42:46.83,0:42:47.97,中文,,0,0,0,,哦 我的上帝 那是很多的代码
Dialogue: 0,0:42:47.97,0:42:49.19,英文,,0,0,0,,OK, let's do it.
Dialogue: 0,0:42:47.97,0:42:49.19,中文,,0,0,0,,我们开始吧
Dialogue: 0,0:42:49.19,0:42:52.19,英文,,0,0,0,,So we'll go into the Java Visualizer yet again.
Dialogue: 0,0:42:49.19,0:42:52.19,中文,,0,0,0,,我们将再次进入Java可视化工具
Dialogue: 0,0:42:52.19,0:42:53.99,英文,,0,0,0,,This is not something you'll see right away.
Dialogue: 0,0:42:52.19,0:42:53.99,中文,,0,0,0,,这不是你会立刻看到的东西
Dialogue: 0,0:42:53.99,0:42:56.56,英文,,0,0,0,,You kind of got a taste of it in project 0.
Dialogue: 0,0:42:53.99,0:42:56.56,中文,,0,0,0,,你在项目0中已经有点儿感觉到了
Dialogue: 0,0:42:56.56,0:43:01.14,英文,,0,0,0,,You'll get a little bit of a taste in project 3 as well, because you'll be building something two-dimensional.
Dialogue: 0,0:42:56.56,0:43:01.14,中文,,0,0,0,,在项目3中你也会稍微体验一下 因为你将会构建一个二维的东西
Dialogue: 0,0:43:01.14,0:43:02.42,英文,,0,0,0,,Wow.
Dialogue: 0,0:43:01.14,0:43:02.42,中文,,0,0,0,,哇
Dialogue: 0,0:43:02.42,0:43:04.10,英文,,0,0,0,,But here's kind of the high-level idea.
Dialogue: 0,0:43:02.42,0:43:04.10,中文,,0,0,0,,但这里有一个高层次的概念
Dialogue: 0,0:43:04.10,0:43:12.39,英文,,0,0,0,,So if there's one thing you truly have to understand in all of this mess, it is, hmm.
Dialogue: 0,0:43:04.10,0:43:12.39,中文,,0,0,0,,如果在所有这一团糟中有一件你真正必须理解的事情 那就是 嗯
Dialogue: 0,0:43:12.39,0:43:12.85,英文,,0,0,0,,Almost there.
Dialogue: 0,0:43:12.39,0:43:12.85,中文,,0,0,0,,就快到了
Dialogue: 0,0:43:12.85,0:43:19.75,英文,,0,0,0,,OK, so first, this part, not super interesting, which is I declare, well, it's a little bit interesting.
Dialogue: 0,0:43:12.85,0:43:19.75,中文,,0,0,0,,首先 这部分 不是特别有趣 就是我声明的 有点有趣
Dialogue: 0,0:43:19.75,0:43:25.18,英文,,0,0,0,,I declare that there is a new array of size 4.
Dialogue: 0,0:43:19.75,0:43:25.18,中文,,0,0,0,,我声明有一个新的大小为4的数组
Dialogue: 0,0:43:25.18,0:43:28.04,英文,,0,0,0,,But what do each of these boxes hold?
Dialogue: 0,0:43:25.18,0:43:28.04,中文,,0,0,0,,但是这些盒子里分别装着什么
Dialogue: 0,0:43:28.04,0:43:30.14,英文,,0,0,0,,They don't hold integers anymore.
Dialogue: 0,0:43:28.04,0:43:30.14,中文,,0,0,0,,它们不再装整数了
Dialogue: 0,0:43:30.14,0:43:32.90,英文,,0,0,0,,And this index is kind of weird, and I never remembered either.
Dialogue: 0,0:43:30.14,0:43:32.90,中文,,0,0,0,,而且这个索引有点奇怪 我也从来没有记住过
Dialogue: 0,0:43:32.90,0:43:36.52,英文,,0,0,0,,But instead of holding integers, I want a 2D array.
Dialogue: 0,0:43:32.90,0:43:36.52,中文,,0,0,0,,但我想要的不是保存整数 而是一个二维数组
Dialogue: 0,0:43:36.52,0:43:38.91,英文,,0,0,0,,So these boxes no longer hold integers.
Dialogue: 0,0:43:36.52,0:43:38.91,中文,,0,0,0,,这些盒子不再保存整数了
Dialogue: 0,0:43:38.91,0:43:40.63,英文,,0,0,0,,They hold a reference.
Dialogue: 0,0:43:38.91,0:43:40.63,中文,,0,0,0,,它们保存的是一个引用
Dialogue: 0,0:43:40.63,0:43:42.71,英文,,0,0,0,,to an integer array.
Dialogue: 0,0:43:40.63,0:43:42.71,中文,,0,0,0,,指向一个整数数组
Dialogue: 0,0:43:42.71,0:43:43.67,英文,,0,0,0,,It's kind of weird.
Dialogue: 0,0:43:42.71,0:43:43.67,中文,,0,0,0,,这有点奇怪
Dialogue: 0,0:43:43.67,0:43:47.03,英文,,0,0,0,,So see if I can find the picture that really makes this make sense.
Dialogue: 0,0:43:43.67,0:43:47.03,中文,,0,0,0,,看看我能否找到一个真正能解释清楚这个的图片
Dialogue: 0,0:43:47.03,0:43:48.22,英文,,0,0,0,,OK, so here it is.
Dialogue: 0,0:43:47.03,0:43:48.22,中文,,0,0,0,,好的 这就是它
Dialogue: 0,0:43:48.22,0:43:50.16,英文,,0,0,0,,So I've created four boxes.
Dialogue: 0,0:43:48.22,0:43:50.16,中文,,0,0,0,,我创建了四个盒子
Dialogue: 0,0:43:50.16,0:43:51.76,英文,,0,0,0,,What do each of these boxes hold?
Dialogue: 0,0:43:50.16,0:43:51.76,中文,,0,0,0,,这些盒子各自装着什么
Dialogue: 0,0:43:51.76,0:43:52.84,英文,,0,0,0,,They live side by side.
Dialogue: 0,0:43:51.76,0:43:52.84,中文,,0,0,0,,它们并排而立
Dialogue: 0,0:43:52.84,0:43:55.74,英文,,0,0,0,,We copy the reference into Pascal's triangle like normal.
Dialogue: 0,0:43:52.84,0:43:55.74,中文,,0,0,0,,我们将引用像往常一样复制到帕斯卡三角形中
Dialogue: 0,0:43:55.74,0:44:00.67,英文,,0,0,0,,But the key idea here, the one thing is these boxes, they don't actually hold
Dialogue: 0,0:43:55.74,0:44:00.67,中文,,0,0,0,,但这里的关键思想 唯一的一件事是这些盒子 它们实际上并不容纳
Dialogue: 0,0:44:00.67,0:44:02.27,英文,,0,0,0,,the integers themselves.
Dialogue: 0,0:44:00.67,0:44:02.27,中文,,0,0,0,,整数本身
Dialogue: 0,0:44:02.27,0:44:05.98,英文,,0,0,0,,They hold pointers to go find each of the integer arrays.
Dialogue: 0,0:44:02.27,0:44:05.98,中文,,0,0,0,,它们装有指针 用于找到每个整数数组
Dialogue: 0,0:44:05.98,0:44:11.88,英文,,0,0,0,,So the way that I can create an array of more arrays is I have these boxes.
Dialogue: 0,0:44:05.98,0:44:11.88,中文,,0,0,0,,我可以创建一个更多数组的数组的方法就是我有这些盒子
Dialogue: 0,0:44:11.88,0:44:17.25,英文,,0,0,0,,If I follow each of these boxes, I will find a separate array living somewhere else in memory.
Dialogue: 0,0:44:11.88,0:44:17.25,中文,,0,0,0,,如果我跟着每一个盒子 我会发现一个单独的数组住在内存的某个地方
Dialogue: 0,0:44:17.25,0:44:18.57,英文,,0,0,0,,OK, let's see what that looks like.
Dialogue: 0,0:44:17.25,0:44:18.57,中文,,0,0,0,,让我们看看那是什么样子
Dialogue: 0,0:44:18.57,0:44:20.17,英文,,0,0,0,,So here, what am I doing?
Dialogue: 0,0:44:18.57,0:44:20.17,中文,,0,0,0,,这里 我在做什么
Dialogue: 0,0:44:20.17,0:44:22.95,英文,,0,0,0,,I'm creating a brand new array that just has the number 1.
Dialogue: 0,0:44:20.17,0:44:22.95,中文,,0,0,0,,我正在创建一个全新的数组 只有数字1
Dialogue: 0,0:44:22.95,0:44:24.53,英文,,0,0,0,,I'm shouting its location.
Dialogue: 0,0:44:22.95,0:44:24.53,中文,,0,0,0,,我在大声说它的位置
Dialogue: 0,0:44:24.53,0:44:27.89,英文,,0,0,0,,And I'm copying the location into one of these boxes.
Dialogue: 0,0:44:24.53,0:44:27.89,中文,,0,0,0,,我把位置复制到其中一个盒子里
Dialogue: 0,0:44:27.89,0:44:30.59,英文,,0,0,0,,So inside this box, it's not the actual array.
Dialogue: 0,0:44:27.89,0:44:30.59,中文,,0,0,0,,在这个盒子里 它不是实际的数组
Dialogue: 0,0:44:30.59,0:44:34.86,英文,,0,0,0,,But if I follow that pointer, I'll find an array with the item 1.
Dialogue: 0,0:44:30.59,0:44:34.86,中文,,0,0,0,,但如果我跟随那个指针 我会找到一个包含项目1的数组
Dialogue: 0,0:44:34.86,0:44:36.20,英文,,0,0,0,,And the same thing for the next line.
Dialogue: 0,0:44:34.86,0:44:36.20,中文,,0,0,0,,对于下一行也是一样的
Dialogue: 0,0:44:36.20,0:44:40.20,英文,,0,0,0,,It's another array and another array and another array.
Dialogue: 0,0:44:36.20,0:44:40.20,中文,,0,0,0,,它是另一个数组 再有一个数组 再有一个数组
Dialogue: 0,0:44:40.20,0:44:42.12,英文,,0,0,0,,So what you're seeing here is that
Dialogue: 0,0:44:40.20,0:44:42.12,中文,,0,0,0,,你在这里看到的是
Dialogue: 0,0:44:42.12,0:44:55.60,英文,,0,0,0,,like the key thing here, if you just pause right here and you stare at this, the key idea here is how many arrows or how many references do we need to represent this 2D array of, you know, what is this, like a four by four array?
Dialogue: 0,0:44:42.12,0:44:55.60,中文,,0,0,0,,就像这里的关键点 如果你停在这里 盯着这个看 关键的想法是我们需要多少箭头或多少引用来表示这个二维数组 你知道 这是个多大的四乘四的数组?
Dialogue: 0,0:44:55.60,0:44:57.16,英文,,0,0,0,,And it's kind of weird.
Dialogue: 0,0:44:55.60,0:44:57.16,中文,,0,0,0,,而且这有点奇怪
Dialogue: 0,0:44:57.16,0:45:03.10,英文,,0,0,0,,The answer is five, because I need one reference to my array of pointers.
Dialogue: 0,0:44:57.16,0:45:03.10,中文,,0,0,0,,答案是五 因为我需要一个指针数组的引用
Dialogue: 0,0:45:03.10,0:45:09.86,英文,,0,0,0,,And then in that array of pointers, I have four arrays or four pointers, each one pointing to a separate array.
Dialogue: 0,0:45:03.10,0:45:09.86,中文,,0,0,0,,然后在那个指针数组中 我有四个数组或四个指针 每一个指向一个单独的数组
Dialogue: 0,0:45:09.86,0:45:11.22,英文,,0,0,0,,So it's kind of mysterious.
Dialogue: 0,0:45:09.86,0:45:11.22,中文,,0,0,0,,这有点神秘
Dialogue: 0,0:45:11.22,0:45:15.23,英文,,0,0,0,,I'll show you one more example, assuming this code doesn't get too contrived.
Dialogue: 0,0:45:11.22,0:45:15.23,中文,,0,0,0,,我再给你举一个例子 假设这段代码不会变得太牵强
Dialogue: 0,0:45:15.23,0:45:17.79,英文,,0,0,0,,OK, maybe it is a little bit too contrived.
Dialogue: 0,0:45:15.23,0:45:17.79,中文,,0,0,0,,好吧 也许这有点牵强
Dialogue: 0,0:45:17.79,0:45:22.65,英文,,0,0,0,,So this syntax, again, it says I want a 4 by 4 array from scratch.
Dialogue: 0,0:45:17.79,0:45:22.65,中文,,0,0,0,,这个语法 再次强调 它表示我想要一个4乘4的数组 从头开始
Dialogue: 0,0:45:22.65,0:45:30.97,英文,,0,0,0,,And the key idea is, when you see I want a 4 by 4 array, how many memory boxes do I need to represent the 4 by 4 array?
Dialogue: 0,0:45:22.65,0:45:30.97,中文,,0,0,0,,关键的思想是 当你看到我想要一个4乘4的数组时 我需要多少个内存盒来表示这个4乘4的数组
Dialogue: 0,0:45:30.97,0:45:32.49,英文,,0,0,0,,How many references?
Dialogue: 0,0:45:30.97,0:45:32.49,中文,,0,0,0,,有多少个参考
Dialogue: 0,0:45:32.49,0:45:34.21,英文,,0,0,0,,I need a total of five.
Dialogue: 0,0:45:32.49,0:45:34.21,中文,,0,0,0,,我需要总共五个
Dialogue: 0,0:45:34.21,0:45:37.77,英文,,0,0,0,,And that is not at all an obvious number, which is why I'm telling it to you now.
Dialogue: 0,0:45:34.21,0:45:37.77,中文,,0,0,0,,而且这绝对不是一个明显的数字 这就是为什么我现在告诉你的原因
Dialogue: 0,0:45:37.77,0:45:45.10,英文,,0,0,0,,The five boxes that you need, the five references, to create your 4x4 array are, first, you need one reference.
Dialogue: 0,0:45:37.77,0:45:45.10,中文,,0,0,0,,你需要的五个盒子 你需要的五个参考 来创建你的4x4数组 首先 你需要一个参考
Dialogue: 0,0:45:45.10,0:45:46.84,英文,,0,0,0,,This is the box matrix.
Dialogue: 0,0:45:45.10,0:45:46.84,中文,,0,0,0,,这是盒子矩阵
Dialogue: 0,0:45:46.84,0:45:47.90,英文,,0,0,0,,I follow that pointer.
Dialogue: 0,0:45:46.84,0:45:47.90,中文,,0,0,0,,我跟着那个指针
Dialogue: 0,0:45:47.90,0:45:49.28,英文,,0,0,0,,I follow, I follow.
Dialogue: 0,0:45:47.90,0:45:49.28,中文,,0,0,0,,我跟着 我跟着
Dialogue: 0,0:45:49.28,0:45:55.64,英文,,0,0,0,,And that's where I find my list or my array of all the references to each of the subarrays.
Dialogue: 0,0:45:49.28,0:45:55.64,中文,,0,0,0,,这就是我找到所有子数组引用的列表或数组所在的地方
Dialogue: 0,0:45:55.64,0:46:00.79,英文,,0,0,0,,And then in this reference, or in this array of subarrays, I'm tripping over all the words,
Dialogue: 0,0:45:55.64,0:46:00.79,中文,,0,0,0,,然后在这个引用中 或者说在这个子数组的数组中 我遍历所有单词
Dialogue: 0,0:46:00.79,0:46:09.79,英文,,0,0,0,,I can find pointers to this is the first row, this is the second row, this is the third row, this is the fourth row, and for each of these I find a separate array.
Dialogue: 0,0:46:00.79,0:46:09.79,中文,,0,0,0,,我可以找到指向第一行、第二行、第三行、第四行的指针 而且对于每一个我都找到了一个单独的数组
Dialogue: 0,0:46:09.79,0:46:14.37,英文,,0,0,0,,So if nothing else here makes sense, it's okay, Project 3 will give you lots of practice.
Dialogue: 0,0:46:09.79,0:46:14.37,中文,,0,0,0,,如果这里没有别的东西让你明白 没关系 项目3会给你很多练习的机会
Dialogue: 0,0:46:14.37,0:46:20.30,英文,,0,0,0,,The key idea is when you create a 2D array, the total number of references you need is five.
Dialogue: 0,0:46:14.37,0:46:20.30,中文,,0,0,0,,关键的想法是当你创建一个二维数组时 你需要的引用总数是五个
Dialogue: 0,0:46:20.30,0:46:23.54,英文,,0,0,0,,One, to get to the main array of references.
Dialogue: 0,0:46:20.30,0:46:23.54,中文,,0,0,0,,一 用来找到主数组的引用
Dialogue: 0,0:46:23.54,0:46:29.04,英文,,0,0,0,,And then in this main array of references, it tells you where to go to find each of the specific rows.
Dialogue: 0,0:46:23.54,0:46:29.04,中文,,0,0,0,,然后在这个主数组的引用中 它告诉你去找到每个具体的行在哪里
Dialogue: 0,0:46:29.04,0:46:31.68,英文,,0,0,0,,It's kind of mysterious, but that's how it works.
Dialogue: 0,0:46:29.04,0:46:31.68,中文,,0,0,0,,这有点神秘 但就是这样运作的
Dialogue: 0,0:46:31.68,0:46:35.80,英文,,0,0,0,,Again, more practice on this later, so it's OK if you don't stare at this too hard.
Dialogue: 0,0:46:31.68,0:46:35.80,中文,,0,0,0,,以后再多练习一下 如果你不太专注看这个也没关系
Dialogue: 0,0:46:35.80,0:46:36.74,英文,,0,0,0,,But that's the key.
Dialogue: 0,0:46:35.80,0:46:36.74,中文,,0,0,0,,但这就是关键
Dialogue: 0,0:46:36.74,0:46:39.29,英文,,0,0,0,,It creates five total arrays, not just one.
Dialogue: 0,0:46:36.74,0:46:39.29,中文,,0,0,0,,它创建了五个总数组 而不仅仅是一个
Dialogue: 0,0:46:39.29,0:46:40.41,英文,,0,0,0,,It's kind of weird.
Dialogue: 0,0:46:39.29,0:46:40.41,中文,,0,0,0,,这有点奇怪
Dialogue: 0,0:46:40.41,0:46:41.45,英文,,0,0,0,,OK.
Dialogue: 0,0:46:40.41,0:46:41.45,中文,,0,0,0,,好的
Dialogue: 0,0:46:41.45,0:46:44.87,英文,,0,0,0,,Final thing before you go, and it's really cool and interesting, so please stay till the end.
Dialogue: 0,0:46:41.45,0:46:44.87,中文,,0,0,0,,在你走之前最后一件事 这真的很酷很有趣 所以请一直待到最后
Dialogue: 0,0:46:44.87,0:46:45.79,英文,,0,0,0,,Thank you.
Dialogue: 0,0:46:44.87,0:46:45.79,中文,,0,0,0,,谢谢
Dialogue: 0,0:46:45.79,0:46:56.36,英文,,0,0,0,,Okay, so we talked about arrays, we talked about classes, and if you think about them, there's a lot of similarities between them, which is both of them are ways to collect a bunch of items together.
Dialogue: 0,0:46:45.79,0:46:56.36,中文,,0,0,0,,我们谈论了数组 我们谈论了类 如果你考虑一下 它们之间有很多相似之处 它们都是收集一堆项目的方式
Dialogue: 0,0:46:56.36,0:47:01.72,英文,,0,0,0,,So in a class, you can take a lot of different attributes that have names, and you collect them all together.
Dialogue: 0,0:46:56.36,0:47:01.72,中文,,0,0,0,,在一个类中 你可以拿很多不同有名字的属性 然后把它们全部收集到一起
Dialogue: 0,0:47:01.72,0:47:04.93,英文,,0,0,0,,For example, the planet, it has a mass, it has the name.
Dialogue: 0,0:47:01.72,0:47:04.93,中文,,0,0,0,,例如 行星 它有一个质量 它有一个名字
Dialogue: 0,0:47:04.93,0:47:07.19,英文,,0,0,0,,Those are attributes that have names.
Dialogue: 0,0:47:04.93,0:47:07.19,中文,,0,0,0,,那些都是有名字的属性
Dialogue: 0,0:47:07.19,0:47:16.15,英文,,0,0,0,,By contrast, in an array, you still have a bunch of items that are grouped together or a bunch of data that's linked together, but the data can't be referenced by name.
Dialogue: 0,0:47:07.19,0:47:16.15,中文,,0,0,0,,相比之下 在一个数组中 你仍然有一堆被组合在一起的项目或一堆被连接在一起的数据 但是这些数据不能被名称引用
Dialogue: 0,0:47:16.15,0:47:17.50,英文,,0,0,0,,It's referenced by numbers.
Dialogue: 0,0:47:16.15,0:47:17.50,中文,,0,0,0,,它们是用数字引用的
Dialogue: 0,0:47:17.50,0:47:20.30,英文,,0,0,0,,So instead of saying, what is the planet's mass?
Dialogue: 0,0:47:17.50,0:47:20.30,中文,,0,0,0,,所以不是说 行星的质量是多少
Dialogue: 0,0:47:20.30,0:47:25.62,英文,,0,0,0,,You say, what is the array's 0th item, 1th item, 2th item, 3th item?
Dialogue: 0,0:47:20.30,0:47:25.62,中文,,0,0,0,,你说 数组的第0项 第1项 第2项 第3项是什么
Dialogue: 0,0:47:25.62,0:47:28.28,英文,,0,0,0,,I did just say 1th, 2th, and 3th.
Dialogue: 0,0:47:25.62,0:47:28.28,中文,,0,0,0,,我刚才说的是第1项、第2项和第3项
Dialogue: 0,0:47:28.28,0:47:28.92,英文,,0,0,0,,Awesome.
Dialogue: 0,0:47:28.28,0:47:28.92,中文,,0,0,0,,太棒了
Dialogue: 0,0:47:28.92,0:47:30.04,英文,,0,0,0,,OK.
Dialogue: 0,0:47:28.92,0:47:30.04,中文,,0,0,0,,好的
Dialogue: 0,0:47:30.04,0:47:34.01,英文,,0,0,0,,In terms of syntax, if you want an element in the array, use brackets.
Dialogue: 0,0:47:30.04,0:47:34.01,中文,,0,0,0,,在语法方面 如果你想要数组中的一个元素 使用方括号
Dialogue: 0,0:47:34.01,0:47:36.81,英文,,0,0,0,,So you say, I want the second element, use brackets.
Dialogue: 0,0:47:34.01,0:47:36.81,中文,,0,0,0,,所以你说 我想要第二个元素 就用方括号
Dialogue: 0,0:47:36.81,0:47:39.97,英文,,0,0,0,,In the class, if you say, I want the mass, then you type dot mass.
Dialogue: 0,0:47:36.81,0:47:39.97,中文,,0,0,0,,在类中 如果你说 我想要质量 那么你输入点质量
Dialogue: 0,0:47:39.97,0:47:41.79,英文,,0,0,0,,So you use dot notation.
Dialogue: 0,0:47:39.97,0:47:41.79,中文,,0,0,0,,使用点符号
Dialogue: 0,0:47:41.79,0:47:45.14,英文,,0,0,0,,One note is that in an array, everything has to be of the same type.
Dialogue: 0,0:47:41.79,0:47:45.14,中文,,0,0,0,,需要注意的是 在数组中 一切都必须是相同的类型
Dialogue: 0,0:47:45.14,0:47:48.92,英文,,0,0,0,,So you cannot say, I want an array where some are strings and some are integers.
Dialogue: 0,0:47:45.14,0:47:48.92,中文,,0,0,0,,你不能说 我想要一个既有字符串又有整数的数组
Dialogue: 0,0:47:48.92,0:47:51.92,英文,,0,0,0,,They have to all be integers or all be strings.
Dialogue: 0,0:47:48.92,0:47:51.92,中文,,0,0,0,,它们必须全是整数或者全是字符串
Dialogue: 0,0:47:51.92,0:47:57.99,英文,,0,0,0,,By contrast, in a class, the mass could be an integer or a double, but the name could be a string.
Dialogue: 0,0:47:51.92,0:47:57.99,中文,,0,0,0,,相比之下 在一个类中 质量可以是整数或双精度浮点数 但名称可以是字符串
Dialogue: 0,0:47:57.99,0:48:02.59,英文,,0,0,0,,But in both cases, when you create the object, you enforce the number of boxes.
Dialogue: 0,0:47:57.99,0:48:02.59,中文,,0,0,0,,但无论哪种情况 当你创建对象时 都要强制指定盒子的数量
Dialogue: 0,0:48:02.59,0:48:10.37,英文,,0,0,0,,So when you create the array x, you say, I want four memory boxes, no more, no less, you cannot ask for more, no takebacks.
Dialogue: 0,0:48:02.59,0:48:10.37,中文,,0,0,0,,当你创建数组x时 你说 我要四个内存盒子 不多不少 不能要求更多 不能收回
Dialogue: 0,0:48:10.37,0:48:12.01,英文,,0,0,0,,And the same thing with the class.
Dialogue: 0,0:48:10.37,0:48:12.01,中文,,0,0,0,,而且同样的事情也适用于类
Dialogue: 0,0:48:12.01,0:48:18.85,英文,,0,0,0,,When you create the planet, the blueprint says there is a mass, there is a name, no more, no less, you cannot ask for more.
Dialogue: 0,0:48:12.01,0:48:18.85,中文,,0,0,0,,当你创建行星时 蓝图上写着有质量 有名称 就这些 不能再多 也不能再少 你不能要求更多
Dialogue: 0,0:48:18.85,0:48:21.45,英文,,0,0,0,,Okay, this is the interesting part, so don't go yet.
Dialogue: 0,0:48:18.85,0:48:21.45,中文,,0,0,0,,这是有趣的部分 别走开
Dialogue: 0,0:48:21.45,0:48:23.91,英文,,0,0,0,,So this interesting part says,
Dialogue: 0,0:48:21.45,0:48:23.91,中文,,0,0,0,,这个有趣的部分说
Dialogue: 0,0:48:23.91,0:48:31.09,英文,,0,0,0,,that with an array, and you saw this from earlier, you can actually delay computing the index until it's time to run the program.
Dialogue: 0,0:48:23.91,0:48:31.09,中文,,0,0,0,,用一个数组 你之前已经见过 你实际上可以延迟计算索引 直到运行程序的时候
Dialogue: 0,0:48:31.09,0:48:43.10,英文,,0,0,0,,So when I write this program, I have no idea what index I'm going to get, because the program says, I'm going to ask the user what index they want, and then I'm going to index into the array based on what index the user requested.
Dialogue: 0,0:48:31.09,0:48:43.10,中文,,0,0,0,,当我写这个程序时 我不知道我会得到什么索引 因为程序说 我会询问用户他们想要什么索引 然后根据用户请求的索引来索引数组
Dialogue: 0,0:48:43.10,0:48:47.80,英文,,0,0,0,,So when I write this code, I have no idea which of the four numbers are getting printed.
Dialogue: 0,0:48:43.10,0:48:47.80,中文,,0,0,0,,当我写这段代码时 我不知道其中的四个数字会被打印
Dialogue: 0,0:48:47.80,0:48:51.16,英文,,0,0,0,,And then when I run the code, I ask the user, what index do you want?
Dialogue: 0,0:48:47.80,0:48:51.16,中文,,0,0,0,,然后当我运行代码时 我会询问用户 你想要哪个索引
Dialogue: 0,0:48:51.16,0:48:52.29,英文,,0,0,0,,The user says 2.
Dialogue: 0,0:48:51.16,0:48:52.29,中文,,0,0,0,,用户说2
Dialogue: 0,0:48:52.29,0:48:55.29,英文,,0,0,0,,So I go to index 2 and print out 102.
Dialogue: 0,0:48:52.29,0:48:55.29,中文,,0,0,0,,我转到索引2并打印出102
Dialogue: 0,0:48:55.29,0:49:00.31,英文,,0,0,0,,So in other words, when I wrote this program and I compiled it, I had no idea what the user wanted.
Dialogue: 0,0:48:55.29,0:49:00.31,中文,,0,0,0,,换句话说 当我编写这个程序并编译它时 我不知道用户想要什么索引
Dialogue: 0,0:49:00.31,0:49:04.88,英文,,0,0,0,,And then when the user ran the program, they got to decide what index they wanted.
Dialogue: 0,0:49:00.31,0:49:04.88,中文,,0,0,0,,然后当用户运行程序时 他们可以决定他们想要的索引
Dialogue: 0,0:49:04.88,0:49:08.84,英文,,0,0,0,,And Java's OK with evaluating the index at runtime.
Dialogue: 0,0:49:04.88,0:49:08.84,中文,,0,0,0,,Java允许在运行时评估索引 这一点很好
Dialogue: 0,0:49:08.84,0:49:13.93,英文,,0,0,0,,But if you try to pull the same trick on a class, you run into trouble.
Dialogue: 0,0:49:08.84,0:49:13.93,中文,,0,0,0,,但是如果你尝试在类上使用同样的技巧 就会遇到麻烦
Dialogue: 0,0:49:13.93,0:49:17.15,英文,,0,0,0,,So if you try this on the class and you said, you know what?
Dialogue: 0,0:49:13.93,0:49:17.15,中文,,0,0,0,,如果你在课上尝试这样做 然后你说 你知道吗
Dialogue: 0,0:49:17.15,0:49:18.57,英文,,0,0,0,,I'm going to create the planet.
Dialogue: 0,0:49:17.15,0:49:18.57,中文,,0,0,0,,我要创建这个星球
Dialogue: 0,0:49:18.57,0:49:22.85,英文,,0,0,0,,Then I'm going to ask the user, do they want the masks or do they want the name?
Dialogue: 0,0:49:18.57,0:49:22.85,中文,,0,0,0,,然后我会问用户 他们想要面具还是想要名称
Dialogue: 0,0:49:22.85,0:49:26.58,英文,,0,0,0,,And then I'll print out, depending on what the user requests, the mask or the name.
Dialogue: 0,0:49:22.85,0:49:26.58,中文,,0,0,0,,然后我会根据用户的请求 打印出面具或名称
Dialogue: 0,0:49:26.58,0:49:29.36,英文,,0,0,0,,If you try that, then Java is going to complain.
Dialogue: 0,0:49:26.58,0:49:29.36,中文,,0,0,0,,如果你尝试这样做 那么Java会抱怨
Dialogue: 0,0:49:29.36,0:49:34.32,英文,,0,0,0,,It's going to say, well, first, if you use brackets, it's going to say, I don't know what you're talking about.
Dialogue: 0,0:49:29.36,0:49:34.32,中文,,0,0,0,,它会说 首先 如果你使用括号 它会说 我不知道你在说什么
Dialogue: 0,0:49:34.32,0:49:37.08,英文,,0,0,0,,If you use dot syntax, then Java is going to say,
Dialogue: 0,0:49:34.32,0:49:37.08,中文,,0,0,0,,如果你使用点语法 那么Java会说
Dialogue: 0,0:49:37.08,0:49:38.62,英文,,0,0,0,,I don't know what you're talking about.
Dialogue: 0,0:49:37.08,0:49:38.62,中文,,0,0,0,,我不知道你在说什么
Dialogue: 0,0:49:38.62,0:49:42.63,英文,,0,0,0,,You said there's a field of interest, but there's a mass, there's a name.
Dialogue: 0,0:49:38.62,0:49:42.63,中文,,0,0,0,,你说有一个感兴趣的领域 但是有一个质量 有一个名字
Dialogue: 0,0:49:42.63,0:49:44.71,英文,,0,0,0,,There is no field of interest.
Dialogue: 0,0:49:42.63,0:49:44.71,中文,,0,0,0,,没有感兴趣的领域
Dialogue: 0,0:49:44.71,0:49:55.15,英文,,0,0,0,,So unlike arrays, where you can ask the user at runtime or dynamically compute a specific index and then go to that index, you can't do the same trick with classes.
Dialogue: 0,0:49:44.71,0:49:55.15,中文,,0,0,0,,与数组不同 在那里你可以在运行时询问用户或动态计算特定索引 然后转到该索引 你不能用类似的技巧
Dialogue: 0,0:49:55.15,0:49:58.46,英文,,0,0,0,,Even if you assign this string to mass, Java is not smart enough.
Dialogue: 0,0:49:55.15,0:49:58.46,中文,,0,0,0,,即使你把这个字符串赋给质量 Java也不够智能
Dialogue: 0,0:49:58.46,0:50:03.72,英文,,0,0,0,,It's not going to evaluate the thing on the right-hand side of the dot as an expression.
Dialogue: 0,0:49:58.46,0:50:03.72,中文,,0,0,0,,它不会将点右边的东西作为表达式进行评估
Dialogue: 0,0:50:03.72,0:50:08.88,英文,,0,0,0,,And if you see this and you're thinking, you know, there is something kind of deep and interesting here.
Dialogue: 0,0:50:03.72,0:50:08.88,中文,,0,0,0,,如果你看到这个并且你在想 你知道 这里有一些相当深刻和有趣的东西
Dialogue: 0,0:50:08.88,0:50:11.33,英文,,0,0,0,,And you're like, hmm, this seems kind of interesting.
Dialogue: 0,0:50:08.88,0:50:11.33,中文,,0,0,0,,然后你就会觉得 这似乎有点有趣
Dialogue: 0,0:50:11.33,0:50:17.67,英文,,0,0,0,,In that case, then we'd suggest taking an operating system, not an operating systems class, a compilers or programming languages class.
Dialogue: 0,0:50:11.33,0:50:17.67,中文,,0,0,0,,在这种情况下 我们建议选择一门操作系统课程 而不是操作系统类、编译器或编程语言类的课程
Dialogue: 0,0:50:17.67,0:50:20.49,英文,,0,0,0,,I think 164 is the class.
Dialogue: 0,0:50:17.67,0:50:20.49,中文,,0,0,0,,我想164是这门课的编号
Dialogue: 0,0:50:20.49,0:50:21.21,英文,,0,0,0,,Yeah, 164.
Dialogue: 0,0:50:20.49,0:50:21.21,中文,,0,0,0,,是的 164
Dialogue: 0,0:50:21.21,0:50:30.82,英文,,0,0,0,,So if this kind of thing feels interesting to you, how come it's possible to do dynamic indexing on an array, but it's not possible on a class?
Dialogue: 0,0:50:21.21,0:50:30.82,中文,,0,0,0,,如果你对这种事情感兴趣 为什么可以在数组上进行动态索引 但在类上却不行呢
Dialogue: 0,0:50:30.82,0:50:35.29,英文,,0,0,0,,Well, it turns out this kind of thing is the thing that compilers and programming languages classes talk about.
Dialogue: 0,0:50:30.82,0:50:35.29,中文,,0,0,0,,事实证明 这就是编译器和编程语言课程讨论的内容
Dialogue: 0,0:50:35.29,0:50:37.03,英文,,0,0,0,,They talk about how to design this stuff.
Dialogue: 0,0:50:35.29,0:50:37.03,中文,,0,0,0,,它们讨论如何设计这些东西
Dialogue: 0,0:50:37.03,0:50:39.79,英文,,0,0,0,,So if you're interested, check it out.
Dialogue: 0,0:50:37.03,0:50:39.79,中文,,0,0,0,,如果你感兴趣的话 就去看看吧
Dialogue: 0,0:50:39.79,0:50:42.19,英文,,0,0,0,,We'll talk a little bit at 61C apparently as well.
Dialogue: 0,0:50:39.79,0:50:42.19,中文,,0,0,0,,我们似乎还会在61C谈一点儿
Dialogue: 0,0:50:42.19,0:50:43.11,英文,,0,0,0,,OK, it's 2 o'clock.
Dialogue: 0,0:50:42.19,0:50:43.11,中文,,0,0,0,,好的 现在是2点钟
Dialogue: 0,0:50:43.11,0:50:43.81,英文,,0,0,0,,You can go home.
Dialogue: 0,0:50:43.11,0:50:43.81,中文,,0,0,0,,你可以回家了
Dialogue: 0,0:50:43.81,0:50:44.55,英文,,0,0,0,,Have a good weekend.
Dialogue: 0,0:50:43.81,0:50:44.55,中文,,0,0,0,,祝你周末愉快
Dialogue: 0,0:50:44.55,0:50:45.75,英文,,0,0,0,,Bye.
Dialogue: 0,0:50:44.55,0:50:45.75,中文,,0,0,0,,再见
