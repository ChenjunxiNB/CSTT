[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 3
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1152
PlayResY: 720

[Aegisub Project Garbage]
Export Encoding: Unicode (UTF-8)
Audio File: D:/python_code/video_tool/video_tool/result/Lecture 4 - Lists II SLLists.mp4
Video File: D:/python_code/video_tool/video_tool/result/Lecture 4 - Lists II SLLists.mp4
Video AR Mode: 4
Video AR Value: 1.600000
Video Zoom Percent: 0.500000
Scroll Position: 1210
Active Line: 1223
Video Position: 26863

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,13,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,90,100,0,0,1,1.33333,1.33333,2,6,6,7,1
Style: 英文,Arial,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,90,100,0,0,1,1.33333,1.33333,2,1,1,5,1
Style: 中文,微软雅黑,38,&H0029EEF1,&H000000FF,&H00000000,&H00000000,-1,0,0,0,90,100,0,0,1,1.33333,1.33333,2,2,2,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
Dialogue: 0,0:00:09.78,0:00:16.48,英文,,0,0,0,,OK, before we get started, I should just quickly note for people watching on the recording or whatever,
Dialogue: 0,0:00:09.78,0:00:16.48,中文,,0,0,0,,在我们开始之前 我应该简单地说明一下 对于在录播中观看的人 或者类似的情况
Dialogue: 0,0:00:16.48,0:00:20.48,英文,,0,0,0,,if you're ever curious what the difference is between the video and the recording,
Dialogue: 0,0:00:16.48,0:00:20.48,中文,,0,0,0,,如果你想知道视频和录播之间有什么区别
Dialogue: 0,0:00:20.48,0:00:26.94,英文,,0,0,0,,the video is a bunch of pre-recorded lectures that Josh Hugg made, who used to teach this class and still teaches it sometimes.
Dialogue: 0,0:00:20.48,0:00:26.94,中文,,0,0,0,,那么视频是由Josh Hugg录制的一堆预录的讲座 他曾经教过这门课 有时还会教
Dialogue: 0,0:00:26.94,0:00:30.48,英文,,0,0,0,,The recording is the recording of this live lecture.
Dialogue: 0,0:00:26.94,0:00:30.48,中文,,0,0,0,,录播就是这个直播讲座的录制
Dialogue: 0,0:00:30.48,0:00:35.92,英文,,0,0,0,,But they are basically the same for most of the lectures that we cover.
Dialogue: 0,0:00:30.48,0:00:35.92,中文,,0,0,0,,但是对于我们大部分涵盖的讲座来说 它们基本上是一样的
Dialogue: 0,0:00:35.92,0:00:38.63,英文,,0,0,0,,So in case you're ever confused, now you know.
Dialogue: 0,0:00:35.92,0:00:38.63,中文,,0,0,0,,以防你有任何困惑 现在你知道了
Dialogue: 0,0:00:38.63,0:00:41.89,英文,,0,0,0,,OK.
Dialogue: 0,0:00:38.63,0:00:41.89,中文,,0,0,0,,好的
Dialogue: 0,0:00:41.89,0:00:43.47,英文,,0,0,0,,Is it because people are still talking?
Dialogue: 0,0:00:41.89,0:00:43.47,中文,,0,0,0,,是因为人们还在交谈吗
Dialogue: 0,0:00:43.47,0:00:45.59,英文,,0,0,0,,Is everyone ready?
Dialogue: 0,0:00:43.47,0:00:45.59,中文,,0,0,0,,大家准备好了吗
Dialogue: 0,0:00:45.59,0:00:47.97,英文,,0,0,0,,Are you going to scream into the mic?
Dialogue: 0,0:00:45.59,0:00:47.97,中文,,0,0,0,,你打算对着麦克风尖叫吗
Dialogue: 0,0:00:47.97,0:00:48.57,英文,,0,0,0,,No.
Dialogue: 0,0:00:47.97,0:00:48.57,中文,,0,0,0,,不
Dialogue: 0,0:00:48.57,0:00:50.31,英文,,0,0,0,,OK, here we go.
Dialogue: 0,0:00:48.57,0:00:50.31,中文,,0,0,0,,好的 我们开始吧
Dialogue: 0,0:00:50.31,0:00:52.29,英文,,0,0,0,,Hi, everyone.
Dialogue: 0,0:00:50.31,0:00:52.29,中文,,0,0,0,,大家好
Dialogue: 0,0:00:52.29,0:00:55.14,英文,,0,0,0,,How's everyone doing?
Dialogue: 0,0:00:52.29,0:00:55.14,中文,,0,0,0,,大家都还好吗
Dialogue: 0,0:00:55.14,0:00:56.56,英文,,0,0,0,,I have lots of cover today.
Dialogue: 0,0:00:55.14,0:00:56.56,中文,,0,0,0,,今天我有很多内容要cover
Dialogue: 0,0:00:56.56,0:01:00.58,英文,,0,0,0,,All right, let's get started.
Dialogue: 0,0:00:56.56,0:01:00.58,中文,,0,0,0,,我们开始吧
Dialogue: 0,0:01:00.58,0:01:04.89,英文,,0,0,0,,OK, I have lots of cover today, so I'm going to get going.
Dialogue: 0,0:01:00.58,0:01:04.89,中文,,0,0,0,,今天我有很多工作要做 我要开始了
Dialogue: 0,0:01:04.89,0:01:07.64,英文,,0,0,0,,Last time, we showed you the int list.
Dialogue: 0,0:01:04.89,0:01:07.64,中文,,0,0,0,,上次 我们向你展示了 IntList
Dialogue: 0,0:01:07.64,0:01:10.84,英文,,0,0,0,,The int list, it works as a perfectly functional list.
Dialogue: 0,0:01:07.64,0:01:10.84,中文,,0,0,0,,这个 IntList 它作为一个完全功能的列表
Dialogue: 0,0:01:10.84,0:01:14.06,英文,,0,0,0,,It's a sequence of items.
Dialogue: 0,0:01:10.84,0:01:14.06,中文,,0,0,0,,这是一个项目序列
Dialogue: 0,0:01:14.06,0:01:17.20,英文,,0,0,0,,Can I ask, there appears to be a large number of seats in the middle right there.
Dialogue: 0,0:01:14.06,0:01:17.20,中文,,0,0,0,,我可以问一下 在右边中间似乎有很多座位
Dialogue: 0,0:01:17.20,0:01:19.07,英文,,0,0,0,,Could everyone, like, squeeze in a bit?
Dialogue: 0,0:01:17.20,0:01:19.07,中文,,0,0,0,,大家可以挤一挤吗
Dialogue: 0,0:01:19.07,0:01:22.77,英文,,0,0,0,,Just so that there's extra space for the people who are coming in.
Dialogue: 0,0:01:19.07,0:01:22.77,中文,,0,0,0,,这样进来的人就有额外的空间了
Dialogue: 0,0:01:22.77,0:01:23.39,英文,,0,0,0,,Yeah, same thing.
Dialogue: 0,0:01:22.77,0:01:23.39,中文,,0,0,0,,是的 一样的事情
Dialogue: 0,0:01:23.39,0:01:25.01,英文,,0,0,0,,I think there's a chunk of seats right here.
Dialogue: 0,0:01:23.39,0:01:25.01,中文,,0,0,0,,我觉得这边有一块座位
Dialogue: 0,0:01:25.01,0:01:28.71,英文,,0,0,0,,There's a few seats over on this side.
Dialogue: 0,0:01:25.01,0:01:28.71,中文,,0,0,0,,这边还有几个座位
Dialogue: 0,0:01:28.71,0:01:33.18,英文,,0,0,0,,That way.
Dialogue: 0,0:01:28.71,0:01:33.18,中文,,0,0,0,,那边
Dialogue: 0,0:01:33.18,0:01:45.60,英文,,0,0,0,,Are we done with the traffic signaling?
Dialogue: 0,0:01:33.18,0:01:45.60,中文,,0,0,0,,交通信号灯结束了吗
Dialogue: 0,0:01:45.60,0:01:52.64,英文,,0,0,0,,Will this class ever start on time?
Dialogue: 0,0:01:45.60,0:01:52.64,中文,,0,0,0,,这个班会 p 时开始吗
Dialogue: 0,0:01:52.64,0:01:54.09,英文,,0,0,0,,Are we good?
Dialogue: 0,0:01:52.64,0:01:54.09,中文,,0,0,0,,我们准备好了吗
Dialogue: 0,0:01:54.09,0:02:00.42,英文,,0,0,0,,OK, as I was saying before I was so rudely interrupted, last class, we built the int list.
Dialogue: 0,0:01:54.09,0:02:00.42,中文,,0,0,0,,就像我之前被粗鲁地打断时说的那样 上节课 我们构建了整数列表
Dialogue: 0,0:02:00.42,0:02:02.58,英文,,0,0,0,,The int list works just as any list would.
Dialogue: 0,0:02:00.42,0:02:02.58,中文,,0,0,0,,整数列表的工作方式与任何列表一样
Dialogue: 0,0:02:02.58,0:02:04.36,英文,,0,0,0,,So there's an item at the front.
Dialogue: 0,0:02:02.58,0:02:04.36,中文,,0,0,0,,在最前面有一个项目
Dialogue: 0,0:02:04.36,0:02:05.76,英文,,0,0,0,,There's an item at the back.
Dialogue: 0,0:02:04.36,0:02:05.76,中文,,0,0,0,,在最后面有一个项目
Dialogue: 0,0:02:05.76,0:02:08.28,英文,,0,0,0,,You can add items to the front, add items to the back.
Dialogue: 0,0:02:05.76,0:02:08.28,中文,,0,0,0,,你可以在前面添加项目 在后面添加项目
Dialogue: 0,0:02:08.28,0:02:10.54,英文,,0,0,0,,You can get items.
Dialogue: 0,0:02:08.28,0:02:10.54,中文,,0,0,0,,你可以获取项目
Dialogue: 0,0:02:10.54,0:02:12.28,英文,,0,0,0,,That was our list from last time.
Dialogue: 0,0:02:10.54,0:02:12.28,中文,,0,0,0,,这就是我们上次讲的列表
Dialogue: 0,0:02:12.28,0:02:20.70,英文,,0,0,0,,But something that we didn't see last time is that it turns out this end list is what I call a naked recursive data structure.
Dialogue: 0,0:02:12.28,0:02:20.70,中文,,0,0,0,,但是有一点是我们上次没有看到的 就是原来这个末尾列表是我称之为裸递归数据结构的东西
Dialogue: 0,0:02:20.70,0:02:24.08,英文,,0,0,0,,And we'll get a better idea of what that means as we talk about it.
Dialogue: 0,0:02:20.70,0:02:24.08,中文,,0,0,0,,而当我们谈论它时 我们会对这意味着什么有更清晰的了解
Dialogue: 0,0:02:24.08,0:02:27.01,英文,,0,0,0,,So today's lecture is all about seeking clothing.
Dialogue: 0,0:02:24.08,0:02:27.01,中文,,0,0,0,,今天的讲座完全是关于寻找衣服的
Dialogue: 0,0:02:27.01,0:02:33.17,英文,,0,0,0,,We'll try to improve the end list to make something that's more conventional to what Java programmers tend to use.
Dialogue: 0,0:02:27.01,0:02:33.17,中文,,0,0,0,,我们将努力改进末尾列表 使其更符合Java程序员通常使用的规范
Dialogue: 0,0:02:33.17,0:02:35.81,英文,,0,0,0,,And I mean, there's nothing wrong with nudity or whatever.
Dialogue: 0,0:02:33.17,0:02:35.81,中文,,0,0,0,,我是说 并没有什么问题是赤裸裸的递归或者什么的
Dialogue: 0,0:02:35.81,0:02:37.19,英文,,0,0,0,,It depends on your culture.
Dialogue: 0,0:02:35.81,0:02:37.19,中文,,0,0,0,,这取决于你的文化
Dialogue: 0,0:02:37.19,0:02:42.14,英文,,0,0,0,,And in the Java culture, people tend not to write classes like this that are naked recursive.
Dialogue: 0,0:02:37.19,0:02:42.14,中文,,0,0,0,,在Java文化中 人们倾向于不编写像这样裸露递归的类
Dialogue: 0,0:02:42.14,0:02:47.82,英文,,0,0,0,,So today, we're going to try to write a new version of our list that's easier for our users to use.
Dialogue: 0,0:02:42.14,0:02:47.82,中文,,0,0,0,,今天 我们要试着写一个新版本的列表 更容易让我们的用户使用
Dialogue: 0,0:02:47.82,0:02:49.20,英文,,0,0,0,,OK, that's our goal.
Dialogue: 0,0:02:47.82,0:02:49.20,中文,,0,0,0,,这是我们的目标
Dialogue: 0,0:02:49.20,0:02:51.41,英文,,0,0,0,,So I'm going to jump into IntelliJ.
Dialogue: 0,0:02:49.20,0:02:51.41,中文,,0,0,0,,那么我要进入IntelliJ
Dialogue: 0,0:02:51.41,0:02:52.33,英文,,0,0,0,,I write a lot of code.
Dialogue: 0,0:02:51.41,0:02:52.33,中文,,0,0,0,,我写了很多代码
Dialogue: 0,0:02:52.33,0:02:54.91,英文,,0,0,0,,So this is our in-list code from last time.
Dialogue: 0,0:02:52.33,0:02:54.91,中文,,0,0,0,,这是我们上次的列表代码
Dialogue: 0,0:02:54.91,0:02:59.33,英文,,0,0,0,,It has the size method that we wrote from last time, iterative size, all that good stuff.
Dialogue: 0,0:02:54.91,0:02:59.33,中文,,0,0,0,,它有我们上次编写的size方法 迭代的size 所有这些好东西
Dialogue: 0,0:02:59.33,0:03:08.40,英文,,0,0,0,,So the first thing I'm going to do, and it's not going to seem very obvious that this is an improvement, but it will be eventually, is I'm going to actually just delete all of the methods out.
Dialogue: 0,0:02:59.33,0:03:08.40,中文,,0,0,0,,那么我要做的第一件事 虽然这看起来不太明显是一个改进 但最终会是 我实际上要删除所有方法
Dialogue: 0,0:03:08.40,0:03:11.14,英文,,0,0,0,,So we're doing a little bit of a rebranding effort.
Dialogue: 0,0:03:08.40,0:03:11.14,中文,,0,0,0,,我们正在进行一场小小的重新品牌努力
Dialogue: 0,0:03:11.14,0:03:17.41,英文,,0,0,0,,We're going to make it look a little bit nicer so we can set up our new and improved clothed version of the list.
Dialogue: 0,0:03:11.14,0:03:17.41,中文,,0,0,0,,我们要让它看起来好看一点 这样我们就可以设置我们新的、改进版的列表的服装
Dialogue: 0,0:03:17.41,0:03:19.17,英文,,0,0,0,,OK, so I'll do a bit of renaming.
Dialogue: 0,0:03:17.41,0:03:19.17,中文,,0,0,0,,我会进行一些重命名
Dialogue: 0,0:03:19.17,0:03:20.45,英文,,0,0,0,,So I'm going to choose, you know what?
Dialogue: 0,0:03:19.17,0:03:20.45,中文,,0,0,0,,我要选择 你知道吗
Dialogue: 0,0:03:20.45,0:03:22.69,英文,,0,0,0,,I actually don't want this thing to be called intList.
Dialogue: 0,0:03:20.45,0:03:22.69,中文,,0,0,0,,实际上我不想让这个东西叫做IntList
Dialogue: 0,0:03:22.69,0:03:24.37,英文,,0,0,0,,I want it to be called intNode.
Dialogue: 0,0:03:22.69,0:03:24.37,中文,,0,0,0,,我想让它叫做IntNode
Dialogue: 0,0:03:24.37,0:03:26.69,英文,,0,0,0,,So I'll do that.
Dialogue: 0,0:03:24.37,0:03:26.69,中文,,0,0,0,,我会这么做
Dialogue: 0,0:03:26.69,0:03:33.47,英文,,0,0,0,,And then instead of calling these first and rest, which would be totally fine, I'm going to choose to call them item and next.
Dialogue: 0,0:03:26.69,0:03:33.47,中文,,0,0,0,,然后 我不会把它们叫做first和rest 虽然这样也完全没问题 我会选择叫它们item和next
Dialogue: 0,0:03:33.47,0:03:34.05,英文,,0,0,0,,Why?
Dialogue: 0,0:03:33.47,0:03:34.05,中文,,0,0,0,,为什么
Dialogue: 0,0:03:34.05,0:03:35.39,英文,,0,0,0,,Well, I've seen this lecture.
Dialogue: 0,0:03:34.05,0:03:35.39,中文,,0,0,0,,我看过这个讲座
Dialogue: 0,0:03:35.39,0:03:36.01,英文,,0,0,0,,I know how it ends.
Dialogue: 0,0:03:35.39,0:03:36.01,中文,,0,0,0,,我知道它的结尾
Dialogue: 0,0:03:36.01,0:03:37.49,英文,,0,0,0,,And I think these are good names.
Dialogue: 0,0:03:36.01,0:03:37.49,中文,,0,0,0,,我觉得这些是好的名称
Dialogue: 0,0:03:37.49,0:03:39.83,英文,,0,0,0,,But it definitely is not immediately obvious.
Dialogue: 0,0:03:37.49,0:03:39.83,中文,,0,0,0,,但这绝对不是显而易见的
Dialogue: 0,0:03:39.83,0:03:43.95,英文,,0,0,0,,OK, I've got to change the file to intNode.
Dialogue: 0,0:03:39.83,0:03:43.95,中文,,0,0,0,,我得把文件改成IntNode
Dialogue: 0,0:03:43.95,0:03:47.84,英文,,0,0,0,,Did it work?
Dialogue: 0,0:03:43.95,0:03:47.84,中文,,0,0,0,,行了吗
Dialogue: 0,0:03:47.84,0:03:49.16,英文,,0,0,0,,I want to change it to int node.
Dialogue: 0,0:03:47.84,0:03:49.16,中文,,0,0,0,,我想把它改成 IntNode
Dialogue: 0,0:03:49.16,0:03:51.54,英文,,0,0,0,,OK, where's my rename?
Dialogue: 0,0:03:49.16,0:03:51.54,中文,,0,0,0,,我的重命名在哪
Dialogue: 0,0:03:51.54,0:03:53.61,英文,,0,0,0,,There it is, int node.
Dialogue: 0,0:03:51.54,0:03:53.61,中文,,0,0,0,,在那里 IntNode
Dialogue: 0,0:03:53.61,0:03:58.39,英文,,0,0,0,,OK, so just a bit of a rebranding effort, nothing too wild.
Dialogue: 0,0:03:53.61,0:03:58.39,中文,,0,0,0,,只是一个小小的改头换面的努力 没什么太疯狂的
Dialogue: 0,0:03:58.39,0:03:59.33,英文,,0,0,0,,We deleted some methods.
Dialogue: 0,0:03:58.39,0:03:59.33,中文,,0,0,0,,我们删除了一些方法
Dialogue: 0,0:03:59.33,0:04:00.43,英文,,0,0,0,,We renamed it.
Dialogue: 0,0:03:59.33,0:04:00.43,中文,,0,0,0,,我们将其重命名了
Dialogue: 0,0:04:00.43,0:04:02.17,英文,,0,0,0,,OK, so there it is.
Dialogue: 0,0:04:00.43,0:04:02.17,中文,,0,0,0,,就是这样
Dialogue: 0,0:04:02.17,0:04:04.01,英文,,0,0,0,,That's our rebranded methods.
Dialogue: 0,0:04:02.17,0:04:04.01,中文,,0,0,0,,这就是我们重新命名的方法
Dialogue: 0,0:04:04.01,0:04:04.95,英文,,0,0,0,,We deleted some methods.
Dialogue: 0,0:04:04.01,0:04:04.95,中文,,0,0,0,,我们删除了一些方法
Dialogue: 0,0:04:04.95,0:04:11.57,英文,,0,0,0,,And I promise you, things will get better, even if it seems like we've just ruined all the work we did last time.
Dialogue: 0,0:04:04.95,0:04:11.57,中文,,0,0,0,,我向你保证 事情会变得更好的 即使看起来好像我们刚刚毁掉了上次的所有工作
Dialogue: 0,0:04:11.57,0:04:13.44,英文,,0,0,0,,OK, now let's go do some more things.
Dialogue: 0,0:04:11.57,0:04:13.44,中文,,0,0,0,,现在让我们做一些其他的事情
Dialogue: 0,0:04:13.44,0:04:15.00,英文,,0,0,0,,So we deleted a bunch of methods.
Dialogue: 0,0:04:13.44,0:04:15.00,中文,,0,0,0,,我们删除了一堆方法
Dialogue: 0,0:04:15.00,0:04:16.30,英文,,0,0,0,,Let's go bring them back.
Dialogue: 0,0:04:15.00,0:04:16.30,中文,,0,0,0,,让我们把它们重新加回来
Dialogue: 0,0:04:16.30,0:04:23.34,英文,,0,0,0,,But instead of bringing them back in the int node class, I'm actually going to start a new class called SLList.
Dialogue: 0,0:04:16.30,0:04:23.34,中文,,0,0,0,,但是 我不打算把它们放回到 IntNode类中 我实际上要开始一个名为 SLList 的新类
Dialogue: 0,0:04:23.34,0:04:27.05,英文,,0,0,0,,And I promise you, you'll find out what this stands for eventually.
Dialogue: 0,0:04:23.34,0:04:27.05,中文,,0,0,0,,我向你保证 你最终会知道这代表什么
Dialogue: 0,0:04:27.05,0:04:31.73,英文,,0,0,0,,So let's start writing something that's easier for our users to use.
Dialogue: 0,0:04:27.05,0:04:31.73,中文,,0,0,0,,让我们开始写一些对我们的用户来说更容易使用的东西
Dialogue: 0,0:04:31.73,0:04:36.13,英文,,0,0,0,,So I will start by adding an int node instance variable.
Dialogue: 0,0:04:31.73,0:04:36.13,中文,,0,0,0,,我会先添加一个 IntNode实例变量
Dialogue: 0,0:04:36.13,0:04:39.50,英文,,0,0,0,,So all SLLists will have an int node instance variable.
Dialogue: 0,0:04:36.13,0:04:39.50,中文,,0,0,0,,所有的 SLLists 都会有一个 IntNode实例变量
Dialogue: 0,0:04:39.50,0:04:41.18,英文,,0,0,0,,I'm going to call it first.
Dialogue: 0,0:04:39.50,0:04:41.18,中文,,0,0,0,,我会把它叫做 first
Dialogue: 0,0:04:41.18,0:04:44.16,英文,,0,0,0,,And now we're going to give our users a way to create new SLLists.
Dialogue: 0,0:04:41.18,0:04:44.16,中文,,0,0,0,,现在我们要给我们的用户一个创建新 SLLists 的方法
Dialogue: 0,0:04:44.16,0:04:46.40,英文,,0,0,0,,So the user wants to create a brand new list.
Dialogue: 0,0:04:44.16,0:04:46.40,中文,,0,0,0,,用户想要创建一个全新的列表
Dialogue: 0,0:04:46.40,0:04:47.44,英文,,0,0,0,,How should they do it?
Dialogue: 0,0:04:46.40,0:04:47.44,中文,,0,0,0,,他们应该如何做呢
Dialogue: 0,0:04:47.44,0:04:52.99,英文,,0,0,0,,Well, they should call my handy dandy constructor, which is going to build a new list for them.
Dialogue: 0,0:04:47.44,0:04:52.99,中文,,0,0,0,,他们应该调用我的方便巧妙的构造函数 它会为他们构建一个新的列表
Dialogue: 0,0:04:52.99,0:04:55.65,英文,,0,0,0,,In fact, I'll even write a comment just so we know for sure.
Dialogue: 0,0:04:52.99,0:04:55.65,中文,,0,0,0,,事实上 我甚至会写一个注释 这样我们就能确定
Dialogue: 0,0:04:55.65,0:05:00.15,英文,,0,0,0,,So this creates a new SLList with one item.
Dialogue: 0,0:04:55.65,0:05:00.15,中文,,0,0,0,,这会创建一个带有一个项目的新SLList
Dialogue: 0,0:05:00.15,0:05:04.28,英文,,0,0,0,,And the one item is the x that the user provides.
Dialogue: 0,0:05:00.15,0:05:04.28,中文,,0,0,0,,而这个项目就是用户提供的x
Dialogue: 0,0:05:04.28,0:05:06.06,英文,,0,0,0,,So how do I create a new SLList?
Dialogue: 0,0:05:04.28,0:05:06.06,中文,,0,0,0,,那么我如何创建一个新的SLList呢
Dialogue: 0,0:05:06.06,0:05:07.30,英文,,0,0,0,,Well, I remember from last time.
Dialogue: 0,0:05:06.06,0:05:07.30,中文,,0,0,0,,我记得上次的情况
Dialogue: 0,0:05:07.30,0:05:11.26,英文,,0,0,0,,So you can go back to the int list code from last time and dig through it and check.
Dialogue: 0,0:05:07.30,0:05:11.26,中文,,0,0,0,,你可以回到上次的整数列表代码 仔细检查一下
Dialogue: 0,0:05:11.26,0:05:14.22,英文,,0,0,0,,And you might remember that the code from last time looks something like this.
Dialogue: 0,0:05:11.26,0:05:14.22,中文,,0,0,0,,你可能还记得上次的代码是这样的
Dialogue: 0,0:05:14.22,0:05:17.64,英文,,0,0,0,,We'd say, I declare that there is a new int node.
Dialogue: 0,0:05:14.22,0:05:17.64,中文,,0,0,0,,我们会说 我声明有一个新的整数节点
Dialogue: 0,0:05:17.64,0:05:20.69,英文,,0,0,0,,And its item is x. That's the thing in the list.
Dialogue: 0,0:05:17.64,0:05:20.69,中文,,0,0,0,,它的项是 x 那就是列表中的东西
Dialogue: 0,0:05:20.69,0:05:23.29,英文,,0,0,0,,And the rest is null, because there's no other items.
Dialogue: 0,0:05:20.69,0:05:23.29,中文,,0,0,0,,其余是空的 因为没有其他项
Dialogue: 0,0:05:23.29,0:05:25.79,英文,,0,0,0,,So that's the code from last time.
Dialogue: 0,0:05:23.29,0:05:25.79,中文,,0,0,0,,这就是上次的代码
Dialogue: 0,0:05:25.79,0:05:27.59,英文,,0,0,0,,OK, so how do I actually use this thing?
Dialogue: 0,0:05:25.79,0:05:27.59,中文,,0,0,0,,那我到底怎么使用这个东西呢
Dialogue: 0,0:05:27.59,0:05:29.27,英文,,0,0,0,,I've created a constructor.
Dialogue: 0,0:05:27.59,0:05:29.27,中文,,0,0,0,,我创建了一个构造函数
Dialogue: 0,0:05:29.27,0:05:35.68,英文,,0,0,0,,How would a user, if I gave this SLList class out to the world, how would they create a brand new list for the first time?
Dialogue: 0,0:05:29.27,0:05:35.68,中文,,0,0,0,,如果我把这个 SLList 类交给世界上的用户 他们第一次怎么创建一个全新的列表呢
Dialogue: 0,0:05:35.68,0:05:37.14,英文,,0,0,0,,Well, it might be something like this.
Dialogue: 0,0:05:35.68,0:05:37.14,中文,,0,0,0,,可能会是这样的
Dialogue: 0,0:05:37.14,0:05:39.68,英文,,0,0,0,,They might say, I want a new SLList.
Dialogue: 0,0:05:37.14,0:05:39.68,中文,,0,0,0,,他们可能会说 我想要一个新的 SLList
Dialogue: 0,0:05:39.68,0:05:42.64,英文,,0,0,0,,I'll call it L. And they're going to say, I want a new list.
Dialogue: 0,0:05:39.68,0:05:42.64,中文,,0,0,0,,我会叫它 L 然后他们会说 我想要一个新的列表
Dialogue: 0,0:05:42.64,0:05:44.27,英文,,0,0,0,,So they'll use the constructor.
Dialogue: 0,0:05:42.64,0:05:44.27,中文,,0,0,0,,他们会使用构造函数
Dialogue: 0,0:05:44.27,0:05:47.93,英文,,0,0,0,,And they might say, I want it to have one item, and it's five.
Dialogue: 0,0:05:44.27,0:05:47.93,中文,,0,0,0,,而且他们可能会说 我想要它有一个项目 而且是五个
Dialogue: 0,0:05:47.93,0:05:48.91,英文,,0,0,0,,OK.
Dialogue: 0,0:05:47.93,0:05:48.91,中文,,0,0,0,,好的
Dialogue: 0,0:05:48.91,0:05:49.65,英文,,0,0,0,,Looks great.
Dialogue: 0,0:05:48.91,0:05:49.65,中文,,0,0,0,,看起来不错
Dialogue: 0,0:05:49.65,0:05:52.09,英文,,0,0,0,,And if I run it, I will get a new SLList.
Dialogue: 0,0:05:49.65,0:05:52.09,中文,,0,0,0,,如果我运行它 我会得到一个新的SLList
Dialogue: 0,0:05:52.09,0:06:00.88,英文,,0,0,0,,Not that you can see it in the terminal, but it will compile eventually and show you that there's a new SLList with five, at least to compile.
Dialogue: 0,0:05:52.09,0:06:00.88,中文,,0,0,0,,虽然你在终端上看不到它 但最终它会编译并向你显示有一个新的SLList 至少能编译
Dialogue: 0,0:06:00.88,0:06:03.58,英文,,0,0,0,,OK, so what was the point of all this?
Dialogue: 0,0:06:00.88,0:06:03.58,中文,,0,0,0,,那么这一切的意义是什么
Dialogue: 0,0:06:03.58,0:06:05.92,英文,,0,0,0,,It somehow seems like we didn't do anything.
Dialogue: 0,0:06:03.58,0:06:05.92,中文,,0,0,0,,不知怎的 感觉我们什么都没做
Dialogue: 0,0:06:05.92,0:06:12.11,英文,,0,0,0,,But let's take a really close look at how a user would use the IntList and how a user is going to use our brand new SList
Dialogue: 0,0:06:05.92,0:06:13.11,中文,,0,0,0,,但是让我们仔细看一下用户如何使用IntList以及用户将如何使用我们全新的SList
Dialogue: 0,0:06:12.11,0:06:18.63,英文,,0,0,0,,and see if we can start to figure out what this whole naked recursive data structure metaphor is all about.
Dialogue: 0,0:06:13.11,0:06:18.63,中文,,0,0,0,,看看我们是否能开始理解这整个裸递归数据结构的比喻到底是什么意思
Dialogue: 0,0:06:18.63,0:06:24.07,英文,,0,0,0,,So if I look at the IntList, if a user wants to create a brand new IntList, they have to write this line of code.
Dialogue: 0,0:06:18.63,0:06:24.07,中文,,0,0,0,,如果我看IntList 如果用户想创建一个全新的IntList 他们必须写下这行代码
Dialogue: 0,0:06:24.07,0:06:28.60,英文,,0,0,0,,They have to say IntList x equals new IntList 10 comma null.
Dialogue: 0,0:06:24.07,0:06:28.60,中文,,0,0,0,,他们必须说IntList x等于新的IntList 10逗号null
Dialogue: 0,0:06:28.60,0:06:36.38,英文,,0,0,0,,In other words, the person using the IntList, they have to have a pretty deep understanding of recursion because the recursion is right there.
Dialogue: 0,0:06:28.60,0:06:36.38,中文,,0,0,0,,换句话说 使用IntList的人 他们必须对递归有相当深的理解 因为递归就在那里
Dialogue: 0,0:06:36.38,0:06:41.32,英文,,0,0,0,,Right on the sleeve of the naked recursive data structure for the user to have to think about.
Dialogue: 0,0:06:36.38,0:06:41.32,中文,,0,0,0,,就在裸递归数据结构的袖子上 用户必须考虑到
Dialogue: 0,0:06:41.32,0:06:44.70,英文,,0,0,0,,So when the user is using the int list, they have to think about recursion.
Dialogue: 0,0:06:41.32,0:06:44.70,中文,,0,0,0,,当用户使用IntList时 他们必须考虑递归
Dialogue: 0,0:06:44.70,0:06:45.44,英文,,0,0,0,,It's right there.
Dialogue: 0,0:06:44.70,0:06:45.44,中文,,0,0,0,,就在那里
Dialogue: 0,0:06:45.44,0:06:49.20,英文,,0,0,0,,They have to specify that there's a null for the rest of the list.
Dialogue: 0,0:06:45.44,0:06:49.20,中文,,0,0,0,,他们必须指定剩余列表的空值
Dialogue: 0,0:06:49.20,0:06:56.69,英文,,0,0,0,,By contrast, if you're using an SLList, you don't have to specify a null because we've hidden that away inside the constructor.
Dialogue: 0,0:06:49.20,0:06:56.69,中文,,0,0,0,,相比之下 如果你使用的是SLList 你不必指定空值 因为我们已经将其隐藏在构造函数内部
Dialogue: 0,0:06:56.69,0:07:00.07,英文,,0,0,0,,So if I want a brand new SLList, I just say new SLList 10.
Dialogue: 0,0:06:56.69,0:07:00.07,中文,,0,0,0,,如果我想要一个全新的SLList 我只需要说new SLList 10
Dialogue: 0,0:07:00.07,0:07:01.05,英文,,0,0,0,,And I'm all done.
Dialogue: 0,0:07:00.07,0:07:01.05,中文,,0,0,0,,我就完成了
Dialogue: 0,0:07:01.05,0:07:07.85,英文,,0,0,0,,The rest of the SLList code that we've just written will take care of all that weird null recursive data structure stuff for us.
Dialogue: 0,0:07:01.05,0:07:07.85,中文,,0,0,0,,我们刚刚编写的SLList代码的其余部分将为我们处理所有那些奇怪的空递归数据结构问题
Dialogue: 0,0:07:07.85,0:07:14.95,英文,,0,0,0,,So on some level, the SLList would be easier for someone to use, because they don't have to think really hard about all the recursion that's going on.
Dialogue: 0,0:07:07.85,0:07:14.95,中文,,0,0,0,,因此 在某种程度上 对于某人来说 SLList会更容易使用 因为他们不必过于费力地考虑正在进行的所有递归
Dialogue: 0,0:07:14.95,0:07:18.23,英文,,0,0,0,,And we've given the user methods that are easier to use.
Dialogue: 0,0:07:14.95,0:07:18.23,中文,,0,0,0,,而且 我们给用户提供了更容易使用的方法
Dialogue: 0,0:07:18.23,0:07:19.19,英文,,0,0,0,,So that's our goal for today.
Dialogue: 0,0:07:18.23,0:07:19.19,中文,,0,0,0,,这是我们今天的目标
Dialogue: 0,0:07:19.19,0:07:28.32,英文,,0,0,0,,We're going to add clothing to this data structure so that the users don't have to think really hard about the naked, recursive data structure and how it's working.
Dialogue: 0,0:07:19.19,0:07:28.32,中文,,0,0,0,,我们要向这个数据结构中添加衣服 这样用户就不必费太多心思去考虑裸露的、递归的数据结构以及它是如何工作的
Dialogue: 0,0:07:28.32,0:07:31.70,英文,,0,0,0,,We can give them all these nice methods that are easier to use.
Dialogue: 0,0:07:28.32,0:07:31.70,中文,,0,0,0,,我们可以给它们所有这些好用的方法 这样使用起来更容易
Dialogue: 0,0:07:31.70,0:07:38.62,英文,,0,0,0,,So it might not seem like a huge improvement, but this is kind of the flavor of what we're doing for the rest of today.
Dialogue: 0,0:07:31.70,0:07:38.62,中文,,0,0,0,,这可能看起来不像是一个巨大的改进 但这基本上是我们今天其余时间在做的事情的风格
Dialogue: 0,0:07:38.62,0:07:39.26,英文,,0,0,0,,Questions?
Dialogue: 0,0:07:38.62,0:07:39.26,中文,,0,0,0,,问题
Dialogue: 0,0:07:39.26,0:07:40.93,英文,,0,0,0,,Thoughts?
Dialogue: 0,0:07:39.26,0:07:40.93,中文,,0,0,0,,想法
Dialogue: 0,0:07:40.93,0:07:41.91,英文,,0,0,0,,OK.
Dialogue: 0,0:07:40.93,0:07:41.91,中文,,0,0,0,,好的
Dialogue: 0,0:07:41.91,0:07:45.33,英文,,0,0,0,,Everyone very familiar with nudity, clothing, all that good stuff?
Dialogue: 0,0:07:41.91,0:07:45.33,中文,,0,0,0,,大家对裸露、服装 这些都很熟悉 对吧
Dialogue: 0,0:07:45.33,0:07:46.58,英文,,0,0,0,,OK.
Dialogue: 0,0:07:45.33,0:07:46.58,中文,,0,0,0,,好的
Dialogue: 0,0:07:46.58,0:07:47.72,英文,,0,0,0,,So let's keep going.
Dialogue: 0,0:07:46.58,0:07:47.72,中文,,0,0,0,,那我们继续吧
Dialogue: 0,0:07:47.72,0:07:49.04,英文,,0,0,0,,I took a bunch of methods away.
Dialogue: 0,0:07:47.72,0:07:49.04,中文,,0,0,0,,我删除了一堆方法
Dialogue: 0,0:07:49.04,0:07:50.00,英文,,0,0,0,,Let's start adding them back.
Dialogue: 0,0:07:49.04,0:07:50.00,中文,,0,0,0,,我们开始加回来
Dialogue: 0,0:07:50.00,0:07:52.62,英文,,0,0,0,,So last time we had addFirst and getFirst.
Dialogue: 0,0:07:50.00,0:07:52.62,中文,,0,0,0,,上次我们有addFirst和getFirst
Dialogue: 0,0:07:52.62,0:07:54.76,英文,,0,0,0,,Let's go write those in SLLists.
Dialogue: 0,0:07:52.62,0:07:54.76,中文,,0,0,0,,我们去SLLists里写那些
Dialogue: 0,0:07:54.76,0:07:57.47,英文,,0,0,0,,So I will write a method called addFirst.
Dialogue: 0,0:07:54.76,0:07:57.47,中文,,0,0,0,,我会写一个叫做addFirst的方法
Dialogue: 0,0:07:57.47,0:08:00.63,英文,,0,0,0,,addFirst doesn't return anything, so I have to say void.
Dialogue: 0,0:07:57.47,0:08:00.63,中文,,0,0,0,,addFirst不返回任何东西 我必须说void
Dialogue: 0,0:08:00.63,0:08:01.87,英文,,0,0,0,,And well, what does it do?
Dialogue: 0,0:08:00.63,0:08:01.87,中文,,0,0,0,,那么 它具体是做什么呢
Dialogue: 0,0:08:01.87,0:08:04.03,英文,,0,0,0,,It adds something to the start of the list.
Dialogue: 0,0:08:01.87,0:08:04.03,中文,,0,0,0,,它在列表的开头添加了一些东西
Dialogue: 0,0:08:04.03,0:08:05.55,英文,,0,0,0,,In fact, I'll add a comment for that.
Dialogue: 0,0:08:04.03,0:08:05.55,中文,,0,0,0,,实际上 我会为此添加一条注释
Dialogue: 0,0:08:05.55,0:08:09.21,英文,,0,0,0,,Adds item x to the front of the list.
Dialogue: 0,0:08:05.55,0:08:09.21,中文,,0,0,0,,在列表的开头添加项目x
Dialogue: 0,0:08:09.21,0:08:10.21,英文,,0,0,0,,OK.
Dialogue: 0,0:08:09.21,0:08:10.21,中文,,0,0,0,,好的
Dialogue: 0,0:08:10.21,0:08:11.81,英文,,0,0,0,,Well, how do I write this?
Dialogue: 0,0:08:10.21,0:08:11.81,中文,,0,0,0,,我怎么写这个呢
Dialogue: 0,0:08:11.81,0:08:14.11,英文,,0,0,0,,Well, again, you can try and think about it and ponder.
Dialogue: 0,0:08:11.81,0:08:14.11,中文,,0,0,0,,再说一遍 你可以尝试思考一下 思索一下
Dialogue: 0,0:08:14.11,0:08:19.83,英文,,0,0,0,,But I'm going to go back to my int list code from last time, because we wrote something like this last time.
Dialogue: 0,0:08:14.11,0:08:19.83,中文,,0,0,0,,但我要回到上次的整数列表代码 因为我们上次写过类似的东西
Dialogue: 0,0:08:19.83,0:08:23.15,英文,,0,0,0,,And I'll remember last time, how did I add something to the front of the list?
Dialogue: 0,0:08:19.83,0:08:23.15,中文,,0,0,0,,我还记得上次 我是怎么在列表的前面添加东西的
Dialogue: 0,0:08:23.15,0:08:24.31,英文,,0,0,0,,It was something like this.
Dialogue: 0,0:08:23.15,0:08:24.31,中文,,0,0,0,,是这样的
Dialogue: 0,0:08:24.31,0:08:28.73,英文,,0,0,0,,It was something like first equals new int node x comma first.
Dialogue: 0,0:08:24.31,0:08:28.73,中文,,0,0,0,,就是类似于 first 等于新的整数节点 x 逗号 first
Dialogue: 0,0:08:28.73,0:08:33.14,英文,,0,0,0,,And if that doesn't seem familiar, we spent a little bit more time visualizing this last time.
Dialogue: 0,0:08:28.73,0:08:33.14,中文,,0,0,0,,如果这听起来不太熟悉 我们上次花了一点时间来形象化这个
Dialogue: 0,0:08:33.14,0:08:34.58,英文,,0,0,0,,So I'd go back and look at it.
Dialogue: 0,0:08:33.14,0:08:34.58,中文,,0,0,0,,我会回头再看看它
Dialogue: 0,0:08:34.58,0:08:38.40,英文,,0,0,0,,But it turns out this will add item x to the front of the list.
Dialogue: 0,0:08:34.58,0:08:38.40,中文,,0,0,0,,但事实证明这将在列表前添加项目x
Dialogue: 0,0:08:38.40,0:08:39.02,英文,,0,0,0,,OK, great.
Dialogue: 0,0:08:38.40,0:08:39.02,中文,,0,0,0,,很好
Dialogue: 0,0:08:39.02,0:08:40.36,英文,,0,0,0,,What about getFirst?
Dialogue: 0,0:08:39.02,0:08:40.36,中文,,0,0,0,,关于getFirst呢
Dialogue: 0,0:08:40.36,0:08:44.70,英文,,0,0,0,,Well, that's going to get the first item in the list.
Dialogue: 0,0:08:40.36,0:08:44.70,中文,,0,0,0,,那将得到列表中的第一个项目
Dialogue: 0,0:08:44.70,0:08:46.30,英文,,0,0,0,,So it's public int getFirst.
Dialogue: 0,0:08:44.70,0:08:46.30,中文,,0,0,0,,它是公共整数getFirst
Dialogue: 0,0:08:46.30,0:08:47.02,英文,,0,0,0,,Why is it int?
Dialogue: 0,0:08:46.30,0:08:47.02,中文,,0,0,0,,为什么是int
Dialogue: 0,0:08:47.02,0:08:48.73,英文,,0,0,0,,Because it's going to return an integer.
Dialogue: 0,0:08:47.02,0:08:48.73,中文,,0,0,0,,因为它会返回一个整数
Dialogue: 0,0:08:48.73,0:08:50.09,英文,,0,0,0,,I don't need arguments for it.
Dialogue: 0,0:08:48.73,0:08:50.09,中文,,0,0,0,,我不需要为它传递参数
Dialogue: 0,0:08:50.09,0:08:51.09,英文,,0,0,0,,So how do I do this?
Dialogue: 0,0:08:50.09,0:08:51.09,中文,,0,0,0,,那我该怎么做呢
Dialogue: 0,0:08:51.09,0:08:55.65,英文,,0,0,0,,Well, I'll return not the first item, because the first is an int node.
Dialogue: 0,0:08:51.09,0:08:55.65,中文,,0,0,0,,好吧 我会返回不是第一个项目 因为第一个是一个整数节点
Dialogue: 0,0:08:55.65,0:08:59.13,英文,,0,0,0,,I want the item in the first, so the first int node.
Dialogue: 0,0:08:55.65,0:08:59.13,中文,,0,0,0,,我想要第一个项目 是第一个整数节点
Dialogue: 0,0:08:59.13,0:09:01.11,英文,,0,0,0,,So I'll return first.item.
Dialogue: 0,0:08:59.13,0:09:01.11,中文,,0,0,0,,我会返回 first.item
Dialogue: 0,0:09:01.11,0:09:02.07,英文,,0,0,0,,OK, great.
Dialogue: 0,0:09:01.11,0:09:02.07,中文,,0,0,0,,太棒了
Dialogue: 0,0:09:02.07,0:09:02.90,英文,,0,0,0,,Let's see if it works.
Dialogue: 0,0:09:02.07,0:09:02.90,中文,,0,0,0,,让我们看看它是否有效
Dialogue: 0,0:09:02.90,0:09:04.60,英文,,0,0,0,,So I'll just write a little bit of a demo.
Dialogue: 0,0:09:02.90,0:09:04.60,中文,,0,0,0,,那我就写一个小小的演示吧
Dialogue: 0,0:09:04.60,0:09:07.04,英文,,0,0,0,,So I'll say maybe l.addFirst.
Dialogue: 0,0:09:04.60,0:09:07.04,中文,,0,0,0,,那我可能会说 l.addFirst
Dialogue: 0,0:09:07.04,0:09:09.66,英文,,0,0,0,,Maybe I'll put 10 at the front, because I feel like it.
Dialogue: 0,0:09:07.04,0:09:09.66,中文,,0,0,0,,也许我会把 10 放在最前面 因为我觉得这样做
Dialogue: 0,0:09:09.66,0:09:11.44,英文,,0,0,0,,And then I'll see if I can get the first thing out.
Dialogue: 0,0:09:09.66,0:09:11.44,中文,,0,0,0,,然后我会看看能否取出第一个东西
Dialogue: 0,0:09:11.44,0:09:14.78,英文,,0,0,0,,So I'll do system.out.print.
Dialogue: 0,0:09:11.44,0:09:14.78,中文,,0,0,0,,那我就执行 system.out.print
Dialogue: 0,0:09:14.78,0:09:17.07,英文,,0,0,0,,And we'll see if we get our 10 out.
Dialogue: 0,0:09:14.78,0:09:17.07,中文,,0,0,0,,然后我们看看我们是否能得到我们的 10
Dialogue: 0,0:09:17.07,0:09:20.33,英文,,0,0,0,,And if we don't, then it's time to panic, because I'm hoping for a 10.
Dialogue: 0,0:09:17.07,0:09:20.33,中文,,0,0,0,,如果我们没有的话 那么现在是惊慌的时候了 因为我希望是10
Dialogue: 0,0:09:20.33,0:09:22.07,英文,,0,0,0,,OK, there's the 10.
Dialogue: 0,0:09:20.33,0:09:22.07,中文,,0,0,0,,这就是10了
Dialogue: 0,0:09:22.07,0:09:22.63,英文,,0,0,0,,Excellent.
Dialogue: 0,0:09:22.07,0:09:22.63,中文,,0,0,0,,太好了
Dialogue: 0,0:09:22.63,0:09:24.23,英文,,0,0,0,,What did you want me to do?
Dialogue: 0,0:09:22.63,0:09:24.23,中文,,0,0,0,,你想让我做什么
Dialogue: 0,0:09:24.23,0:09:25.73,英文,,0,0,0,,You want me to zoom in even more?
Dialogue: 0,0:09:24.23,0:09:25.73,中文,,0,0,0,,你想让我再放大一点吗
Dialogue: 0,0:09:25.73,0:09:27.74,英文,,0,0,0,,OK.
Dialogue: 0,0:09:25.73,0:09:27.74,中文,,0,0,0,,好的
Dialogue: 0,0:09:27.74,0:09:28.48,英文,,0,0,0,,Increase the brightness.
Dialogue: 0,0:09:27.74,0:09:28.48,中文,,0,0,0,,增加亮度
Dialogue: 0,0:09:28.48,0:09:30.27,英文,,0,0,0,,I don't know how to increase the brightness.
Dialogue: 0,0:09:28.48,0:09:30.27,中文,,0,0,0,,我不知道怎么增加亮度
Dialogue: 0,0:09:30.27,0:09:32.65,英文,,0,0,0,,We're going to spend like 30 minutes trying to increase the brightness.
Dialogue: 0,0:09:30.27,0:09:32.65,中文,,0,0,0,,我们要花大约30分钟试着增加亮度
Dialogue: 0,0:09:32.65,0:09:34.97,英文,,0,0,0,,OK, but for next time, we can increase it.
Dialogue: 0,0:09:32.65,0:09:34.97,中文,,0,0,0,,但下次我们可以增加它
Dialogue: 0,0:09:34.97,0:09:37.49,英文,,0,0,0,,Or I'll make it like blindingly white next time for everyone.
Dialogue: 0,0:09:34.97,0:09:37.49,中文,,0,0,0,,要么下次我会让它像刺眼的白色
Dialogue: 0,0:09:37.49,0:09:38.60,英文,,0,0,0,,OK, great.
Dialogue: 0,0:09:37.49,0:09:38.60,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:09:38.60,0:09:39.50,英文,,0,0,0,,That was add first.
Dialogue: 0,0:09:38.60,0:09:39.50,中文,,0,0,0,,这是先添加的
Dialogue: 0,0:09:39.50,0:09:40.34,英文,,0,0,0,,That was get first.
Dialogue: 0,0:09:39.50,0:09:40.34,中文,,0,0,0,,这是先获取的
Dialogue: 0,0:09:40.34,0:09:42.72,英文,,0,0,0,,So now our SLList has some new methods.
Dialogue: 0,0:09:40.34,0:09:42.72,中文,,0,0,0,,现在我们的 SLList 有一些新方法
Dialogue: 0,0:09:42.72,0:09:47.37,英文,,0,0,0,,And we were able to just check if they work by using this little piece of code.
Dialogue: 0,0:09:42.72,0:09:47.37,中文,,0,0,0,,我们只需使用这小段代码就能检查它们是否有效
Dialogue: 0,0:09:47.37,0:09:47.99,英文,,0,0,0,,Excellent.
Dialogue: 0,0:09:47.37,0:09:47.99,中文,,0,0,0,,太棒了
Dialogue: 0,0:09:47.99,0:09:50.91,英文,,0,0,0,,So again, why did we do this?
Dialogue: 0,0:09:47.99,0:09:50.91,中文,,0,0,0,,那么 我们为什么要这样做呢
Dialogue: 0,0:09:50.91,0:09:57.99,英文,,0,0,0,,Well, if we look at how you'd use the lists, we're starting to get a clue about why this new S list is easier for users.
Dialogue: 0,0:09:50.91,0:09:57.99,中文,,0,0,0,,好吧 如果我们看一下如何使用这些列表 我们开始明白为什么这个新的 S 列表对用户来说更容易
Dialogue: 0,0:09:57.99,0:10:04.11,英文,,0,0,0,,So if I was using an int list and I wanted to add items to it, I'd have to write code like this,
Dialogue: 0,0:09:57.99,0:10:04.11,中文,,0,0,0,,如果我正在使用一个 IntList 并且我想要向其添加项目 我将不得不编写这样的代码
Dialogue: 0,0:10:04.11,0:10:10.43,英文,,0,0,0,,L equals new int list 10 comma L. And sure, if you have a deep understanding of recursion, this might be OK.
Dialogue: 0,0:10:04.11,0:10:10.43,中文,,0,0,0,,L 等于新的 IntList 10 逗号 L 当然 如果你对递归有深入的了解 这也许还可以
Dialogue: 0,0:10:10.43,0:10:13.26,英文,,0,0,0,,And some users do prefer doing this.
Dialogue: 0,0:10:10.43,0:10:13.26,中文,,0,0,0,,而一些用户确实更喜欢这样做
Dialogue: 0,0:10:13.26,0:10:21.75,英文,,0,0,0,,Hopefully, it seems not unreasonable that the code on the left, where I can just say L.atfirst10, L.atfirst5,
Dialogue: 0,0:10:13.26,0:10:21.75,中文,,0,0,0,,希望这样看起来并不是不合理的 左侧的代码 我可以直接说L.atFirst(10) L.atFirst(5)
Dialogue: 0,0:10:21.75,0:10:29.19,英文,,0,0,0,,somehow that feels a little bit more natural to users who don't have to think about the deep recursion going on all the way in the belly of the data structure.
Dialogue: 0,0:10:21.75,0:10:29.19,中文,,0,0,0,,不知为何对于那些不必考虑数据结构深处的用户来说 这种方式似乎更自然一些
Dialogue: 0,0:10:29.19,0:10:30.45,英文,,0,0,0,,So that's our goal for today.
Dialogue: 0,0:10:29.19,0:10:30.45,中文,,0,0,0,,这是我们今天的目标
Dialogue: 0,0:10:30.45,0:10:41.98,英文,,0,0,0,,Instead of having code that looks like the code on the right, where the user has to deal with the recursion every time they want to use the data structure, we're going to hide the recursion behind this S-less data structure.
Dialogue: 0,0:10:30.45,0:10:41.98,中文,,0,0,0,,与其让用户每次使用数据结构时都要处理递归 我们要隐藏递归在这个不带S的数据结构后面
Dialogue: 0,0:10:41.98,0:10:44.28,英文,,0,0,0,,And now the users, they don't have to think about recursion.
Dialogue: 0,0:10:41.98,0:10:44.28,中文,,0,0,0,,现在用户们不必考虑递归
Dialogue: 0,0:10:44.28,0:10:45.54,英文,,0,0,0,,They can just say, I want to add 10.
Dialogue: 0,0:10:44.28,0:10:45.54,中文,,0,0,0,,他们只需要说 我想加10
Dialogue: 0,0:10:45.54,0:10:46.96,英文,,0,0,0,,And I want to add 5.
Dialogue: 0,0:10:45.54,0:10:46.96,中文,,0,0,0,,我想加5
Dialogue: 0,0:10:46.96,0:10:48.31,英文,,0,0,0,,And I want to get the first thing.
Dialogue: 0,0:10:46.96,0:10:48.31,中文,,0,0,0,,我想要获取第一件事
Dialogue: 0,0:10:48.31,0:10:49.73,英文,,0,0,0,,And they're all set.
Dialogue: 0,0:10:48.31,0:10:49.73,中文,,0,0,0,,一切都准备好了
Dialogue: 0,0:10:49.73,0:10:50.77,英文,,0,0,0,,OK.
Dialogue: 0,0:10:49.73,0:10:50.77,中文,,0,0,0,,好的
Dialogue: 0,0:10:50.77,0:10:52.24,英文,,0,0,0,,Here's another picture of it.
Dialogue: 0,0:10:50.77,0:10:52.24,中文,,0,0,0,,这是另一张照片
Dialogue: 0,0:10:52.24,0:10:54.66,英文,,0,0,0,,So on the top, we have the int list.
Dialogue: 0,0:10:52.24,0:10:54.66,中文,,0,0,0,,在顶部 我们有整数列表
Dialogue: 0,0:10:54.66,0:10:57.14,英文,,0,0,0,,This is the naked recursive data structure.
Dialogue: 0,0:10:54.66,0:10:57.14,中文,,0,0,0,,这就是裸递归数据结构
Dialogue: 0,0:10:57.14,0:11:03.41,英文,,0,0,0,,When the user wants to use the int list, we are giving them raw pointers directly into the recursive data structure.
Dialogue: 0,0:10:57.14,0:11:03.41,中文,,0,0,0,,当用户想要使用整数列表时 我们直接给他们原始指针指向递归数据结构
Dialogue: 0,0:11:03.41,0:11:06.13,英文,,0,0,0,,So the user has to think about the first and the rest.
Dialogue: 0,0:11:03.41,0:11:06.13,中文,,0,0,0,,用户必须考虑第一个和其余的部分
Dialogue: 0,0:11:06.13,0:11:09.67,英文,,0,0,0,,They have to think about the recursive links between all the nodes.
Dialogue: 0,0:11:06.13,0:11:09.67,中文,,0,0,0,,他们必须考虑所有节点之间的递归链接
Dialogue: 0,0:11:09.67,0:11:14.58,英文,,0,0,0,,By contrast, if I look at the SLList, this SLList object, you can think of it like a middleman.
Dialogue: 0,0:11:09.67,0:11:14.58,中文,,0,0,0,,相比之下 如果我看SLList 这个SLList对象 你可以把它想象成一个中间人
Dialogue: 0,0:11:14.58,0:11:19.63,英文,,0,0,0,,It's the person you go and talk to and you say, hey, I don't want to think about the adding first because that's really hard.
Dialogue: 0,0:11:14.58,0:11:19.63,中文,,0,0,0,,这就是你去找的人 你说 嘿 我不想先考虑添加 因为那真的很难
Dialogue: 0,0:11:19.63,0:11:21.13,英文,,0,0,0,,You think about it for me.
Dialogue: 0,0:11:19.63,0:11:21.13,中文,,0,0,0,,你替我考虑一下
Dialogue: 0,0:11:21.13,0:11:30.80,英文,,0,0,0,,And this middleman will say, sure, I will reach into the recursive data structure for you, and I'll do all the complicated recursive calls to add first or get first.
Dialogue: 0,0:11:21.13,0:11:30.80,中文,,0,0,0,,这个中间人会说 我会替你进入递归数据结构 并进行所有复杂的递归调用以进行添加或获取
Dialogue: 0,0:11:30.80,0:11:35.97,英文,,0,0,0,,Just the nice thing about this bottom structure, instead of having to deal with the recursive links yourself,
Dialogue: 0,0:11:30.80,0:11:35.97,中文,,0,0,0,,关于这个底层结构的好处就是 你不需要自己处理递归链接
Dialogue: 0,0:11:35.97,0:11:42.81,英文,,0,0,0,,you can walk up to the middleman and say, you do the adding first, and then this middleman will do it for us.
Dialogue: 0,0:11:35.97,0:11:42.81,中文,,0,0,0,,你可以走到中间人那里 说你先添加 然后这个中间人会为我们做
Dialogue: 0,0:11:42.81,0:11:44.79,英文,,0,0,0,,OK, great.
Dialogue: 0,0:11:42.81,0:11:44.79,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:11:44.79,0:11:49.73,英文,,0,0,0,,Anything else you want to know about what we have so far before I throw in some more methods?
Dialogue: 0,0:11:44.79,0:11:49.73,中文,,0,0,0,,在我加入更多方法之前 你想了解我们目前的进展吗
Dialogue: 0,0:11:49.73,0:11:51.18,英文,,0,0,0,,OK.
Dialogue: 0,0:11:49.73,0:11:51.18,中文,,0,0,0,,好的
Dialogue: 0,0:11:51.18,0:11:52.23,英文,,0,0,0,,Let's add some more things.
Dialogue: 0,0:11:51.18,0:11:52.23,中文,,0,0,0,,让我们添加一些新东西
Dialogue: 0,0:11:52.23,0:11:55.13,英文,,0,0,0,,So at this point, we have a couple of improvements.
Dialogue: 0,0:11:52.23,0:11:55.13,中文,,0,0,0,,在这一点上 我们有了一些改进
Dialogue: 0,0:11:55.13,0:11:57.63,英文,,0,0,0,,We've added the addFirst and the getFirst methods.
Dialogue: 0,0:11:55.13,0:11:57.63,中文,,0,0,0,,我们添加了addFirst和getFirst方法
Dialogue: 0,0:11:57.63,0:12:02.77,英文,,0,0,0,,But there is a little bit of a problem, which is, we already saw it's nice if the users use our methods.
Dialogue: 0,0:11:57.63,0:12:02.77,中文,,0,0,0,,但有一个小问题 就是 我们已经看到如果用户使用我们的方法是很好的
Dialogue: 0,0:12:02.77,0:12:08.68,英文,,0,0,0,,So whoever I give the SLList to, they can just call addFirst, and then 10 will appear at the front.
Dialogue: 0,0:12:02.77,0:12:08.68,中文,,0,0,0,,无论我把SLList给谁 他们只需调用addFirst 然后10就会出现在最前面
Dialogue: 0,0:12:08.68,0:12:09.66,英文,,0,0,0,,And it's all great.
Dialogue: 0,0:12:08.68,0:12:09.66,中文,,0,0,0,,一切都很棒
Dialogue: 0,0:12:09.66,0:12:12.70,英文,,0,0,0,,But what if the user doesn't want to use my methods?
Dialogue: 0,0:12:09.66,0:12:12.70,中文,,0,0,0,,但是如果用户不想使用我的方法呢
Dialogue: 0,0:12:12.70,0:12:18.52,英文,,0,0,0,,Maybe the user wants to dig into the SLList data structure themselves, and they want to do their own thing.
Dialogue: 0,0:12:12.70,0:12:18.52,中文,,0,0,0,,也许用户想深入了解 SLList 数据结构 并且想要做一些自己的事情
Dialogue: 0,0:12:18.52,0:12:21.42,英文,,0,0,0,,So maybe someone comes along and says, you know what?
Dialogue: 0,0:12:18.52,0:12:21.42,中文,,0,0,0,,也许有人会说 你知道吗
Dialogue: 0,0:12:21.42,0:12:23.03,英文,,0,0,0,,I'm not going to use your method.
Dialogue: 0,0:12:21.42,0:12:23.03,中文,,0,0,0,,我不打算使用你的方法
Dialogue: 0,0:12:23.03,0:12:25.79,英文,,0,0,0,,I'm going to use my own ideas.
Dialogue: 0,0:12:23.03,0:12:25.79,中文,,0,0,0,,我要使用我自己的想法
Dialogue: 0,0:12:25.79,0:12:28.31,英文,,0,0,0,,I'm going to reach directly into L.first.
Dialogue: 0,0:12:25.79,0:12:28.31,中文,,0,0,0,,我要直接访问 L.first
Dialogue: 0,0:12:28.31,0:12:31.97,英文,,0,0,0,,And I'm going to say L.first.next.next equals L.first.next.
Dialogue: 0,0:12:28.31,0:12:31.97,中文,,0,0,0,,我要说的是 L.first.next.next 等于 L.first.next
Dialogue: 0,0:12:31.97,0:12:38.92,英文,,0,0,0,,So they're reaching directly into the data structure and doing some modifications, maybe some modifications that we don't want.
Dialogue: 0,0:12:31.97,0:12:38.92,中文,,0,0,0,,它们直接访问数据结构并进行一些修改 也许是一些我们不想要的修改
Dialogue: 0,0:12:38.92,0:12:41.24,英文,,0,0,0,,So you can try and think and ponder what would this do.
Dialogue: 0,0:12:38.92,0:12:41.24,中文,,0,0,0,,你可以尝试思考一下 这会导致什么结果
Dialogue: 0,0:12:41.24,0:12:48.57,英文,,0,0,0,,We'll say L.first.next.next, which is this box right here, equals L.first.next.
Dialogue: 0,0:12:41.24,0:12:48.57,中文,,0,0,0,,我们会说 L.first.next.next 也就是这个框 等于 L.first.next
Dialogue: 0,0:12:48.57,0:12:57.74,英文,,0,0,0,,And if I step one slide to see what happens, well, we've ruined the list because this list now has a next that points back at itself.
Dialogue: 0,0:12:48.57,0:12:57.74,中文,,0,0,0,,如果我往后一页看看会发生什么 我们破坏了列表 因为这个列表现在有一个指向自身的下一个
Dialogue: 0,0:12:57.74,0:13:00.26,英文,,0,0,0,,And that is not what lists are supposed to do.
Dialogue: 0,0:12:57.74,0:13:00.26,中文,,0,0,0,,这不是列表应该做的事情
Dialogue: 0,0:13:00.26,0:13:10.39,英文,,0,0,0,,So somehow, by allowing the user to reach directly into my lists, we've given them an opportunity to mess up this beautiful list structure that we've created.
Dialogue: 0,0:13:00.26,0:13:10.39,中文,,0,0,0,,以某种方式 通过允许用户直接访问我的列表 我们给了他们一个机会来破坏我们创建的这个美丽的列表结构
Dialogue: 0,0:13:10.39,0:13:12.45,英文,,0,0,0,,And I don't want users to be able to do that.
Dialogue: 0,0:13:10.39,0:13:12.45,中文,,0,0,0,,而且我不希望用户能够这样做
Dialogue: 0,0:13:12.45,0:13:16.17,英文,,0,0,0,,I want users to use the methods that I've provided, like addFirst.
Dialogue: 0,0:13:12.45,0:13:16.17,中文,,0,0,0,,我希望用户使用我提供的方法 比如addFirst
Dialogue: 0,0:13:16.17,0:13:23.08,英文,,0,0,0,,I don't want them to go into my list, try to addFirst themselves, and mess it all up and create this completely wrecked list.
Dialogue: 0,0:13:16.17,0:13:23.08,中文,,0,0,0,,我不希望他们进入我的列表 尝试自己添加addFirst 并把它搞得一团糟 创建这个完全毁掉的列表
Dialogue: 0,0:13:23.08,0:13:25.50,英文,,0,0,0,,So how do I tell users not to do that?
Dialogue: 0,0:13:23.08,0:13:25.50,中文,,0,0,0,,那么我如何告诉用户不要这样做呢
Dialogue: 0,0:13:25.50,0:13:27.08,英文,,0,0,0,,Well, there's a couple of things I could do.
Dialogue: 0,0:13:25.50,0:13:27.08,中文,,0,0,0,,好吧 我可以做几件事
Dialogue: 0,0:13:27.08,0:13:34.88,英文,,0,0,0,,So one thing I could do is I could come in here, and I could write, dear user, it is incredibly important that you do not touch this.
Dialogue: 0,0:13:27.08,0:13:34.88,中文,,0,0,0,,我可以做的一件事是 我可以在这里写 亲爱的用户 非常重要的是你不要碰这个
Dialogue: 0,0:13:34.88,0:13:39.45,英文,,0,0,0,,So you could do that, but most likely,
Dialogue: 0,0:13:34.88,0:13:39.45,中文,,0,0,0,,你可以这样做 但最有可能的是
Dialogue: 0,0:13:39.45,0:13:43.19,英文,,0,0,0,,The user is not going to read this, and they still might mess with your first.
Dialogue: 0,0:13:39.45,0:13:43.19,中文,,0,0,0,,用户不会阅读这个 但他们仍然可能会搞乱你的第一个
Dialogue: 0,0:13:43.19,0:13:54.84,英文,,0,0,0,,So instead of writing a letter to the user in the code, we can actually take this word public, which we've been treating as some sort of magic word the whole time, and we can actually replace it with private.
Dialogue: 0,0:13:43.19,0:13:54.84,中文,,0,0,0,,我们不是在代码中给用户写信 我们实际上可以把这个词公开 我们一直把它当作一种魔法词 而现在我们可以把它替换为私有的
Dialogue: 0,0:13:54.84,0:13:56.67,英文,,0,0,0,,And so what will that do?
Dialogue: 0,0:13:54.84,0:13:56.67,中文,,0,0,0,,那么这样做会怎么样呢
Dialogue: 0,0:13:56.67,0:13:56.67,英文,,0,0,0,,Well, if I take the public keyword and I replace it with private, what happens now is that users outside of the SLList class,
Dialogue: 0,0:13:56.67,0:14:10.19,英文,,0,0,0,, so if I have another class that's using an SLList, they are not going to be allowed to access first.
Dialogue: 0,0:13:56.67,0:14:03.77,中文,,0,0,0,,如果我把 public 关键字替换为 private 现在发生的是 SLList 类之外的用户
Dialogue: 0,0:14:03.77,0:14:10.19,中文,,0,0,0,,如果我有另一个类在使用 SLList 他们将不被允许访问 first
Dialogue: 0,0:14:10.19,0:14:17.72,英文,,0,0,0,,And in fact, if they try to access first, so if someone outside of the SLList class writes some wacky code
Dialogue: 0,0:14:10.19,0:14:16.72,中文,,0,0,0,,事实上 如果他们尝试访问 first 如果 SLList 类之外的某个人写了一些奇怪的代码
Dialogue: 0,0:14:16.72,0:14:21.80,中文,,0,0,0,,比如 L.first.next.next 那么编译器会停下来并说 实际上 你不能这样做
Dialogue: 0,0:14:17.72,0:14:21.80,英文,,0,0,0,,like L.first.next.next, well, then the compiler is going to stop and say, actually, you can't do that.
Dialogue: 0,0:14:21.80,0:14:23.28,英文,,0,0,0,,First has private access.
Dialogue: 0,0:14:21.80,0:14:23.28,中文,,0,0,0,,First 具有私有访问权限
Dialogue: 0,0:14:23.28,0:14:25.42,英文,,0,0,0,,You are not allowed to access this.
Dialogue: 0,0:14:23.28,0:14:25.42,中文,,0,0,0,,你无权访问此内容
Dialogue: 0,0:14:25.42,0:14:33.40,英文,,0,0,0,,So not only is this code self-documenting, the word private gives you a reminder as you're reading the code, hey, if you don't know what you're doing, don't touch that.
Dialogue: 0,0:14:25.42,0:14:33.40,中文,,0,0,0,,这段代码不仅是自我说明的 private这个词在你读代码时还提醒你 嘿 如果你不知道在干嘛 就别碰这个
Dialogue: 0,0:14:33.40,0:14:39.45,英文,,0,0,0,,But the compiler will also enforce it for you, and it will check and make sure you're not accessing private things.
Dialogue: 0,0:14:33.40,0:14:39.45,中文,,0,0,0,,但是编译器也会为你强制执行 它会检查并确保你不会访问私有的东西
Dialogue: 0,0:14:39.45,0:14:44.21,英文,,0,0,0,,And if you do access it, the compiler will yell at you and say, no, you can't do that.
Dialogue: 0,0:14:39.45,0:14:44.21,中文,,0,0,0,,如果你真的去访问了 编译器就会警告你 说不行 你不能这样做
Dialogue: 0,0:14:44.21,0:14:46.57,英文,,0,0,0,,So that's the nice thing about private.
Dialogue: 0,0:14:44.21,0:14:46.57,中文,,0,0,0,,这就是private的好处
Dialogue: 0,0:14:46.57,0:14:52.59,英文,,0,0,0,,Okay, so what is the point of private besides this kind of story that I've painted for you so far?
Dialogue: 0,0:14:46.57,0:14:52.59,中文,,0,0,0,,那么private除了我刚刚给你讲的这个故事之外还有什么用
Dialogue: 0,0:14:52.59,0:14:54.29,英文,,0,0,0,,Painting a story, sure.
Dialogue: 0,0:14:52.59,0:14:54.29,中文,,0,0,0,,讲个故事 当然
Dialogue: 0,0:14:54.29,0:14:58.51,英文,,0,0,0,,So what's the use of private besides the story that I've presented to you so far?
Dialogue: 0,0:14:54.29,0:14:58.51,中文,,0,0,0,,那么除了我刚刚给你呈现的故事之外 private有什么用呢
Dialogue: 0,0:14:58.51,0:15:02.38,英文,,0,0,0,,Well, it turns out this is something that we're going to see over and over and over again.
Dialogue: 0,0:14:58.51,0:15:02.38,中文,,0,0,0,,好吧 事实证明这是我们会一遍又一遍看到的事情
Dialogue: 0,0:15:02.38,0:15:12.18,英文,,0,0,0,,It's one of the big themes of 6UMB, and the idea is when I'm using an S-less object, I don't necessarily have to understand how the entire object works.
Dialogue: 0,0:15:02.38,0:15:12.18,中文,,0,0,0,,这是 61B 的一个重要主题 其核心思想是 当我使用一个没有 S 的对象时 我不一定要理解整个对象的工作原理
Dialogue: 0,0:15:12.18,0:15:12.18,英文,,0,0,0,,And in fact, one of the most powerful ideas in computer science that lets you build really big, complicated programs is
Dialogue: 0,0:15:12.18,0:15:25.38,英文,,0,0,0,,when you're able to hide implementation details from the person using your class or your object.
Dialogue: 0,0:15:12.18,0:15:18.08,中文,,0,0,0,,事实上 在计算机科学中最强大的理念之一是
Dialogue: 0,0:15:18.08,0:15:25.38,中文,,0,0,0,,它让你能够从使用你的类或对象的人那里隐藏实现细节 这样你就能构建非常庞大、复杂的程序
Dialogue: 0,0:15:25.38,0:15:26.18,英文,,0,0,0,,Why is this good?
Dialogue: 0,0:15:25.38,0:15:26.18,中文,,0,0,0,,为什么这样做很好呢
Dialogue: 0,0:15:26.18,0:15:33.10,英文,,0,0,0,,Because now the person using the SLList doesn't have to think about the first instance variable and the recursive data structure.
Dialogue: 0,0:15:26.18,0:15:33.10,中文,,0,0,0,,因为现在使用 SLList 的人不必考虑第一个实例变量和递归数据结构
Dialogue: 0,0:15:33.10,0:15:34.60,英文,,0,0,0,,They have less to think about.
Dialogue: 0,0:15:33.10,0:15:34.60,中文,,0,0,0,,他们要考虑的东西更少了
Dialogue: 0,0:15:34.60,0:15:38.37,英文,,0,0,0,,Something else that's kind of nice that we'll see is you can also change private methods.
Dialogue: 0,0:15:34.60,0:15:38.37,中文,,0,0,0,,我们还会看到另一点很不错的地方 就是你还可以更改私有方法
Dialogue: 0,0:15:38.37,0:15:39.47,英文,,0,0,0,,Why is it safe to change it?
Dialogue: 0,0:15:38.37,0:15:39.47,中文,,0,0,0,,为什么修改它是安全的
Dialogue: 0,0:15:39.47,0:15:40.15,英文,,0,0,0,,Oops.
Dialogue: 0,0:15:39.47,0:15:40.15,中文,,0,0,0,,哎呀
Dialogue: 0,0:15:40.15,0:15:44.07,英文,,0,0,0,,Why is it safe to change the private instance variables or the private methods?
Dialogue: 0,0:15:40.15,0:15:44.07,中文,,0,0,0,,为什么修改私有实例变量或私有方法是安全的
Dialogue: 0,0:15:44.07,0:15:47.63,英文,,0,0,0,,Because nobody outside will ever be using them.
Dialogue: 0,0:15:44.07,0:15:47.63,中文,,0,0,0,,因为外部不会有任何人使用它们
Dialogue: 0,0:15:47.63,0:15:49.61,英文,,0,0,0,,So maybe that sounds kind of abstract.
Dialogue: 0,0:15:47.63,0:15:49.61,中文,,0,0,0,,可能听起来有点抽象
Dialogue: 0,0:15:49.61,0:15:50.81,英文,,0,0,0,,So I'll give you an analogy.
Dialogue: 0,0:15:49.61,0:15:50.81,中文,,0,0,0,,我给你举个类比
Dialogue: 0,0:15:50.81,0:15:52.57,英文,,0,0,0,,I guess it's another car analogy.
Dialogue: 0,0:15:50.81,0:15:52.57,中文,,0,0,0,,我猜这又是一个汽车类比
Dialogue: 0,0:15:52.57,0:15:54.92,英文,,0,0,0,,So in a car, there are some parts that are public.
Dialogue: 0,0:15:52.57,0:15:54.92,中文,,0,0,0,,在一辆汽车里 有一些部件是公共的
Dialogue: 0,0:15:54.92,0:16:00.48,英文,,0,0,0,,These are the things that the user of the car has to use to interact with the car and make it do things.
Dialogue: 0,0:15:54.92,0:16:00.48,中文,,0,0,0,,这些是汽车用户必须使用的东西 以与汽车进行交互并使其执行操作
Dialogue: 0,0:16:00.48,0:16:01.38,英文,,0,0,0,,So there are pedals.
Dialogue: 0,0:16:00.48,0:16:01.38,中文,,0,0,0,,所以有踏板
Dialogue: 0,0:16:01.38,0:16:02.68,英文,,0,0,0,,There's one for going fast.
Dialogue: 0,0:16:01.38,0:16:02.68,中文,,0,0,0,,有一个是用来加速的
Dialogue: 0,0:16:02.68,0:16:04.06,英文,,0,0,0,,There's one for going slow.
Dialogue: 0,0:16:02.68,0:16:04.06,中文,,0,0,0,,有一个是用来减速的
Dialogue: 0,0:16:04.06,0:16:05.04,英文,,0,0,0,,There's a steering wheel.
Dialogue: 0,0:16:04.06,0:16:05.04,中文,,0,0,0,,还有一个方向盘
Dialogue: 0,0:16:05.04,0:16:05.88,英文,,0,0,0,,You turn it left.
Dialogue: 0,0:16:05.04,0:16:05.88,中文,,0,0,0,,你把它向左转
Dialogue: 0,0:16:05.88,0:16:07.42,英文,,0,0,0,,The car hopefully goes left.
Dialogue: 0,0:16:05.88,0:16:07.42,中文,,0,0,0,,汽车希望往左走
Dialogue: 0,0:16:07.42,0:16:08.51,英文,,0,0,0,,You get the idea.
Dialogue: 0,0:16:07.42,0:16:08.51,中文,,0,0,0,,你明白了
Dialogue: 0,0:16:08.51,0:16:11.59,英文,,0,0,0,,But then there are also some parts of the car that are private.
Dialogue: 0,0:16:08.51,0:16:11.59,中文,,0,0,0,,但是汽车还有一些部分是私人的
Dialogue: 0,0:16:11.59,0:16:15.25,英文,,0,0,0,,These are not supposed to be accessed by the users of the car.
Dialogue: 0,0:16:11.59,0:16:15.25,中文,,0,0,0,,这些部分不应该被汽车的用户访问
Dialogue: 0,0:16:15.25,0:16:19.52,英文,,0,0,0,,For example, your car probably has some sort of fuel line or some rotary valve.
Dialogue: 0,0:16:15.25,0:16:19.52,中文,,0,0,0,,例如 你的汽车可能有某种燃油管道或者某种旋转阀
Dialogue: 0,0:16:19.52,0:16:24.48,英文,,0,0,0,,And I don't know about you, you know, like when you're driving, you're probably not thinking, well, what about the fuel injection?
Dialogue: 0,0:16:19.52,0:16:24.48,中文,,0,0,0,,而且我不知道你 就是你知道 当你开车时 你可能不会想到燃油喷射的问题
Dialogue: 0,0:16:24.48,0:16:26.44,英文,,0,0,0,,I don't think people think that when they drive.
Dialogue: 0,0:16:24.48,0:16:26.44,中文,,0,0,0,,我不认为人们开车时会考虑这个问题
Dialogue: 0,0:16:26.44,0:16:31.99,英文,,0,0,0,,And so these private parts of the car, the user doesn't have to think about them as they're using the car.
Dialogue: 0,0:16:26.44,0:16:31.99,中文,,0,0,0,,这些汽车的私人部分 用户在使用汽车时无需考虑它们
Dialogue: 0,0:16:31.99,0:16:38.05,英文,,0,0,0,,There's a distinction between the public parts, this is what the user uses to interact with the object, and the private parts.
Dialogue: 0,0:16:31.99,0:16:38.05,中文,,0,0,0,,公共部分有所区别 这是用户用来与对象交互的部分 而私人部分则不同
Dialogue: 0,0:16:38.05,0:16:43.24,英文,,0,0,0,,These are the things that actually make the car run, but we don't have to think about them when we're interacting with it.
Dialogue: 0,0:16:38.05,0:16:43.24,中文,,0,0,0,,这些是实际使汽车运行的东西 但在与之交互时我们不必考虑它们
Dialogue: 0,0:16:43.24,0:16:48.30,英文,,0,0,0,,Otherwise, this car would be very difficult to drive.
Dialogue: 0,0:16:43.24,0:16:48.30,中文,,0,0,0,,否则 这辆车将非常难驾驶
Dialogue: 0,0:16:48.30,0:16:52.09,英文,,0,0,0,,Other minor notes are something nice about the private variables is we can change them out.
Dialogue: 0,0:16:48.30,0:16:52.09,中文,,0,0,0,,关于私有变量的另一个小提示是我们可以更改它们
Dialogue: 0,0:16:52.09,0:16:55.77,英文,,0,0,0,,So maybe you can take your car to the mechanic, and the mechanic can say, you know what?
Dialogue: 0,0:16:52.09,0:16:55.77,中文,,0,0,0,,也许你可以把你的车送给修理工 修理工可能会说 你知道吗
Dialogue: 0,0:16:55.77,0:16:58.89,英文,,0,0,0,,I'm going to take your fuel line away, and I'm going to replace it with a battery.
Dialogue: 0,0:16:55.77,0:16:58.89,中文,,0,0,0,,我要拿走你的燃油管 然后用电池替换它
Dialogue: 0,0:16:58.89,0:17:00.33,英文,,0,0,0,,So now it's an electric car.
Dialogue: 0,0:16:58.89,0:17:00.33,中文,,0,0,0,,现在它是一辆电动车了
Dialogue: 0,0:17:00.33,0:17:01.09,英文,,0,0,0,,Well, that's OK.
Dialogue: 0,0:17:00.33,0:17:01.09,中文,,0,0,0,,那没问题
Dialogue: 0,0:17:01.09,0:17:04.19,英文,,0,0,0,,You can still drive the car, because the public methods are still there.
Dialogue: 0,0:17:01.09,0:17:04.19,中文,,0,0,0,,你仍然可以驾驶这辆车 因为公共方法仍然存在
Dialogue: 0,0:17:04.19,0:17:16.42,英文,,0,0,0,,You're still interacting with the car in the same way, even if somebody has taken these private implementation details and swapped it out from a gasoline-powered car to an electric car or to hamsters running on wheels-powered car.
Dialogue: 0,0:17:04.19,0:17:16.42,中文,,0,0,0,,你与车的互动方式仍然相同 即使有人将这些私有实现细节从汽油车更换为电动车或更换为由仓鼠推动的车
Dialogue: 0,0:17:16.42,0:17:17.64,英文,,0,0,0,,I don't know.
Dialogue: 0,0:17:16.42,0:17:17.64,中文,,0,0,0,,我不知道
Dialogue: 0,0:17:17.64,0:17:21.12,英文,,0,0,0,,If that's a thing, I guess it is now.
Dialogue: 0,0:17:17.64,0:17:21.12,中文,,0,0,0,,如果那是个事 我想现在就是了
Dialogue: 0,0:17:21.12,0:17:25.80,英文,,0,0,0,,However, if you have a public method, one final thing I'll say is you probably don't want to delete them.
Dialogue: 0,0:17:21.12,0:17:25.80,中文,,0,0,0,,然而 如果你有一个公共方法 我最后要说的是你可能不想删除它们
Dialogue: 0,0:17:25.80,0:17:35.45,英文,,0,0,0,,Because if I publish this car to the world, and then I take it to the mechanic, and the mechanic deletes the steering wheel, well, suddenly you probably don't want to drive the car.
Dialogue: 0,0:17:25.80,0:17:35.45,中文,,0,0,0,,因为如果我将这辆车发布到世界上 然后我把它送到修理厂 修理厂把方向盘删除了 那么 突然间你可能就不想开这辆车了
Dialogue: 0,0:17:35.45,0:17:39.13,英文,,0,0,0,,Yeah, maybe they give it to you with like some joystick, but I don't think you'd want to drive that.
Dialogue: 0,0:17:35.45,0:17:39.13,中文,,0,0,0,,是的 也许他们会用一些操纵杆给你 但我觉得你可能不想开那样的车
Dialogue: 0,0:17:39.13,0:17:47.80,英文,,0,0,0,,And so the idea here is if you publish your code to the world and other people are using your public methods, you probably don't want to delete them or change them.
Dialogue: 0,0:17:39.13,0:17:47.80,中文,,0,0,0,,这里的想法是 如果你将你的代码发布到世界上 其他人正在使用你的公共方法 你可能不想删除它们或更改它们
Dialogue: 0,0:17:47.80,0:17:52.66,英文,,0,0,0,,Otherwise, the users of your public methods are going to have a hard time adjusting.
Dialogue: 0,0:17:47.80,0:17:52.66,中文,,0,0,0,,否则 你的公共方法的用户将很难调整
Dialogue: 0,0:17:52.66,0:17:54.52,英文,,0,0,0,,So that's kind of the analogy.
Dialogue: 0,0:17:52.66,0:17:54.52,中文,,0,0,0,,这就是类比的意思
Dialogue: 0,0:17:54.52,0:17:56.16,英文,,0,0,0,,It's something we'll see over and over again.
Dialogue: 0,0:17:54.52,0:17:56.16,中文,,0,0,0,,这是我们会一再看到的情况
Dialogue: 0,0:17:56.16,0:18:05.93,英文,,0,0,0,,There's a difference between implementation details that the user doesn't have to know about to use the object and the public methods, which the user is going to use to interact with.
Dialogue: 0,0:17:56.16,0:18:05.93,中文,,0,0,0,,用户不必知道的实现细节与用户将用来与之交互的公共方法之间有区别
Dialogue: 0,0:18:05.93,0:18:06.73,英文,,0,0,0,,OK, I talked a lot.
Dialogue: 0,0:18:05.93,0:18:06.73,中文,,0,0,0,,我说了很多
Dialogue: 0,0:18:06.73,0:18:11.85,英文,,0,0,0,,Questions about cars or access control, private keyword?
Dialogue: 0,0:18:06.73,0:18:11.85,中文,,0,0,0,,关于汽车或访问控制 private关键字有问题吗
Dialogue: 0,0:18:11.85,0:18:13.44,英文,,0,0,0,,OK, cool.
Dialogue: 0,0:18:11.85,0:18:13.44,中文,,0,0,0,,好的 很酷
Dialogue: 0,0:18:13.44,0:18:15.40,英文,,0,0,0,,Also, anything on Zoom that I should know about?
Dialogue: 0,0:18:13.44,0:18:15.40,中文,,0,0,0,,还有 关于Zoom有什么我应该知道的吗
Dialogue: 0,0:18:15.40,0:18:16.82,英文,,0,0,0,,OK, great.
Dialogue: 0,0:18:15.40,0:18:16.82,中文,,0,0,0,,好的 太好了
Dialogue: 0,0:18:16.82,0:18:22.77,英文,,0,0,0,,So one final thing I'll note, I guess I already said final, but one final, final, final thing I will note is that
Dialogue: 0,0:18:16.82,0:18:22.77,中文,,0,0,0,,最后一件事我要说 我猜我已经说了是最后一次 但真的是最最后一次
Dialogue: 0,0:18:22.77,0:18:29.17,英文,,0,0,0,,that even though we have the word private, this does not really mean that the user cannot access it if they really wanted to.
Dialogue: 0,0:18:22.77,0:18:29.17,中文,,0,0,0,,即使我们有private这个词 这并不真正意味着如果用户真的想要 他们就无法访问
Dialogue: 0,0:18:29.17,0:18:31.99,英文,,0,0,0,,So if users want to be evil or malicious,
Dialogue: 0,0:18:29.17,0:18:31.99,中文,,0,0,0,,如果用户想要做坏事或者恶意的话
Dialogue: 0,0:18:31.99,0:18:36.34,英文,,0,0,0,,They could probably still dig into your code and find the private instance variables.
Dialogue: 0,0:18:31.99,0:18:36.34,中文,,0,0,0,,他们可能仍然可以深入你的代码并找到私有实例变量
Dialogue: 0,0:18:36.34,0:18:44.73,英文,,0,0,0,,In fact, Java has a funny library called the reflections library that is very strange and weird that would allow you to access private instance variables.
Dialogue: 0,0:18:36.34,0:18:44.73,中文,,0,0,0,,事实上 Java有一个有趣的库叫做反射库 非常奇怪和怪异 可以让你访问私有实例变量
Dialogue: 0,0:18:44.73,0:18:48.01,英文,,0,0,0,,So just because we call it private doesn't mean it's like a security measure.
Dialogue: 0,0:18:44.73,0:18:48.01,中文,,0,0,0,,仅仅因为我们称其为私有并不意味着它像一个安全措施
Dialogue: 0,0:18:48.01,0:18:51.01,英文,,0,0,0,,It's more just a reminder to people using your code.
Dialogue: 0,0:18:48.01,0:18:51.01,中文,,0,0,0,,更多的是提醒使用你代码的人
Dialogue: 0,0:18:51.01,0:18:55.23,英文,,0,0,0,,You probably shouldn't touch this if you're not trying to be evil and mess it up.
Dialogue: 0,0:18:51.01,0:18:55.23,中文,,0,0,0,,如果你不想做坏事和搞砸它 你可能不应该触碰这个
Dialogue: 0,0:18:55.23,0:18:57.57,英文,,0,0,0,,So private doesn't mean it's protected against enemies.
Dialogue: 0,0:18:55.23,0:18:57.57,中文,,0,0,0,,私有并不意味着它受到敌人的保护
Dialogue: 0,0:18:57.57,0:19:00.68,英文,,0,0,0,,It just means users shouldn't touch it if they don't know what they're doing.
Dialogue: 0,0:18:57.57,0:19:00.68,中文,,0,0,0,,这只是意味着用户如果不知道自己在做什么就不应该触碰它
Dialogue: 0,0:19:00.68,0:19:05.70,英文,,0,0,0,,Just like if you're driving the car and you don't know what you're doing, you probably should not go and touch the fuel line.
Dialogue: 0,0:19:00.68,0:19:05.70,中文,,0,0,0,,就像你开车但不知道自己在做什么一样 你可能不应该去碰燃油管
Dialogue: 0,0:19:05.70,0:19:07.82,英文,,0,0,0,,OK, question?
Dialogue: 0,0:19:05.70,0:19:07.82,中文,,0,0,0,,有问题吗
Dialogue: 0,0:19:07.82,0:19:09.00,英文,,0,0,0,,Oh, OK, sure.
Dialogue: 0,0:19:07.82,0:19:09.00,中文,,0,0,0,,噢 当然
Dialogue: 0,0:19:09.00,0:19:12.00,英文,,0,0,0,,You've redirected me somewhere back there.
Dialogue: 0,0:19:09.00,0:19:12.00,中文,,0,0,0,,你在之前某个地方把我引错了
Dialogue: 0,0:19:12.00,0:19:14.67,英文,,0,0,0,,Hello?
Dialogue: 0,0:19:12.00,0:19:14.67,中文,,0,0,0,,喂
Dialogue: 0,0:19:14.67,0:19:15.65,英文,,0,0,0,,And they've redirected forward.
Dialogue: 0,0:19:14.67,0:19:15.65,中文,,0,0,0,,他们往前引了
Dialogue: 0,0:19:15.65,0:19:17.31,英文,,0,0,0,,OK, hello, yeah.
Dialogue: 0,0:19:15.65,0:19:17.31,中文,,0,0,0,,是的
Dialogue: 0,0:19:17.31,0:19:19.99,英文,,0,0,0,,Do you have the question, or are you going to ping me somewhere else?
Dialogue: 0,0:19:17.31,0:19:19.99,中文,,0,0,0,,你有问题吗 还是你要在别处提醒我
Dialogue: 0,0:19:19.99,0:19:24.57,英文,,0,0,0,,OK, what's the question?
Dialogue: 0,0:19:19.99,0:19:24.57,中文,,0,0,0,,问题是什么
Dialogue: 0,0:19:24.57,0:19:33.43,英文,,0,0,0,,I want to change the word private to what?
Dialogue: 0,0:19:24.57,0:19:33.43,中文,,0,0,0,,我想把 private 这个词改成什么
Dialogue: 0,0:19:33.43,0:19:42.32,英文,,0,0,0,,Right, so that was another good point, which is if someone gives you a copy of the library, you can certainly go into the library and just change the code to say public, and now you have access to it.
Dialogue: 0,0:19:33.43,0:19:42.32,中文,,0,0,0,,对 这是另一个很好的观点 就是如果有人给了你库的一个副本 你肯定可以进入库并将代码改为 public 现在你就能访问它了
Dialogue: 0,0:19:42.32,0:19:43.22,英文,,0,0,0,,So that's a good point.
Dialogue: 0,0:19:42.32,0:19:43.22,中文,,0,0,0,,所以这是一个很好的观点
Dialogue: 0,0:19:43.22,0:19:47.46,英文,,0,0,0,,It again shows that the word private is not trying to stop against attackers.
Dialogue: 0,0:19:43.22,0:19:47.46,中文,,0,0,0,,这再次表明 private 这个词并不是试图阻止攻击者
Dialogue: 0,0:19:47.46,0:19:57.59,英文,,0,0,0,,It's supposed to be more like a reminder that if you don't really know what you're doing, or you're not trying to change the way the int list works, or the s list works, you might not want to touch that keyword.
Dialogue: 0,0:19:47.46,0:19:57.59,中文,,0,0,0,,它更像是一个提醒 如果你不太了解你在做什么 或者你不打算改变 IntList或 s 列表的工作方式 你可能不想触碰那个关键字
Dialogue: 0,0:19:57.59,0:19:59.67,英文,,0,0,0,,Justin has risen.
Dialogue: 0,0:19:57.59,0:19:59.67,中文,,0,0,0,,贾斯汀已经站起来了
Dialogue: 0,0:19:59.67,0:20:02.77,英文,,0,0,0,,Do you have something to say?
Dialogue: 0,0:19:59.67,0:20:02.77,中文,,0,0,0,,你有什么要说的吗
Dialogue: 0,0:20:02.77,0:20:03.70,英文,,0,0,0,,You can talk into the mic.
Dialogue: 0,0:20:02.77,0:20:03.70,中文,,0,0,0,,你可以对着麦克风说话
Dialogue: 0,0:20:03.70,0:20:04.50,英文,,0,0,0,,Just talk into me.
Dialogue: 0,0:20:03.70,0:20:04.50,中文,,0,0,0,,就对着我说话
Dialogue: 0,0:20:04.50,0:20:06.36,英文,,0,0,0,,OK.
Dialogue: 0,0:20:04.50,0:20:06.36,中文,,0,0,0,,好的
Dialogue: 0,0:20:06.36,0:20:10.46,英文,,0,0,0,,I'd also like to point out that, in general, you don't actually get access to the source code.
Dialogue: 0,0:20:06.36,0:20:10.46,中文,,0,0,0,,我还想指出 一般来说 你实际上不能访问源代码
Dialogue: 0,0:20:10.46,0:20:12.74,英文,,0,0,0,,Most of the time, we don't send around source code.
Dialogue: 0,0:20:10.46,0:20:12.74,中文,,0,0,0,,大多数情况下 我们不会分发源代码
Dialogue: 0,0:20:12.74,0:20:20.12,英文,,0,0,0,,We just give you a compiled version of the code that has already gone through a lot of chewing to make it more efficient.
Dialogue: 0,0:20:12.74,0:20:20.12,中文,,0,0,0,,我们只是给你一个已经经过很多咀嚼以使其更有效的代码的编译版本
Dialogue: 0,0:20:20.12,0:20:22.65,英文,,0,0,0,,So the private keywords are actually entirely gone.
Dialogue: 0,0:20:20.12,0:20:22.65,中文,,0,0,0,,所以私有关键字实际上完全消失了
Dialogue: 0,0:20:22.65,0:20:28.05,英文,,0,0,0,,You just don't have access to any more if you don't get the original source code.
Dialogue: 0,0:20:22.65,0:20:28.05,中文,,0,0,0,,如果你没有获取原始源代码 你就不能再访问任何了
Dialogue: 0,0:20:28.05,0:20:28.97,英文,,0,0,0,,Cool.
Dialogue: 0,0:20:28.05,0:20:28.97,中文,,0,0,0,,很酷
Dialogue: 0,0:20:28.97,0:20:29.61,英文,,0,0,0,,Wisdom.
Dialogue: 0,0:20:28.97,0:20:29.61,中文,,0,0,0,,智慧
Dialogue: 0,0:20:29.61,0:20:31.31,英文,,0,0,0,,OK.
Dialogue: 0,0:20:29.61,0:20:31.31,中文,,0,0,0,,好的
Dialogue: 0,0:20:31.31,0:20:32.43,英文,,0,0,0,,Great.
Dialogue: 0,0:20:31.31,0:20:32.43,中文,,0,0,0,,太棒了
Dialogue: 0,0:20:32.43,0:20:32.93,英文,,0,0,0,,Great question.
Dialogue: 0,0:20:32.43,0:20:32.93,中文,,0,0,0,,好问题
Dialogue: 0,0:20:32.93,0:20:35.09,英文,,0,0,0,,Any other questions?
Dialogue: 0,0:20:32.93,0:20:35.09,中文,,0,0,0,,还有其他问题吗
Dialogue: 0,0:20:35.09,0:20:36.13,英文,,0,0,0,,OK.
Dialogue: 0,0:20:35.09,0:20:36.13,中文,,0,0,0,,好的
Dialogue: 0,0:20:36.13,0:20:36.41,英文,,0,0,0,,Great.
Dialogue: 0,0:20:36.13,0:20:36.41,中文,,0,0,0,,太棒了
Dialogue: 0,0:20:36.41,0:20:37.47,英文,,0,0,0,,So it's a really big idea.
Dialogue: 0,0:20:36.41,0:20:37.47,中文,,0,0,0,,所以这是一个非常重要的想法
Dialogue: 0,0:20:37.47,0:20:38.97,英文,,0,0,0,,We will see it over and over.
Dialogue: 0,0:20:37.47,0:20:38.97,中文,,0,0,0,,我们会一遍又一遍地看到它
Dialogue: 0,0:20:38.97,0:20:39.25,英文,,0,0,0,,OK.
Dialogue: 0,0:20:38.97,0:20:39.25,中文,,0,0,0,,好的
Dialogue: 0,0:20:39.25,0:20:41.06,英文,,0,0,0,,I'll make one more tiny improvement.
Dialogue: 0,0:20:39.25,0:20:41.06,中文,,0,0,0,,我再做一个微小的改进
Dialogue: 0,0:20:41.06,0:20:44.94,英文,,0,0,0,,This one's going to feel a little bit weird, but it turns out it's perfectly valid in Java.
Dialogue: 0,0:20:41.06,0:20:44.94,中文,,0,0,0,,这个可能会有点奇怪 但事实证明在Java中它是完全有效的
Dialogue: 0,0:20:44.94,0:20:49.62,英文,,0,0,0,,So one thing I will note is that this IntNode class, it's getting a little bit lonely.
Dialogue: 0,0:20:44.94,0:20:49.62,中文,,0,0,0,,我要注意的一件事是这个IntNode类 它有点孤单了
Dialogue: 0,0:20:49.62,0:20:50.94,英文,,0,0,0,,There's no methods in it.
Dialogue: 0,0:20:49.62,0:20:50.94,中文,,0,0,0,,它里面没有方法
Dialogue: 0,0:20:50.94,0:20:57.05,英文,,0,0,0,,And in fact, there is no reason to use this IntNode class except in the context of SLLists.
Dialogue: 0,0:20:50.94,0:20:57.05,中文,,0,0,0,,实际上 除了在SLLists的上下文中使用这个IntNode类之外 没有理由使用它
Dialogue: 0,0:20:57.05,0:21:02.37,英文,,0,0,0,,So if you think about IntNode, it's not really a separate item that users are going to try to interact with.
Dialogue: 0,0:20:57.05,0:21:02.37,中文,,0,0,0,,如果你考虑一下IntNode 它不是用户会尝试与之交互的独立项目
Dialogue: 0,0:21:02.37,0:21:04.51,英文,,0,0,0,,Users never are going to touch the IntNode.
Dialogue: 0,0:21:02.37,0:21:04.51,中文,,0,0,0,,用户永远不会触及IntNode
Dialogue: 0,0:21:04.51,0:21:08.20,英文,,0,0,0,,You can almost think of IntNode as like a feature of the S-list class.
Dialogue: 0,0:21:04.51,0:21:08.20,中文,,0,0,0,,你可以把 IntNode 想象成 S-list 类的一个特性
Dialogue: 0,0:21:08.20,0:21:14.11,英文,,0,0,0,,So it turns out, in cases like this, where I have another class IntNode, and it's not really its own standalone class
Dialogue: 0,0:21:08.20,0:21:14.11,中文,,0,0,0,,事实证明 在这种情况下 我有另一个类 IntNode 它并不是一个独立的类
Dialogue: 0,0:21:14.11,0:21:19.89,英文,,0,0,0,,it's like a feature of the S-list class, I can actually take this code, I can
Dialogue: 0,0:21:14.11,0:21:19.89,中文,,0,0,0,,它更像是 S-list 类的一个特性 我实际上可以拿这段代码 我可以
Dialogue: 0,0:21:19.89,0:21:30.78,英文,,0,0,0,,I can just copy it or cut it, and I can just paste it right into the S list class, creating a nested class, and that's actually totally okay, even though at first it might look a little bit weird.
Dialogue: 0,0:21:19.89,0:21:30.78,中文,,0,0,0,,我可以只需复制或剪切它 然后将其粘贴到 S-list 类中 创建一个嵌套类 这其实是完全可以的 即使一开始可能看起来有点奇怪
Dialogue: 0,0:21:30.78,0:21:36.82,英文,,0,0,0,,So the second improvement that we've made is we realize, you know what?
Dialogue: 0,0:21:30.78,0:21:36.82,中文,,0,0,0,,我们做出的第二个改进是我们意识到 你知道吗
Dialogue: 0,0:21:36.82,0:21:38.66,英文,,0,0,0,,It's not its own standalone thing.
Dialogue: 0,0:21:36.82,0:21:38.66,中文,,0,0,0,,它并不是一个独立的东西
Dialogue: 0,0:21:38.66,0:21:41.94,英文,,0,0,0,,Users are never going to try to use the IntNode class themselves.
Dialogue: 0,0:21:38.66,0:21:41.94,中文,,0,0,0,,用户永远不会试图自己使用 IntNode 类
Dialogue: 0,0:21:41.94,0:21:45.50,英文,,0,0,0,,It's more like something that the S-list needs in order to operate.
Dialogue: 0,0:21:41.94,0:21:45.50,中文,,0,0,0,,它更像是 S-list 在操作时需要的东西
Dialogue: 0,0:21:45.50,0:21:50.01,英文,,0,0,0,,So I can take this code, copy it right in here, and it turns out everything will work just the same.
Dialogue: 0,0:21:45.50,0:21:50.01,中文,,0,0,0,,我可以把这段代码复制到这里 一切都会照样运行
Dialogue: 0,0:21:50.01,0:21:52.45,英文,,0,0,0,,And it just makes my code a little bit more organized.
Dialogue: 0,0:21:50.01,0:21:52.45,中文,,0,0,0,,而且这样做能让我的代码更有条理
Dialogue: 0,0:21:52.45,0:22:00.37,英文,,0,0,0,,Instead of distributing the S-list and the IntNode to my users, I can just give them this one class, and the IntNode is already bundled inside.
Dialogue: 0,0:21:52.45,0:22:00.37,中文,,0,0,0,,不再需要把S列表和IntNode分发给用户 只需要给他们这一个类 IntNode已经包含在内了
Dialogue: 0,0:22:00.37,0:22:01.93,英文,,0,0,0,,That's kind of nice.
Dialogue: 0,0:22:00.37,0:22:01.93,中文,,0,0,0,,这挺方便的
Dialogue: 0,0:22:01.93,0:22:02.89,英文,,0,0,0,,Another minor improvement.
Dialogue: 0,0:22:01.93,0:22:02.89,中文,,0,0,0,,又是一个小小的改进
Dialogue: 0,0:22:02.89,0:22:07.57,英文,,0,0,0,,So at this point, we're definitely getting into the weeds of tiny improvements we can make.
Dialogue: 0,0:22:02.89,0:22:07.57,中文,,0,0,0,,现在 我们确实是深入到可以做一些微小改进的细节中了
Dialogue: 0,0:22:07.57,0:22:11.25,英文,,0,0,0,,So if you need to check out for a moment, we're kind of getting into trivia at this point.
Dialogue: 0,0:22:07.57,0:22:11.25,中文,,0,0,0,,如果你需要稍事休息 我们现在是在探讨一些琐事了
Dialogue: 0,0:22:11.25,0:22:19.98,英文,,0,0,0,,But since people sometimes ask, a couple more improvements I could make are, it turns out users outside of the SLList class never even have to know about int nodes.
Dialogue: 0,0:22:11.25,0:22:19.98,中文,,0,0,0,,虽然有时人们会问 但我还能做的一些改进是 外部用户其实根本不需要知道int节点
Dialogue: 0,0:22:19.98,0:22:22.08,英文,,0,0,0,,So I could actually make this class private.
Dialogue: 0,0:22:19.98,0:22:22.08,中文,,0,0,0,,我其实可以把这个类设为私有
Dialogue: 0,0:22:22.08,0:22:29.76,英文,,0,0,0,,And by making this private, users outside of the SLList will never even have to access or know about the int node, which might be something you want.
Dialogue: 0,0:22:22.08,0:22:29.76,中文,,0,0,0,,通过将其设为私有 SLList之外的用户就永远不需要访问或了解int节点 这可能是你想要的
Dialogue: 0,0:22:29.76,0:22:33.74,英文,,0,0,0,,Or if you want it to be public, maybe, I don't know why you do this, it's very weird,
Dialogue: 0,0:22:29.76,0:22:33.74,中文,,0,0,0,,或者 如果你想让它公开 虽然我不知道你为什么这么做 这很奇怪
Dialogue: 0,0:22:33.74,0:22:38.20,英文,,0,0,0,,but maybe you want the users outside to somehow get an int node or something.
Dialogue: 0,0:22:33.74,0:22:38.20,中文,,0,0,0,,但或许你想让外部用户以某种方式得到一个int节点或类似的东西
Dialogue: 0,0:22:38.20,0:22:40.20,英文,,0,0,0,,And in that case, you'd have to make it public.
Dialogue: 0,0:22:38.20,0:22:40.20,中文,,0,0,0,,在那种情况下 你就必须将它设为公开
Dialogue: 0,0:22:40.20,0:22:45.11,英文,,0,0,0,,But if the users outside your class never have to use the int node, it's OK to make it private.
Dialogue: 0,0:22:40.20,0:22:45.11,中文,,0,0,0,,但如果你的类外部的用户从来不需要使用int节点 将其设为私有是可以的
Dialogue: 0,0:22:45.11,0:22:47.05,英文,,0,0,0,,Other tiny little trivia details.
Dialogue: 0,0:22:45.11,0:22:47.05,中文,,0,0,0,,其他的一些细枝末节
Dialogue: 0,0:22:47.05,0:22:49.95,英文,,0,0,0,,They're not things to memorize, but just because people are always curious.
Dialogue: 0,0:22:47.05,0:22:49.95,中文,,0,0,0,,它们不是要记住的东西 而只是因为人们总是好奇
Dialogue: 0,0:22:49.95,0:22:53.95,英文,,0,0,0,,If you make this nested class private, these access modifiers no longer matter.
Dialogue: 0,0:22:49.95,0:22:53.95,中文,,0,0,0,,如果你把这个嵌套类设为私有的话 这些访问修饰符就不再重要了
Dialogue: 0,0:22:53.95,0:22:56.65,英文,,0,0,0,,So Java will treat these as more or less private.
Dialogue: 0,0:22:53.95,0:22:56.65,中文,,0,0,0,,所以 Java 会把这些视为更私密的
Dialogue: 0,0:22:56.65,0:22:58.33,英文,,0,0,0,,It's not going to care about these.
Dialogue: 0,0:22:56.65,0:22:58.33,中文,,0,0,0,,它不会关心这些
Dialogue: 0,0:22:58.33,0:23:02.29,英文,,0,0,0,,And one final note, which will be kind of confusing, but intelligence
Dialogue: 0,0:22:58.33,0:23:02.29,中文,,0,0,0,,最后要说一点 可能会有点混乱 但智能
Dialogue: 0,0:23:02.29,0:23:06.77,英文,,0,0,0,,insisting that I talk about it, I guess, is that I can also make this static.
Dialogue: 0,0:23:02.29,0:23:06.77,中文,,0,0,0,,坚持让我谈论它 我想 我也可以把这个设为静态的
Dialogue: 0,0:23:06.77,0:23:10.18,英文,,0,0,0,,And it's like, wait a minute, this word static pops up in all these weird places.
Dialogue: 0,0:23:06.77,0:23:10.18,中文,,0,0,0,,就像 等等 这个 static 这个词出现在所有这些奇怪的地方
Dialogue: 0,0:23:10.18,0:23:11.94,英文,,0,0,0,,So I'm not going to talk about it too much.
Dialogue: 0,0:23:10.18,0:23:11.94,中文,,0,0,0,,我不会说太多
Dialogue: 0,0:23:11.94,0:23:14.76,英文,,0,0,0,,Josh Huck has a video on it that goes into more detail.
Dialogue: 0,0:23:11.94,0:23:14.76,中文,,0,0,0,,Josh Huck 在视频中详细讲解了这个
Dialogue: 0,0:23:14.76,0:23:22.12,英文,,0,0,0,,But basically, if you make this static, what that means is that the instance variables inside cannot access elements of the outer class.
Dialogue: 0,0:23:14.76,0:23:22.12,中文,,0,0,0,,但基本上 如果你把这个变成静态的 那就意味着里面的实例变量不能访问外部类的元素
Dialogue: 0,0:23:22.12,0:23:26.30,英文,,0,0,0,,So now, inside IntNode, I can no longer access first, because that's outside.
Dialogue: 0,0:23:22.12,0:23:26.30,中文,,0,0,0,,现在 在 IntNode 里 我不能再访问 first 了 因为它在外面
Dialogue: 0,0:23:26.30,0:23:28.36,英文,,0,0,0,,If you make it static, that's what happens.
Dialogue: 0,0:23:26.30,0:23:28.36,中文,,0,0,0,,如果你把它变成静态的 就会发生这种情况
Dialogue: 0,0:23:28.36,0:23:30.68,英文,,0,0,0,,But definitely not important details.
Dialogue: 0,0:23:28.36,0:23:30.68,中文,,0,0,0,,但细节绝对不重要
Dialogue: 0,0:23:30.68,0:23:36.47,英文,,0,0,0,,If you understood that I took the code from it node and copied it in here, then you're all set for this section.
Dialogue: 0,0:23:30.68,0:23:36.47,中文,,0,0,0,,如果你明白我是从 it 节点那里拿了代码然后复制到这里 那么你就已经准备好了这一部分
Dialogue: 0,0:23:36.47,0:23:37.77,英文,,0,0,0,,OK.
Dialogue: 0,0:23:36.47,0:23:37.77,中文,,0,0,0,,好的
Dialogue: 0,0:23:37.77,0:23:41.09,英文,,0,0,0,,Other thoughts or questions about me copying this code in?
Dialogue: 0,0:23:37.77,0:23:41.09,中文,,0,0,0,,对我复制这段代码还有其他想法或问题吗
Dialogue: 0,0:23:41.09,0:23:50.10,英文,,0,0,0,,Yeah?
Dialogue: 0,0:23:41.09,0:23:50.10,中文,,0,0,0,,是吗
Dialogue: 0,0:23:50.10,0:23:53.80,英文,,0,0,0,,So you want me to make these private, and then you want me to make the class public?
Dialogue: 0,0:23:50.10,0:23:53.80,中文,,0,0,0,,你希望我把这些变量设为私有的 然后把类设为公有的
Dialogue: 0,0:23:53.80,0:23:54.76,英文,,0,0,0,,I don't know.
Dialogue: 0,0:23:53.80,0:23:54.76,中文,,0,0,0,,我不知道
Dialogue: 0,0:23:54.76,0:23:57.22,英文,,0,0,0,,I'm turning toward Justin because I feel like he would know.
Dialogue: 0,0:23:54.76,0:23:57.22,中文,,0,0,0,,我转向Justin是因为我觉得他可能知道
Dialogue: 0,0:23:57.22,0:24:02.64,英文,,0,0,0,,What happens if I make the instance variables private inside, but I keep the class public?
Dialogue: 0,0:23:57.22,0:24:02.64,中文,,0,0,0,,如果我在内部将实例变量设为私有 但保持类为公有 会发生什么
Dialogue: 0,0:24:02.64,0:24:05.20,英文,,0,0,0,,You'd be able to make int nodes outside.
Dialogue: 0,0:24:02.64,0:24:05.20,中文,,0,0,0,,在外部 你可以创建 IntNode
Dialogue: 0,0:24:05.20,0:24:07.18,英文,,0,0,0,,You won't be able to access the item in next.
Dialogue: 0,0:24:05.20,0:24:07.18,中文,,0,0,0,,在接下来的步骤中 你将无法访问该项
Dialogue: 0,0:24:07.18,0:24:07.92,英文,,0,0,0,,OK.
Dialogue: 0,0:24:07.18,0:24:07.92,中文,,0,0,0,,好的
Dialogue: 0,0:24:07.92,0:24:08.92,英文,,0,0,0,,Well, you heard the man.
Dialogue: 0,0:24:07.92,0:24:08.92,中文,,0,0,0,,你听到了
Dialogue: 0,0:24:08.92,0:24:12.33,英文,,0,0,0,,So in this position here, you can create an int node.
Dialogue: 0,0:24:08.92,0:24:12.33,中文,,0,0,0,,在这个位置 你可以创建一个 IntNode
Dialogue: 0,0:24:12.33,0:24:17.25,英文,,0,0,0,,You just can't do anything with it once you've made it.
Dialogue: 0,0:24:12.33,0:24:17.25,中文,,0,0,0,,只是一旦创建 你就不能对它做任何操作
Dialogue: 0,0:24:17.25,0:24:17.79,英文,,0,0,0,,Exciting.
Dialogue: 0,0:24:17.25,0:24:17.79,中文,,0,0,0,,令人兴奋
Dialogue: 0,0:24:17.79,0:24:18.17,英文,,0,0,0,,OK.
Dialogue: 0,0:24:17.79,0:24:18.17,中文,,0,0,0,,好的
Dialogue: 0,0:24:18.17,0:24:20.41,英文,,0,0,0,,I don't know why you'd do that, but I guess it's possible.
Dialogue: 0,0:24:18.17,0:24:20.41,中文,,0,0,0,,我不知道你为什么要这样做 但我猜这是可能的
Dialogue: 0,0:24:20.41,0:24:28.87,英文,,0,0,0,,I'll take one more.
Dialogue: 0,0:24:20.41,0:24:28.87,中文,,0,0,0,,我再来一个
Dialogue: 0,0:24:28.87,0:24:32.23,英文,,0,0,0,,Yeah, there's a great question, which is, how would you create an int node outside of the SLList?
Dialogue: 0,0:24:28.87,0:24:32.23,中文,,0,0,0,,是的 这是一个很好的问题 就是 你怎么在 SLList 外部创建一个 IntNode呢
Dialogue: 0,0:24:32.23,0:24:35.09,英文,,0,0,0,,In this case, you wouldn't, because it's marked private.
Dialogue: 0,0:24:32.23,0:24:35.09,中文,,0,0,0,,在这种情况下 你不会 因为它被标记为私有的
Dialogue: 0,0:24:35.09,0:24:41.53,英文,,0,0,0,,I guess if you really wanted to like this, you could probably use some syntax like SLList.intNode or something.
Dialogue: 0,0:24:35.09,0:24:41.53,中文,,0,0,0,,我猜如果你真的想这样做 你可能可以使用一些类似 SLList.IntNode 这样的语法
Dialogue: 0,0:24:41.53,0:24:42.65,英文,,0,0,0,,But it'd be kind of strange.
Dialogue: 0,0:24:41.53,0:24:42.65,中文,,0,0,0,,但这会有点奇怪
Dialogue: 0,0:24:42.65,0:24:49.01,英文,,0,0,0,,I think in this case, the most natural thing would be to make it private, and outer classes would never use the int node.
Dialogue: 0,0:24:42.65,0:24:49.01,中文,,0,0,0,,在这种情况下 最自然的做法是将其设为私有 外部类永远不会使用 IntNode
Dialogue: 0,0:24:49.01,0:24:50.23,英文,,0,0,0,,Great question, though.
Dialogue: 0,0:24:49.01,0:24:50.23,中文,,0,0,0,,好问题 不过
Dialogue: 0,0:24:50.23,0:24:54.19,英文,,0,0,0,,You're really testing me with all these obscure Java syntax notes.
Dialogue: 0,0:24:50.23,0:24:54.19,中文,,0,0,0,,你确实在用所有这些晦涩的 Java 语法笔记来考验我
Dialogue: 0,0:24:54.19,0:24:55.71,英文,,0,0,0,,OK.
Dialogue: 0,0:24:54.19,0:24:55.71,中文,,0,0,0,,好的
Dialogue: 0,0:24:55.71,0:24:56.95,英文,,0,0,0,,Hopefully I did OK.
Dialogue: 0,0:24:55.71,0:24:56.95,中文,,0,0,0,,希望我做得还不错
Dialogue: 0,0:24:56.95,0:24:58.33,英文,,0,0,0,,So why nested classes?
Dialogue: 0,0:24:56.95,0:24:58.33,中文,,0,0,0,,那么为什么要嵌套类
Dialogue: 0,0:24:58.33,0:24:59.25,英文,,0,0,0,,Why are they useful?
Dialogue: 0,0:24:58.33,0:24:59.25,中文,,0,0,0,,它们有什么用
Dialogue: 0,0:24:59.25,0:25:02.15,英文,,0,0,0,,They're great because sometimes classes are not standalone.
Dialogue: 0,0:24:59.25,0:25:02.15,中文,,0,0,0,,它们很棒 因为有时候类并不是独立的
Dialogue: 0,0:25:02.15,0:25:07.16,英文,,0,0,0,,And there are cases where the int node, for example, is really just a sub-feature of the SLList.
Dialogue: 0,0:25:02.15,0:25:07.16,中文,,0,0,0,,而且有时候 比如说 IntNode真的只是 SLList 的一个子功能
Dialogue: 0,0:25:07.16,0:25:08.20,英文,,0,0,0,,So we'll take that code.
Dialogue: 0,0:25:07.16,0:25:08.20,中文,,0,0,0,,我们会拿那段代码
Dialogue: 0,0:25:08.20,0:25:10.44,英文,,0,0,0,,We'll copy it into the SLList.
Dialogue: 0,0:25:08.20,0:25:10.44,中文,,0,0,0,,我们会把它复制到 SLList 里
Dialogue: 0,0:25:10.44,0:25:12.46,英文,,0,0,0,,And it seems kind of nice.
Dialogue: 0,0:25:10.44,0:25:12.46,中文,,0,0,0,,而且感觉还挺不错的
Dialogue: 0,0:25:12.46,0:25:16.06,英文,,0,0,0,,But if you don't like it, you could also have kept them separate classes.
Dialogue: 0,0:25:12.46,0:25:16.06,中文,,0,0,0,,但如果你不喜欢 也可以把它们保持为独立的类
Dialogue: 0,0:25:16.06,0:25:17.51,英文,,0,0,0,,Would have worked just the same.
Dialogue: 0,0:25:16.06,0:25:17.51,中文,,0,0,0,,一样能正常工作
Dialogue: 0,0:25:17.51,0:25:22.13,英文,,0,0,0,,So it's more of a matter of your preference than something that you have to follow all the time.
Dialogue: 0,0:25:17.51,0:25:22.13,中文,,0,0,0,,这更多是你的偏好问题 而不是你必须一直遵循的事情
Dialogue: 0,0:25:22.13,0:25:23.42,英文,,0,0,0,,OK.
Dialogue: 0,0:25:22.13,0:25:23.42,中文,,0,0,0,,好的
Dialogue: 0,0:25:23.42,0:25:24.62,英文,,0,0,0,,Here's the note on static.
Dialogue: 0,0:25:23.42,0:25:24.62,中文,,0,0,0,,这是关于静态的注释
Dialogue: 0,0:25:24.62,0:25:25.58,英文,,0,0,0,,It's a lot of words.
Dialogue: 0,0:25:24.62,0:25:25.58,中文,,0,0,0,,真的很多字啊
Dialogue: 0,0:25:25.58,0:25:26.60,英文,,0,0,0,,I'm not going to read them.
Dialogue: 0,0:25:25.58,0:25:26.60,中文,,0,0,0,,我不打算读它们
Dialogue: 0,0:25:26.60,0:25:29.32,英文,,0,0,0,,There's readings if you like, but there it is.
Dialogue: 0,0:25:26.60,0:25:29.32,中文,,0,0,0,,如果你愿意 这里有阅读材料 但就是这样
Dialogue: 0,0:25:29.32,0:25:30.00,英文,,0,0,0,,OK.
Dialogue: 0,0:25:29.32,0:25:30.00,中文,,0,0,0,,好的
Dialogue: 0,0:25:30.00,0:25:31.26,英文,,0,0,0,,Our end list is looking pretty good.
Dialogue: 0,0:25:30.00,0:25:31.26,中文,,0,0,0,,我们的终结列表看起来相当不错
Dialogue: 0,0:25:31.26,0:25:31.90,英文,,0,0,0,,So it's growing.
Dialogue: 0,0:25:31.26,0:25:31.90,中文,,0,0,0,,它在增长
Dialogue: 0,0:25:31.90,0:25:33.44,英文,,0,0,0,,It's got all these nice methods.
Dialogue: 0,0:25:31.90,0:25:33.44,中文,,0,0,0,,它有所有这些好用的方法
Dialogue: 0,0:25:33.44,0:25:40.45,英文,,0,0,0,,I'm going to add a couple more methods so my end list grows more power and can go into the world and do whatever SLLists like to do.
Dialogue: 0,0:25:33.44,0:25:40.45,中文,,0,0,0,,我要添加几种方法 这样我的终结列表就能更强大 可以走向世界 做SLLists喜欢做的事情
Dialogue: 0,0:25:40.45,0:25:42.81,英文,,0,0,0,,So I'm going to add two more methods.
Dialogue: 0,0:25:40.45,0:25:42.81,中文,,0,0,0,,我要添加两种方法
Dialogue: 0,0:25:42.81,0:25:46.19,英文,,0,0,0,,I'm going to add addLast, and I'm going to add size.
Dialogue: 0,0:25:42.81,0:25:46.19,中文,,0,0,0,,我要添加addLast和size
Dialogue: 0,0:25:46.19,0:25:50.83,英文,,0,0,0,,And in doing so, we'll get a better sense of some other things that I want to show you.
Dialogue: 0,0:25:46.19,0:25:50.83,中文,,0,0,0,,通过这样做 我们将更好地了解我想向你展示的一些其他内容
Dialogue: 0,0:25:50.83,0:25:52.03,英文,,0,0,0,,So let's do that.
Dialogue: 0,0:25:50.83,0:25:52.03,中文,,0,0,0,,那么让我们这样做
Dialogue: 0,0:25:52.03,0:25:58.72,英文,,0,0,0,,So I'm going to write a method for addLast, takes void, or returns void, because addLast doesn't return anything.
Dialogue: 0,0:25:52.03,0:25:58.72,中文,,0,0,0,,我要写一个addLast的方法 返回void 因为addLast不返回任何东西
Dialogue: 0,0:25:58.72,0:25:59.90,英文,,0,0,0,,And what is it going to do?
Dialogue: 0,0:25:58.72,0:25:59.90,中文,,0,0,0,,那它要做什么呢
Dialogue: 0,0:25:59.90,0:26:03.84,英文,,0,0,0,,It's going to add x to the end of the list.
Dialogue: 0,0:25:59.90,0:26:03.84,中文,,0,0,0,,它将把x添加到列表的末尾
Dialogue: 0,0:26:03.84,0:26:05.32,英文,,0,0,0,,OK, how do I do that?
Dialogue: 0,0:26:03.84,0:26:05.32,中文,,0,0,0,,我该怎么做呢
Dialogue: 0,0:26:05.32,0:26:06.70,英文,,0,0,0,,You could do it recursively.
Dialogue: 0,0:26:05.32,0:26:06.70,中文,,0,0,0,,你可以递归地做
Dialogue: 0,0:26:06.70,0:26:09.92,英文,,0,0,0,,I'm going to do it iteratively, because that's how I feel today.
Dialogue: 0,0:26:06.70,0:26:09.92,中文,,0,0,0,,我要迭代地做 因为今天我就是这么感觉
Dialogue: 0,0:26:09.92,0:26:11.60,英文,,0,0,0,,I'm an iterative kind of guy today.
Dialogue: 0,0:26:09.92,0:26:11.60,中文,,0,0,0,,我今天是一个迭代的人
Dialogue: 0,0:26:11.60,0:26:15.49,英文,,0,0,0,,So I'm going to say int node p. So I'll start with a pointer.
Dialogue: 0,0:26:11.60,0:26:15.49,中文,,0,0,0,,我要说 IntNode p 我会从一个指针开始
Dialogue: 0,0:26:15.49,0:26:16.81,英文,,0,0,0,,It's going to start at first.
Dialogue: 0,0:26:15.49,0:26:16.81,中文,,0,0,0,,它将从第一个开始
Dialogue: 0,0:26:16.81,0:26:19.37,英文,,0,0,0,,And then I will scan p until it reaches the end of the list.
Dialogue: 0,0:26:16.81,0:26:19.37,中文,,0,0,0,,然后我将扫描 p 直到它达到列表的末尾
Dialogue: 0,0:26:19.37,0:26:25.47,英文,,0,0,0,,So just like last time, I'll take my little finger and scan it until it reaches the end of the list.
Dialogue: 0,0:26:19.37,0:26:25.47,中文,,0,0,0,,就像上次一样 我会用我的小指头扫描它 直到它达到列表的末尾
Dialogue: 0,0:26:25.47,0:26:27.25,英文,,0,0,0,,OK, great.
Dialogue: 0,0:26:25.47,0:26:27.25,中文,,0,0,0,,好的 很好
Dialogue: 0,0:26:27.25,0:26:34.79,英文,,0,0,0,,So I'll say while p.next is not equal to null.
Dialogue: 0,0:26:27.25,0:26:34.79,中文,,0,0,0,,我会说 当 p.next 不等于 null 时
Dialogue: 0,0:26:34.79,0:26:35.79,英文,,0,0,0,,OK, it looks good so far.
Dialogue: 0,0:26:34.79,0:26:35.79,中文,,0,0,0,,目前看起来不错
Dialogue: 0,0:26:35.79,0:26:37.89,英文,,0,0,0,,I will say p equals p dot next.
Dialogue: 0,0:26:35.79,0:26:37.89,中文,,0,0,0,,我会说 p 等于 p 点 next
Dialogue: 0,0:26:37.89,0:26:42.31,英文,,0,0,0,,So I'll take this pointer p. I'll scan it all the way until it's pointing at the last thing.
Dialogue: 0,0:26:37.89,0:26:42.31,中文,,0,0,0,,我会拿这个指针 p 我会扫描它 直到它指向最后一样东西为止
Dialogue: 0,0:26:42.31,0:26:47.82,英文,,0,0,0,,And once I'm pointing at the last thing, I can say p equals new int node x comma null.
Dialogue: 0,0:26:42.31,0:26:47.82,中文,,0,0,0,,一旦我指向最后一样东西 我可以说 p 等于新的 IntNode x 逗号 null
Dialogue: 0,0:26:47.82,0:26:50.70,英文,,0,0,0,,And that's going to add something to the end of the list.
Dialogue: 0,0:26:47.82,0:26:50.70,中文,,0,0,0,,这样就会在列表末尾添加一些东西
Dialogue: 0,0:26:50.70,0:26:54.44,英文,,0,0,0,,So kind of similar to the add last that we wrote from last time.
Dialogue: 0,0:26:50.70,0:26:54.44,中文,,0,0,0,,有点类似于我们上次写的 add last
Dialogue: 0,0:26:54.44,0:26:55.74,英文,,0,0,0,,Looks good.
Dialogue: 0,0:26:54.44,0:26:55.74,中文,,0,0,0,,看起来不错
Dialogue: 0,0:26:55.74,0:26:57.28,英文,,0,0,0,,I can also add a method called size.
Dialogue: 0,0:26:55.74,0:26:57.28,中文,,0,0,0,,我还可以添加一个叫做 size 的方法
Dialogue: 0,0:26:57.28,0:26:58.63,英文,,0,0,0,,So I'll go ahead and do that now.
Dialogue: 0,0:26:57.28,0:26:58.63,中文,,0,0,0,,那我现在就去做这个
Dialogue: 0,0:26:58.63,0:27:00.75,英文,,0,0,0,,And this will return the size of the list.
Dialogue: 0,0:26:58.63,0:27:00.75,中文,,0,0,0,,这将返回列表的大小
Dialogue: 0,0:27:00.75,0:27:04.77,英文,,0,0,0,,So returns the size of the list.
Dialogue: 0,0:27:00.75,0:27:04.77,中文,,0,0,0,,返回列表的大小
Dialogue: 0,0:27:04.77,0:27:04.99,英文,,0,0,0,,OK.
Dialogue: 0,0:27:04.77,0:27:04.99,中文,,0,0,0,,好的
Dialogue: 0,0:27:04.99,0:27:06.87,英文,,0,0,0,,And this one, I'm going to try to do recursively.
Dialogue: 0,0:27:04.99,0:27:06.87,中文,,0,0,0,,这个 我打算尝试以递归的方式来做
Dialogue: 0,0:27:06.87,0:27:11.97,英文,,0,0,0,,But I want you to think about it for just a moment and try and think, I remember we did this recursively last time.
Dialogue: 0,0:27:06.87,0:27:11.97,中文,,0,0,0,,但是我希望你花点时间思考一下 试着回想一下 我记得上次我们是用递归做的
Dialogue: 0,0:27:11.97,0:27:16.79,英文,,0,0,0,,So how would I do it recursively this time when it's in the context of an SLList?
Dialogue: 0,0:27:11.97,0:27:16.79,中文,,0,0,0,,这次在 SLList 的上下文中 如果要以递归的方式完成 我该怎么做呢
Dialogue: 0,0:27:16.79,0:27:18.23,英文,,0,0,0,,Like, what is the base case?
Dialogue: 0,0:27:16.79,0:27:18.23,中文,,0,0,0,,就是说 基本情况是什么
Dialogue: 0,0:27:18.23,0:27:19.45,英文,,0,0,0,,What is the recursive case?
Dialogue: 0,0:27:18.23,0:27:19.45,中文,,0,0,0,,递归情况又是什么
Dialogue: 0,0:27:19.45,0:27:20.79,英文,,0,0,0,,What would this look like?
Dialogue: 0,0:27:19.45,0:27:20.79,中文,,0,0,0,,这会是什么样子呢
Dialogue: 0,0:27:20.79,0:27:25.29,英文,,0,0,0,,So I remember from last time, well, the base case would say something like, well,
Dialogue: 0,0:27:20.79,0:27:25.29,中文,,0,0,0,,我记得上次 基本情况会是这样的
Dialogue: 0,0:27:25.29,0:27:27.69,英文,,0,0,0,,If rest is null, then I'll return 1.
Dialogue: 0,0:27:25.29,0:27:27.69,中文,,0,0,0,,如果 rest 为 null 那么我会返回 1
Dialogue: 0,0:27:27.69,0:27:29.77,英文,,0,0,0,,Otherwise, I'll return 1 plus.
Dialogue: 0,0:27:27.69,0:27:29.77,中文,,0,0,0,,否则 我会返回 1 加上
Dialogue: 0,0:27:29.77,0:27:31.32,英文,,0,0,0,,What would I return for the recursive case?
Dialogue: 0,0:27:29.77,0:27:31.32,中文,,0,0,0,,递归情况下我会返回什么
Dialogue: 0,0:27:31.32,0:27:40.32,英文,,0,0,0,,It'd be like 1 plus rest.size, but there is no rest here, or I guess next.size.
Dialogue: 0,0:27:31.32,0:27:40.32,中文,,0,0,0,,就像是1加上rest.size 但这里没有rest 或者我猜是next.size
Dialogue: 0,0:27:40.32,0:27:42.04,英文,,0,0,0,,It doesn't seem right.
Dialogue: 0,0:27:40.32,0:27:42.04,中文,,0,0,0,,这看起来不对劲
Dialogue: 0,0:27:42.04,0:27:43.64,英文,,0,0,0,,And so you get a little bit stuck.
Dialogue: 0,0:27:42.04,0:27:43.64,中文,,0,0,0,,你会有点卡住
Dialogue: 0,0:27:43.64,0:27:51.20,英文,,0,0,0,,And so the problem that you're running into as you try to figure out, hmm, how do I write size recursively?
Dialogue: 0,0:27:43.64,0:27:51.20,中文,,0,0,0,,你遇到的问题是 当你试图弄清楚 我要怎么递归地写出size呢
Dialogue: 0,0:27:51.20,0:27:55.43,英文,,0,0,0,,I want to ask Next for its size, but Next doesn't have a size.
Dialogue: 0,0:27:51.20,0:27:55.43,中文,,0,0,0,,我想要向Next询问它的size 但Next没有size
Dialogue: 0,0:27:55.43,0:27:59.07,英文,,0,0,0,,And so the problem that you're running into is that there are two classes here.
Dialogue: 0,0:27:55.43,0:27:59.07,中文,,0,0,0,,你遇到的问题是这里有两个类
Dialogue: 0,0:27:59.07,0:28:02.13,英文,,0,0,0,,There's the IntNode class, which is recursive.
Dialogue: 0,0:27:59.07,0:28:02.13,中文,,0,0,0,,IntNode类是递归的
Dialogue: 0,0:28:02.13,0:28:04.99,英文,,0,0,0,,And then there's the S-list class, which is not recursive.
Dialogue: 0,0:28:02.13,0:28:04.99,中文,,0,0,0,,然后是S-list类 不是递归的
Dialogue: 0,0:28:04.99,0:28:11.96,英文,,0,0,0,,So all the recursive data structure things that are happening inside IntNode and the S-list itself is not recursive.
Dialogue: 0,0:28:04.99,0:28:11.96,中文,,0,0,0,,所有在IntNode和S-list本身中发生的递归数据结构的事情都不是递归的
Dialogue: 0,0:28:11.96,0:28:13.86,英文,,0,0,0,,So we run into a little problem here.
Dialogue: 0,0:28:11.96,0:28:13.86,中文,,0,0,0,,我们在这里遇到了一个小问题
Dialogue: 0,0:28:13.86,0:28:19.83,英文,,0,0,0,,And the way that we're going to solve it, and it's a pattern that you'll see a lot as you code these recursive data structures, is
Dialogue: 0,0:28:13.86,0:28:19.83,中文,,0,0,0,,我们解决问题的方式 这是一个模式 当你编写这些递归数据结构时 你会经常看到的 就是
Dialogue: 0,0:28:19.83,0:28:22.49,英文,,0,0,0,,We're actually going to make a second size method.
Dialogue: 0,0:28:19.83,0:28:22.49,中文,,0,0,0,,我们实际上会再做一个size方法
Dialogue: 0,0:28:22.49,0:28:26.05,英文,,0,0,0,,This one's going to be private because outside users don't have to know about it.
Dialogue: 0,0:28:22.49,0:28:26.05,中文,,0,0,0,,这个方法将是私有的 因为外部用户不需要知道它
Dialogue: 0,0:28:26.05,0:28:30.73,英文,,0,0,0,,And this size method, it's going to speak the secret recursive language of the gods.
Dialogue: 0,0:28:26.05,0:28:30.73,中文,,0,0,0,,而这个 size 方法 它会说出神的秘密递归语言
Dialogue: 0,0:28:30.73,0:28:34.58,英文,,0,0,0,,So this outer method for the users, it does not understand recursion.
Dialogue: 0,0:28:30.73,0:28:34.58,中文,,0,0,0,,这个外部方法对于用户来说 它不理解递归
Dialogue: 0,0:28:34.58,0:28:39.86,英文,,0,0,0,,It just asks for the size of the current SLLists, and SLLists are not recursive data structures.
Dialogue: 0,0:28:34.58,0:28:39.86,中文,,0,0,0,,它只是询问当前 SLLists 的大小 而 SLLists 不是递归数据结构
Dialogue: 0,0:28:39.86,0:28:41.94,英文,,0,0,0,,So this one, it does not speak recursion.
Dialogue: 0,0:28:39.86,0:28:41.94,中文,,0,0,0,,这个 它不懂递归
Dialogue: 0,0:28:41.94,0:28:50.69,英文,,0,0,0,,But this private helper method, I'm going to make it speak recursion by giving it an argument p. And this time, this is going to look more similar to what we wrote last time.
Dialogue: 0,0:28:41.94,0:28:50.69,中文,,0,0,0,,但这个私有助手方法 我将通过给它一个参数 p 来使它理解递归 而这一次 这将看起来更类似于我们上次写的东西
Dialogue: 0,0:28:50.69,0:28:57.18,英文,,0,0,0,,So I'll say, returns the size of the list starting at the int node p.
Dialogue: 0,0:28:50.69,0:28:57.18,中文,,0,0,0,,我会说 在 IntNode p 处开始返回列表的大小
Dialogue: 0,0:28:57.18,0:28:58.02,英文,,0,0,0,,Great.
Dialogue: 0,0:28:57.18,0:28:58.02,中文,,0,0,0,,太好了
Dialogue: 0,0:28:58.02,0:29:05.72,英文,,0,0,0,,Now this method, this one speaks the secret language of the gods, because this method, it takes in an argument int node, and that's a recursive data structure.
Dialogue: 0,0:28:58.02,0:29:05.72,中文,,0,0,0,,现在这个方法 这个讲述着神的秘密语言 因为这个方法 它接受一个参数 int node 那是一个递归数据结构
Dialogue: 0,0:29:05.72,0:29:08.06,英文,,0,0,0,,We can now perform recursion on this.
Dialogue: 0,0:29:05.72,0:29:08.06,中文,,0,0,0,,我们现在可以对此进行递归
Dialogue: 0,0:29:08.06,0:29:09.58,英文,,0,0,0,,And it's going to look kind of similar to last time.
Dialogue: 0,0:29:08.06,0:29:09.58,中文,,0,0,0,,而且它看起来有点类似上次
Dialogue: 0,0:29:09.58,0:29:13.59,英文,,0,0,0,,So I'll say, well, this int node p, how big is it?
Dialogue: 0,0:29:09.58,0:29:13.59,中文,,0,0,0,,我会说 这个 int node p 它有多大
Dialogue: 0,0:29:13.59,0:29:15.07,英文,,0,0,0,,It's next is null.
Dialogue: 0,0:29:13.59,0:29:15.07,中文,,0,0,0,,它的下一个是 null
Dialogue: 0,0:29:15.07,0:29:15.95,英文,,0,0,0,,It's a pretty small list.
Dialogue: 0,0:29:15.07,0:29:15.95,中文,,0,0,0,,这是一个相当小的列表
Dialogue: 0,0:29:15.95,0:29:17.43,英文,,0,0,0,,It's got just one item.
Dialogue: 0,0:29:15.95,0:29:17.43,中文,,0,0,0,,它只有一个项目
Dialogue: 0,0:29:17.43,0:29:20.37,英文,,0,0,0,,Otherwise, I want to return my item.
Dialogue: 0,0:29:17.43,0:29:20.37,中文,,0,0,0,,不过 我想要退还我的物品
Dialogue: 0,0:29:20.37,0:29:24.82,英文,,0,0,0,,So P's got an item inside, plus the size of everybody else.
Dialogue: 0,0:29:20.37,0:29:24.82,中文,,0,0,0,,所以 P 的里面有一个物品 再加上其他所有人的大小
Dialogue: 0,0:29:24.82,0:29:26.32,英文,,0,0,0,,How do I get the size of everyone else?
Dialogue: 0,0:29:24.82,0:29:26.32,中文,,0,0,0,,我怎么得到其他每个人的大小呢
Dialogue: 0,0:29:26.32,0:29:29.24,英文,,0,0,0,,I could ask for the size of p.next.
Dialogue: 0,0:29:26.32,0:29:29.24,中文,,0,0,0,,我可以询问 p.next 的大小
Dialogue: 0,0:29:29.24,0:29:31.49,英文,,0,0,0,,So it's kind of similar to what we did last time.
Dialogue: 0,0:29:29.24,0:29:31.49,中文,,0,0,0,,这有点类似于上次我们所做的
Dialogue: 0,0:29:31.49,0:29:38.01,英文,,0,0,0,,And the reason why this works is because I wrote a different version of size that takes in this extra argument.
Dialogue: 0,0:29:31.49,0:29:38.01,中文,,0,0,0,,而这能够工作的原因是因为我写了一个接受这个额外参数的不同版本的 size 函数
Dialogue: 0,0:29:38.01,0:29:40.83,英文,,0,0,0,,It speaks the secret recursive language of the gods.
Dialogue: 0,0:29:38.01,0:29:40.83,中文,,0,0,0,,它说着神秘的递归之神的语言
Dialogue: 0,0:29:40.83,0:29:41.93,英文,,0,0,0,,And I'm almost done.
Dialogue: 0,0:29:40.83,0:29:41.93,中文,,0,0,0,,我快做完了
Dialogue: 0,0:29:41.93,0:29:44.69,英文,,0,0,0,,I still have to write size for the users.
Dialogue: 0,0:29:41.93,0:29:44.69,中文,,0,0,0,,我还得为用户写size
Dialogue: 0,0:29:44.69,0:29:50.35,英文,,0,0,0,,So the user, when they call size, they should not have to specify an int node, because they don't know what int nodes are.
Dialogue: 0,0:29:44.69,0:29:50.35,中文,,0,0,0,,当用户调用size时 他们不应该指定一个int节点 因为他们不知道什么是int节点
Dialogue: 0,0:29:50.35,0:29:53.26,英文,,0,0,0,,We hid the implementation details from them.
Dialogue: 0,0:29:50.35,0:29:53.26,中文,,0,0,0,,我们把实现细节隐藏起来了
Dialogue: 0,0:29:53.26,0:29:56.74,英文,,0,0,0,,So how is a user going to implement size?
Dialogue: 0,0:29:53.26,0:29:56.74,中文,,0,0,0,,那么用户该如何实现size呢
Dialogue: 0,0:29:56.74,0:30:00.08,英文,,0,0,0,,I can now call my secret recursive helper method.
Dialogue: 0,0:29:56.74,0:30:00.08,中文,,0,0,0,,我现在可以调用我的秘密递归辅助方法了
Dialogue: 0,0:30:00.08,0:30:01.06,英文,,0,0,0,,And what should I call it with?
Dialogue: 0,0:30:00.08,0:30:01.06,中文,,0,0,0,,我应该用什么来调用它
Dialogue: 0,0:30:01.06,0:30:02.68,英文,,0,0,0,,I want the size of the whole list.
Dialogue: 0,0:30:01.06,0:30:02.68,中文,,0,0,0,,我想要整个列表的大小
Dialogue: 0,0:30:02.68,0:30:04.70,英文,,0,0,0,,So how do I get the size of the whole list?
Dialogue: 0,0:30:02.68,0:30:04.70,中文,,0,0,0,,那么我怎么获取整个列表的大小呢
Dialogue: 0,0:30:04.70,0:30:07.22,英文,,0,0,0,,I can ask for the size of first.
Dialogue: 0,0:30:04.70,0:30:07.22,中文,,0,0,0,,我可以询问第一个的大小
Dialogue: 0,0:30:07.22,0:30:11.96,英文,,0,0,0,,And that should call the recursive method, give me the size of the whole list.
Dialogue: 0,0:30:07.22,0:30:11.96,中文,,0,0,0,,然后应该调用递归方法 给我整个列表的大小
Dialogue: 0,0:30:11.96,0:30:13.59,英文,,0,0,0,,OK.
Dialogue: 0,0:30:11.96,0:30:13.59,中文,,0,0,0,,好的
Dialogue: 0,0:30:13.59,0:30:15.25,英文,,0,0,0,,Let's go reflect on what this one looks like.
Dialogue: 0,0:30:13.59,0:30:15.25,中文,,0,0,0,,让我们反思一下这个是什么样子
Dialogue: 0,0:30:15.25,0:30:17.21,英文,,0,0,0,,So we added a bunch of stuff.
Dialogue: 0,0:30:15.25,0:30:17.21,中文,,0,0,0,,我们添加了一堆东西
Dialogue: 0,0:30:17.21,0:30:19.29,英文,,0,0,0,,We added this recursive helper method.
Dialogue: 0,0:30:17.21,0:30:19.29,中文,,0,0,0,,我们添加了这个递归辅助方法
Dialogue: 0,0:30:19.29,0:30:24.83,英文,,0,0,0,,And again, the idea here was that this public method for the users, users don't know what int nodes are.
Dialogue: 0,0:30:19.29,0:30:24.83,中文,,0,0,0,,再次强调 这里的想法是为用户提供的公共方法 用户不知道什么是int nodes
Dialogue: 0,0:30:24.83,0:30:26.85,英文,,0,0,0,,This method doesn't take in an int node.
Dialogue: 0,0:30:24.83,0:30:26.85,中文,,0,0,0,,这个方法不接受int节点作为参数
Dialogue: 0,0:30:26.85,0:30:28.43,英文,,0,0,0,,This method is not recursive.
Dialogue: 0,0:30:26.85,0:30:28.43,中文,,0,0,0,,这个方法不是递归的
Dialogue: 0,0:30:28.43,0:30:30.03,英文,,0,0,0,,It doesn't know what int nodes are.
Dialogue: 0,0:30:28.43,0:30:30.03,中文,,0,0,0,,它不知道什么是int节点
Dialogue: 0,0:30:30.03,0:30:32.54,英文,,0,0,0,,It doesn't speak the secret language of the gods.
Dialogue: 0,0:30:30.03,0:30:32.54,中文,,0,0,0,,它不会说神秘的神语
Dialogue: 0,0:30:32.54,0:30:37.24,英文,,0,0,0,,However, I can write a private helper method that takes in an extra argument.
Dialogue: 0,0:30:32.54,0:30:37.24,中文,,0,0,0,,不过 我可以写一个私有的辅助方法 它接受额外的参数
Dialogue: 0,0:30:37.24,0:30:41.04,英文,,0,0,0,,And this private method, it does speak the secret language of the gods.
Dialogue: 0,0:30:37.24,0:30:41.04,中文,,0,0,0,,这个私有方法 它确实会说神的秘密语言
Dialogue: 0,0:30:41.04,0:30:44.64,英文,,0,0,0,,It understands int nodes and knows how to take them in.
Dialogue: 0,0:30:41.04,0:30:44.64,中文,,0,0,0,,它了解 IntNode 并知道如何接收它们
Dialogue: 0,0:30:44.64,0:30:47.90,英文,,0,0,0,,And now I can write my recursive method just like I did last time.
Dialogue: 0,0:30:44.64,0:30:47.90,中文,,0,0,0,,现在我可以像上次一样编写我的递归方法
Dialogue: 0,0:30:47.90,0:30:54.41,英文,,0,0,0,,And then my outer method, the one that I give to the users, will secretly call my private recursive helper method.
Dialogue: 0,0:30:47.90,0:30:54.41,中文,,0,0,0,,然后我的外部方法 那个我提供给用户的方法 会暗中调用我的私有递归辅助方法
Dialogue: 0,0:30:54.41,0:30:55.17,英文,,0,0,0,,OK.
Dialogue: 0,0:30:54.41,0:30:55.17,中文,,0,0,0,,好的
Dialogue: 0,0:30:55.17,0:30:56.09,英文,,0,0,0,,Want to stare at it a bit?
Dialogue: 0,0:30:55.17,0:30:56.09,中文,,0,0,0,,想要盯着它看一会儿吗
Dialogue: 0,0:30:56.09,0:30:56.59,英文,,0,0,0,,Questions?
Dialogue: 0,0:30:56.09,0:30:56.59,中文,,0,0,0,,有问题吗
Dialogue: 0,0:30:56.59,0:31:08.73,英文,,0,0,0,,Yeah.
Dialogue: 0,0:30:56.59,0:31:08.73,中文,,0,0,0,,是的
Dialogue: 0,0:31:08.73,0:31:09.57,英文,,0,0,0,,Yeah, that's a great question.
Dialogue: 0,0:31:08.73,0:31:09.57,中文,,0,0,0,,是的 这是一个很好的问题
Dialogue: 0,0:31:09.57,0:31:10.87,英文,,0,0,0,,It is something we can do.
Dialogue: 0,0:31:09.57,0:31:10.87,中文,,0,0,0,,这是我们可以做的事情
Dialogue: 0,0:31:10.87,0:31:13.46,英文,,0,0,0,,I probably won't do it, because I'll run out of time.
Dialogue: 0,0:31:10.87,0:31:13.46,中文,,0,0,0,,我可能不会这样做 因为时间不够了
Dialogue: 0,0:31:13.46,0:31:16.76,英文,,0,0,0,,But someone suggested you could also put size in here, and I think it would also work.
Dialogue: 0,0:31:13.46,0:31:16.76,中文,,0,0,0,,但有人建议你也可以在这里加入尺寸 我觉得那也可以
Dialogue: 0,0:31:16.76,0:31:18.02,英文,,0,0,0,,So that's a good point.
Dialogue: 0,0:31:16.76,0:31:18.02,中文,,0,0,0,,这是一个很好的观点
Dialogue: 0,0:31:18.02,0:31:21.78,英文,,0,0,0,,But I chose to do it outside, just to show you this programming pattern.
Dialogue: 0,0:31:18.02,0:31:21.78,中文,,0,0,0,,但我选择在外面做 只是为了向你展示这种编程模式
Dialogue: 0,0:31:21.78,0:31:22.22,英文,,0,0,0,,Another question?
Dialogue: 0,0:31:21.78,0:31:22.22,中文,,0,0,0,,又一个问题吗
Dialogue: 0,0:31:22.22,0:31:31.71,英文,,0,0,0,,So inside the SLList, inside the method called addLambda, do you use p.next?
Dialogue: 0,0:31:22.22,0:31:31.71,中文,,0,0,0,,在 SLList 里面 在叫做 addLambda 的方法里 你用到了 p.next 吗
Dialogue: 0,0:31:31.71,0:31:34.46,英文,,0,0,0,,Here, p.next.
Dialogue: 0,0:31:31.71,0:31:34.46,中文,,0,0,0,,这里 p.next
Dialogue: 0,0:31:34.46,0:31:36.55,英文,,0,0,0,,Hm, p equals new int node.
Dialogue: 0,0:31:34.46,0:31:36.55,中文,,0,0,0,,p 等于新的 IntNode
Dialogue: 0,0:31:36.55,0:31:37.39,英文,,0,0,0,,Ah, did I mess it up?
Dialogue: 0,0:31:36.55,0:31:37.39,中文,,0,0,0,,啊 我弄错了吗
Dialogue: 0,0:31:37.39,0:31:38.13,英文,,0,0,0,,Let's see.
Dialogue: 0,0:31:37.39,0:31:38.13,中文,,0,0,0,,我们来看看
Dialogue: 0,0:31:38.13,0:31:40.05,英文,,0,0,0,,p equals new int node.
Dialogue: 0,0:31:38.13,0:31:40.05,中文,,0,0,0,,p 等于新的 IntNode
Dialogue: 0,0:31:40.05,0:31:42.79,英文,,0,0,0,,I think I did it right, unless I screwed something up.
Dialogue: 0,0:31:40.05,0:31:42.79,中文,,0,0,0,,我觉得我做对了 除非我搞砸了什么
Dialogue: 0,0:31:42.79,0:31:46.77,英文,,0,0,0,,What's the proposed fix?
Dialogue: 0,0:31:42.79,0:31:46.77,中文,,0,0,0,,建议的修复方案是什么
Dialogue: 0,0:31:46.77,0:31:47.21,英文,,0,0,0,,Oh, you're right.
Dialogue: 0,0:31:46.77,0:31:47.21,中文,,0,0,0,,哦 你是对的
Dialogue: 0,0:31:47.21,0:31:47.99,英文,,0,0,0,,It's p.next.
Dialogue: 0,0:31:47.21,0:31:47.99,中文,,0,0,0,,是 p.next
Dialogue: 0,0:31:47.99,0:31:49.50,英文,,0,0,0,,Yeah, great call.
Dialogue: 0,0:31:47.99,0:31:49.50,中文,,0,0,0,,是的 好主意
Dialogue: 0,0:31:49.50,0:31:51.64,英文,,0,0,0,,Otherwise, I would have just replaced the last item.
Dialogue: 0,0:31:49.50,0:31:51.64,中文,,0,0,0,,否则 我本来只是替换了最后一项
Dialogue: 0,0:31:51.64,0:31:53.70,英文,,0,0,0,,OK, I guess I did mess one thing up today.
Dialogue: 0,0:31:51.64,0:31:53.70,中文,,0,0,0,,好吧 我想我今天确实搞砸了一件事
Dialogue: 0,0:31:53.70,0:31:54.92,英文,,0,0,0,,Thank you for catching it.
Dialogue: 0,0:31:53.70,0:31:54.92,中文,,0,0,0,,谢谢你发现了它
Dialogue: 0,0:31:54.92,0:31:56.56,英文,,0,0,0,,You can come collect your prize later.
Dialogue: 0,0:31:54.92,0:31:56.56,中文,,0,0,0,,稍后你可以来领奖
Dialogue: 0,0:31:56.56,0:31:57.48,英文,,0,0,0,,There's no prize.
Dialogue: 0,0:31:56.56,0:31:57.48,中文,,0,0,0,,没有奖品
Dialogue: 0,0:31:57.48,0:32:00.23,英文,,0,0,0,,OK.
Dialogue: 0,0:31:57.48,0:32:00.23,中文,,0,0,0,,好的
Dialogue: 0,0:32:00.23,0:32:03.89,英文,,0,0,0,,OK, other questions, corrections?
Dialogue: 0,0:32:00.23,0:32:03.89,中文,,0,0,0,,其他问题 修正
Dialogue: 0,0:32:03.89,0:32:05.55,英文,,0,0,0,,Now that there's no prize, no one's going to correct me.
Dialogue: 0,0:32:03.89,0:32:05.55,中文,,0,0,0,,既然没有奖品了 就没人会纠正我了
Dialogue: 0,0:32:05.55,0:32:08.06,英文,,0,0,0,,OK, so we wrote at last.
Dialogue: 0,0:32:05.55,0:32:08.06,中文,,0,0,0,,我们终于写完了
Dialogue: 0,0:32:08.06,0:32:09.06,英文,,0,0,0,,We wrote size.
Dialogue: 0,0:32:08.06,0:32:09.06,中文,,0,0,0,,我们写了大小
Dialogue: 0,0:32:09.06,0:32:10.22,英文,,0,0,0,,They work perfectly.
Dialogue: 0,0:32:09.06,0:32:10.22,中文,,0,0,0,,它们运行得很完美
Dialogue: 0,0:32:10.22,0:32:11.96,英文,,0,0,0,,But there's a little bit of a problem.
Dialogue: 0,0:32:10.22,0:32:11.96,中文,,0,0,0,,但是有点小问题
Dialogue: 0,0:32:11.96,0:32:15.36,英文,,0,0,0,,And the problem is, well, both of these methods are kind of slow.
Dialogue: 0,0:32:11.96,0:32:15.36,中文,,0,0,0,,问题是 这两种方法都有点慢
Dialogue: 0,0:32:15.36,0:32:17.20,英文,,0,0,0,,And today, we'll focus on size being slow.
Dialogue: 0,0:32:15.36,0:32:17.20,中文,,0,0,0,,今天我们将重点关注大小的速度
Dialogue: 0,0:32:17.20,0:32:20.40,英文,,0,0,0,,So here's the method that we wrote from earlier.
Dialogue: 0,0:32:17.20,0:32:20.40,中文,,0,0,0,,这是我们之前写的方法
Dialogue: 0,0:32:20.40,0:32:23.90,英文,,0,0,0,,And we haven't really talked about how to measure how long a function takes yet.
Dialogue: 0,0:32:20.40,0:32:23.90,中文,,0,0,0,,但我们还没有真正讨论过如何测量函数执行时间
Dialogue: 0,0:32:23.90,0:32:25.06,英文,,0,0,0,,So just use your intuition.
Dialogue: 0,0:32:23.90,0:32:25.06,中文,,0,0,0,,所以只需凭直觉
Dialogue: 0,0:32:25.06,0:32:26.18,英文,,0,0,0,,Try and guess.
Dialogue: 0,0:32:25.06,0:32:26.18,中文,,0,0,0,,试着猜猜看
Dialogue: 0,0:32:26.18,0:32:34.55,英文,,0,0,0,,And if I told you that if size takes two seconds on a list of size 1,000, how long is size going to take if my list is size 1,000,000?
Dialogue: 0,0:32:26.18,0:32:34.55,中文,,0,0,0,,如果我告诉你 如果在大小为1,000的列表上花费两秒 那么如果我的列表大小为1,000,000 size会花费多长时间
Dialogue: 0,0:32:34.55,0:32:37.63,英文,,0,0,0,,So as a hint, you try thinking about it.
Dialogue: 0,0:32:34.55,0:32:37.63,中文,,0,0,0,,作为提示 你可以试着思考一下
Dialogue: 0,0:32:37.63,0:32:39.16,英文,,0,0,0,,What's your answer?
Dialogue: 0,0:32:37.63,0:32:39.16,中文,,0,0,0,,你的答案是什么
Dialogue: 0,0:32:39.16,0:32:44.62,英文,,0,0,0,,As a hint, the list of size 1,000,000 is 1,000 times as large.
Dialogue: 0,0:32:39.16,0:32:44.62,中文,,0,0,0,,作为提示 大小为1,000,000的列表是1,000倍大
Dialogue: 0,0:32:44.62,0:32:47.13,英文,,0,0,0,,So how long do you think it takes?
Dialogue: 0,0:32:44.62,0:32:47.13,中文,,0,0,0,,那么你认为需要多长时间
Dialogue: 0,0:32:47.13,0:32:48.19,英文,,0,0,0,,Who thinks A?
Dialogue: 0,0:32:47.13,0:32:48.19,中文,,0,0,0,,谁认为A
Dialogue: 0,0:32:48.19,0:32:49.87,英文,,0,0,0,,We'll do participation.
Dialogue: 0,0:32:48.19,0:32:49.87,中文,,0,0,0,,我们会参与
Dialogue: 0,0:32:49.87,0:32:50.79,英文,,0,0,0,,Who thinks B?
Dialogue: 0,0:32:49.87,0:32:50.79,中文,,0,0,0,,谁认为B
Dialogue: 0,0:32:50.79,0:32:51.87,英文,,0,0,0,,Two seconds.
Dialogue: 0,0:32:50.79,0:32:51.87,中文,,0,0,0,,两秒钟
Dialogue: 0,0:32:51.87,0:32:53.23,英文,,0,0,0,,Anyone think C?
Dialogue: 0,0:32:51.87,0:32:53.23,中文,,0,0,0,,有人认为C吗
Dialogue: 0,0:32:53.23,0:32:53.65,英文,,0,0,0,,2,000 seconds?
Dialogue: 0,0:32:53.23,0:32:53.65,中文,,0,0,0,,2,000秒
Dialogue: 0,0:32:53.65,0:32:54.09,英文,,0,0,0,,OK.
Dialogue: 0,0:32:53.65,0:32:54.09,中文,,0,0,0,,好的
Dialogue: 0,0:32:54.09,0:32:55.89,英文,,0,0,0,,Anyone think 2 million seconds?
Dialogue: 0,0:32:54.09,0:32:55.89,中文,,0,0,0,,有人觉得200万秒呢
Dialogue: 0,0:32:55.89,0:32:56.47,英文,,0,0,0,,OK.
Dialogue: 0,0:32:55.89,0:32:56.47,中文,,0,0,0,,好的
Dialogue: 0,0:32:56.47,0:32:58.82,英文,,0,0,0,,So everyone thinks C, and I think C as well.
Dialogue: 0,0:32:56.47,0:32:58.82,中文,,0,0,0,,大家都认为是C 我也认为是C
Dialogue: 0,0:32:58.82,0:33:04.50,英文,,0,0,0,,And the reason why is because if we think about what the size method is doing, it is scanning every item of the list.
Dialogue: 0,0:32:58.82,0:33:04.50,中文,,0,0,0,,而原因是 如果我们想一下size方法在做什么 它是在扫描列表的每一项
Dialogue: 0,0:33:04.50,0:33:11.60,英文,,0,0,0,,And if my list is 1,000 times longer, then I'm going to take 1,000 times as long to scan the entire list.
Dialogue: 0,0:33:04.50,0:33:11.60,中文,,0,0,0,,如果我的列表长了1000倍 那么我扫描整个列表就要花费1000倍的时间
Dialogue: 0,0:33:11.60,0:33:13.32,英文,,0,0,0,,2,000 seconds, that's a lot of seconds.
Dialogue: 0,0:33:11.60,0:33:13.32,中文,,0,0,0,,2000秒 那可是很多秒啊
Dialogue: 0,0:33:13.32,0:33:15.21,英文,,0,0,0,,It's a very slow size method.
Dialogue: 0,0:33:13.32,0:33:15.21,中文,,0,0,0,,size方法真的太慢了
Dialogue: 0,0:33:15.21,0:33:20.67,英文,,0,0,0,,So what we're going to do next together is try and modify the list so that size is fast.
Dialogue: 0,0:33:15.21,0:33:20.67,中文,,0,0,0,,我们接下来要一起做的是尝试修改列表 使其大小变得更快
Dialogue: 0,0:33:20.67,0:33:22.67,英文,,0,0,0,,I don't care if my S list has a billion items.
Dialogue: 0,0:33:20.67,0:33:22.67,中文,,0,0,0,,我不在乎我的 S 列表有多少个项目
Dialogue: 0,0:33:22.67,0:33:24.37,英文,,0,0,0,,I want the size instantly.
Dialogue: 0,0:33:22.67,0:33:24.37,中文,,0,0,0,,我想要立即知道大小
Dialogue: 0,0:33:24.37,0:33:25.73,英文,,0,0,0,,So how can I do that?
Dialogue: 0,0:33:24.37,0:33:25.73,中文,,0,0,0,,那我该怎么办呢
Dialogue: 0,0:33:25.73,0:33:28.37,英文,,0,0,0,,So I go back in here, and I'm starting to realize, you know what?
Dialogue: 0,0:33:25.73,0:33:28.37,中文,,0,0,0,,我回到这里 开始意识到 你知道吗
Dialogue: 0,0:33:28.37,0:33:29.91,英文,,0,0,0,,This size method, it's slow.
Dialogue: 0,0:33:28.37,0:33:29.91,中文,,0,0,0,,这个 size 方法 它很慢
Dialogue: 0,0:33:29.91,0:33:34.42,英文,,0,0,0,,I have to check the size of every single int node, scan the whole list, and count them all.
Dialogue: 0,0:33:29.91,0:33:34.42,中文,,0,0,0,,我必须检查每个 IntNode的大小 扫描整个列表 并计算它们的数量
Dialogue: 0,0:33:34.42,0:33:38.77,英文,,0,0,0,,So every time the user asks me for size, I have to count it.
Dialogue: 0,0:33:34.42,0:33:38.77,中文,,0,0,0,,每次用户问我尺寸的时候 我都得重新数一遍
Dialogue: 0,0:33:38.77,0:33:48.22,英文,,0,0,0,,What if instead of having the user ask me for size and then I have to count from zero every single time, what if I actually kept track of size as I went?
Dialogue: 0,0:33:38.77,0:33:48.22,中文,,0,0,0,,如果不是让用户问我尺寸 然后我每次都从零开始数 如果我实时跟踪尺寸呢
Dialogue: 0,0:33:48.22,0:33:49.38,英文,,0,0,0,,So how would I do that?
Dialogue: 0,0:33:48.22,0:33:49.38,中文,,0,0,0,,那我要怎么做呢
Dialogue: 0,0:33:49.38,0:33:52.18,英文,,0,0,0,,I might say, I'm going to keep a variable called size.
Dialogue: 0,0:33:49.38,0:33:52.18,中文,,0,0,0,,我可能会说 我要保持一个叫做尺寸的变量
Dialogue: 0,0:33:52.18,0:33:54.62,英文,,0,0,0,,So I'll declare it as an instance variable.
Dialogue: 0,0:33:52.18,0:33:54.62,中文,,0,0,0,,我会将它声明为实例变量
Dialogue: 0,0:33:54.62,0:33:56.54,英文,,0,0,0,,All S lists have a size.
Dialogue: 0,0:33:54.62,0:33:56.54,中文,,0,0,0,,所有 S 列表都有一个尺寸
Dialogue: 0,0:33:56.54,0:34:02.69,英文,,0,0,0,,And as I call these methods, I will continue to keep track of size as the user modifies the list.
Dialogue: 0,0:33:56.54,0:34:02.69,中文,,0,0,0,,当我调用这些方法时 我会继续跟踪尺寸 因为用户修改列表
Dialogue: 0,0:34:02.69,0:34:05.23,英文,,0,0,0,,So for example, when a user creates a new
Dialogue: 0,0:34:02.69,0:34:05.23,中文,,0,0,0,,例如 当用户创建一个新的时候
Dialogue: 0,0:34:05.23,0:34:06.55,英文,,0,0,0,,I did not intend to do that.
Dialogue: 0,0:34:05.23,0:34:06.55,中文,,0,0,0,,我并不打算这样做
Dialogue: 0,0:34:06.55,0:34:09.53,英文,,0,0,0,,When a user creates a new S-list, how big is the S-list?
Dialogue: 0,0:34:06.55,0:34:09.53,中文,,0,0,0,,当用户创建一个新的 S 列表时 S 列表有多大呢
Dialogue: 0,0:34:09.53,0:34:11.57,英文,,0,0,0,,Well, it's one.
Dialogue: 0,0:34:09.53,0:34:11.57,中文,,0,0,0,,就是一个
Dialogue: 0,0:34:11.57,0:34:13.45,英文,,0,0,0,,I created an S-list with one item.
Dialogue: 0,0:34:11.57,0:34:13.45,中文,,0,0,0,,我创建了一个带有一个项目的 S 列表
Dialogue: 0,0:34:13.45,0:34:15.55,英文,,0,0,0,,What happens if a user adds to the front of the list?
Dialogue: 0,0:34:13.45,0:34:15.55,中文,,0,0,0,,如果用户在列表前添加了什么会发生
Dialogue: 0,0:34:15.55,0:34:17.31,英文,,0,0,0,,Well, size grows by one.
Dialogue: 0,0:34:15.55,0:34:17.31,中文,,0,0,0,,大小会增加一个
Dialogue: 0,0:34:17.31,0:34:19.75,英文,,0,0,0,,What happens if a user gets an item from the list?
Dialogue: 0,0:34:17.31,0:34:19.75,中文,,0,0,0,,如果用户从列表中获取一个项目会发生什么
Dialogue: 0,0:34:19.75,0:34:20.49,英文,,0,0,0,,Ah, trick question.
Dialogue: 0,0:34:19.75,0:34:20.49,中文,,0,0,0,,啊 是个诡计问题
Dialogue: 0,0:34:20.49,0:34:22.03,英文,,0,0,0,,The size doesn't change.
Dialogue: 0,0:34:20.49,0:34:22.03,中文,,0,0,0,,大小不会改变
Dialogue: 0,0:34:22.03,0:34:23.99,英文,,0,0,0,,What if the user adds to the end of the list?
Dialogue: 0,0:34:22.03,0:34:23.99,中文,,0,0,0,,如果用户在列表末尾添加了内容会怎样
Dialogue: 0,0:34:23.99,0:34:26.19,英文,,0,0,0,,Well, the size would grow by one.
Dialogue: 0,0:34:23.99,0:34:26.19,中文,,0,0,0,,大小会增加一个
Dialogue: 0,0:34:26.19,0:34:30.97,英文,,0,0,0,,And so now, instead of doing all of this code to scan through the entire list,
Dialogue: 0,0:34:26.19,0:34:30.97,中文,,0,0,0,,那么现在 不需要再执行遍历整个列表的所有代码了
Dialogue: 0,0:34:30.97,0:34:38.16,英文,,0,0,0,,All I have to do, if the user wants to know how big the size is, they can just return size, because I've been keeping track of it the whole time.
Dialogue: 0,0:34:30.97,0:34:38.16,中文,,0,0,0,,我所需要做的就是 如果用户想知道大小 他们只需要返回大小 因为我一直在追踪它
Dialogue: 0,0:34:38.16,0:34:50.07,英文,,0,0,0,,And now, this secret language of the gods code that we spend so much time writing, it turns out that we're not going to use it today, although this coding pattern is going to be pretty common in projects and other data structures that you build.
Dialogue: 0,0:34:38.16,0:34:50.07,中文,,0,0,0,,虽然我们花了很多时间写这些神秘的代码 今天却不打算用它 尽管这种编码模式在项目和你构建的其他数据结构中非常常见
Dialogue: 0,0:34:50.07,0:34:54.11,英文,,0,0,0,,So just because we are commenting it out for today doesn't mean it's not useful.
Dialogue: 0,0:34:50.07,0:34:54.11,中文,,0,0,0,,只是因为我们今天把它注释掉 并不意味着它没用
Dialogue: 0,0:34:54.11,0:34:55.77,英文,,0,0,0,,Still a useful programming pattern.
Dialogue: 0,0:34:54.11,0:34:55.77,中文,,0,0,0,,这仍然是一个有用的编程模式
Dialogue: 0,0:34:55.77,0:35:01.06,英文,,0,0,0,,But in this case, I think that returning the size and keeping track of it as you build the list
Dialogue: 0,0:34:55.77,0:35:01.06,中文,,0,0,0,,但在这种情况下 我认为返回大小并在构建列表时跟踪它
Dialogue: 0,0:35:01.06,0:35:02.84,英文,,0,0,0,,is a better approach.
Dialogue: 0,0:35:01.06,0:35:02.84,中文,,0,0,0,,是一个更好的方法
Dialogue: 0,0:35:02.84,0:35:05.24,英文,,0,0,0,,OK, let's go reflect on what happened.
Dialogue: 0,0:35:02.84,0:35:05.24,中文,,0,0,0,,让我们回顾一下发生了什么
Dialogue: 0,0:35:05.24,0:35:08.84,英文,,0,0,0,,So what happened was we added a special size variable.
Dialogue: 0,0:35:05.24,0:35:08.84,中文,,0,0,0,,发生的事情是我们添加了一个特殊的大小变量
Dialogue: 0,0:35:08.84,0:35:13.36,英文,,0,0,0,,And one way you could say what it's doing is you could say it caches the size of the list.
Dialogue: 0,0:35:08.84,0:35:13.36,中文,,0,0,0,,有一种说法是 它缓存了列表的大小
Dialogue: 0,0:35:13.36,0:35:16.71,英文,,0,0,0,,We keep track of it as the list grows and shrinks.
Dialogue: 0,0:35:13.36,0:35:16.71,中文,,0,0,0,,我们在列表增长和缩小时一直追踪它
Dialogue: 0,0:35:16.71,0:35:22.91,英文,,0,0,0,,And this way, when someone asks me for the size, I don't have to scan the entire list and count every item from scratch.
Dialogue: 0,0:35:16.71,0:35:22.91,中文,,0,0,0,,这样 当有人问我尺寸时 我就不必扫描整个列表并从头开始计算每个项目的数量
Dialogue: 0,0:35:22.91,0:35:27.49,英文,,0,0,0,,I can just return the size variable that I've been working to keep track of all this time.
Dialogue: 0,0:35:22.91,0:35:27.49,中文,,0,0,0,,我只需返回我一直在努力追踪的尺寸变量
Dialogue: 0,0:35:27.49,0:35:35.92,英文,,0,0,0,,So one little problem is there's a bit of a trade-off, which is, well, in exchange for getting fast size, I had to use a little bit of an extra memory.
Dialogue: 0,0:35:27.49,0:35:35.92,中文,,0,0,0,,有一个小问题 那就是有点取舍 为了获得快速的尺寸 我不得不使用一点额外的内存
Dialogue: 0,0:35:35.92,0:35:38.52,英文,,0,0,0,,So I used to not have the size variable.
Dialogue: 0,0:35:35.92,0:35:38.52,中文,,0,0,0,,我过去是没有尺寸变量的
Dialogue: 0,0:35:38.52,0:35:41.46,英文,,0,0,0,,In fact, this size variable is kind of redundant.
Dialogue: 0,0:35:38.52,0:35:41.46,中文,,0,0,0,,实际上 这个尺寸变量有点多余
Dialogue: 0,0:35:41.46,0:35:44.70,英文,,0,0,0,,I could have calculated the size without this variable.
Dialogue: 0,0:35:41.46,0:35:44.70,中文,,0,0,0,,我本来可以在没有这个变量的情况下计算尺寸的
Dialogue: 0,0:35:44.70,0:35:46.22,英文,,0,0,0,,So it was redundant memory.
Dialogue: 0,0:35:44.70,0:35:46.22,中文,,0,0,0,,这是多余的内存
Dialogue: 0,0:35:46.22,0:35:49.40,英文,,0,0,0,,It's an extra variable that I did not really need.
Dialogue: 0,0:35:46.22,0:35:49.40,中文,,0,0,0,,这是一个我实际上并不需要的额外变量
Dialogue: 0,0:35:49.40,0:35:54.53,英文,,0,0,0,,But in exchange for using a little bit of extra memory, I made my size method a lot faster.
Dialogue: 0,0:35:49.40,0:35:54.53,中文,,0,0,0,,但是为了使用一点额外的内存 我让我的尺寸方法变得快了很多
Dialogue: 0,0:35:54.53,0:36:04.11,英文,,0,0,0,,So at least in my opinion, this is a clear win because I used a little bit of extra memory to store something redundant, and my method became a lot faster.
Dialogue: 0,0:35:54.53,0:36:04.11,中文,,0,0,0,,至少在我看来 这是一个明显的胜利 因为我使用了一点额外的内存来存储一些多余的东西 我的方法变得快了很多
Dialogue: 0,0:36:04.11,0:36:05.83,英文,,0,0,0,,Okay.
Dialogue: 0,0:36:04.11,0:36:05.83,中文,,0,0,0,,好的
Dialogue: 0,0:36:05.83,0:36:08.29,英文,,0,0,0,,Nullum gratuitum prundium.
Dialogue: 0,0:36:05.83,0:36:08.29,中文,,0,0,0,,Nullum gratuitum prundium.
Dialogue: 0,0:36:08.29,0:36:09.32,英文,,0,0,0,,I don't know what that means.
Dialogue: 0,0:36:08.29,0:36:09.32,中文,,0,0,0,,我不知道那是什么意思
Dialogue: 0,0:36:09.32,0:36:11.06,英文,,0,0,0,,There's a dude eating some bread.
Dialogue: 0,0:36:09.32,0:36:11.06,中文,,0,0,0,,有个人在吃面包
Dialogue: 0,0:36:11.06,0:36:11.74,英文,,0,0,0,,Nice image.
Dialogue: 0,0:36:11.06,0:36:11.74,中文,,0,0,0,,图片不错
Dialogue: 0,0:36:11.74,0:36:12.36,英文,,0,0,0,,Okay.
Dialogue: 0,0:36:11.74,0:36:12.36,中文,,0,0,0,,好的
Dialogue: 0,0:36:12.36,0:36:13.98,英文,,0,0,0,,Questions?
Dialogue: 0,0:36:12.36,0:36:13.98,中文,,0,0,0,,有问题吗
Dialogue: 0,0:36:13.98,0:36:15.56,英文,,0,0,0,,Okay.
Dialogue: 0,0:36:13.98,0:36:15.56,中文,,0,0,0,,好的
Dialogue: 0,0:36:15.56,0:36:17.84,英文,,0,0,0,,Great, so here's a picture of what's happened so far.
Dialogue: 0,0:36:15.56,0:36:17.84,中文,,0,0,0,,很好 这是到目前为止发生的事情的图片
Dialogue: 0,0:36:17.84,0:36:25.80,英文,,0,0,0,,One final thing I'll note about the size is that if we had tried to do the same trick on the naked recursive int list, which remember, there's no middleman.
Dialogue: 0,0:36:17.84,0:36:25.80,中文,,0,0,0,,关于大小的最后一件事 我要注意的是 如果我们尝试在裸递归 IntList上使用同样的技巧 记住 这里没有中间人
Dialogue: 0,0:36:25.80,0:36:29.60,英文,,0,0,0,,You're reaching directly into the int nodes to manipulate them.
Dialogue: 0,0:36:25.80,0:36:29.60,中文,,0,0,0,,你直接触及 IntNode来操作它们
Dialogue: 0,0:36:29.60,0:36:34.98,英文,,0,0,0,,One problem with this original approach from last time is there would not be a natural place to put size.
Dialogue: 0,0:36:29.60,0:36:34.98,中文,,0,0,0,,这种上次的原始方法有一个问题 就是没有一个自然的地方来放置 size
Dialogue: 0,0:36:34.98,0:36:43.59,英文,,0,0,0,,So I look at this picture at the top, and where would I keep track of the size if I wanted to cache that variable and update it as I updated my list?
Dialogue: 0,0:36:34.98,0:36:43.59,中文,,0,0,0,,我看着顶部的这张图片 如果我想缓存那个变量并在更新列表时更新它 我应该在哪里跟踪大小呢
Dialogue: 0,0:36:43.59,0:36:46.53,英文,,0,0,0,,I guess I could put it in the first node, but it's kind of weird.
Dialogue: 0,0:36:43.59,0:36:46.53,中文,,0,0,0,,我想我可以把它放在第一个节点 但这有点奇怪
Dialogue: 0,0:36:46.53,0:36:48.43,英文,,0,0,0,,There's no natural place to put it.
Dialogue: 0,0:36:46.53,0:36:48.43,中文,,0,0,0,,没有自然的地方可以放它
Dialogue: 0,0:36:48.43,0:36:52.49,英文,,0,0,0,,I guess I can make another size variable and somehow bind it to the x variable.
Dialogue: 0,0:36:48.43,0:36:52.49,中文,,0,0,0,,我想我可以创建另一个 size 变量 并以某种方式将它绑定到 x 变量
Dialogue: 0,0:36:52.49,0:36:53.17,英文,,0,0,0,,But it's kind of weird.
Dialogue: 0,0:36:52.49,0:36:53.17,中文,,0,0,0,,但这有点奇怪
Dialogue: 0,0:36:53.17,0:36:54.93,英文,,0,0,0,,There's no natural place to put it.
Dialogue: 0,0:36:53.17,0:36:54.93,中文,,0,0,0,,没有自然的地方放置它
Dialogue: 0,0:36:54.93,0:37:01.40,英文,,0,0,0,,By contrast, in this SLList approach, the object-oriented approach, there is a very natural place to put size.
Dialogue: 0,0:36:54.93,0:37:01.40,中文,,0,0,0,,相比之下 在这种 SLList 方法中 面向对象的方法中 有一个非常自然的地方可以放置大小
Dialogue: 0,0:37:01.40,0:37:03.10,英文,,0,0,0,,Because I have this middleman.
Dialogue: 0,0:37:01.40,0:37:03.10,中文,,0,0,0,,因为我有这个中间人
Dialogue: 0,0:37:03.10,0:37:04.28,英文,,0,0,0,,It's like the reception desk.
Dialogue: 0,0:37:03.10,0:37:04.28,中文,,0,0,0,,就像前台一样
Dialogue: 0,0:37:04.28,0:37:10.76,英文,,0,0,0,,I walk up to the middleman, and I can ask it questions about my list, and it will do all the listings for me.
Dialogue: 0,0:37:04.28,0:37:10.76,中文,,0,0,0,,我走到中间人那里 可以问它关于我的列表的问题 它会为我做所有的清单
Dialogue: 0,0:37:10.76,0:37:14.42,英文,,0,0,0,,Middleman object creates a very natural place to put the size.
Dialogue: 0,0:37:10.76,0:37:14.42,中文,,0,0,0,,中间人对象创建了一个非常自然的放置大小的地方
Dialogue: 0,0:37:14.42,0:37:18.64,英文,,0,0,0,,Whereas the naked recursive int list, there isn't really a nice place to put the size.
Dialogue: 0,0:37:14.42,0:37:18.64,中文,,0,0,0,,裸递归整数列表 没有一个很好的地方放置大小
Dialogue: 0,0:37:18.64,0:37:22.00,英文,,0,0,0,,And you can try it, and you'll have a bit of trouble finding a nice place for it.
Dialogue: 0,0:37:18.64,0:37:22.00,中文,,0,0,0,,你可以尝试一下 你会发现很难找到一个合适的地方
Dialogue: 0,0:37:22.00,0:37:25.05,英文,,0,0,0,,By contrast, in SLLists, we just stuck it right in the middleman.
Dialogue: 0,0:37:22.00,0:37:25.05,中文,,0,0,0,,相比之下 在SLLists中 我们就直接把它放在中间人那里
Dialogue: 0,0:37:25.05,0:37:29.17,英文,,0,0,0,,Anytime I walk up to the middleman and ask for its size, it can just give me the number.
Dialogue: 0,0:37:25.05,0:37:29.17,中文,,0,0,0,,每当我走到中间人那里问它的大小 它就可以给我一个数字
Dialogue: 0,0:37:29.17,0:37:32.47,英文,,0,0,0,,Anytime I modify the list, I can just modify that number.
Dialogue: 0,0:37:29.17,0:37:32.47,中文,,0,0,0,,每当我修改列表 我就可以修改那个数字
Dialogue: 0,0:37:32.47,0:37:34.11,英文,,0,0,0,,And everything is great.
Dialogue: 0,0:37:32.47,0:37:34.11,中文,,0,0,0,,一切都很顺利
Dialogue: 0,0:37:34.11,0:37:35.06,英文,,0,0,0,,OK.
Dialogue: 0,0:37:34.11,0:37:35.06,中文,,0,0,0,,好的
Dialogue: 0,0:37:35.06,0:37:36.70,英文,,0,0,0,,That's the final one about size.
Dialogue: 0,0:37:35.06,0:37:36.70,中文,,0,0,0,,这就是关于大小的最后一个
Dialogue: 0,0:37:36.70,0:37:39.20,英文,,0,0,0,,Anything else before the home stretch of today?
Dialogue: 0,0:37:36.70,0:37:39.20,中文,,0,0,0,,在今天的最后阶段之前还有其他事情吗
Dialogue: 0,0:37:39.20,0:37:42.24,英文,,0,0,0,,I know it's a lot of implementation stuff and coding.
Dialogue: 0,0:37:39.20,0:37:42.24,中文,,0,0,0,,我知道这有很多实现细节和编码
Dialogue: 0,0:37:42.24,0:37:43.78,英文,,0,0,0,,OK.
Dialogue: 0,0:37:42.24,0:37:43.78,中文,,0,0,0,,好的
Dialogue: 0,0:37:43.78,0:37:44.52,英文,,0,0,0,,Great.
Dialogue: 0,0:37:43.78,0:37:44.52,中文,,0,0,0,,太棒了
Dialogue: 0,0:37:44.52,0:37:46.20,英文,,0,0,0,,So our SLList, it's growing.
Dialogue: 0,0:37:44.52,0:37:46.20,中文,,0,0,0,,我们的 SLList 它在增长
Dialogue: 0,0:37:46.20,0:37:47.76,英文,,0,0,0,,It's got all these wonderful features.
Dialogue: 0,0:37:46.20,0:37:47.76,中文,,0,0,0,,它有所有这些很棒的功能
Dialogue: 0,0:37:47.76,0:37:51.29,英文,,0,0,0,,And it turns out I can do even more amazing things with my SLList.
Dialogue: 0,0:37:47.76,0:37:51.29,中文,,0,0,0,,原来我可以用我的SLList做更多令人惊奇的事情
Dialogue: 0,0:37:51.29,0:37:54.29,英文,,0,0,0,,So the next thing I'm going to do is I'm going to say, you know what?
Dialogue: 0,0:37:51.29,0:37:54.29,中文,,0,0,0,,接下来我要做的事情是 我要说 你知道吗
Dialogue: 0,0:37:54.29,0:37:56.39,英文,,0,0,0,,Right now, I can represent lists.
Dialogue: 0,0:37:54.29,0:37:56.39,中文,,0,0,0,,现在 我可以表示列表了
Dialogue: 0,0:37:56.39,0:37:58.99,英文,,0,0,0,,But what if I wanted to represent an empty list?
Dialogue: 0,0:37:56.39,0:37:58.99,中文,,0,0,0,,但如果我想表示一个空列表呢
Dialogue: 0,0:37:58.99,0:38:01.65,英文,,0,0,0,,So maybe I want an SLList with zero items.
Dialogue: 0,0:37:58.99,0:38:01.65,中文,,0,0,0,,也许我想要一个没有任何项目的SLList
Dialogue: 0,0:38:01.65,0:38:02.55,英文,,0,0,0,,Can I do that?
Dialogue: 0,0:38:01.65,0:38:02.55,中文,,0,0,0,,我能做到吗
Dialogue: 0,0:38:02.55,0:38:03.55,英文,,0,0,0,,Well, let's give it a shot.
Dialogue: 0,0:38:02.55,0:38:03.55,中文,,0,0,0,,好吧 让我们试试看
Dialogue: 0,0:38:03.55,0:38:06.38,英文,,0,0,0,,So maybe I will create another constructor.
Dialogue: 0,0:38:03.55,0:38:06.38,中文,,0,0,0,,也许我会创建另一个构造函数
Dialogue: 0,0:38:06.38,0:38:08.80,英文,,0,0,0,,It's also called SLList, so it's still a constructor.
Dialogue: 0,0:38:06.38,0:38:08.80,中文,,0,0,0,,它也被称为SLList 它仍然是一个构造函数
Dialogue: 0,0:38:08.80,0:38:13.42,英文,,0,0,0,,And this one is going to create an empty SLList with no items inside.
Dialogue: 0,0:38:08.80,0:38:13.42,中文,,0,0,0,,而这个将创建一个没有任何项的空SLList
Dialogue: 0,0:38:13.42,0:38:14.75,英文,,0,0,0,,So how would I do that?
Dialogue: 0,0:38:13.42,0:38:14.75,中文,,0,0,0,,那我该怎么做呢
Dialogue: 0,0:38:14.75,0:38:17.65,英文,,0,0,0,,Well, I know that I'd have to set size equal to zero.
Dialogue: 0,0:38:14.75,0:38:17.65,中文,,0,0,0,,我知道我得把size设为零
Dialogue: 0,0:38:17.65,0:38:18.99,英文,,0,0,0,,Because it's an empty list.
Dialogue: 0,0:38:17.65,0:38:18.99,中文,,0,0,0,,因为它是一个空列表
Dialogue: 0,0:38:18.99,0:38:19.91,英文,,0,0,0,,What about first, though?
Dialogue: 0,0:38:18.99,0:38:19.91,中文,,0,0,0,,那第一个呢
Dialogue: 0,0:38:19.91,0:38:21.63,英文,,0,0,0,,What do I set first equal to?
Dialogue: 0,0:38:19.91,0:38:21.63,中文,,0,0,0,,我应该首先设置什么等于
Dialogue: 0,0:38:21.63,0:38:27.60,英文,,0,0,0,,And I think, well, I mean, if there's no list, maybe one thing I could set it to is I could say, you know what?
Dialogue: 0,0:38:21.63,0:38:27.60,中文,,0,0,0,,而且我觉得 我的意思是 如果没有列表 也许我可以设置它为 你知道的
Dialogue: 0,0:38:27.60,0:38:28.74,英文,,0,0,0,,First is null.
Dialogue: 0,0:38:27.60,0:38:28.74,中文,,0,0,0,,首先是null
Dialogue: 0,0:38:28.74,0:38:31.44,英文,,0,0,0,,And that's indicating that there is no list yet.
Dialogue: 0,0:38:28.74,0:38:31.44,中文,,0,0,0,,这表示还没有列表
Dialogue: 0,0:38:31.44,0:38:32.48,英文,,0,0,0,,There's no items.
Dialogue: 0,0:38:31.44,0:38:32.48,中文,,0,0,0,,没有条目
Dialogue: 0,0:38:32.48,0:38:33.86,英文,,0,0,0,,If I go to first, I see null.
Dialogue: 0,0:38:32.48,0:38:33.86,中文,,0,0,0,,如果我转到第一个 我看到null
Dialogue: 0,0:38:33.86,0:38:36.83,英文,,0,0,0,,Tells me no items exist in this list yet.
Dialogue: 0,0:38:33.86,0:38:36.83,中文,,0,0,0,,告诉我这个列表中还没有项目
Dialogue: 0,0:38:36.83,0:38:37.77,英文,,0,0,0,,OK, so I could do that.
Dialogue: 0,0:38:36.83,0:38:37.77,中文,,0,0,0,,那我可以这样做
Dialogue: 0,0:38:37.77,0:38:41.11,英文,,0,0,0,,And that would allow me to create a list with zero items.
Dialogue: 0,0:38:37.77,0:38:41.11,中文,,0,0,0,,那样我就可以创建一个零项目的列表
Dialogue: 0,0:38:41.11,0:38:43.03,英文,,0,0,0,,OK, so we've seen all these benefits.
Dialogue: 0,0:38:41.11,0:38:43.03,中文,,0,0,0,,我们已经看到了所有这些好处
Dialogue: 0,0:38:43.03,0:38:46.37,英文,,0,0,0,,And we're going to try and add an empty list feature.
Dialogue: 0,0:38:43.03,0:38:46.37,中文,,0,0,0,,我们要尝试添加一个空列表功能
Dialogue: 0,0:38:46.37,0:38:48.37,英文,,0,0,0,,And now I can construct empty lists.
Dialogue: 0,0:38:46.37,0:38:48.37,中文,,0,0,0,,现在我可以构造空列表了
Dialogue: 0,0:38:48.37,0:38:51.25,英文,,0,0,0,,But it turns out there is a very subtle bug.
Dialogue: 0,0:38:48.37,0:38:51.25,中文,,0,0,0,,但是事实证明有一个非常微妙的错误
Dialogue: 0,0:38:51.25,0:38:55.08,英文,,0,0,0,,And this is something that I don't expect anyone to have caught just by staring at this code.
Dialogue: 0,0:38:51.25,0:38:55.08,中文,,0,0,0,,这是我不指望任何人仅仅凭眼睛盯着这段代码就能发现的
Dialogue: 0,0:38:55.08,0:38:58.62,英文,,0,0,0,,It's only something that I know because I've watched someone else do this lecture a bunch of times.
Dialogue: 0,0:38:55.08,0:38:58.62,中文,,0,0,0,,这只是因为我看过别人讲这个课很多次 所以我知道的
Dialogue: 0,0:38:58.62,0:39:00.12,英文,,0,0,0,,So I've seen them find the bug.
Dialogue: 0,0:38:58.62,0:39:00.12,中文,,0,0,0,,我看到他们找到了错误
Dialogue: 0,0:39:00.12,0:39:03.48,英文,,0,0,0,,And so the bug is, well, if I have an empty list,
Dialogue: 0,0:39:00.12,0:39:03.48,中文,,0,0,0,,错误是 如果我有一个空列表
Dialogue: 0,0:39:03.48,0:39:05.26,英文,,0,0,0,,At first, it seems like everything's good.
Dialogue: 0,0:39:03.48,0:39:05.26,中文,,0,0,0,,起初 一切都好像没问题
Dialogue: 0,0:39:05.26,0:39:06.40,英文,,0,0,0,,I have an empty list.
Dialogue: 0,0:39:05.26,0:39:06.40,中文,,0,0,0,,我有一个空列表
Dialogue: 0,0:39:06.40,0:39:07.70,英文,,0,0,0,,I can add to the front.
Dialogue: 0,0:39:06.40,0:39:07.70,中文,,0,0,0,,我可以添加到前面
Dialogue: 0,0:39:07.70,0:39:09.11,英文,,0,0,0,,I can get the 10 back.
Dialogue: 0,0:39:07.70,0:39:09.11,中文,,0,0,0,,我可以得到回来的10
Dialogue: 0,0:39:09.11,0:39:17.08,英文,,0,0,0,,But instead of adding to the front, if I take my empty list and I add to the end, and again, it's not obvious that this is going to happen.
Dialogue: 0,0:39:09.11,0:39:17.08,中文,,0,0,0,,但是不是在列表的前面添加元素 而是如果我拿到一个空列表然后在末尾添加 再次强调 这并不是显而易见的
Dialogue: 0,0:39:17.08,0:39:19.54,英文,,0,0,0,,We'll talk more about testing your code next time.
Dialogue: 0,0:39:17.08,0:39:19.54,中文,,0,0,0,,下次我们会更详细地讨论如何测试你的代码
Dialogue: 0,0:39:19.54,0:39:21.22,英文,,0,0,0,,But suddenly, we get a crash.
Dialogue: 0,0:39:19.54,0:39:21.22,中文,,0,0,0,,但突然间 程序崩溃了
Dialogue: 0,0:39:21.22,0:39:22.36,英文,,0,0,0,,That's really weird.
Dialogue: 0,0:39:21.22,0:39:22.36,中文,,0,0,0,,真的很奇怪
Dialogue: 0,0:39:22.36,0:39:25.48,英文,,0,0,0,,And I guess while I'm here, I'll tell you quickly how to read this crash.
Dialogue: 0,0:39:22.36,0:39:25.48,中文,,0,0,0,,顺便说一下 当我在这里的时候 我会快速告诉你如何阅读这个崩溃信息
Dialogue: 0,0:39:25.48,0:39:31.10,英文,,0,0,0,,So if your program ever crashes, instead of immediately panicking and asking us, you can actually read this.
Dialogue: 0,0:39:25.48,0:39:31.10,中文,,0,0,0,,如果你的程序崩溃了 不要立刻慌张地问我们 你实际上是可以读懂这个的
Dialogue: 0,0:39:31.10,0:39:35.99,英文,,0,0,0,,And what this tells you is it gives you a list of kind of where did the program crash.
Dialogue: 0,0:39:31.10,0:39:35.99,中文,,0,0,0,,而这告诉你的是程序在哪里崩溃的一系列信息
Dialogue: 0,0:39:35.99,0:39:39.75,英文,,0,0,0,,And here it's telling me that my program crashed at line 46.
Dialogue: 0,0:39:35.99,0:39:39.75,中文,,0,0,0,,然后它告诉我 我的程序在第46行崩溃了
Dialogue: 0,0:39:39.75,0:39:41.07,英文,,0,0,0,,I can even click on it.
Dialogue: 0,0:39:39.75,0:39:41.07,中文,,0,0,0,,我甚至可以点击它
Dialogue: 0,0:39:41.07,0:39:42.11,英文,,0,0,0,,It's like a link.
Dialogue: 0,0:39:41.07,0:39:42.11,中文,,0,0,0,,就像一个链接
Dialogue: 0,0:39:42.11,0:39:45.05,英文,,0,0,0,,And it's telling me that the program crashed right here.
Dialogue: 0,0:39:42.11,0:39:45.05,中文,,0,0,0,,它告诉我 程序就在这里崩溃了
Dialogue: 0,0:39:45.05,0:39:48.50,英文,,0,0,0,,And now I can stop and think, why would the program crash here?
Dialogue: 0,0:39:45.05,0:39:48.50,中文,,0,0,0,,现在我可以停下来思考一下 为什么程序会在这里崩溃呢
Dialogue: 0,0:39:48.50,0:39:51.72,英文,,0,0,0,,And it's telling me something about p is null.
Dialogue: 0,0:39:48.50,0:39:51.72,中文,,0,0,0,,它告诉我一些关于p为null的信息
Dialogue: 0,0:39:51.72,0:39:58.65,英文,,0,0,0,,So I think, and I realize, aha, if my int list or my s list is empty, that means first is null.
Dialogue: 0,0:39:51.72,0:39:58.65,中文,,0,0,0,,我想 我意识到 啊哈 如果我的int列表或s列表是空的 那就意味着first是null
Dialogue: 0,0:39:58.65,0:40:00.01,英文,,0,0,0,,So what happens here?
Dialogue: 0,0:39:58.65,0:40:00.01,中文,,0,0,0,,这里发生了什么
Dialogue: 0,0:40:00.01,0:40:01.09,英文,,0,0,0,,P is equal to null.
Dialogue: 0,0:40:00.01,0:40:01.09,中文,,0,0,0,,P 等于 null
Dialogue: 0,0:40:01.09,0:40:04.00,英文,,0,0,0,,And then I ask, why P.next is null?
Dialogue: 0,0:40:01.09,0:40:04.00,中文,,0,0,0,,然后我问 为什么 P.next 是 null
Dialogue: 0,0:40:04.00,0:40:05.66,英文,,0,0,0,,But P is null.
Dialogue: 0,0:40:04.00,0:40:05.66,中文,,0,0,0,,但 P 是 null
Dialogue: 0,0:40:05.66,0:40:10.02,英文,,0,0,0,,I cannot ask the nullth item for its next element, because it's null.
Dialogue: 0,0:40:05.66,0:40:10.02,中文,,0,0,0,,我不能问第零个项的下一个元素 因为它是 null
Dialogue: 0,0:40:10.02,0:40:11.70,英文,,0,0,0,,It's the absence of an int node.
Dialogue: 0,0:40:10.02,0:40:11.70,中文,,0,0,0,,这是一个 IntNode的缺失
Dialogue: 0,0:40:11.70,0:40:13.28,英文,,0,0,0,,So that's where the program is crashing.
Dialogue: 0,0:40:11.70,0:40:13.28,中文,,0,0,0,,程序就在这里崩溃了
Dialogue: 0,0:40:13.28,0:40:17.10,英文,,0,0,0,,If P is null, P.next is going to crash the program.
Dialogue: 0,0:40:13.28,0:40:17.10,中文,,0,0,0,,如果 P 是 null P.next 会导致程序崩溃
Dialogue: 0,0:40:17.10,0:40:20.49,英文,,0,0,0,,I cannot ask the nullth item for its next.
Dialogue: 0,0:40:17.10,0:40:20.49,中文,,0,0,0,,我不能要求第零个项目的下一个
Dialogue: 0,0:40:20.49,0:40:22.51,英文,,0,0,0,,So that's the problem.
Dialogue: 0,0:40:20.49,0:40:22.51,中文,,0,0,0,,这就是问题所在
Dialogue: 0,0:40:22.51,0:40:23.63,英文,,0,0,0,,How do we fix it?
Dialogue: 0,0:40:22.51,0:40:23.63,中文,,0,0,0,,我们该怎么解决呢
Dialogue: 0,0:40:23.63,0:40:25.09,英文,,0,0,0,,So that's our problem.
Dialogue: 0,0:40:23.63,0:40:25.09,中文,,0,0,0,,这就是我们的问题
Dialogue: 0,0:40:25.09,0:40:26.75,英文,,0,0,0,,Adding LLM will crash the program.
Dialogue: 0,0:40:25.09,0:40:26.75,中文,,0,0,0,,添加 LLM 会导致程序崩溃
Dialogue: 0,0:40:26.75,0:40:28.65,英文,,0,0,0,,How do we fix it to get rid of that?
Dialogue: 0,0:40:26.75,0:40:28.65,中文,,0,0,0,,我们该怎么解决才能摆脱这个问题呢
Dialogue: 0,0:40:28.65,0:40:30.05,英文,,0,0,0,,There are several ways to do it.
Dialogue: 0,0:40:28.65,0:40:30.05,中文,,0,0,0,,有几种方法可以做到这一点
Dialogue: 0,0:40:30.05,0:40:31.47,英文,,0,0,0,,If we have time, you can think about it.
Dialogue: 0,0:40:30.05,0:40:31.47,中文,,0,0,0,,如果我们有时间 你可以考虑一下
Dialogue: 0,0:40:31.47,0:40:32.47,英文,,0,0,0,,Maybe we don't.
Dialogue: 0,0:40:31.47,0:40:32.47,中文,,0,0,0,,也许我们不需要
Dialogue: 0,0:40:32.47,0:40:35.43,英文,,0,0,0,,I'll show you one solution, and then we'll talk about whether you like it or not.
Dialogue: 0,0:40:32.47,0:40:35.43,中文,,0,0,0,,我会给你展示一个解决方案 然后我们可以讨论你是否喜欢它
Dialogue: 0,0:40:35.43,0:40:38.35,英文,,0,0,0,,So one solution is to add a special case and say, you know what?
Dialogue: 0,0:40:35.43,0:40:38.35,中文,,0,0,0,,一个解决方案是添加一个特殊情况 然后说 你知道吗
Dialogue: 0,0:40:38.35,0:40:40.99,英文,,0,0,0,,If first is null, what did I write public?
Dialogue: 0,0:40:38.35,0:40:40.99,中文,,0,0,0,,如果第一个是空的 我写了什么公共的
Dialogue: 0,0:40:40.99,0:40:41.47,英文,,0,0,0,,I don't know.
Dialogue: 0,0:40:40.99,0:40:41.47,中文,,0,0,0,,我不知道
Dialogue: 0,0:40:41.47,0:40:43.32,英文,,0,0,0,,If first is null,
Dialogue: 0,0:40:41.47,0:40:43.32,中文,,0,0,0,,如果first为空
Dialogue: 0,0:40:43.32,0:40:47.76,英文,,0,0,0,,then we have to do something special, because all of this code later, it's not going to work.
Dialogue: 0,0:40:43.32,0:40:47.76,中文,,0,0,0,,那么我们就得做一些特殊处理 因为所有这段后面的代码 它都行不通
Dialogue: 0,0:40:47.76,0:40:49.48,英文,,0,0,0,,So we're going to have to do something special.
Dialogue: 0,0:40:47.76,0:40:49.48,中文,,0,0,0,,我们得做一些特殊处理
Dialogue: 0,0:40:49.48,0:40:52.74,英文,,0,0,0,,I guess I'll move size plus equals 1 up here, so it always runs.
Dialogue: 0,0:40:49.48,0:40:52.74,中文,,0,0,0,,我猜我会把size加1的操作提到前面 这样它总是会执行
Dialogue: 0,0:40:52.74,0:40:56.01,英文,,0,0,0,,So I'll say, if first is equal to null, we've got to do something special.
Dialogue: 0,0:40:52.74,0:40:56.01,中文,,0,0,0,,我会说 如果first等于null 我们得做一些特殊处理
Dialogue: 0,0:40:56.01,0:41:03.35,英文,,0,0,0,,The first time I add to the end, I should really be doing something like p equals new int node p x comma null.
Dialogue: 0,0:40:56.01,0:41:03.35,中文,,0,0,0,,第一次我添加到末尾 我应该真的像p等于新的int节点p x逗号null这样做
Dialogue: 0,0:41:03.35,0:41:08.90,英文,,0,0,0,,That will create a brand new int list with one item, and then I will return, because I don't want the rest of this stuff to execute.
Dialogue: 0,0:41:03.35,0:41:08.90,中文,,0,0,0,,这将创建一个全新的int列表 其中只有一个项 然后我会返回 因为我不希望执行这段剩下的东西
Dialogue: 0,0:41:08.90,0:41:16.64,英文,,0,0,0,,So I could do it like that, and it turns out, I haven't really proven it to you, but it turns out that this approach will actually work.
Dialogue: 0,0:41:08.90,0:41:16.64,中文,,0,0,0,,我可以这样做 结果 我还没有真正向你证明 但事实证明 这种方法实际上是有效的
Dialogue: 0,0:41:16.64,0:41:19.10,英文,,0,0,0,,But look at this addLast method.
Dialogue: 0,0:41:16.64,0:41:19.10,中文,,0,0,0,,但看看这个 addLast 方法
Dialogue: 0,0:41:19.10,0:41:20.60,英文,,0,0,0,,Isn't it kind of getting long?
Dialogue: 0,0:41:19.10,0:41:20.60,中文,,0,0,0,,这不是有点变长了吗
Dialogue: 0,0:41:20.60,0:41:25.35,英文,,0,0,0,,I look at this code and I'm like, there's like this special case, and so the problem here,
Dialogue: 0,0:41:20.60,0:41:25.35,中文,,0,0,0,,我看着这段代码 我就觉得 有这种特殊情况 问题就在这里
Dialogue: 0,0:41:25.35,0:41:31.63,英文,,0,0,0,,and maybe it doesn't feel really a huge problem on this small piece of code, but as you write more and more complicated code,
Dialogue: 0,0:41:25.35,0:41:31.63,中文,,0,0,0,,也许在这么小的一段代码里 这并不是一个很大的问题 但是当你写越来越复杂的代码时
Dialogue: 0,0:41:31.63,0:41:35.35,英文,,0,0,0,,You're going to start to realize that code with special cases is ugly code.
Dialogue: 0,0:41:31.63,0:41:35.35,中文,,0,0,0,,你会开始意识到有特殊情况的代码是丑陋的代码
Dialogue: 0,0:41:35.35,0:41:36.75,英文,,0,0,0,,It's complicated code.
Dialogue: 0,0:41:35.35,0:41:36.75,中文,,0,0,0,,它是复杂的代码
Dialogue: 0,0:41:36.75,0:41:38.13,英文,,0,0,0,,It's harder to debug.
Dialogue: 0,0:41:36.75,0:41:38.13,中文,,0,0,0,,它更难调试
Dialogue: 0,0:41:38.13,0:41:40.17,英文,,0,0,0,,It's harder to reason about.
Dialogue: 0,0:41:38.13,0:41:40.17,中文,,0,0,0,,这更难理解
Dialogue: 0,0:41:40.17,0:41:43.48,英文,,0,0,0,,As humans, we can only think about so many things at once.
Dialogue: 0,0:41:40.17,0:41:43.48,中文,,0,0,0,,作为人类 我们一次只能考虑那么多事情
Dialogue: 0,0:41:43.48,0:41:51.60,英文,,0,0,0,,And so the more complexity we have in our code, the more annoying it's going to be to write this code, to debug and fix this code, to run this code.
Dialogue: 0,0:41:43.48,0:41:51.60,中文,,0,0,0,,因此 我们的代码越复杂 编写、调试和修复代码就越麻烦 运行代码也就越烦人
Dialogue: 0,0:41:51.60,0:41:55.11,英文,,0,0,0,,And having these special cases is just kind of gross.
Dialogue: 0,0:41:51.60,0:41:55.11,中文,,0,0,0,,而且拥有这些特殊情况只会变得更加丑陋
Dialogue: 0,0:41:55.11,0:42:01.77,英文,,0,0,0,,And in fact, if you try to add more methods to your int list or your s list, you're going to have to add more special cases every single time.
Dialogue: 0,0:41:55.11,0:42:01.77,中文,,0,0,0,,事实上 如果你尝试向你的int列表或s列表添加更多方法 你每次都必须添加更多的特殊情况
Dialogue: 0,0:42:01.77,0:42:05.46,英文,,0,0,0,,You're going to have to be, well, if first is equal to null, I got to do this special thing.
Dialogue: 0,0:42:01.77,0:42:05.46,中文,,0,0,0,,你将不得不这样做 如果first等于null 我必须执行此特殊操作
Dialogue: 0,0:42:05.46,0:42:09.44,英文,,0,0,0,,And then when first is not equal to null, I got to do this non-special thing.
Dialogue: 0,0:42:05.46,0:42:09.44,中文,,0,0,0,,然后当first不等于null时 我必须执行这个非特殊操作
Dialogue: 0,0:42:09.44,0:42:13.72,英文,,0,0,0,,And you're going to have to do that over and over and over again for every method that you write.
Dialogue: 0,0:42:09.44,0:42:13.72,中文,,0,0,0,,你得一遍又一遍地这样做 针对你编写的每个方法
Dialogue: 0,0:42:13.72,0:42:15.95,英文,,0,0,0,,And it's going to get complicated really quickly.
Dialogue: 0,0:42:13.72,0:42:15.95,中文,,0,0,0,,而且事情会变得非常复杂
Dialogue: 0,0:42:15.95,0:42:18.67,英文,,0,0,0,,Your code's going to be a lot longer than it could be.
Dialogue: 0,0:42:15.95,0:42:18.67,中文,,0,0,0,,你的代码会比本来可以的长很多
Dialogue: 0,0:42:18.67,0:42:21.11,英文,,0,0,0,,So while this approach works,
Dialogue: 0,0:42:18.67,0:42:21.11,中文,,0,0,0,,虽然这种方法有效
Dialogue: 0,0:42:21.11,0:42:21.99,英文,,0,0,0,,I don't really like it.
Dialogue: 0,0:42:21.11,0:42:21.99,中文,,0,0,0,,但我并不太喜欢它
Dialogue: 0,0:42:21.99,0:42:23.35,英文,,0,0,0,,The fix is kind of ugly.
Dialogue: 0,0:42:21.99,0:42:23.35,中文,,0,0,0,,修复方法有点丑陋
Dialogue: 0,0:42:23.35,0:42:24.85,英文,,0,0,0,,I have to add special cases.
Dialogue: 0,0:42:23.35,0:42:24.85,中文,,0,0,0,,我不得不添加特殊情况
Dialogue: 0,0:42:24.85,0:42:29.62,英文,,0,0,0,,As you write more complicated data structures, you're going to have to add even more special cases.
Dialogue: 0,0:42:24.85,0:42:29.62,中文,,0,0,0,,在编写更复杂的数据结构时 你将不得不添加更多特殊情况
Dialogue: 0,0:42:29.62,0:42:33.76,英文,,0,0,0,,So instead, I'm going to try and find something that avoids the special cases.
Dialogue: 0,0:42:29.62,0:42:33.76,中文,,0,0,0,,我打算尝试找到一些可以避免特殊情况的方法
Dialogue: 0,0:42:33.76,0:42:35.90,英文,,0,0,0,,And finding this thing can be kind of tricky.
Dialogue: 0,0:42:33.76,0:42:35.90,中文,,0,0,0,,而找到这个方法可能有点棘手
Dialogue: 0,0:42:35.90,0:42:40.21,英文,,0,0,0,,But somehow, I want to make all my SLLists behave the same.
Dialogue: 0,0:42:35.90,0:42:40.21,中文,,0,0,0,,但不知何故 我想让我的所有 SLList 表现得一样
Dialogue: 0,0:42:40.21,0:42:49.25,英文,,0,0,0,,And it might not be immediately clear what the sameness is, but somehow I want to avoid having case 1, the first is null, and case 2, the first is not null.
Dialogue: 0,0:42:40.21,0:42:49.25,中文,,0,0,0,,可能不会立即清楚表现的一致性是什么 但不知何故 我想避免有情况 1 第一个是空的 和情况 2 第一个不是空的
Dialogue: 0,0:42:49.25,0:42:50.90,英文,,0,0,0,,I don't want these two separate cases.
Dialogue: 0,0:42:49.25,0:42:50.90,中文,,0,0,0,,我不想有这两种单独的情况
Dialogue: 0,0:42:50.90,0:42:53.54,英文,,0,0,0,,I want my S-list to work in beautiful harmony.
Dialogue: 0,0:42:50.90,0:42:53.54,中文,,0,0,0,,我希望我的 S 列表能够和谐地工作
Dialogue: 0,0:42:53.54,0:43:00.16,英文,,0,0,0,,I want all of the cases to operate the exact same way, so I don't have to write all this extra special case code.
Dialogue: 0,0:42:53.54,0:43:00.16,中文,,0,0,0,,我希望所有的情况都以完全相同的方式运行 这样我就不必编写所有这些额外的特殊情况代码
Dialogue: 0,0:43:00.16,0:43:01.44,英文,,0,0,0,,So what do I mean by this?
Dialogue: 0,0:43:00.16,0:43:01.44,中文,,0,0,0,,那么我是什么意思呢
Dialogue: 0,0:43:01.44,0:43:07.61,英文,,0,0,0,,And at first, this idea will seem kind of nuts, but as we implement it, I hope you can appreciate how beautiful it is.
Dialogue: 0,0:43:01.44,0:43:07.61,中文,,0,0,0,,起初 这个想法似乎有点疯狂 但当我们实施它时 我希望你能欣赏它有多美
Dialogue: 0,0:43:07.61,0:43:12.37,英文,,0,0,0,,So the idea now is I don't want first to be null sometimes, because that causes subtle bugs.
Dialogue: 0,0:43:07.61,0:43:12.37,中文,,0,0,0,,现在的想法是 我不希望第一个有时是空的 因为那会导致微妙的错误
Dialogue: 0,0:43:12.37,0:43:14.19,英文,,0,0,0,,It causes special cases.
Dialogue: 0,0:43:12.37,0:43:14.19,中文,,0,0,0,,这会引发特殊情况
Dialogue: 0,0:43:14.19,0:43:20.98,英文,,0,0,0,,So instead, whenever I create a list, I am actually going to create a special dummy node that always sits there.
Dialogue: 0,0:43:14.19,0:43:20.98,中文,,0,0,0,,相反 每当我创建一个列表时 我实际上都会创建一个特殊的虚拟节点 它总是存在的
Dialogue: 0,0:43:20.98,0:43:23.90,英文,,0,0,0,,This node does not actually contain an item that I care about.
Dialogue: 0,0:43:20.98,0:43:23.90,中文,,0,0,0,,这个节点实际上并不包含我关心的项
Dialogue: 0,0:43:23.90,0:43:27.84,英文,,0,0,0,,It's just the node sitting there to make sure that first is never null.
Dialogue: 0,0:43:23.90,0:43:27.84,中文,,0,0,0,,它只是坐在那里 确保 'first' 永远不为 null
Dialogue: 0,0:43:27.84,0:43:29.08,英文,,0,0,0,,I'll call it the sentinel node.
Dialogue: 0,0:43:27.84,0:43:29.08,中文,,0,0,0,,我会称其为哨兵节点
Dialogue: 0,0:43:29.08,0:43:30.56,英文,,0,0,0,,It's standing there, guard.
Dialogue: 0,0:43:29.08,0:43:30.56,中文,,0,0,0,,它就站在那里 充当守卫
Dialogue: 0,0:43:30.56,0:43:35.02,英文,,0,0,0,,It's our faithful companion to make sure that the first never points at null.
Dialogue: 0,0:43:30.56,0:43:35.02,中文,,0,0,0,,它是我们忠实的伙伴 确保 'first' 永远不指向 null
Dialogue: 0,0:43:35.02,0:43:43.11,英文,,0,0,0,,So if I have the sentinel node always at the front of my list, my faithful companion, then what happens is, what does my list with zero items look like?
Dialogue: 0,0:43:35.02,0:43:43.11,中文,,0,0,0,,如果我始终将哨兵节点放在列表的前面 我的忠实伙伴 那么零项的列表看起来是什么样子
Dialogue: 0,0:43:43.11,0:43:45.47,英文,,0,0,0,,Well, it's just the sentinel standing there by itself.
Dialogue: 0,0:43:43.11,0:43:45.47,中文,,0,0,0,,它只是独自站在那里的哨兵
Dialogue: 0,0:43:45.47,0:43:46.95,英文,,0,0,0,,There's no actual items.
Dialogue: 0,0:43:45.47,0:43:46.95,中文,,0,0,0,,没有实际的项目
Dialogue: 0,0:43:46.95,0:43:52.92,英文,,0,0,0,,And if my list has three items, it'll be the sentinel at the front, followed by the 5, the 10, and the 15.
Dialogue: 0,0:43:46.95,0:43:52.92,中文,,0,0,0,,如果我的列表有三个项目 那么它将是前导哨兵 然后是5、10和15
Dialogue: 0,0:43:52.92,0:43:54.98,英文,,0,0,0,,So this is the structure that I want.
Dialogue: 0,0:43:52.92,0:43:54.98,中文,,0,0,0,,这就是我想要的结构
Dialogue: 0,0:43:54.98,0:43:58.12,英文,,0,0,0,,Let's go implement it, and then we'll see why it's so beautiful.
Dialogue: 0,0:43:54.98,0:43:58.12,中文,,0,0,0,,让我们去实现它 然后我们就会明白为什么它这么美妙
Dialogue: 0,0:43:58.12,0:43:59.28,英文,,0,0,0,,So I'm going to do a bit of renaming.
Dialogue: 0,0:43:58.12,0:43:59.28,中文,,0,0,0,,我要做一点重命名
Dialogue: 0,0:43:59.28,0:44:02.16,英文,,0,0,0,,Instead of the first item now, I'm going to call it Sentinel.
Dialogue: 0,0:43:59.28,0:44:02.16,中文,,0,0,0,,现在不再是第一个项目 我要称之为哨兵
Dialogue: 0,0:44:02.16,0:44:04.46,英文,,0,0,0,,And I'm actually going to leave a note for myself.
Dialogue: 0,0:44:02.16,0:44:04.46,中文,,0,0,0,,而且我实际上会给自己留个便条
Dialogue: 0,0:44:04.46,0:44:13.69,英文,,0,0,0,,Looking at this picture, I'm going to say, if there is a first item, it's going to live not at Sentinel, because the Sentinel points to our faithful companion whose item doesn't matter.
Dialogue: 0,0:44:04.46,0:44:13.69,中文,,0,0,0,,看着这张图片 我要说 如果有第一个项目 它不会存放在哨兵那里 因为哨兵指向我们忠实的伙伴 它的项目并不重要
Dialogue: 0,0:44:13.69,0:44:15.65,英文,,0,0,0,,The Sentinel's next.
Dialogue: 0,0:44:13.69,0:44:15.65,中文,,0,0,0,,哨兵的下一个
Dialogue: 0,0:44:15.65,0:44:17.83,英文,,0,0,0,,That's where the first item really lives.
Dialogue: 0,0:44:15.65,0:44:17.83,中文,,0,0,0,,那就是第一项真正存在的地方
Dialogue: 0,0:44:17.83,0:44:24.65,英文,,0,0,0,,So I'll add a little note to myself that says, the first item, if it exists, is at Sentinel.next.
Dialogue: 0,0:44:17.83,0:44:24.65,中文,,0,0,0,,我会给自己加个小注释 说 如果存在的话 第一项就在Sentinel.next这里
Dialogue: 0,0:44:24.65,0:44:28.56,英文,,0,0,0,,Just a reminder to myself that if you want the first item, don't ask the sentinel.
Dialogue: 0,0:44:24.65,0:44:28.56,中文,,0,0,0,,只是提醒自己 如果想要第一项 不要问哨兵
Dialogue: 0,0:44:28.56,0:44:30.64,英文,,0,0,0,,The sentinel is the faithful companion sitting there.
Dialogue: 0,0:44:28.56,0:44:30.64,中文,,0,0,0,,哨兵是忠实的伙伴坐在那里
Dialogue: 0,0:44:30.64,0:44:32.22,英文,,0,0,0,,We don't care about its opinions.
Dialogue: 0,0:44:30.64,0:44:32.22,中文,,0,0,0,,我们不关心它的意见
Dialogue: 0,0:44:32.22,0:44:35.48,英文,,0,0,0,,We care about the item right behind the sentinel.
Dialogue: 0,0:44:32.22,0:44:35.48,中文,,0,0,0,,我们关心的是紧随哨兵后面的项
Dialogue: 0,0:44:35.48,0:44:37.74,英文,,0,0,0,,OK, let's go through and do some fixing.
Dialogue: 0,0:44:35.48,0:44:37.74,中文,,0,0,0,,让我们仔细检查并进行一些修复
Dialogue: 0,0:44:37.74,0:44:41.84,英文,,0,0,0,,So when I create a brand new SLList, what do I have to do?
Dialogue: 0,0:44:37.74,0:44:41.84,中文,,0,0,0,,那么当我创建一个全新的 SLList 时 我需要做什么
Dialogue: 0,0:44:41.84,0:44:45.04,英文,,0,0,0,,I first have to create my faithful companion sentinel.
Dialogue: 0,0:44:41.84,0:44:45.04,中文,,0,0,0,,我首先要创建我的忠实伙伴 sentinel
Dialogue: 0,0:44:45.04,0:44:47.12,英文,,0,0,0,,So I'll create the faithful companion.
Dialogue: 0,0:44:45.04,0:44:47.12,中文,,0,0,0,,我会创建这个忠实的伙伴
Dialogue: 0,0:44:47.12,0:44:49.04,英文,,0,0,0,,And I don't really care what the value is.
Dialogue: 0,0:44:47.12,0:44:49.04,中文,,0,0,0,,而且我并不真的在乎这个值是什么
Dialogue: 0,0:44:49.04,0:44:51.96,英文,,0,0,0,,But I still have to specify something to put in that box.
Dialogue: 0,0:44:49.04,0:44:51.96,中文,,0,0,0,,但我仍然必须指定一些东西放进那个盒子里
Dialogue: 0,0:44:51.96,0:44:53.48,英文,,0,0,0,,So we'll just put a random number.
Dialogue: 0,0:44:51.96,0:44:53.48,中文,,0,0,0,,我们就随便放一个随机数
Dialogue: 0,0:44:53.48,0:44:55.83,英文,,0,0,0,,What number do you like?
Dialogue: 0,0:44:53.48,0:44:55.83,中文,,0,0,0,,你喜欢什么数字
Dialogue: 0,0:44:55.83,0:44:55.97,英文,,0,0,0,,0.
Dialogue: 0,0:44:55.83,0:44:55.97,中文,,0,0,0,,0
Dialogue: 0,0:44:55.97,0:44:57.47,英文,,0,0,0,,OK, so we'll put 0 there.
Dialogue: 0,0:44:55.97,0:44:57.47,中文,,0,0,0,,我们就把0放在这里
Dialogue: 0,0:44:57.47,0:44:58.77,英文,,0,0,0,,That's our faithful companion.
Dialogue: 0,0:44:57.47,0:44:58.77,中文,,0,0,0,,这是我们忠实的伙伴
Dialogue: 0,0:44:58.77,0:45:00.41,英文,,0,0,0,,We don't care about its value.
Dialogue: 0,0:44:58.77,0:45:00.41,中文,,0,0,0,,我们不关心它的值
Dialogue: 0,0:45:00.41,0:45:07.17,英文,,0,0,0,,And now, if I want to add something to the list, I'm not going to add it at Sentinel, because that's the first item, our faithful companion.
Dialogue: 0,0:45:00.41,0:45:07.17,中文,,0,0,0,,现在 如果我想向列表添加一些东西 我不会添加到 Sentinel 因为那是第一项 我们忠实的伙伴
Dialogue: 0,0:45:07.17,0:45:11.80,英文,,0,0,0,,I'm going to add it to Sentinel.next, right behind the Sentinel.
Dialogue: 0,0:45:07.17,0:45:11.80,中文,,0,0,0,,我会添加到 Sentinel.next 就在 Sentinel 的后面
Dialogue: 0,0:45:11.80,0:45:12.68,英文,,0,0,0,,OK, great.
Dialogue: 0,0:45:11.80,0:45:12.68,中文,,0,0,0,,好的 太棒了
Dialogue: 0,0:45:12.68,0:45:13.94,英文,,0,0,0,,What about the MDS list?
Dialogue: 0,0:45:12.68,0:45:13.94,中文,,0,0,0,,MDS清单怎么样
Dialogue: 0,0:45:13.94,0:45:20.74,英文,,0,0,0,,Well, the MDS list is just the Sentinel standing by itself, waiting for other people to get behind it in line.
Dialogue: 0,0:45:13.94,0:45:20.74,中文,,0,0,0,,MDS清单就是哨兵独自站在那里 等待其他人排在它后面
Dialogue: 0,0:45:20.74,0:45:22.18,英文,,0,0,0,,What if I want to add something?
Dialogue: 0,0:45:20.74,0:45:22.18,中文,,0,0,0,,如果我想添加一些东西呢
Dialogue: 0,0:45:22.18,0:45:25.80,英文,,0,0,0,,At first, you might be tempted to say, well, I'll just take the first and I'll swap it with Sentinel.
Dialogue: 0,0:45:22.18,0:45:25.80,中文,,0,0,0,,起初 你可能会想 好吧 我只需取第一个 然后将它与哨兵交换
Dialogue: 0,0:45:25.80,0:45:33.87,英文,,0,0,0,,But this isn't exactly right, because remember, the Sentinel is always standing guard at the front of the list, waiting for items to get behind it in line.
Dialogue: 0,0:45:25.80,0:45:33.87,中文,,0,0,0,,但这并不完全正确 因为请记住 哨兵始终屹立在列表的最前面 等待其他项目排在它后面
Dialogue: 0,0:45:33.87,0:45:37.89,英文,,0,0,0,,So if I reassign Sentinel, it's no longer pointing to my faithful companion.
Dialogue: 0,0:45:33.87,0:45:37.89,中文,,0,0,0,,如果我重新分配哨兵 它将不再指向我的忠实伙伴
Dialogue: 0,0:45:37.89,0:45:42.17,英文,,0,0,0,,So instead, if I want to add something to the front, I have to say Sentinel.next.
Dialogue: 0,0:45:37.89,0:45:42.17,中文,,0,0,0,,如果我想在前面添加东西 我必须说 Sentinel.next
Dialogue: 0,0:45:42.17,0:45:46.17,英文,,0,0,0,,The item behind the sentinel, I'm going to add the first item there.
Dialogue: 0,0:45:42.17,0:45:46.17,中文,,0,0,0,,在哨兵后面的项目 我要在那里添加第一个项目
Dialogue: 0,0:45:46.17,0:45:49.53,英文,,0,0,0,,So sentinel.next equals new int node sentinel.next.
Dialogue: 0,0:45:46.17,0:45:49.53,中文,,0,0,0,,所以 sentinel.next 等于新的 IntNode sentinel.next
Dialogue: 0,0:45:49.53,0:45:53.27,英文,,0,0,0,,This is somebody getting in line right behind the sentinel.
Dialogue: 0,0:45:49.53,0:45:53.27,中文,,0,0,0,,这就是有人排在哨兵后面的样子
Dialogue: 0,0:45:53.27,0:45:53.87,英文,,0,0,0,,Great.
Dialogue: 0,0:45:53.27,0:45:53.87,中文,,0,0,0,,好的
Dialogue: 0,0:45:53.87,0:45:54.95,英文,,0,0,0,,How do I get the first thing?
Dialogue: 0,0:45:53.87,0:45:54.95,中文,,0,0,0,,我怎么得到第一件事
Dialogue: 0,0:45:54.95,0:45:55.75,英文,,0,0,0,,It's not the sentinel.
Dialogue: 0,0:45:54.95,0:45:55.75,中文,,0,0,0,,这不是哨兵
Dialogue: 0,0:45:55.75,0:45:57.31,英文,,0,0,0,,I don't want the sentinel's value.
Dialogue: 0,0:45:55.75,0:45:57.31,中文,,0,0,0,,我不想要哨兵的值
Dialogue: 0,0:45:57.31,0:45:58.77,英文,,0,0,0,,I don't care what it's thinking.
Dialogue: 0,0:45:57.31,0:45:58.77,中文,,0,0,0,,我不在乎它在想什么
Dialogue: 0,0:45:58.77,0:46:00.63,英文,,0,0,0,,I want the sentinel.
Dialogue: 0,0:45:58.77,0:46:00.63,中文,,0,0,0,,我想要哨兵
Dialogue: 0,0:46:00.63,0:46:03.92,英文,,0,0,0,,Next item, that's the first item, I'll get its value.
Dialogue: 0,0:46:00.63,0:46:03.92,中文,,0,0,0,,下一个项目 就是第一个项目 我会取得它的值
Dialogue: 0,0:46:03.92,0:46:09.61,英文,,0,0,0,,And finally, we arrive at addLest, the source of all of our pain, the special case that I didn't like.
Dialogue: 0,0:46:03.92,0:46:09.61,中文,,0,0,0,,最后 我们来到 addLest 我们所有痛苦的源头 我不喜欢的特殊情况
Dialogue: 0,0:46:09.61,0:46:17.62,英文,,0,0,0,,But this time, if I assign t equal to sentinel, I can actually delete this special case, and now I have this beautiful addLest that works in harmony.
Dialogue: 0,0:46:09.61,0:46:17.62,中文,,0,0,0,,但这一次 如果我把 t 赋值为哨兵 我实际上可以删除这个特殊情况 现在我有了这个美丽的 addLest 它可以和谐地工作
Dialogue: 0,0:46:17.62,0:46:23.80,英文,,0,0,0,,Because if the list is empty, p is pointing at sentinel, p dot next would be null, right?
Dialogue: 0,0:46:17.62,0:46:23.80,中文,,0,0,0,,因为如果列表是空的 p 指向的是哨兵 p 的下一个会是 null 对吧
Dialogue: 0,0:46:23.80,0:46:27.27,英文,,0,0,0,,Sentinel, sentinel dot next would be null in the empty list.
Dialogue: 0,0:46:23.80,0:46:27.27,中文,,0,0,0,,哨兵 在空列表中哨兵点下一个将会是空的
Dialogue: 0,0:46:27.27,0:46:30.77,英文,,0,0,0,,And I would not have to scan anywhere, and I can create my new node.
Dialogue: 0,0:46:27.27,0:46:30.77,中文,,0,0,0,,而且我不必在任何地方扫描 我可以创建我的新节点
Dialogue: 0,0:46:30.77,0:46:36.73,英文,,0,0,0,,By contrast, if my list had items, I could start at the sentinel, scan through the items, and then add to the end.
Dialogue: 0,0:46:30.77,0:46:36.73,中文,,0,0,0,,相比之下 如果我的列表有项目 我可以从哨兵开始 扫描项目 然后添加到末尾
Dialogue: 0,0:46:36.73,0:46:42.80,英文,,0,0,0,,So while I haven't proven it to you, this add last method will work fine, and we've avoided the special case.
Dialogue: 0,0:46:36.73,0:46:42.80,中文,,0,0,0,,虽然我还没有向你证明 这个添加最后的方法会很好用 我们已经避免了特殊情况
Dialogue: 0,0:46:42.80,0:46:43.34,英文,,0,0,0,,So we did it.
Dialogue: 0,0:46:42.80,0:46:43.34,中文,,0,0,0,,我们做到了
Dialogue: 0,0:46:43.34,0:46:47.32,英文,,0,0,0,,We used our special sentinel node to avoid the special case.
Dialogue: 0,0:46:43.34,0:46:47.32,中文,,0,0,0,,我们使用了我们特殊的哨兵节点来避免特殊情况
Dialogue: 0,0:46:47.32,0:46:56.78,英文,,0,0,0,,OK, so instead of adding this ugly, disgusting, gross special case, we can now start our p pointer at Sentinel, and we can scan the whole list.
Dialogue: 0,0:46:47.32,0:46:56.78,中文,,0,0,0,,不是添加这个丑陋、令人恶心、恶心的特殊情况 我们现在可以将我们的 p 指针从 Sentinel 开始 并扫描整个列表
Dialogue: 0,0:46:56.78,0:47:06.57,英文,,0,0,0,,And even if the list is empty, I don't have to worry about p.next crashing, because the faithful companion is always sitting there making sure that p is never null.
Dialogue: 0,0:46:56.78,0:47:06.57,中文,,0,0,0,,即使列表是空的 我也不必担心 p.next 会崩溃 因为忠实的伙伴总是坐在那里 确保 p 永远不为空
Dialogue: 0,0:47:06.57,0:47:07.71,英文,,0,0,0,,Thank you, Sentinel.
Dialogue: 0,0:47:06.57,0:47:07.71,中文,,0,0,0,,谢谢 Sentinel
Dialogue: 0,0:47:07.71,0:47:09.45,英文,,0,0,0,,OK, questions about Sentinels?
Dialogue: 0,0:47:07.71,0:47:09.45,中文,,0,0,0,,有关 Sentinel 的问题
Dialogue: 0,0:47:09.45,0:47:11.97,英文,,0,0,0,,And then I have one more slide, so don't go yet.
Dialogue: 0,0:47:09.45,0:47:11.97,中文,,0,0,0,,然后我还有一张幻灯片 别走
Dialogue: 0,0:47:11.97,0:47:17.93,英文,,0,0,0,,OK, question?
Dialogue: 0,0:47:11.97,0:47:17.93,中文,,0,0,0,,有问题吗
Dialogue: 0,0:47:17.93,0:47:19.73,英文,,0,0,0,,There's a question about abstract data types.
Dialogue: 0,0:47:17.93,0:47:19.73,中文,,0,0,0,,有一个关于抽象数据类型的问题
Dialogue: 0,0:47:19.73,0:47:23.05,英文,,0,0,0,,Not something we'll talk about in this class, but you can ask afterwards if you're curious.
Dialogue: 0,0:47:19.73,0:47:23.05,中文,,0,0,0,,这不是我们在这堂课上会谈论的内容 但如果你感兴趣 课后可以问一下
Dialogue: 0,0:47:23.05,0:47:23.93,英文,,0,0,0,,Okay, hold on.
Dialogue: 0,0:47:23.05,0:47:23.93,中文,,0,0,0,,稍等一下
Dialogue: 0,0:47:23.93,0:47:25.19,英文,,0,0,0,,I have one more slide.
Dialogue: 0,0:47:23.93,0:47:25.19,中文,,0,0,0,,我还有一张幻灯片
Dialogue: 0,0:47:25.19,0:47:26.41,英文,,0,0,0,,You're all so anxious to go.
Dialogue: 0,0:47:25.19,0:47:26.41,中文,,0,0,0,,你们都急着走了
Dialogue: 0,0:47:26.41,0:47:32.94,英文,,0,0,0,,Okay, so the last slide that I want to talk about is, do you remember when I went into code and I wrote this line?
Dialogue: 0,0:47:26.41,0:47:32.94,中文,,0,0,0,,我想要谈论的最后一张幻灯片是 你还记得我进入代码并写下这一行吗
Dialogue: 0,0:47:32.94,0:47:36.02,英文,,0,0,0,,The first item, if it exists, is that sentinel.next?
Dialogue: 0,0:47:32.94,0:47:36.02,中文,,0,0,0,,第一个项目 如果存在的话 是 sentinel.next 吗
Dialogue: 0,0:47:36.02,0:47:38.66,英文,,0,0,0,,Well, it turns out that this line has a fancy name.
Dialogue: 0,0:47:36.02,0:47:38.66,中文,,0,0,0,,事实证明 这行有个花哨的名字
Dialogue: 0,0:47:38.66,0:47:44.33,英文,,0,0,0,,It's called an invariant, and an invariant is something that is always true while your code executes.
Dialogue: 0,0:47:38.66,0:47:44.33,中文,,0,0,0,,它被称为不变式 不变式是指在代码执行时始终为真的东西
Dialogue: 0,0:47:44.33,0:47:50.99,英文,,0,0,0,,So my S list, for example, will always have this true statement, which is the Sentinel will always point at the Sentinel node.
Dialogue: 0,0:47:44.33,0:47:50.99,中文,,0,0,0,,我的S列表 举个例子 将始终具有这个真语句 即哨兵将始终指向哨兵节点
Dialogue: 0,0:47:50.99,0:47:53.76,英文,,0,0,0,,The first node is always right behind the Sentinel.
Dialogue: 0,0:47:50.99,0:47:53.76,中文,,0,0,0,,第一个节点始终就在哨兵的后面
Dialogue: 0,0:47:53.76,0:47:56.80,英文,,0,0,0,,If it exists, the size is always the total number of items.
Dialogue: 0,0:47:53.76,0:47:56.80,中文,,0,0,0,,如果存在 大小始终是项目的总数
Dialogue: 0,0:47:56.80,0:48:01.80,英文,,0,0,0,,There are more invariants if you want to think them up, but these are things that are always true about your code.
Dialogue: 0,0:47:56.80,0:48:01.80,中文,,0,0,0,,如果你想考虑它们 还有更多的不变量 但这些都是关于你的代码始终为真的事情
Dialogue: 0,0:48:01.80,0:48:03.56,英文,,0,0,0,,So why are invariants useful?
Dialogue: 0,0:48:01.80,0:48:03.56,中文,,0,0,0,,那么不变量为什么有用呢
Dialogue: 0,0:48:03.56,0:48:14.03,英文,,0,0,0,,Remember when we were coding the sentinel, we would stop and think, well, I want to get the first item, and I had first.item, and I didn't know how to get the first item.
Dialogue: 0,0:48:03.56,0:48:14.03,中文,,0,0,0,,记得当我们编写哨兵时 我们会停下来想 好吧 我想要获取第一项 我有first.item 但我不知道如何获取第一项
Dialogue: 0,0:48:14.03,0:48:18.81,英文,,0,0,0,,But then I looked at my invariant, and it told me the first item is at sentinel.next.
Dialogue: 0,0:48:14.03,0:48:18.81,中文,,0,0,0,,但是然后我看了看我的不变量 它告诉我第一项在哨兵.next
Dialogue: 0,0:48:18.81,0:48:23.86,英文,,0,0,0,,So I'm like, OK, well, if the first item is at sentinel.next, then I will write sentinel.next here.
Dialogue: 0,0:48:18.81,0:48:23.86,中文,,0,0,0,,我就像 如果第一个项目在sentinel.next 那么我就会在这里写sentinel.next
Dialogue: 0,0:48:23.86,0:48:28.86,英文,,0,0,0,,So the nice thing about invariants is that you can use them to reason about your code, you can assume they're true,
Dialogue: 0,0:48:23.86,0:48:28.86,中文,,0,0,0,,不过不可变性的好处是你可以用它们来推理你的代码 你可以假设它们是真的
Dialogue: 0,0:48:28.86,0:48:33.50,英文,,0,0,0,,and some people like to write the invariants explicitly, they like to write it out like this.
Dialogue: 0,0:48:28.86,0:48:33.50,中文,,0,0,0,,有些人喜欢明确地写出不变性 他们喜欢像这样写出来
Dialogue: 0,0:48:33.50,0:48:38.18,英文,,0,0,0,,Other people prefer just to think about them in their head, but I hope that you find the idea useful.
Dialogue: 0,0:48:33.50,0:48:38.18,中文,,0,0,0,,其他人更喜欢只是在脑海中思考它们 但我希望你觉得这个想法有用
Dialogue: 0,0:48:38.18,0:48:40.70,英文,,0,0,0,,Okay, so since you're all heading out, that's it for today.
Dialogue: 0,0:48:38.18,0:48:40.70,中文,,0,0,0,,好了 既然你们都要出去了 今天就到这里
Dialogue: 0,0:48:40.70,0:48:46.13,英文,,0,0,0,,I hope you enjoyed the exploration into the weird world of sentinels, and we'll come back and we'll make this list better next time.
Dialogue: 0,0:48:40.70,0:48:46.13,中文,,0,0,0,,希望你们喜欢探索sentinels的奇怪世界 下次我们会回来让这个列表变得更好
Dialogue: 0,0:48:46.13,0:48:52.14,英文,,0,0,0,,All right, bye.
Dialogue: 0,0:48:46.13,0:48:52.14,中文,,0,0,0,,好的 再见
Dialogue: 0,0:48:52.14,0:49:00.67,英文,,0,0,0,,For the people on the recording, if you can still hear me in the chaos, I guess I should also note that, since I have one more minute left, that today was a lot of coding.
Dialogue: 0,0:48:52.14,0:49:00.67,中文,,0,0,0,,对于录音中的人 如果你们在混乱中仍然能听到我 我想我也应该注意到 由于我还有一分钟的时间 今天编程很多
Dialogue: 0,0:49:00.67,0:49:02.89,英文,,0,0,0,,Most lectures are not this heavy on the coding.
Dialogue: 0,0:49:00.67,0:49:02.89,中文,,0,0,0,,大多数讲座不会涉及这么多编码
Dialogue: 0,0:49:02.89,0:49:05.35,英文,,0,0,0,,And so if it felt like a lot, you're not alone.
Dialogue: 0,0:49:02.89,0:49:05.35,中文,,0,0,0,,如果感觉很多 你并不孤单
Dialogue: 0,0:49:05.35,0:49:09.28,英文,,0,0,0,,We'll give you a project that will help you understand these ideas more deeply.
Dialogue: 0,0:49:05.35,0:49:09.28,中文,,0,0,0,,我们会给你一个项目 帮助你更深入地理解这些想法
Dialogue: 0,0:49:09.28,0:49:10.50,英文,,0,0,0,,OK, that's it for today.
Dialogue: 0,0:49:09.28,0:49:10.50,中文,,0,0,0,,今天就到这里
Dialogue: 0,0:49:10.50,0:49:10.64,英文,,0,0,0,,Bye.
Dialogue: 0,0:49:10.50,0:49:10.64,中文,,0,0,0,,再见
